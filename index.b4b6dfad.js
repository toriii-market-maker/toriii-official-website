// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"gjUm6":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "022c1b16b4b6dfad";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && ![
        "localhost",
        "127.0.0.1",
        "0.0.0.0"
    ].includes(hostname) ? "wss" : "ws";
    var ws;
    if (HMR_USE_SSE) ws = new EventSource("/__parcel_hmr");
    else try {
        ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    } catch (err) {
        if (err.message) console.error(err.message);
        ws = {};
    }
    // Web extension context
    var extCtx = typeof browser === "undefined" ? typeof chrome === "undefined" ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    if (ws instanceof WebSocket) {
        ws.onerror = function(e) {
            if (e.message) console.error(e.message);
        };
        ws.onclose = function() {
            console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
        };
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"1xC6H":[function(require,module,exports) {
var Refresh = require("6d18d6bd340e7473");
var ErrorOverlay = require("74ad5ea14201648c");
Refresh.injectIntoGlobalHook(window);
window.$RefreshReg$ = function() {};
window.$RefreshSig$ = function() {
    return function(type) {
        return type;
    };
};
ErrorOverlay.setEditorHandler(function editorHandler(errorLocation) {
    let file = `${errorLocation.fileName}:${errorLocation.lineNumber || 1}:${errorLocation.colNumber || 1}`;
    fetch(`/__parcel_launch_editor?file=${encodeURIComponent(file)}`);
});
ErrorOverlay.startReportingRuntimeErrors({
    onError: function() {}
});
window.addEventListener("parcelhmraccept", ()=>{
    ErrorOverlay.dismissRuntimeErrors();
});

},{"6d18d6bd340e7473":"786KC","74ad5ea14201648c":"1dldy"}],"786KC":[function(require,module,exports) {
"use strict";
module.exports = require("96622d495519d4e");

},{"96622d495519d4e":"hdge7"}],"hdge7":[function(require,module,exports) {
/** @license React v0.9.0
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 0xeac7;
    var REACT_PORTAL_TYPE = 0xeaca;
    var REACT_FRAGMENT_TYPE = 0xeacb;
    var REACT_STRICT_MODE_TYPE = 0xeacc;
    var REACT_PROFILER_TYPE = 0xead2;
    var REACT_PROVIDER_TYPE = 0xeacd;
    var REACT_CONTEXT_TYPE = 0xeace;
    var REACT_FORWARD_REF_TYPE = 0xead0;
    var REACT_SUSPENSE_TYPE = 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = 0xead8;
    var REACT_MEMO_TYPE = 0xead3;
    var REACT_LAZY_TYPE = 0xead4;
    var REACT_BLOCK_TYPE = 0xead9;
    var REACT_SERVER_BLOCK_TYPE = 0xeada;
    var REACT_FUNDAMENTAL_TYPE = 0xead5;
    var REACT_SCOPE_TYPE = 0xead7;
    var REACT_OPAQUE_ID_TYPE = 0xeae0;
    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
    var REACT_OFFSCREEN_TYPE = 0xeae2;
    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;
    if (typeof Symbol === "function" && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor("react.element");
        REACT_PORTAL_TYPE = symbolFor("react.portal");
        REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
        REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
        REACT_PROFILER_TYPE = symbolFor("react.profiler");
        REACT_PROVIDER_TYPE = symbolFor("react.provider");
        REACT_CONTEXT_TYPE = symbolFor("react.context");
        REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
        REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
        REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
        REACT_MEMO_TYPE = symbolFor("react.memo");
        REACT_LAZY_TYPE = symbolFor("react.lazy");
        REACT_BLOCK_TYPE = symbolFor("react.block");
        REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
        REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
        REACT_SCOPE_TYPE = symbolFor("react.scope");
        REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
        REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
        REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
    }
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map; // We never remove these associations.
    // It's OK to reference families, but use WeakMap/Set for types.
    var allFamiliesByID = new Map();
    var allFamiliesByType = new PossiblyWeakMap();
    var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families
    // that have actually been edited here. This keeps checks fast.
    // $FlowIssue
    var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.
    // It is an array of [Family, NextType] tuples.
    var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.
    var helpersByRendererID = new Map();
    var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.
    var mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.
    var failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.
    // It needs to be weak because we do this even for roots that failed to mount.
    // If there is no WeakMap, we won't attempt to do retrying.
    // $FlowIssue
    var rootElements = typeof WeakMap === "function" ? new WeakMap() : null;
    var isPerformingRefresh = false;
    function computeFullKey(signature) {
        if (signature.fullKey !== null) return signature.fullKey;
        var fullKey = signature.ownKey;
        var hooks;
        try {
            hooks = signature.getCustomHooks();
        } catch (err) {
            // This can happen in an edge case, e.g. if expression like Foo.useSomething
            // depends on Foo which is lazily initialized during rendering.
            // In that case just assume we'll have to remount.
            signature.forceReset = true;
            signature.fullKey = fullKey;
            return fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if (typeof hook !== "function") {
                // Something's wrong. Assume we need to remount.
                signature.forceReset = true;
                signature.fullKey = fullKey;
                return fullKey;
            }
            var nestedHookSignature = allSignaturesByType.get(hook);
            if (nestedHookSignature === undefined) continue;
            var nestedHookKey = computeFullKey(nestedHookSignature);
            if (nestedHookSignature.forceReset) signature.forceReset = true;
            fullKey += "\n---\n" + nestedHookKey;
        }
        signature.fullKey = fullKey;
        return fullKey;
    }
    function haveEqualSignatures(prevType, nextType) {
        var prevSignature = allSignaturesByType.get(prevType);
        var nextSignature = allSignaturesByType.get(nextType);
        if (prevSignature === undefined && nextSignature === undefined) return true;
        if (prevSignature === undefined || nextSignature === undefined) return false;
        if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) return false;
        if (nextSignature.forceReset) return false;
        return true;
    }
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function canPreserveStateBetween(prevType, nextType) {
        if (isReactClass(prevType) || isReactClass(nextType)) return false;
        if (haveEqualSignatures(prevType, nextType)) return true;
        return false;
    }
    function resolveFamily(type) {
        // Only check updated types to keep lookups fast.
        return updatedFamiliesByType.get(type);
    } // If we didn't care about IE11, we could use new Map/Set(iterable).
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function performReactRefresh() {
        if (pendingUpdates.length === 0) return null;
        if (isPerformingRefresh) return null;
        isPerformingRefresh = true;
        try {
            var staleFamilies = new Set();
            var updatedFamilies = new Set();
            var updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0], nextType = _ref[1];
                // Now that we got a real edit, we can create associations
                // that will be read by the React reconciler.
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(nextType, family);
                family.current = nextType; // Determine whether this should be a re-render or a re-mount.
                if (canPreserveStateBetween(prevType, nextType)) updatedFamilies.add(family);
                else staleFamilies.add(family);
            }); // TODO: rename these fields to something more meaningful.
            var update = {
                updatedFamilies: updatedFamilies,
                // Families that will re-render preserving state
                staleFamilies: staleFamilies // Families that will be remounted
            };
            helpersByRendererID.forEach(function(helpers) {
                // Even if there are no roots, set the handler on first update.
                // This ensures that if *new* roots are mounted, they'll use the resolve handler.
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = false;
            var firstError = null; // We snapshot maps and sets that are mutated during commits.
            // If we don't do this, there is a risk they will be mutated while
            // we iterate over them. For example, trying to recover a failed root
            // may cause another root to be added to the failed list -- an infinite loop.
            var failedRootsSnapshot = cloneSet(failedRoots);
            var mountedRootsSnapshot = cloneSet(mountedRoots);
            var helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
                failedRoots.has(root);
                if (rootElements === null) return;
                if (!rootElements.has(root)) return;
                var element = rootElements.get(root);
                try {
                    helpers.scheduleRoot(root, element);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = false;
        }
    }
    function register(type, id) {
        if (type === null) return;
        if (typeof type !== "function" && typeof type !== "object") return;
         // This can happen in an edge case, e.g. if we register
        // return value of a HOC but it returns a cached component.
        // Ignore anything but the first registration for each type.
        if (allFamiliesByType.has(type)) return;
         // Create family or remember to update it.
        // None of this bookkeeping affects reconciliation
        // until the first performReactRefresh() call above.
        var family = allFamiliesByID.get(id);
        if (family === undefined) {
            family = {
                current: type
            };
            allFamiliesByID.set(id, family);
        } else pendingUpdates.push([
            family,
            type
        ]);
        allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.
        if (typeof type === "object" && type !== null) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                register(type.render, id + "$render");
                break;
            case REACT_MEMO_TYPE:
                register(type.type, id + "$type");
                break;
        }
    }
    function setSignature(type, key) {
        var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;
        allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
    } // This is lazily called during first render for a type.
    // It captures Hook list at that time so inline requires don't break comparisons.
    function collectCustomHooksForSignature(type) {
        var signature = allSignaturesByType.get(type);
        if (signature !== undefined) computeFullKey(signature);
    }
    function getFamilyByID(id) {
        return allFamiliesByID.get(id);
    }
    function getFamilyByType(type) {
        return allFamiliesByType.get(type);
    }
    function findAffectedHostInstances(families) {
        var affectedInstances = new Set();
        mountedRoots.forEach(function(root) {
            var helpers = helpersByRoot.get(root);
            if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
            var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);
            instancesForRoot.forEach(function(inst) {
                affectedInstances.add(inst);
            });
        });
        return affectedInstances;
    }
    function injectIntoGlobalHook(globalObject) {
        // For React Native, the global hook will be set up by require('react-devtools-core').
        // That code will run before us. So we need to monkeypatch functions on existing hook.
        // For React Web, the global hook will be set up by the extension.
        // This will also run before us.
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook === undefined) {
            // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.
            // Note that in this case it's important that renderer code runs *after* this method call.
            // Otherwise, the renderer will think that there is no global hook, and won't do the injection.
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: true,
                inject: function(injected) {
                    return nextID++;
                },
                onScheduleFiberRoot: function(id, root, children) {},
                onCommitFiberRoot: function(id, root, maybePriorityLevel, didError) {},
                onCommitFiberUnmount: function() {}
            };
        } // Here, we just want to get a reference to scheduleRefresh.
        var oldInject = hook.inject;
        hook.inject = function(injected) {
            var id = oldInject.apply(this, arguments);
            if (typeof injected.scheduleRefresh === "function" && typeof injected.setRefreshHandler === "function") // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
            return id;
        }; // Do the same for any already injected roots.
        // This is useful if ReactDOM has already been initialized.
        // https://github.com/facebook/react/issues/17626
        hook.renderers.forEach(function(injected, id) {
            if (typeof injected.scheduleRefresh === "function" && typeof injected.setRefreshHandler === "function") // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
        }); // We also want to track currently mounted roots.
        var oldOnCommitFiberRoot = hook.onCommitFiberRoot;
        var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
        hook.onScheduleFiberRoot = function(id, root, children) {
            if (!isPerformingRefresh) {
                // If it was intentionally scheduled, don't attempt to restore.
                // This includes intentionally scheduled unmounts.
                failedRoots.delete(root);
                if (rootElements !== null) rootElements.set(root, children);
            }
            return oldOnScheduleFiberRoot.apply(this, arguments);
        };
        hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
            var helpers = helpersByRendererID.get(id);
            if (helpers === undefined) return;
            helpersByRoot.set(root, helpers);
            var current = root.current;
            var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.
            // This logic is copy-pasted from similar logic in the DevTools backend.
            // If this breaks with some refactoring, you'll want to update DevTools too.
            if (alternate !== null) {
                var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;
                var isMounted = current.memoizedState != null && current.memoizedState.element != null;
                if (!wasMounted && isMounted) {
                    // Mount a new root.
                    mountedRoots.add(root);
                    failedRoots.delete(root);
                } else if (wasMounted && isMounted) ;
                else if (wasMounted && !isMounted) {
                    // Unmount an existing root.
                    mountedRoots.delete(root);
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                    else helpersByRoot.delete(root);
                } else if (!wasMounted && !isMounted) {
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                }
            } else // Mount a new root.
            mountedRoots.add(root);
            return oldOnCommitFiberRoot.apply(this, arguments);
        };
    }
    function hasUnrecoverableErrors() {
        // TODO: delete this after removing dependency in RN.
        return false;
    } // Exposed for testing.
    function _getMountedRootCount() {
        return mountedRoots.size;
    } // This is a wrapper over more primitive functions for setting signature.
    // Signatures let us decide whether the Hook order has changed on refresh.
    //
    // This function is intended to be used as a transform target, e.g.:
    // var _s = createSignatureFunctionForTransform()
    //
    // function Hello() {
    //   const [foo, setFoo] = useState(0);
    //   const value = useCustomHook();
    //   _s(); /* Second call triggers collecting the custom Hook list.
    //          * This doesn't happen during the module evaluation because we
    //          * don't want to change the module order with inline requires.
    //          * Next calls are noops. */
    //   return <h1>Hi</h1>;
    // }
    //
    // /* First call specifies the signature: */
    // _s(
    //   Hello,
    //   'useState{[foo, setFoo]}(0)',
    //   () => [useCustomHook], /* Lazy to avoid triggering inline requires */
    // );
    function createSignatureFunctionForTransform() {
        // We'll fill in the signature in two steps.
        // First, we'll know the signature itself. This happens outside the component.
        // Then, we'll know the references to custom Hooks. This happens inside the component.
        // After that, the returned function will be a fast path no-op.
        var status = "needsSignature";
        var savedType;
        var hasCustomHooks;
        return function(type, key, forceReset, getCustomHooks) {
            switch(status){
                case "needsSignature":
                    if (type !== undefined) {
                        // If we received an argument, this is the initial registration call.
                        savedType = type;
                        hasCustomHooks = typeof getCustomHooks === "function";
                        setSignature(type, key, forceReset, getCustomHooks); // The next call we expect is from inside a function, to fill in the custom Hooks.
                        status = "needsCustomHooks";
                    }
                    break;
                case "needsCustomHooks":
                    if (hasCustomHooks) collectCustomHooksForSignature(savedType);
                    status = "resolved";
                    break;
            }
            return type;
        };
    }
    function isLikelyComponentType(type) {
        switch(typeof type){
            case "function":
                // First, deal with classes.
                if (type.prototype != null) {
                    if (type.prototype.isReactComponent) // React class.
                    return true;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (ownNames.length > 1 || ownNames[0] !== "constructor") // This looks like a class.
                    return false;
                     // eslint-disable-next-line no-proto
                    if (type.prototype.__proto__ !== Object.prototype) // It has a superclass.
                    return false;
                     // Pass through.
                // This looks like a regular function with empty prototype.
                } // For plain functions and arrows, use name as a heuristic.
                var name = type.name || type.displayName;
                return typeof name === "string" && /^[A-Z]/.test(name);
            case "object":
                if (type != null) switch(type.$$typeof){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        // Definitely React components.
                        return true;
                    default:
                        return false;
                }
                return false;
            default:
                return false;
        }
    }
    exports._getMountedRootCount = _getMountedRootCount;
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;
    exports.findAffectedHostInstances = findAffectedHostInstances;
    exports.getFamilyByID = getFamilyByID;
    exports.getFamilyByType = getFamilyByType;
    exports.hasUnrecoverableErrors = hasUnrecoverableErrors;
    exports.injectIntoGlobalHook = injectIntoGlobalHook;
    exports.isLikelyComponentType = isLikelyComponentType;
    exports.performReactRefresh = performReactRefresh;
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"1dldy":[function(require,module,exports) {
var process = require("d1546958eb39fdcf");
!function(e, t) {
    module.exports = t();
}(window, function() {
    return function(e) {
        var t = {};
        function r(n) {
            if (t[n]) return t[n].exports;
            var o = t[n] = {
                i: n,
                l: !1,
                exports: {}
            };
            return e[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports;
        }
        return r.m = e, r.c = t, r.d = function(e, t, n) {
            r.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: n
            });
        }, r.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }, r.t = function(e, t) {
            if (1 & t && (e = r(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var n = Object.create(null);
            if (r.r(n), Object.defineProperty(n, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e) for(var o in e)r.d(n, o, (function(t) {
                return e[t];
            }).bind(null, o));
            return n;
        }, r.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default;
            } : function() {
                return e;
            };
            return r.d(t, "a", t), t;
        }, r.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }, r.p = "", r(r.s = 15);
    }([
        function(e, t, r) {
            e.exports = r(8);
        },
        function(e, t) {
            t.getArg = function(e, t, r) {
                if (t in e) return e[t];
                if (3 === arguments.length) return r;
                throw new Error('"' + t + '" is a required argument.');
            };
            var r = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/, n = /^data:.+\,.+$/;
            function o(e) {
                var t = e.match(r);
                return t ? {
                    scheme: t[1],
                    auth: t[2],
                    host: t[3],
                    port: t[4],
                    path: t[5]
                } : null;
            }
            function a(e) {
                var t = "";
                return e.scheme && (t += e.scheme + ":"), t += "//", e.auth && (t += e.auth + "@"), e.host && (t += e.host), e.port && (t += ":" + e.port), e.path && (t += e.path), t;
            }
            function i(e) {
                var r = e, n = o(e);
                if (n) {
                    if (!n.path) return e;
                    r = n.path;
                }
                for(var i, l = t.isAbsolute(r), u = r.split(/\/+/), c = 0, s = u.length - 1; s >= 0; s--)"." === (i = u[s]) ? u.splice(s, 1) : ".." === i ? c++ : c > 0 && ("" === i ? (u.splice(s + 1, c), c = 0) : (u.splice(s, 2), c--));
                return "" === (r = u.join("/")) && (r = l ? "/" : "."), n ? (n.path = r, a(n)) : r;
            }
            t.urlParse = o, t.urlGenerate = a, t.normalize = i, t.join = function(e, t) {
                "" === e && (e = "."), "" === t && (t = ".");
                var r = o(t), l = o(e);
                if (l && (e = l.path || "/"), r && !r.scheme) return l && (r.scheme = l.scheme), a(r);
                if (r || t.match(n)) return t;
                if (l && !l.host && !l.path) return l.host = t, a(l);
                var u = "/" === t.charAt(0) ? t : i(e.replace(/\/+$/, "") + "/" + t);
                return l ? (l.path = u, a(l)) : u;
            }, t.isAbsolute = function(e) {
                return "/" === e.charAt(0) || !!e.match(r);
            }, t.relative = function(e, t) {
                "" === e && (e = "."), e = e.replace(/\/$/, "");
                for(var r = 0; 0 !== t.indexOf(e + "/");){
                    var n = e.lastIndexOf("/");
                    if (n < 0) return t;
                    if ((e = e.slice(0, n)).match(/^([^\/]+:\/)?\/*$/)) return t;
                    ++r;
                }
                return Array(r + 1).join("../") + t.substr(e.length + 1);
            };
            var l = !("__proto__" in Object.create(null));
            function u(e) {
                return e;
            }
            function c(e) {
                if (!e) return !1;
                var t = e.length;
                if (t < 9) return !1;
                if (95 !== e.charCodeAt(t - 1) || 95 !== e.charCodeAt(t - 2) || 111 !== e.charCodeAt(t - 3) || 116 !== e.charCodeAt(t - 4) || 111 !== e.charCodeAt(t - 5) || 114 !== e.charCodeAt(t - 6) || 112 !== e.charCodeAt(t - 7) || 95 !== e.charCodeAt(t - 8) || 95 !== e.charCodeAt(t - 9)) return !1;
                for(var r = t - 10; r >= 0; r--)if (36 !== e.charCodeAt(r)) return !1;
                return !0;
            }
            function s(e, t) {
                return e === t ? 0 : e > t ? 1 : -1;
            }
            t.toSetString = l ? u : function(e) {
                return c(e) ? "$" + e : e;
            }, t.fromSetString = l ? u : function(e) {
                return c(e) ? e.slice(1) : e;
            }, t.compareByOriginalPositions = function(e, t, r) {
                var n = e.source - t.source;
                return 0 !== n ? n : 0 !== (n = e.originalLine - t.originalLine) ? n : 0 !== (n = e.originalColumn - t.originalColumn) || r ? n : 0 !== (n = e.generatedColumn - t.generatedColumn) ? n : 0 !== (n = e.generatedLine - t.generatedLine) ? n : e.name - t.name;
            }, t.compareByGeneratedPositionsDeflated = function(e, t, r) {
                var n = e.generatedLine - t.generatedLine;
                return 0 !== n ? n : 0 !== (n = e.generatedColumn - t.generatedColumn) || r ? n : 0 !== (n = e.source - t.source) ? n : 0 !== (n = e.originalLine - t.originalLine) ? n : 0 !== (n = e.originalColumn - t.originalColumn) ? n : e.name - t.name;
            }, t.compareByGeneratedPositionsInflated = function(e, t) {
                var r = e.generatedLine - t.generatedLine;
                return 0 !== r ? r : 0 !== (r = e.generatedColumn - t.generatedColumn) ? r : 0 !== (r = s(e.source, t.source)) ? r : 0 !== (r = e.originalLine - t.originalLine) ? r : 0 !== (r = e.originalColumn - t.originalColumn) ? r : s(e.name, t.name);
            };
        },
        function(e, t) {
            function r(e, t) {
                for(var r = 0, n = e.length - 1; n >= 0; n--){
                    var o = e[n];
                    "." === o ? e.splice(n, 1) : ".." === o ? (e.splice(n, 1), r++) : r && (e.splice(n, 1), r--);
                }
                if (t) for(; r--; r)e.unshift("..");
                return e;
            }
            function n(e, t) {
                if (e.filter) return e.filter(t);
                for(var r = [], n = 0; n < e.length; n++)t(e[n], n, e) && r.push(e[n]);
                return r;
            }
            t.resolve = function() {
                for(var e = "", t = !1, o = arguments.length - 1; o >= -1 && !t; o--){
                    var a = o >= 0 ? arguments[o] : process.cwd();
                    if ("string" != typeof a) throw new TypeError("Arguments to path.resolve must be strings");
                    a && (e = a + "/" + e, t = "/" === a.charAt(0));
                }
                return (t ? "/" : "") + (e = r(n(e.split("/"), function(e) {
                    return !!e;
                }), !t).join("/")) || ".";
            }, t.normalize = function(e) {
                var a = t.isAbsolute(e), i = "/" === o(e, -1);
                return (e = r(n(e.split("/"), function(e) {
                    return !!e;
                }), !a).join("/")) || a || (e = "."), e && i && (e += "/"), (a ? "/" : "") + e;
            }, t.isAbsolute = function(e) {
                return "/" === e.charAt(0);
            }, t.join = function() {
                var e = Array.prototype.slice.call(arguments, 0);
                return t.normalize(n(e, function(e, t) {
                    if ("string" != typeof e) throw new TypeError("Arguments to path.join must be strings");
                    return e;
                }).join("/"));
            }, t.relative = function(e, r) {
                function n(e) {
                    for(var t = 0; t < e.length && "" === e[t]; t++);
                    for(var r = e.length - 1; r >= 0 && "" === e[r]; r--);
                    return t > r ? [] : e.slice(t, r - t + 1);
                }
                e = t.resolve(e).substr(1), r = t.resolve(r).substr(1);
                for(var o = n(e.split("/")), a = n(r.split("/")), i = Math.min(o.length, a.length), l = i, u = 0; u < i; u++)if (o[u] !== a[u]) {
                    l = u;
                    break;
                }
                var c = [];
                for(u = l; u < o.length; u++)c.push("..");
                return (c = c.concat(a.slice(l))).join("/");
            }, t.sep = "/", t.delimiter = ":", t.dirname = function(e) {
                if ("string" != typeof e && (e += ""), 0 === e.length) return ".";
                for(var t = e.charCodeAt(0), r = 47 === t, n = -1, o = !0, a = e.length - 1; a >= 1; --a)if (47 === (t = e.charCodeAt(a))) {
                    if (!o) {
                        n = a;
                        break;
                    }
                } else o = !1;
                return -1 === n ? r ? "/" : "." : r && 1 === n ? "/" : e.slice(0, n);
            }, t.basename = function(e, t) {
                var r = function(e) {
                    "string" != typeof e && (e += "");
                    var t, r = 0, n = -1, o = !0;
                    for(t = e.length - 1; t >= 0; --t)if (47 === e.charCodeAt(t)) {
                        if (!o) {
                            r = t + 1;
                            break;
                        }
                    } else -1 === n && (o = !1, n = t + 1);
                    return -1 === n ? "" : e.slice(r, n);
                }(e);
                return t && r.substr(-1 * t.length) === t && (r = r.substr(0, r.length - t.length)), r;
            }, t.extname = function(e) {
                "string" != typeof e && (e += "");
                for(var t = -1, r = 0, n = -1, o = !0, a = 0, i = e.length - 1; i >= 0; --i){
                    var l = e.charCodeAt(i);
                    if (47 !== l) -1 === n && (o = !1, n = i + 1), 46 === l ? -1 === t ? t = i : 1 !== a && (a = 1) : -1 !== t && (a = -1);
                    else if (!o) {
                        r = i + 1;
                        break;
                    }
                }
                return -1 === t || -1 === n || 0 === a || 1 === a && t === n - 1 && t === r + 1 ? "" : e.slice(t, n);
            };
            var o = "b" === "ab".substr(-1) ? function(e, t, r) {
                return e.substr(t, r);
            } : function(e, t, r) {
                return t < 0 && (t = e.length + t), e.substr(t, r);
            };
        },
        function(e, t, r) {
            t.SourceMapGenerator = r(4).SourceMapGenerator, t.SourceMapConsumer = r(11).SourceMapConsumer, t.SourceNode = r(14).SourceNode;
        },
        function(e, t, r) {
            var n = r(5), o = r(1), a = r(6).ArraySet, i = r(10).MappingList;
            function l(e) {
                e || (e = {}), this._file = o.getArg(e, "file", null), this._sourceRoot = o.getArg(e, "sourceRoot", null), this._skipValidation = o.getArg(e, "skipValidation", !1), this._sources = new a, this._names = new a, this._mappings = new i, this._sourcesContents = null;
            }
            l.prototype._version = 3, l.fromSourceMap = function(e) {
                var t = e.sourceRoot, r = new l({
                    file: e.file,
                    sourceRoot: t
                });
                return e.eachMapping(function(e) {
                    var n = {
                        generated: {
                            line: e.generatedLine,
                            column: e.generatedColumn
                        }
                    };
                    null != e.source && (n.source = e.source, null != t && (n.source = o.relative(t, n.source)), n.original = {
                        line: e.originalLine,
                        column: e.originalColumn
                    }, null != e.name && (n.name = e.name)), r.addMapping(n);
                }), e.sources.forEach(function(t) {
                    var n = e.sourceContentFor(t);
                    null != n && r.setSourceContent(t, n);
                }), r;
            }, l.prototype.addMapping = function(e) {
                var t = o.getArg(e, "generated"), r = o.getArg(e, "original", null), n = o.getArg(e, "source", null), a = o.getArg(e, "name", null);
                this._skipValidation || this._validateMapping(t, r, n, a), null != n && (n = String(n), this._sources.has(n) || this._sources.add(n)), null != a && (a = String(a), this._names.has(a) || this._names.add(a)), this._mappings.add({
                    generatedLine: t.line,
                    generatedColumn: t.column,
                    originalLine: null != r && r.line,
                    originalColumn: null != r && r.column,
                    source: n,
                    name: a
                });
            }, l.prototype.setSourceContent = function(e, t) {
                var r = e;
                null != this._sourceRoot && (r = o.relative(this._sourceRoot, r)), null != t ? (this._sourcesContents || (this._sourcesContents = Object.create(null)), this._sourcesContents[o.toSetString(r)] = t) : this._sourcesContents && (delete this._sourcesContents[o.toSetString(r)], 0 === Object.keys(this._sourcesContents).length && (this._sourcesContents = null));
            }, l.prototype.applySourceMap = function(e, t, r) {
                var n = t;
                if (null == t) {
                    if (null == e.file) throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');
                    n = e.file;
                }
                var i = this._sourceRoot;
                null != i && (n = o.relative(i, n));
                var l = new a, u = new a;
                this._mappings.unsortedForEach(function(t) {
                    if (t.source === n && null != t.originalLine) {
                        var a = e.originalPositionFor({
                            line: t.originalLine,
                            column: t.originalColumn
                        });
                        null != a.source && (t.source = a.source, null != r && (t.source = o.join(r, t.source)), null != i && (t.source = o.relative(i, t.source)), t.originalLine = a.line, t.originalColumn = a.column, null != a.name && (t.name = a.name));
                    }
                    var c = t.source;
                    null == c || l.has(c) || l.add(c);
                    var s = t.name;
                    null == s || u.has(s) || u.add(s);
                }, this), this._sources = l, this._names = u, e.sources.forEach(function(t) {
                    var n = e.sourceContentFor(t);
                    null != n && (null != r && (t = o.join(r, t)), null != i && (t = o.relative(i, t)), this.setSourceContent(t, n));
                }, this);
            }, l.prototype._validateMapping = function(e, t, r, n) {
                if (t && "number" != typeof t.line && "number" != typeof t.column) throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");
                if ((!(e && "line" in e && "column" in e && e.line > 0 && e.column >= 0) || t || r || n) && !(e && "line" in e && "column" in e && t && "line" in t && "column" in t && e.line > 0 && e.column >= 0 && t.line > 0 && t.column >= 0 && r)) throw new Error("Invalid mapping: " + JSON.stringify({
                    generated: e,
                    source: r,
                    original: t,
                    name: n
                }));
            }, l.prototype._serializeMappings = function() {
                for(var e, t, r, a, i = 0, l = 1, u = 0, c = 0, s = 0, f = 0, d = "", p = this._mappings.toArray(), h = 0, g = p.length; h < g; h++){
                    if (e = "", (t = p[h]).generatedLine !== l) for(i = 0; t.generatedLine !== l;)e += ";", l++;
                    else if (h > 0) {
                        if (!o.compareByGeneratedPositionsInflated(t, p[h - 1])) continue;
                        e += ",";
                    }
                    e += n.encode(t.generatedColumn - i), i = t.generatedColumn, null != t.source && (a = this._sources.indexOf(t.source), e += n.encode(a - f), f = a, e += n.encode(t.originalLine - 1 - c), c = t.originalLine - 1, e += n.encode(t.originalColumn - u), u = t.originalColumn, null != t.name && (r = this._names.indexOf(t.name), e += n.encode(r - s), s = r)), d += e;
                }
                return d;
            }, l.prototype._generateSourcesContent = function(e, t) {
                return e.map(function(e) {
                    if (!this._sourcesContents) return null;
                    null != t && (e = o.relative(t, e));
                    var r = o.toSetString(e);
                    return Object.prototype.hasOwnProperty.call(this._sourcesContents, r) ? this._sourcesContents[r] : null;
                }, this);
            }, l.prototype.toJSON = function() {
                var e = {
                    version: this._version,
                    sources: this._sources.toArray(),
                    names: this._names.toArray(),
                    mappings: this._serializeMappings()
                };
                return null != this._file && (e.file = this._file), null != this._sourceRoot && (e.sourceRoot = this._sourceRoot), this._sourcesContents && (e.sourcesContent = this._generateSourcesContent(e.sources, e.sourceRoot)), e;
            }, l.prototype.toString = function() {
                return JSON.stringify(this.toJSON());
            }, t.SourceMapGenerator = l;
        },
        function(e, t, r) {
            var n = r(9);
            t.encode = function(e) {
                var t, r = "", o = function(e) {
                    return e < 0 ? 1 + (-e << 1) : 0 + (e << 1);
                }(e);
                do t = 31 & o, (o >>>= 5) > 0 && (t |= 32), r += n.encode(t);
                while (o > 0);
                return r;
            }, t.decode = function(e, t, r) {
                var o, a, i, l, u = e.length, c = 0, s = 0;
                do {
                    if (t >= u) throw new Error("Expected more digits in base 64 VLQ value.");
                    if (-1 === (a = n.decode(e.charCodeAt(t++)))) throw new Error("Invalid base64 digit: " + e.charAt(t - 1));
                    o = !!(32 & a), c += (a &= 31) << s, s += 5;
                }while (o);
                r.value = (l = (i = c) >> 1, 1 == (1 & i) ? -l : l), r.rest = t;
            };
        },
        function(e, t, r) {
            var n = r(1), o = Object.prototype.hasOwnProperty, a = "undefined" != typeof Map;
            function i() {
                this._array = [], this._set = a ? new Map : Object.create(null);
            }
            i.fromArray = function(e, t) {
                for(var r = new i, n = 0, o = e.length; n < o; n++)r.add(e[n], t);
                return r;
            }, i.prototype.size = function() {
                return a ? this._set.size : Object.getOwnPropertyNames(this._set).length;
            }, i.prototype.add = function(e, t) {
                var r = a ? e : n.toSetString(e), i = a ? this.has(e) : o.call(this._set, r), l = this._array.length;
                i && !t || this._array.push(e), i || (a ? this._set.set(e, l) : this._set[r] = l);
            }, i.prototype.has = function(e) {
                if (a) return this._set.has(e);
                var t = n.toSetString(e);
                return o.call(this._set, t);
            }, i.prototype.indexOf = function(e) {
                if (a) {
                    var t = this._set.get(e);
                    if (t >= 0) return t;
                } else {
                    var r = n.toSetString(e);
                    if (o.call(this._set, r)) return this._set[r];
                }
                throw new Error('"' + e + '" is not in the set.');
            }, i.prototype.at = function(e) {
                if (e >= 0 && e < this._array.length) return this._array[e];
                throw new Error("No element indexed by " + e);
            }, i.prototype.toArray = function() {
                return this._array.slice();
            }, t.ArraySet = i;
        },
        function(e, t, r) {
            "use strict";
            function n(e) {
                return Array.isArray(e) || (e = [
                    e
                ]), Promise.all(e.map(function(e) {
                    return e.then(function(e) {
                        return {
                            isFulfilled: !0,
                            isRejected: !1,
                            value: e
                        };
                    }).catch(function(e) {
                        return {
                            isFulfilled: !1,
                            isRejected: !0,
                            reason: e
                        };
                    });
                }));
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.settle = n, t.default = n;
        },
        function(e, t, r) {
            var n = function(e) {
                "use strict";
                var t, r = Object.prototype, n = r.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, a = o.iterator || "@@iterator", i = o.asyncIterator || "@@asyncIterator", l = o.toStringTag || "@@toStringTag";
                function u(e, t, r) {
                    return Object.defineProperty(e, t, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }), e[t];
                }
                try {
                    u({}, "");
                } catch (e) {
                    u = function(e, t, r) {
                        return e[t] = r;
                    };
                }
                function c(e, t, r, n) {
                    var o = t && t.prototype instanceof m ? t : m, a = Object.create(o.prototype), i = new T(n || []);
                    return a._invoke = function(e, t, r) {
                        var n = f;
                        return function(o, a) {
                            if (n === p) throw new Error("Generator is already running");
                            if (n === h) {
                                if ("throw" === o) throw a;
                                return L();
                            }
                            for(r.method = o, r.arg = a;;){
                                var i = r.delegate;
                                if (i) {
                                    var l = _(i, r);
                                    if (l) {
                                        if (l === g) continue;
                                        return l;
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if (n === f) throw n = h, r.arg;
                                    r.dispatchException(r.arg);
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = p;
                                var u = s(e, t, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? h : d, u.arg === g) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    };
                                }
                                "throw" === u.type && (n = h, r.method = "throw", r.arg = u.arg);
                            }
                        };
                    }(e, r, i), a;
                }
                function s(e, t, r) {
                    try {
                        return {
                            type: "normal",
                            arg: e.call(t, r)
                        };
                    } catch (e) {
                        return {
                            type: "throw",
                            arg: e
                        };
                    }
                }
                e.wrap = c;
                var f = "suspendedStart", d = "suspendedYield", p = "executing", h = "completed", g = {};
                function m() {}
                function v() {}
                function y() {}
                var b = {};
                b[a] = function() {
                    return this;
                };
                var w = Object.getPrototypeOf, k = w && w(w(P([])));
                k && k !== r && n.call(k, a) && (b = k);
                var E = y.prototype = m.prototype = Object.create(b);
                function S(e) {
                    [
                        "next",
                        "throw",
                        "return"
                    ].forEach(function(t) {
                        u(e, t, function(e) {
                            return this._invoke(t, e);
                        });
                    });
                }
                function x(e, t) {
                    var r;
                    this._invoke = function(o, a) {
                        function i() {
                            return new t(function(r, i) {
                                !function r(o, a, i, l) {
                                    var u = s(e[o], e, a);
                                    if ("throw" !== u.type) {
                                        var c = u.arg, f = c.value;
                                        return f && "object" == typeof f && n.call(f, "__await") ? t.resolve(f.__await).then(function(e) {
                                            r("next", e, i, l);
                                        }, function(e) {
                                            r("throw", e, i, l);
                                        }) : t.resolve(f).then(function(e) {
                                            c.value = e, i(c);
                                        }, function(e) {
                                            return r("throw", e, i, l);
                                        });
                                    }
                                    l(u.arg);
                                }(o, a, r, i);
                            });
                        }
                        return r = r ? r.then(i, i) : i();
                    };
                }
                function _(e, r) {
                    var n = e.iterator[r.method];
                    if (n === t) {
                        if (r.delegate = null, "throw" === r.method) {
                            if (e.iterator.return && (r.method = "return", r.arg = t, _(e, r), "throw" === r.method)) return g;
                            r.method = "throw", r.arg = new TypeError("The iterator does not provide a 'throw' method");
                        }
                        return g;
                    }
                    var o = s(n, e.iterator, r.arg);
                    if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, g;
                    var a = o.arg;
                    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, g) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, g);
                }
                function C(e) {
                    var t = {
                        tryLoc: e[0]
                    };
                    1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t);
                }
                function O(e) {
                    var t = e.completion || {};
                    t.type = "normal", delete t.arg, e.completion = t;
                }
                function T(e) {
                    this.tryEntries = [
                        {
                            tryLoc: "root"
                        }
                    ], e.forEach(C, this), this.reset(!0);
                }
                function P(e) {
                    if (e) {
                        var r = e[a];
                        if (r) return r.call(e);
                        if ("function" == typeof e.next) return e;
                        if (!isNaN(e.length)) {
                            var o = -1, i = function r() {
                                for(; ++o < e.length;)if (n.call(e, o)) return r.value = e[o], r.done = !1, r;
                                return r.value = t, r.done = !0, r;
                            };
                            return i.next = i;
                        }
                    }
                    return {
                        next: L
                    };
                }
                function L() {
                    return {
                        value: t,
                        done: !0
                    };
                }
                return v.prototype = E.constructor = y, y.constructor = v, v.displayName = u(y, l, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name));
                }, e.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, y) : (e.__proto__ = y, u(e, l, "GeneratorFunction")), e.prototype = Object.create(E), e;
                }, e.awrap = function(e) {
                    return {
                        __await: e
                    };
                }, S(x.prototype), x.prototype[i] = function() {
                    return this;
                }, e.AsyncIterator = x, e.async = function(t, r, n, o, a) {
                    void 0 === a && (a = Promise);
                    var i = new x(c(t, r, n, o), a);
                    return e.isGeneratorFunction(r) ? i : i.next().then(function(e) {
                        return e.done ? e.value : i.next();
                    });
                }, S(E), u(E, l, "Generator"), E[a] = function() {
                    return this;
                }, E.toString = function() {
                    return "[object Generator]";
                }, e.keys = function(e) {
                    var t = [];
                    for(var r in e)t.push(r);
                    return t.reverse(), function r() {
                        for(; t.length;){
                            var n = t.pop();
                            if (n in e) return r.value = n, r.done = !1, r;
                        }
                        return r.done = !0, r;
                    };
                }, e.values = P, T.prototype = {
                    constructor: T,
                    reset: function(e) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(O), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type) throw e.arg;
                        return this.rval;
                    },
                    dispatchException: function(e) {
                        if (this.done) throw e;
                        var r = this;
                        function o(n, o) {
                            return l.type = "throw", l.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
                        }
                        for(var a = this.tryEntries.length - 1; a >= 0; --a){
                            var i = this.tryEntries[a], l = i.completion;
                            if ("root" === i.tryLoc) return o("end");
                            if (i.tryLoc <= this.prev) {
                                var u = n.call(i, "catchLoc"), c = n.call(i, "finallyLoc");
                                if (u && c) {
                                    if (this.prev < i.catchLoc) return o(i.catchLoc, !0);
                                    if (this.prev < i.finallyLoc) return o(i.finallyLoc);
                                } else if (u) {
                                    if (this.prev < i.catchLoc) return o(i.catchLoc, !0);
                                } else {
                                    if (!c) throw new Error("try statement without catch or finally");
                                    if (this.prev < i.finallyLoc) return o(i.finallyLoc);
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for(var r = this.tryEntries.length - 1; r >= 0; --r){
                            var o = this.tryEntries[r];
                            if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                var a = o;
                                break;
                            }
                        }
                        a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                        var i = a ? a.completion : {};
                        return i.type = e, i.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, g) : this.complete(i);
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), g;
                    },
                    finish: function(e) {
                        for(var t = this.tryEntries.length - 1; t >= 0; --t){
                            var r = this.tryEntries[t];
                            if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), O(r), g;
                        }
                    },
                    catch: function(e) {
                        for(var t = this.tryEntries.length - 1; t >= 0; --t){
                            var r = this.tryEntries[t];
                            if (r.tryLoc === e) {
                                var n = r.completion;
                                if ("throw" === n.type) {
                                    var o = n.arg;
                                    O(r);
                                }
                                return o;
                            }
                        }
                        throw new Error("illegal catch attempt");
                    },
                    delegateYield: function(e, r, n) {
                        return this.delegate = {
                            iterator: P(e),
                            resultName: r,
                            nextLoc: n
                        }, "next" === this.method && (this.arg = t), g;
                    }
                }, e;
            }(e.exports);
            try {
                regeneratorRuntime = n;
            } catch (e) {
                Function("r", "regeneratorRuntime = r")(n);
            }
        },
        function(e, t) {
            var r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
            t.encode = function(e) {
                if (0 <= e && e < r.length) return r[e];
                throw new TypeError("Must be between 0 and 63: " + e);
            }, t.decode = function(e) {
                return 65 <= e && e <= 90 ? e - 65 : 97 <= e && e <= 122 ? e - 97 + 26 : 48 <= e && e <= 57 ? e - 48 + 52 : 43 == e ? 62 : 47 == e ? 63 : -1;
            };
        },
        function(e, t, r) {
            var n = r(1);
            function o() {
                this._array = [], this._sorted = !0, this._last = {
                    generatedLine: -1,
                    generatedColumn: 0
                };
            }
            o.prototype.unsortedForEach = function(e, t) {
                this._array.forEach(e, t);
            }, o.prototype.add = function(e) {
                var t, r, o, a, i, l;
                t = this._last, r = e, o = t.generatedLine, a = r.generatedLine, i = t.generatedColumn, l = r.generatedColumn, a > o || a == o && l >= i || n.compareByGeneratedPositionsInflated(t, r) <= 0 ? (this._last = e, this._array.push(e)) : (this._sorted = !1, this._array.push(e));
            }, o.prototype.toArray = function() {
                return this._sorted || (this._array.sort(n.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
            }, t.MappingList = o;
        },
        function(e, t, r) {
            var n = r(1), o = r(12), a = r(6).ArraySet, i = r(5), l = r(13).quickSort;
            function u(e) {
                var t = e;
                return "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, ""))), null != t.sections ? new f(t) : new c(t);
            }
            function c(e) {
                var t = e;
                "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, "")));
                var r = n.getArg(t, "version"), o = n.getArg(t, "sources"), i = n.getArg(t, "names", []), l = n.getArg(t, "sourceRoot", null), u = n.getArg(t, "sourcesContent", null), c = n.getArg(t, "mappings"), s = n.getArg(t, "file", null);
                if (r != this._version) throw new Error("Unsupported version: " + r);
                o = o.map(String).map(n.normalize).map(function(e) {
                    return l && n.isAbsolute(l) && n.isAbsolute(e) ? n.relative(l, e) : e;
                }), this._names = a.fromArray(i.map(String), !0), this._sources = a.fromArray(o, !0), this.sourceRoot = l, this.sourcesContent = u, this._mappings = c, this.file = s;
            }
            function s() {
                this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
            }
            function f(e) {
                var t = e;
                "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, "")));
                var r = n.getArg(t, "version"), o = n.getArg(t, "sections");
                if (r != this._version) throw new Error("Unsupported version: " + r);
                this._sources = new a, this._names = new a;
                var i = {
                    line: -1,
                    column: 0
                };
                this._sections = o.map(function(e) {
                    if (e.url) throw new Error("Support for url field in sections not implemented.");
                    var t = n.getArg(e, "offset"), r = n.getArg(t, "line"), o = n.getArg(t, "column");
                    if (r < i.line || r === i.line && o < i.column) throw new Error("Section offsets must be ordered and non-overlapping.");
                    return i = t, {
                        generatedOffset: {
                            generatedLine: r + 1,
                            generatedColumn: o + 1
                        },
                        consumer: new u(n.getArg(e, "map"))
                    };
                });
            }
            u.fromSourceMap = function(e) {
                return c.fromSourceMap(e);
            }, u.prototype._version = 3, u.prototype.__generatedMappings = null, Object.defineProperty(u.prototype, "_generatedMappings", {
                get: function() {
                    return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
                }
            }), u.prototype.__originalMappings = null, Object.defineProperty(u.prototype, "_originalMappings", {
                get: function() {
                    return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
                }
            }), u.prototype._charIsMappingSeparator = function(e, t) {
                var r = e.charAt(t);
                return ";" === r || "," === r;
            }, u.prototype._parseMappings = function(e, t) {
                throw new Error("Subclasses must implement _parseMappings");
            }, u.GENERATED_ORDER = 1, u.ORIGINAL_ORDER = 2, u.GREATEST_LOWER_BOUND = 1, u.LEAST_UPPER_BOUND = 2, u.prototype.eachMapping = function(e, t, r) {
                var o, a = t || null;
                switch(r || u.GENERATED_ORDER){
                    case u.GENERATED_ORDER:
                        o = this._generatedMappings;
                        break;
                    case u.ORIGINAL_ORDER:
                        o = this._originalMappings;
                        break;
                    default:
                        throw new Error("Unknown order of iteration.");
                }
                var i = this.sourceRoot;
                o.map(function(e) {
                    var t = null === e.source ? null : this._sources.at(e.source);
                    return null != t && null != i && (t = n.join(i, t)), {
                        source: t,
                        generatedLine: e.generatedLine,
                        generatedColumn: e.generatedColumn,
                        originalLine: e.originalLine,
                        originalColumn: e.originalColumn,
                        name: null === e.name ? null : this._names.at(e.name)
                    };
                }, this).forEach(e, a);
            }, u.prototype.allGeneratedPositionsFor = function(e) {
                var t = n.getArg(e, "line"), r = {
                    source: n.getArg(e, "source"),
                    originalLine: t,
                    originalColumn: n.getArg(e, "column", 0)
                };
                if (null != this.sourceRoot && (r.source = n.relative(this.sourceRoot, r.source)), !this._sources.has(r.source)) return [];
                r.source = this._sources.indexOf(r.source);
                var a = [], i = this._findMapping(r, this._originalMappings, "originalLine", "originalColumn", n.compareByOriginalPositions, o.LEAST_UPPER_BOUND);
                if (i >= 0) {
                    var l = this._originalMappings[i];
                    if (void 0 === e.column) for(var u = l.originalLine; l && l.originalLine === u;)a.push({
                        line: n.getArg(l, "generatedLine", null),
                        column: n.getArg(l, "generatedColumn", null),
                        lastColumn: n.getArg(l, "lastGeneratedColumn", null)
                    }), l = this._originalMappings[++i];
                    else for(var c = l.originalColumn; l && l.originalLine === t && l.originalColumn == c;)a.push({
                        line: n.getArg(l, "generatedLine", null),
                        column: n.getArg(l, "generatedColumn", null),
                        lastColumn: n.getArg(l, "lastGeneratedColumn", null)
                    }), l = this._originalMappings[++i];
                }
                return a;
            }, t.SourceMapConsumer = u, c.prototype = Object.create(u.prototype), c.prototype.consumer = u, c.fromSourceMap = function(e) {
                var t = Object.create(c.prototype), r = t._names = a.fromArray(e._names.toArray(), !0), o = t._sources = a.fromArray(e._sources.toArray(), !0);
                t.sourceRoot = e._sourceRoot, t.sourcesContent = e._generateSourcesContent(t._sources.toArray(), t.sourceRoot), t.file = e._file;
                for(var i = e._mappings.toArray().slice(), u = t.__generatedMappings = [], f = t.__originalMappings = [], d = 0, p = i.length; d < p; d++){
                    var h = i[d], g = new s;
                    g.generatedLine = h.generatedLine, g.generatedColumn = h.generatedColumn, h.source && (g.source = o.indexOf(h.source), g.originalLine = h.originalLine, g.originalColumn = h.originalColumn, h.name && (g.name = r.indexOf(h.name)), f.push(g)), u.push(g);
                }
                return l(t.__originalMappings, n.compareByOriginalPositions), t;
            }, c.prototype._version = 3, Object.defineProperty(c.prototype, "sources", {
                get: function() {
                    return this._sources.toArray().map(function(e) {
                        return null != this.sourceRoot ? n.join(this.sourceRoot, e) : e;
                    }, this);
                }
            }), c.prototype._parseMappings = function(e, t) {
                for(var r, o, a, u, c, f = 1, d = 0, p = 0, h = 0, g = 0, m = 0, v = e.length, y = 0, b = {}, w = {}, k = [], E = []; y < v;)if (";" === e.charAt(y)) f++, y++, d = 0;
                else if ("," === e.charAt(y)) y++;
                else {
                    for((r = new s).generatedLine = f, u = y; u < v && !this._charIsMappingSeparator(e, u); u++);
                    if (a = b[o = e.slice(y, u)]) y += o.length;
                    else {
                        for(a = []; y < u;)i.decode(e, y, w), c = w.value, y = w.rest, a.push(c);
                        if (2 === a.length) throw new Error("Found a source, but no line and column");
                        if (3 === a.length) throw new Error("Found a source and line, but no column");
                        b[o] = a;
                    }
                    r.generatedColumn = d + a[0], d = r.generatedColumn, a.length > 1 && (r.source = g + a[1], g += a[1], r.originalLine = p + a[2], p = r.originalLine, r.originalLine += 1, r.originalColumn = h + a[3], h = r.originalColumn, a.length > 4 && (r.name = m + a[4], m += a[4])), E.push(r), "number" == typeof r.originalLine && k.push(r);
                }
                l(E, n.compareByGeneratedPositionsDeflated), this.__generatedMappings = E, l(k, n.compareByOriginalPositions), this.__originalMappings = k;
            }, c.prototype._findMapping = function(e, t, r, n, a, i) {
                if (e[r] <= 0) throw new TypeError("Line must be greater than or equal to 1, got " + e[r]);
                if (e[n] < 0) throw new TypeError("Column must be greater than or equal to 0, got " + e[n]);
                return o.search(e, t, a, i);
            }, c.prototype.computeColumnSpans = function() {
                for(var e = 0; e < this._generatedMappings.length; ++e){
                    var t = this._generatedMappings[e];
                    if (e + 1 < this._generatedMappings.length) {
                        var r = this._generatedMappings[e + 1];
                        if (t.generatedLine === r.generatedLine) {
                            t.lastGeneratedColumn = r.generatedColumn - 1;
                            continue;
                        }
                    }
                    t.lastGeneratedColumn = 1 / 0;
                }
            }, c.prototype.originalPositionFor = function(e) {
                var t = {
                    generatedLine: n.getArg(e, "line"),
                    generatedColumn: n.getArg(e, "column")
                }, r = this._findMapping(t, this._generatedMappings, "generatedLine", "generatedColumn", n.compareByGeneratedPositionsDeflated, n.getArg(e, "bias", u.GREATEST_LOWER_BOUND));
                if (r >= 0) {
                    var o = this._generatedMappings[r];
                    if (o.generatedLine === t.generatedLine) {
                        var a = n.getArg(o, "source", null);
                        null !== a && (a = this._sources.at(a), null != this.sourceRoot && (a = n.join(this.sourceRoot, a)));
                        var i = n.getArg(o, "name", null);
                        return null !== i && (i = this._names.at(i)), {
                            source: a,
                            line: n.getArg(o, "originalLine", null),
                            column: n.getArg(o, "originalColumn", null),
                            name: i
                        };
                    }
                }
                return {
                    source: null,
                    line: null,
                    column: null,
                    name: null
                };
            }, c.prototype.hasContentsOfAllSources = function() {
                return !!this.sourcesContent && this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(e) {
                    return null == e;
                });
            }, c.prototype.sourceContentFor = function(e, t) {
                if (!this.sourcesContent) return null;
                if (null != this.sourceRoot && (e = n.relative(this.sourceRoot, e)), this._sources.has(e)) return this.sourcesContent[this._sources.indexOf(e)];
                var r;
                if (null != this.sourceRoot && (r = n.urlParse(this.sourceRoot))) {
                    var o = e.replace(/^file:\/\//, "");
                    if ("file" == r.scheme && this._sources.has(o)) return this.sourcesContent[this._sources.indexOf(o)];
                    if ((!r.path || "/" == r.path) && this._sources.has("/" + e)) return this.sourcesContent[this._sources.indexOf("/" + e)];
                }
                if (t) return null;
                throw new Error('"' + e + '" is not in the SourceMap.');
            }, c.prototype.generatedPositionFor = function(e) {
                var t = n.getArg(e, "source");
                if (null != this.sourceRoot && (t = n.relative(this.sourceRoot, t)), !this._sources.has(t)) return {
                    line: null,
                    column: null,
                    lastColumn: null
                };
                var r = {
                    source: t = this._sources.indexOf(t),
                    originalLine: n.getArg(e, "line"),
                    originalColumn: n.getArg(e, "column")
                }, o = this._findMapping(r, this._originalMappings, "originalLine", "originalColumn", n.compareByOriginalPositions, n.getArg(e, "bias", u.GREATEST_LOWER_BOUND));
                if (o >= 0) {
                    var a = this._originalMappings[o];
                    if (a.source === r.source) return {
                        line: n.getArg(a, "generatedLine", null),
                        column: n.getArg(a, "generatedColumn", null),
                        lastColumn: n.getArg(a, "lastGeneratedColumn", null)
                    };
                }
                return {
                    line: null,
                    column: null,
                    lastColumn: null
                };
            }, t.BasicSourceMapConsumer = c, f.prototype = Object.create(u.prototype), f.prototype.constructor = u, f.prototype._version = 3, Object.defineProperty(f.prototype, "sources", {
                get: function() {
                    for(var e = [], t = 0; t < this._sections.length; t++)for(var r = 0; r < this._sections[t].consumer.sources.length; r++)e.push(this._sections[t].consumer.sources[r]);
                    return e;
                }
            }), f.prototype.originalPositionFor = function(e) {
                var t = {
                    generatedLine: n.getArg(e, "line"),
                    generatedColumn: n.getArg(e, "column")
                }, r = o.search(t, this._sections, function(e, t) {
                    var r = e.generatedLine - t.generatedOffset.generatedLine;
                    return r || e.generatedColumn - t.generatedOffset.generatedColumn;
                }), a = this._sections[r];
                return a ? a.consumer.originalPositionFor({
                    line: t.generatedLine - (a.generatedOffset.generatedLine - 1),
                    column: t.generatedColumn - (a.generatedOffset.generatedLine === t.generatedLine ? a.generatedOffset.generatedColumn - 1 : 0),
                    bias: e.bias
                }) : {
                    source: null,
                    line: null,
                    column: null,
                    name: null
                };
            }, f.prototype.hasContentsOfAllSources = function() {
                return this._sections.every(function(e) {
                    return e.consumer.hasContentsOfAllSources();
                });
            }, f.prototype.sourceContentFor = function(e, t) {
                for(var r = 0; r < this._sections.length; r++){
                    var n = this._sections[r].consumer.sourceContentFor(e, !0);
                    if (n) return n;
                }
                if (t) return null;
                throw new Error('"' + e + '" is not in the SourceMap.');
            }, f.prototype.generatedPositionFor = function(e) {
                for(var t = 0; t < this._sections.length; t++){
                    var r = this._sections[t];
                    if (-1 !== r.consumer.sources.indexOf(n.getArg(e, "source"))) {
                        var o = r.consumer.generatedPositionFor(e);
                        if (o) return {
                            line: o.line + (r.generatedOffset.generatedLine - 1),
                            column: o.column + (r.generatedOffset.generatedLine === o.line ? r.generatedOffset.generatedColumn - 1 : 0)
                        };
                    }
                }
                return {
                    line: null,
                    column: null
                };
            }, f.prototype._parseMappings = function(e, t) {
                this.__generatedMappings = [], this.__originalMappings = [];
                for(var r = 0; r < this._sections.length; r++)for(var o = this._sections[r], a = o.consumer._generatedMappings, i = 0; i < a.length; i++){
                    var u = a[i], c = o.consumer._sources.at(u.source);
                    null !== o.consumer.sourceRoot && (c = n.join(o.consumer.sourceRoot, c)), this._sources.add(c), c = this._sources.indexOf(c);
                    var s = o.consumer._names.at(u.name);
                    this._names.add(s), s = this._names.indexOf(s);
                    var f = {
                        source: c,
                        generatedLine: u.generatedLine + (o.generatedOffset.generatedLine - 1),
                        generatedColumn: u.generatedColumn + (o.generatedOffset.generatedLine === u.generatedLine ? o.generatedOffset.generatedColumn - 1 : 0),
                        originalLine: u.originalLine,
                        originalColumn: u.originalColumn,
                        name: s
                    };
                    this.__generatedMappings.push(f), "number" == typeof f.originalLine && this.__originalMappings.push(f);
                }
                l(this.__generatedMappings, n.compareByGeneratedPositionsDeflated), l(this.__originalMappings, n.compareByOriginalPositions);
            }, t.IndexedSourceMapConsumer = f;
        },
        function(e, t) {
            t.GREATEST_LOWER_BOUND = 1, t.LEAST_UPPER_BOUND = 2, t.search = function(e, r, n, o) {
                if (0 === r.length) return -1;
                var a = function e(r, n, o, a, i, l) {
                    var u = Math.floor((n - r) / 2) + r, c = i(o, a[u], !0);
                    return 0 === c ? u : c > 0 ? n - u > 1 ? e(u, n, o, a, i, l) : l == t.LEAST_UPPER_BOUND ? n < a.length ? n : -1 : u : u - r > 1 ? e(r, u, o, a, i, l) : l == t.LEAST_UPPER_BOUND ? u : r < 0 ? -1 : r;
                }(-1, r.length, e, r, n, o || t.GREATEST_LOWER_BOUND);
                if (a < 0) return -1;
                for(; a - 1 >= 0 && 0 === n(r[a], r[a - 1], !0);)--a;
                return a;
            };
        },
        function(e, t) {
            function r(e, t, r) {
                var n = e[t];
                e[t] = e[r], e[r] = n;
            }
            function n(e, t, o, a) {
                if (o < a) {
                    var i = o - 1;
                    r(e, (s = o, f = a, Math.round(s + Math.random() * (f - s))), a);
                    for(var l = e[a], u = o; u < a; u++)t(e[u], l) <= 0 && r(e, i += 1, u);
                    r(e, i + 1, u);
                    var c = i + 1;
                    n(e, t, o, c - 1), n(e, t, c + 1, a);
                }
                var s, f;
            }
            t.quickSort = function(e, t) {
                n(e, t, 0, e.length - 1);
            };
        },
        function(e, t, r) {
            var n = r(4).SourceMapGenerator, o = r(1), a = /(\r?\n)/, i = "$$$isSourceNode$$$";
            function l(e, t, r, n, o) {
                this.children = [], this.sourceContents = {}, this.line = null == e ? null : e, this.column = null == t ? null : t, this.source = null == r ? null : r, this.name = null == o ? null : o, this[i] = !0, null != n && this.add(n);
            }
            l.fromStringWithSourceMap = function(e, t, r) {
                var n = new l, i = e.split(a), u = 0, c = function() {
                    return e() + (e() || "");
                    function e() {
                        return u < i.length ? i[u++] : void 0;
                    }
                }, s = 1, f = 0, d = null;
                return t.eachMapping(function(e) {
                    if (null !== d) {
                        if (!(s < e.generatedLine)) {
                            var t = (r = i[u]).substr(0, e.generatedColumn - f);
                            return i[u] = r.substr(e.generatedColumn - f), f = e.generatedColumn, p(d, t), void (d = e);
                        }
                        p(d, c()), s++, f = 0;
                    }
                    for(; s < e.generatedLine;)n.add(c()), s++;
                    if (f < e.generatedColumn) {
                        var r = i[u];
                        n.add(r.substr(0, e.generatedColumn)), i[u] = r.substr(e.generatedColumn), f = e.generatedColumn;
                    }
                    d = e;
                }, this), u < i.length && (d && p(d, c()), n.add(i.splice(u).join(""))), t.sources.forEach(function(e) {
                    var a = t.sourceContentFor(e);
                    null != a && (null != r && (e = o.join(r, e)), n.setSourceContent(e, a));
                }), n;
                function p(e, t) {
                    if (null === e || void 0 === e.source) n.add(t);
                    else {
                        var a = r ? o.join(r, e.source) : e.source;
                        n.add(new l(e.originalLine, e.originalColumn, a, t, e.name));
                    }
                }
            }, l.prototype.add = function(e) {
                if (Array.isArray(e)) e.forEach(function(e) {
                    this.add(e);
                }, this);
                else {
                    if (!e[i] && "string" != typeof e) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e);
                    e && this.children.push(e);
                }
                return this;
            }, l.prototype.prepend = function(e) {
                if (Array.isArray(e)) for(var t = e.length - 1; t >= 0; t--)this.prepend(e[t]);
                else {
                    if (!e[i] && "string" != typeof e) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e);
                    this.children.unshift(e);
                }
                return this;
            }, l.prototype.walk = function(e) {
                for(var t, r = 0, n = this.children.length; r < n; r++)(t = this.children[r])[i] ? t.walk(e) : "" !== t && e(t, {
                    source: this.source,
                    line: this.line,
                    column: this.column,
                    name: this.name
                });
            }, l.prototype.join = function(e) {
                var t, r, n = this.children.length;
                if (n > 0) {
                    for(t = [], r = 0; r < n - 1; r++)t.push(this.children[r]), t.push(e);
                    t.push(this.children[r]), this.children = t;
                }
                return this;
            }, l.prototype.replaceRight = function(e, t) {
                var r = this.children[this.children.length - 1];
                return r[i] ? r.replaceRight(e, t) : "string" == typeof r ? this.children[this.children.length - 1] = r.replace(e, t) : this.children.push("".replace(e, t)), this;
            }, l.prototype.setSourceContent = function(e, t) {
                this.sourceContents[o.toSetString(e)] = t;
            }, l.prototype.walkSourceContents = function(e) {
                for(var t = 0, r = this.children.length; t < r; t++)this.children[t][i] && this.children[t].walkSourceContents(e);
                var n = Object.keys(this.sourceContents);
                for(t = 0, r = n.length; t < r; t++)e(o.fromSetString(n[t]), this.sourceContents[n[t]]);
            }, l.prototype.toString = function() {
                var e = "";
                return this.walk(function(t) {
                    e += t;
                }), e;
            }, l.prototype.toStringWithSourceMap = function(e) {
                var t = {
                    code: "",
                    line: 1,
                    column: 0
                }, r = new n(e), o = !1, a = null, i = null, l = null, u = null;
                return this.walk(function(e, n) {
                    t.code += e, null !== n.source && null !== n.line && null !== n.column ? (a === n.source && i === n.line && l === n.column && u === n.name || r.addMapping({
                        source: n.source,
                        original: {
                            line: n.line,
                            column: n.column
                        },
                        generated: {
                            line: t.line,
                            column: t.column
                        },
                        name: n.name
                    }), a = n.source, i = n.line, l = n.column, u = n.name, o = !0) : o && (r.addMapping({
                        generated: {
                            line: t.line,
                            column: t.column
                        }
                    }), a = null, o = !1);
                    for(var c = 0, s = e.length; c < s; c++)10 === e.charCodeAt(c) ? (t.line++, t.column = 0, c + 1 === s ? (a = null, o = !1) : o && r.addMapping({
                        source: n.source,
                        original: {
                            line: n.line,
                            column: n.column
                        },
                        generated: {
                            line: t.line,
                            column: t.column
                        },
                        name: n.name
                    })) : t.column++;
                }), this.walkSourceContents(function(e, t) {
                    r.setSourceContent(e, t);
                }), {
                    code: t.code,
                    map: r
                };
            }, t.SourceNode = l;
        },
        function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, "setEditorHandler", function() {
                return ue;
            }), r.d(t, "reportBuildError", function() {
                return ce;
            }), r.d(t, "reportRuntimeError", function() {
                return se;
            }), r.d(t, "dismissBuildError", function() {
                return fe;
            }), r.d(t, "startReportingRuntimeErrors", function() {
                return de;
            }), r.d(t, "dismissRuntimeErrors", function() {
                return he;
            }), r.d(t, "stopReportingRuntimeErrors", function() {
                return ge;
            });
            var n = null;
            function o(e, t) {
                if (t.error) {
                    var r = t.error;
                    r instanceof Error ? e(r) : e(new Error(r));
                }
            }
            function a(e, t) {
                null === n && (n = o.bind(void 0, t), e.addEventListener("error", n));
            }
            var i = null;
            function l(e, t) {
                if (null == t || null == t.reason) return e(new Error("Unknown"));
                var r = t.reason;
                return r instanceof Error ? e(r) : e(new Error(r));
            }
            function u(e, t) {
                null === i && (i = l.bind(void 0, t), e.addEventListener("unhandledrejection", i));
            }
            var c = !1, s = 10, f = 50;
            var d = [], p = function() {
                "undefined" != typeof console && (console.reactStack = function(e) {
                    return d.push(e);
                }, console.reactStackEnd = function(e) {
                    return d.pop();
                });
            }, h = function() {
                "undefined" != typeof console && (console.reactStack = void 0, console.reactStackEnd = void 0);
            }, g = function(e, t) {
                if ("undefined" != typeof console) {
                    var r = console[e];
                    "function" == typeof r && (console[e] = function() {
                        try {
                            var e = arguments[0];
                            "string" == typeof e && d.length > 0 && t(e, d[d.length - 1]);
                        } catch (e) {
                            setTimeout(function() {
                                throw e;
                            });
                        }
                        return r.apply(this, arguments);
                    });
                }
            };
            function m(e, t) {
                return (m = Object.setPrototypeOf || function(e, t) {
                    return e.__proto__ = t, e;
                })(e, t);
            }
            function v(e, t, r) {
                return (v = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (e) {
                        return !1;
                    }
                }() ? Reflect.construct : function(e, t, r) {
                    var n = [
                        null
                    ];
                    n.push.apply(n, t);
                    var o = new (Function.bind.apply(e, n));
                    return r && m(o, r.prototype), o;
                }).apply(null, arguments);
            }
            function y(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for(var r = 0, n = new Array(t); r < t; r++)n[r] = e[r];
                return n;
            }
            function b(e) {
                return function(e) {
                    if (Array.isArray(e)) return y(e);
                }(e) || function(e) {
                    if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
                }(e) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e) return y(e, t);
                        var r = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? y(e, t) : void 0;
                    }
                }(e) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }();
            }
            function w(e, t) {
                for(var r = 0; r < t.length; r++){
                    var n = t[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
                }
            }
            function k(e, t, r) {
                return t && w(e.prototype, t), r && w(e, r), e;
            }
            function E(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
            }
            var S = function e(t, r) {
                var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                E(this, e), this.lineNumber = t, this.content = r, this.highlight = n;
            }, x = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null, i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null, l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null, u = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null, c = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null, s = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : null;
                    E(this, e), t && 0 === t.indexOf("Object.") && (t = t.slice(7)), "friendlySyntaxErrorLabel" !== t && "exports.__esModule" !== t && "<anonymous>" !== t && t || (t = null), this.functionName = t, this.fileName = r, this.lineNumber = n, this.columnNumber = o, this._originalFunctionName = i, this._originalFileName = l, this._originalLineNumber = u, this._originalColumnNumber = c, this._scriptCode = a, this._originalScriptCode = s;
                }
                return k(e, [
                    {
                        key: "getFunctionName",
                        value: function() {
                            return this.functionName || "(anonymous function)";
                        }
                    },
                    {
                        key: "getSource",
                        value: function() {
                            var e = "";
                            return null != this.fileName && (e += this.fileName + ":"), null != this.lineNumber && (e += this.lineNumber + ":"), null != this.columnNumber && (e += this.columnNumber + ":"), e.slice(0, -1);
                        }
                    },
                    {
                        key: "toString",
                        value: function() {
                            var e = this.getFunctionName(), t = this.getSource();
                            return "".concat(e).concat(t ? " (".concat(t, ")") : "");
                        }
                    }
                ]), e;
            }(), _ = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;
            function C(e) {
                return _.exec(e).slice(1).map(function(e) {
                    var t = Number(e);
                    return isNaN(t) ? e : t;
                });
            }
            var O = /^\s*(at|in)\s.+(:\d+)/, T = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;
            function P(e) {
                return e.filter(function(e) {
                    return O.test(e) || T.test(e);
                }).map(function(e) {
                    if (T.test(e)) {
                        var t = !1;
                        / > (eval|Function)/.test(e) && (e = e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g, ":$1"), t = !0);
                        var r = e.split(/[@]/g), n = r.pop();
                        return v(x, [
                            r.join("@") || (t ? "eval" : null)
                        ].concat(b(C(n))));
                    }
                    -1 !== e.indexOf("(eval ") && (e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, "")), -1 !== e.indexOf("(at ") && (e = e.replace(/\(at /, "("));
                    var o = e.trim().split(/\s+/g).slice(1), a = o.pop();
                    return v(x, [
                        o.join(" ") || null
                    ].concat(b(C(a))));
                });
            }
            function L(e) {
                if (null == e) throw new Error("You cannot pass a null object.");
                if ("string" == typeof e) return P(e.split("\n"));
                if (Array.isArray(e)) return P(e);
                if ("string" == typeof e.stack) return P(e.stack.split("\n"));
                throw new Error("The error you provided does not contain a stack trace.");
            }
            var R = r(0), A = r.n(R);
            function N(e, t, r, n, o, a, i) {
                try {
                    var l = e[a](i), u = l.value;
                } catch (e) {
                    return void r(e);
                }
                l.done ? t(u) : Promise.resolve(u).then(n, o);
            }
            function j(e) {
                return function() {
                    var t = this, r = arguments;
                    return new Promise(function(n, o) {
                        var a = e.apply(t, r);
                        function i(e) {
                            N(a, n, o, i, l, "next", e);
                        }
                        function l(e) {
                            N(a, n, o, i, l, "throw", e);
                        }
                        i(void 0);
                    });
                };
            }
            var M = r(3), I = function() {
                function e(t) {
                    E(this, e), this.__source_map = t;
                }
                return k(e, [
                    {
                        key: "getOriginalPosition",
                        value: function(e, t) {
                            var r = this.__source_map.originalPositionFor({
                                line: e,
                                column: t
                            });
                            return {
                                line: r.line,
                                column: r.column,
                                source: r.source
                            };
                        }
                    },
                    {
                        key: "getGeneratedPosition",
                        value: function(e, t, r) {
                            var n = this.__source_map.generatedPositionFor({
                                source: e,
                                line: t,
                                column: r
                            });
                            return {
                                line: n.line,
                                column: n.column
                            };
                        }
                    },
                    {
                        key: "getSource",
                        value: function(e) {
                            return this.__source_map.sourceContentFor(e);
                        }
                    },
                    {
                        key: "getSources",
                        value: function() {
                            return this.__source_map.sources;
                        }
                    }
                ]), e;
            }();
            function D(e, t) {
                for(var r = /\/\/[#@] ?sourceMappingURL=([^\s'"]+)\s*$/gm, n = null;;){
                    var o = r.exec(t);
                    if (null == o) break;
                    n = o;
                }
                return n && n[1] ? Promise.resolve(n[1].toString()) : Promise.reject("Cannot find a source map directive for ".concat(e, "."));
            }
            function z(e, t) {
                return q.apply(this, arguments);
            }
            function q() {
                return (q = j(A.a.mark(function e(t, r) {
                    var n, o, a, i, l, u;
                    return A.a.wrap(function(e) {
                        for(;;)switch(e.prev = e.next){
                            case 0:
                                return e.next = 2, D(t, r);
                            case 2:
                                if (0 !== (n = e.sent).indexOf("data:")) {
                                    e.next = 14;
                                    break;
                                }
                                if (o = /^data:application\/json;([\w=:"-]+;)*base64,/, a = n.match(o)) {
                                    e.next = 8;
                                    break;
                                }
                                throw new Error("Sorry, non-base64 inline source-map encoding is not supported.");
                            case 8:
                                return n = n.substring(a[0].length), n = window.atob(n), n = JSON.parse(n), e.abrupt("return", new I(new M.SourceMapConsumer(n)));
                            case 14:
                                return i = t.lastIndexOf("/"), l = t.substring(0, i + 1) + n, e.next = 18, fetch(l).then(function(e) {
                                    return e.json();
                                });
                            case 18:
                                return u = e.sent, e.abrupt("return", new I(new M.SourceMapConsumer(u)));
                            case 20:
                            case "end":
                                return e.stop();
                        }
                    }, e);
                }))).apply(this, arguments);
            }
            function F(e, t, r) {
                "string" == typeof r && (r = r.split("\n"));
                for(var n = [], o = Math.max(0, e - 1 - t); o <= Math.min(r.length - 1, e - 1 + t); ++o)n.push(new S(o + 1, r[o], o === e - 1));
                return n;
            }
            var U = r(7);
            function B(e) {
                return H.apply(this, arguments);
            }
            function H() {
                return (H = j(A.a.mark(function e(t) {
                    var r, n, o, a = arguments;
                    return A.a.wrap(function(e) {
                        for(;;)switch(e.prev = e.next){
                            case 0:
                                return r = a.length > 1 && void 0 !== a[1] ? a[1] : 3, n = {}, o = [], t.forEach(function(e) {
                                    var t = e.fileName;
                                    null != t && -1 === o.indexOf(t) && o.push(t);
                                }), e.next = 6, Object(U.settle)(o.map(function() {
                                    var e = j(A.a.mark(function e(t) {
                                        var r, o, a;
                                        return A.a.wrap(function(e) {
                                            for(;;)switch(e.prev = e.next){
                                                case 0:
                                                    return r = 0 === t.indexOf("webpack-internal:") ? "/__get-internal-source?fileName=".concat(encodeURIComponent(t)) : t, e.next = 3, fetch(r).then(function(e) {
                                                        return e.text();
                                                    });
                                                case 3:
                                                    return o = e.sent, e.next = 6, z(t, o);
                                                case 6:
                                                    a = e.sent, n[t] = {
                                                        fileSource: o,
                                                        map: a
                                                    };
                                                case 8:
                                                case "end":
                                                    return e.stop();
                                            }
                                        }, e);
                                    }));
                                    return function(t) {
                                        return e.apply(this, arguments);
                                    };
                                }()));
                            case 6:
                                return e.abrupt("return", t.map(function(e) {
                                    var t = e.functionName, o = e.fileName, a = e.lineNumber, i = e.columnNumber, l = n[o] || {}, u = l.map, c = l.fileSource;
                                    if (null == u || null == a) return e;
                                    var s = u.getOriginalPosition(a, i), f = s.source, d = s.line, p = s.column, h = null == f ? [] : u.getSource(f);
                                    return new x(t, o, a, i, F(a, r, c), t, f, d, p, F(d, r, h));
                                }));
                            case 7:
                            case "end":
                                return e.stop();
                        }
                    }, e);
                }))).apply(this, arguments);
            }
            var $ = r(2), V = r.n($);
            function W(e, t) {
                var r = -1, n = -1;
                do ++r, n = t.indexOf(e, n + 1);
                while (-1 !== n);
                return r;
            }
            function G(e, t) {
                return Q.apply(this, arguments);
            }
            function Q() {
                return (Q = j(A.a.mark(function e(t, r) {
                    var n, o, a, i, l = arguments;
                    return A.a.wrap(function(e) {
                        for(;;)switch(e.prev = e.next){
                            case 0:
                                if (n = l.length > 2 && void 0 !== l[2] ? l[2] : 3, o = "object" == typeof t ? t.contents : null, a = "object" == typeof t ? t.uri : t, null != o) {
                                    e.next = 7;
                                    break;
                                }
                                return e.next = 6, fetch(a).then(function(e) {
                                    return e.text();
                                });
                            case 6:
                                o = e.sent;
                            case 7:
                                return e.next = 9, z(a, o);
                            case 9:
                                return i = e.sent, e.abrupt("return", r.map(function(e) {
                                    var t = e.functionName, r = e.lineNumber, l = e.columnNumber;
                                    if (null != e._originalLineNumber) return e;
                                    var u = e.fileName;
                                    if (u && (u = V.a.normalize(u.replace(/[\\]+/g, "/"))), null == u) return e;
                                    var c = u, s = i.getSources().map(function(e) {
                                        return e.replace(/[\\]+/g, "/");
                                    }).filter(function(e) {
                                        var t = (e = V.a.normalize(e)).lastIndexOf(c);
                                        return -1 !== t && t === e.length - c.length;
                                    }).map(function(e) {
                                        return {
                                            token: e,
                                            seps: W(V.a.sep, V.a.normalize(e)),
                                            penalties: W("node_modules", e) + W("~", e)
                                        };
                                    }).sort(function(e, t) {
                                        var r = Math.sign(e.seps - t.seps);
                                        return 0 !== r ? r : Math.sign(e.penalties - t.penalties);
                                    });
                                    if (s.length < 1 || null == r) return new x(null, null, null, null, null, t, c, r, l, null);
                                    var f = s[0].token, d = i.getGeneratedPosition(f, r, l), p = d.line, h = d.column, g = i.getSource(f);
                                    return new x(t, a, p, h || null, F(p, n, o || []), t, c, r, l, F(r, n, g));
                                }));
                            case 11:
                            case "end":
                                return e.stop();
                        }
                    }, e);
                }))).apply(this, arguments);
            }
            var Y = function(e) {
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 3, r = L(e);
                return (e.__unmap_source ? G(e.__unmap_source, r, t) : B(r, t)).then(function(e) {
                    return 0 === e.map(function(e) {
                        return e._originalFileName;
                    }).filter(function(e) {
                        return null != e && -1 === e.indexOf("node_modules");
                    }).length ? null : e.filter(function(e) {
                        var t = e.functionName;
                        return null == t || -1 === t.indexOf("__stack_frame_overlay_proxy_console__");
                    });
                });
            }, X = function(e) {
                return function(t) {
                    var r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    Y(t, r, 3).then(function(n) {
                        null != n && e({
                            error: t,
                            unhandledRejection: r,
                            contextSize: 3,
                            stackFrames: n
                        });
                    }).catch(function(e) {
                        console.log("Could not get the stack frames of error:", e);
                    });
                };
            };
            function K(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "/static/js/bundle.js", r = X(e);
                return a(window, function(e) {
                    return r(e, !1);
                }), u(window, function(e) {
                    return r(e, !0);
                }), function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : f;
                    if (!c) try {
                        s = Error.stackTraceLimit, Error.stackTraceLimit = e, c = !0;
                    } catch (e) {}
                }(), p(), g("error", function(e, n) {
                    var o = function(e, t) {
                        for(var r, n, o = function(e) {
                            return e.split("\n").filter(function(e) {
                                return !e.match(/^\s*in/);
                            }).join("\n");
                        }(e), a = "", i = 0; i < t.length; ++i){
                            var l = t[i], u = l.fileName, c = l.lineNumber;
                            if (null != u && null != c && !(u === r && "number" == typeof c && "number" == typeof n && Math.abs(c - n) < 3)) {
                                r = u, n = c;
                                var s = t[i].name;
                                a += "in ".concat(s = s || "(anonymous function)", " (at ").concat(u, ":").concat(c, ")\n");
                            }
                        }
                        return {
                            message: o,
                            stack: a
                        };
                    }(e, n);
                    r({
                        message: o.message,
                        stack: o.stack,
                        __unmap_source: t
                    }, !1);
                }), function() {
                    var e;
                    !function() {
                        if (c) try {
                            Error.stackTraceLimit = s, c = !1;
                        } catch (e) {}
                    }(), e = window, null !== i && (e.removeEventListener("unhandledrejection", i), i = null), function(e) {
                        null !== n && (e.removeEventListener("error", n), n = null);
                    }(window), h();
                };
            }
            var J = {
                position: "fixed",
                top: "0",
                left: "0",
                width: "100%",
                height: "100%",
                border: "none",
                "z-index": 2147483647
            };
            var Z = '/*! For license information please see iframe-bundle.js.LICENSE.txt */\n!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=208)}([function(e,t,r){"use strict";e.exports=r(183)},function(e,t,r){var n=r(8),o=r(35).f,a=r(18),i=r(21),l=r(38),u=r(60),c=r(64);e.exports=function(e,t){var r,s,f,d,p,h=e.target,g=e.global,v=e.stat;if(r=g?n:v?n[h]||l(h,{}):(n[h]||{}).prototype)for(s in t){if(d=t[s],f=e.noTargetGet?(p=o(r,s))&&p.value:r[s],!c(g?s:h+(v?".":"#")+s,e.forced)&&void 0!==f){if(typeof d===typeof f)continue;u(d,f)}(e.sham||f&&f.sham)&&a(d,"sham",!0),i(r,s,d,e)}}},function(e,t,r){var n=r(13);e.exports=function(e){if(!n(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t){e.exports=!1},function(e,t,r){var n=r(2),o=r(66),a=r(26),i=r(7),l=r(45),u=r(69),c=function(e,t){this.stopped=e,this.result=t};e.exports=function(e,t,r){var s,f,d,p,h,g,v,m=r&&r.that,y=!(!r||!r.AS_ENTRIES),b=!(!r||!r.IS_ITERATOR),w=!(!r||!r.INTERRUPTED),k=i(t,m,1+y+w),E=function(e){return s&&u(s),new c(!0,e)},x=function(e){return y?(n(e),w?k(e[0],e[1],E):k(e[0],e[1])):w?k(e,E):k(e)};if(b)s=e;else{if("function"!=typeof(f=l(e)))throw TypeError("Target is not iterable");if(o(f)){for(d=0,p=a(e.length);p>d;d++)if((h=x(e[d]))&&h instanceof c)return h;return new c(!1)}s=f.call(e)}for(g=s.next;!(v=g.call(s)).done;){try{h=x(v.value)}catch(e){throw u(s),e}if("object"==typeof h&&h&&h instanceof c)return h}return new c(!1)}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,r){var n=r(8),o=r(40),a=r(11),i=r(31),l=r(44),u=r(67),c=o("wks"),s=n.Symbol,f=u?s:s&&s.withoutSetter||i;e.exports=function(e){return a(c,e)||(l&&a(s,e)?c[e]=s[e]:c[e]=f("Symbol."+e)),c[e]}},function(e,t,r){var n=r(5);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 0:return function(){return e.call(t)};case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t,r){(function(t){var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof t&&t)||function(){return this}()||Function("return this")()}).call(this,r(34))},function(e,t,r){var n=r(61),o=r(11),a=r(82),i=r(14).f;e.exports=function(e){var t=n.Symbol||(n.Symbol={});o(t,e)||i(t,e,{value:a.f(e)})}},function(e,t,r){var n=r(61),o=r(8),a=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?a(n[e])||a(o[e]):n[e]&&n[e][t]||o[e]&&o[e][t]}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e){return"object"===typeof e?null!==e:"function"===typeof e}},function(e,t,r){var n=r(16),o=r(57),a=r(2),i=r(29),l=Object.defineProperty;t.f=n?l:function(e,t,r){if(a(e),t=i(t,!0),a(r),o)try{return l(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(3),o=r(48);e.exports=n?o:function(e){return Map.prototype.entries.call(e)}},function(e,t,r){var n=r(12);e.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,r){var n=r(2),o=r(5),a=r(6)("species");e.exports=function(e,t){var r,i=n(e).constructor;return void 0===i||void 0==(r=n(i)[a])?t:o(r)}},function(e,t,r){var n=r(16),o=r(14),a=r(23);e.exports=n?function(e,t,r){return o.f(e,t,a(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(3),o=r(48);e.exports=n?o:function(e){return Set.prototype.values.call(e)}},function(e,t,r){var n=r(56),o=r(37);e.exports=function(e){return n(o(e))}},function(e,t,r){var n=r(8),o=r(18),a=r(11),i=r(38),l=r(59),u=r(24),c=u.get,s=u.enforce,f=String(String).split("String");(e.exports=function(e,t,r,l){var u,c=!!l&&!!l.unsafe,d=!!l&&!!l.enumerable,p=!!l&&!!l.noTargetGet;"function"==typeof r&&("string"!=typeof t||a(r,"name")||o(r,"name",t),(u=s(r)).source||(u.source=f.join("string"==typeof t?t:""))),e!==n?(c?!p&&e[t]&&(d=!0):delete e[t],d?e[t]=r:o(e,t,r)):d?e[t]=r:i(t,r)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||l(this)}))},function(e,t,r){var n=r(14).f,o=r(11),a=r(6)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,a)&&n(e,a,{configurable:!0,value:t})}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,r){var n,o,a,i=r(92),l=r(8),u=r(13),c=r(18),s=r(11),f=r(39),d=r(30),p=r(25),h=l.WeakMap;if(i){var g=f.state||(f.state=new h),v=g.get,m=g.has,y=g.set;n=function(e,t){return t.facade=e,y.call(g,e,t),t},o=function(e){return v.call(g,e)||{}},a=function(e){return m.call(g,e)}}else{var b=d("state");p[b]=!0,n=function(e,t){return t.facade=e,c(e,b,t),t},o=function(e){return s(e,b)?e[b]:{}},a=function(e){return s(e,b)}}e.exports={set:n,get:o,has:a,enforce:function(e){return a(e)?o(e):n(e,{})},getterFor:function(e){return function(t){var r;if(!u(t)||(r=o(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return r}}}},function(e,t){e.exports={}},function(e,t,r){var n=r(42),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t){e.exports={}},function(e,t,r){var n=r(37);e.exports=function(e){return Object(n(e))}},function(e,t,r){var n=r(13);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can\'t convert object to primitive value")}},function(e,t,r){var n=r(40),o=r(31),a=n("keys");e.exports=function(e){return a[e]||(a[e]=o(e))}},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++r+n).toString(36)}},function(e,t,r){var n,o=r(2),a=r(99),i=r(43),l=r(25),u=r(100),c=r(58),s=r(30),f=s("IE_PROTO"),d=function(){},p=function(e){return"<script>"+e+"</"+"script>"},h=function(){try{n=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;h=n?function(e){e.write(p("")),e.close();var t=e.parentWindow.Object;return e=null,t}(n):((t=c("iframe")).style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(p("document.F=Object")),e.close(),e.F);for(var r=i.length;r--;)delete h.prototype[i[r]];return h()};l[f]=!0,e.exports=Object.create||function(e,t){var r;return null!==e?(d.prototype=o(e),r=new d,d.prototype=null,r[f]=e):r=h(),void 0===t?r:a(r,t)}},function(e,t,r){"use strict";var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();var o=[[{color:"0, 0, 0",class:"ansi-black"},{color:"187, 0, 0",class:"ansi-red"},{color:"0, 187, 0",class:"ansi-green"},{color:"187, 187, 0",class:"ansi-yellow"},{color:"0, 0, 187",class:"ansi-blue"},{color:"187, 0, 187",class:"ansi-magenta"},{color:"0, 187, 187",class:"ansi-cyan"},{color:"255,255,255",class:"ansi-white"}],[{color:"85, 85, 85",class:"ansi-bright-black"},{color:"255, 85, 85",class:"ansi-bright-red"},{color:"0, 255, 0",class:"ansi-bright-green"},{color:"255, 255, 85",class:"ansi-bright-yellow"},{color:"85, 85, 255",class:"ansi-bright-blue"},{color:"255, 85, 255",class:"ansi-bright-magenta"},{color:"85, 255, 255",class:"ansi-bright-cyan"},{color:"255, 255, 255",class:"ansi-bright-white"}]],a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.fg=this.bg=this.fg_truecolor=this.bg_truecolor=null,this.bright=0}return n(e,null,[{key:"escapeForHtml",value:function(t){return(new e).escapeForHtml(t)}},{key:"linkify",value:function(t){return(new e).linkify(t)}},{key:"ansiToHtml",value:function(t,r){return(new e).ansiToHtml(t,r)}},{key:"ansiToJson",value:function(t,r){return(new e).ansiToJson(t,r)}},{key:"ansiToText",value:function(t){return(new e).ansiToText(t)}}]),n(e,[{key:"setupPalette",value:function(){this.PALETTE_COLORS=[];for(var e=0;e<2;++e)for(var t=0;t<8;++t)this.PALETTE_COLORS.push(o[e][t].color);for(var r=[0,95,135,175,215,255],n=function(e,t,n){return r[e]+", "+r[t]+", "+r[n]},a=0;a<6;++a)for(var i=0;i<6;++i)for(var l=0;l<6;++l)this.PALETTE_COLORS.push(n(a,i,l));for(var u=8,c=0;c<24;++c,u+=10)this.PALETTE_COLORS.push(n(u,u,u))}},{key:"escapeForHtml",value:function(e){return e.replace(/[&<>]/gm,(function(e){return"&"==e?"&amp;":"<"==e?"&lt;":">"==e?"&gt;":""}))}},{key:"linkify",value:function(e){return e.replace(/(https?:\\/\\/[^\\s]+)/gm,(function(e){return\'<a href="\'+e+\'">\'+e+"</a>"}))}},{key:"ansiToHtml",value:function(e,t){return this.process(e,t,!0)}},{key:"ansiToJson",value:function(e,t){return(t=t||{}).json=!0,t.clearLine=!1,this.process(e,t,!0)}},{key:"ansiToText",value:function(e){return this.process(e,{},!1)}},{key:"process",value:function(e,t,r){var n=this,o=e.split(/\\033\\[/),a=o.shift();void 0!==t&&null!==t||(t={}),t.clearLine=/\\r/.test(e);var i=o.map((function(e){return n.processChunk(e,t,r)}));if(t&&t.json){var l=this.processChunkJson("");return l.content=a,l.clearLine=t.clearLine,i.unshift(l),t.remove_empty&&(i=i.filter((function(e){return!e.isEmpty()}))),i}return i.unshift(a),i.join("")}},{key:"processChunkJson",value:function(e,t,r){var n=(t="undefined"==typeof t?{}:t).use_classes="undefined"!=typeof t.use_classes&&t.use_classes,a=t.key=n?"class":"color",i={content:e,fg:null,bg:null,fg_truecolor:null,bg_truecolor:null,clearLine:t.clearLine,decoration:null,was_processed:!1,isEmpty:function(){return!i.content}},l=e.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);if(!l)return i;i.content=l[4];var u=l[2].split(";");if(""!==l[1]||"m"!==l[3])return i;if(!r)return i;var c=this;for(c.decoration=null;u.length>0;){var s=u.shift(),f=parseInt(s);if(isNaN(f)||0===f)c.fg=c.bg=c.decoration=null;else if(1===f)c.decoration="bold";else if(2===f)c.decoration="dim";else if(3==f)c.decoration="italic";else if(4==f)c.decoration="underline";else if(5==f)c.decoration="blink";else if(7===f)c.decoration="reverse";else if(8===f)c.decoration="hidden";else if(9===f)c.decoration="strikethrough";else if(39==f)c.fg=null;else if(49==f)c.bg=null;else if(f>=30&&f<38)c.fg=o[0][f%10][a];else if(f>=90&&f<98)c.fg=o[1][f%10][a];else if(f>=40&&f<48)c.bg=o[0][f%10][a];else if(f>=100&&f<108)c.bg=o[1][f%10][a];else if(38===f||48===f){var d=38===f;if(u.length>=1){var p=u.shift();if("5"===p&&u.length>=1){var h=parseInt(u.shift());if(h>=0&&h<=255)if(n){var g=h>=16?"ansi-palette-"+h:o[h>7?1:0][h%8].class;d?c.fg=g:c.bg=g}else this.PALETTE_COLORS||c.setupPalette(),d?c.fg=this.PALETTE_COLORS[h]:c.bg=this.PALETTE_COLORS[h]}else if("2"===p&&u.length>=3){var v=parseInt(u.shift()),m=parseInt(u.shift()),y=parseInt(u.shift());if(v>=0&&v<=255&&m>=0&&m<=255&&y>=0&&y<=255){var b=v+", "+m+", "+y;n?d?(c.fg="ansi-truecolor",c.fg_truecolor=b):(c.bg="ansi-truecolor",c.bg_truecolor=b):d?c.fg=b:c.bg=b}}}}}if(null===c.fg&&null===c.bg&&null===c.decoration)return i;return i.fg=c.fg,i.bg=c.bg,i.fg_truecolor=c.fg_truecolor,i.bg_truecolor=c.bg_truecolor,i.decoration=c.decoration,i.was_processed=!0,i}},{key:"processChunk",value:function(e,t,r){var n=this;t=t||{};var o=this.processChunkJson(e,t,r);if(t.json)return o;if(o.isEmpty())return"";if(!o.was_processed)return o.content;var a=t.use_classes,i=[],l=[],u={},c=function(e){var t=[],r=void 0;for(r in e)e.hasOwnProperty(r)&&t.push("data-"+r+\'="\'+n.escapeForHtml(e[r])+\'"\');return t.length>0?" "+t.join(" "):""};return o.fg&&(a?(l.push(o.fg+"-fg"),null!==o.fg_truecolor&&(u["ansi-truecolor-fg"]=o.fg_truecolor,o.fg_truecolor=null)):i.push("color:rgb("+o.fg+")")),o.bg&&(a?(l.push(o.bg+"-bg"),null!==o.bg_truecolor&&(u["ansi-truecolor-bg"]=o.bg_truecolor,o.bg_truecolor=null)):i.push("background-color:rgb("+o.bg+")")),o.decoration&&(a?l.push("ansi-"+o.decoration):"bold"===o.decoration?i.push("font-weight:bold"):"dim"===o.decoration?i.push("opacity:0.5"):"italic"===o.decoration?i.push("font-style:italic"):"reverse"===o.decoration?i.push("filter:invert(100%)"):"hidden"===o.decoration?i.push("visibility:hidden"):"strikethrough"===o.decoration?i.push("text-decoration:line-through"):i.push("text-decoration:"+o.decoration)),a?\'<span class="\'+l.join(" ")+\'"\'+c(u)+">"+o.content+"</span>":\'<span style="\'+i.join(";")+\'"\'+c(u)+">"+o.content+"</span>"}}]),e}();e.exports=a},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"===typeof window&&(r=window)}e.exports=r},function(e,t,r){var n=r(16),o=r(55),a=r(23),i=r(20),l=r(29),u=r(11),c=r(57),s=Object.getOwnPropertyDescriptor;t.f=n?s:function(e,t){if(e=i(e),t=l(t,!0),c)try{return s(e,t)}catch(e){}if(u(e,t))return a(!o.f.call(e,t),e[t])}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can\'t call method on "+e);return e}},function(e,t,r){var n=r(8),o=r(18);e.exports=function(e,t){try{o(n,e,t)}catch(r){n[e]=t}return t}},function(e,t,r){var n=r(8),o=r(38),a="__core-js_shared__",i=n[a]||o(a,{});e.exports=i},function(e,t,r){var n=r(3),o=r(39);(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.8.3",mode:n?"pure":"global",copyright:"\xa9 2021 Denis Pushkarev (zloirock.ru)"})},function(e,t,r){var n=r(62),o=r(43).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,r){var n=r(12);e.exports=!!Object.getOwnPropertySymbols&&!n((function(){return!String(Symbol())}))},function(e,t,r){var n=r(68),o=r(27),a=r(6)("iterator");e.exports=function(e){if(void 0!=e)return e[a]||e["@@iterator"]||o[n(e)]}},function(e,t,r){var n={};n[r(6)("toStringTag")]="z",e.exports="[object z]"===String(n)},function(e,t,r){"use strict";var n=r(1),o=r(102),a=r(76),i=r(72),l=r(22),u=r(18),c=r(21),s=r(6),f=r(3),d=r(27),p=r(75),h=p.IteratorPrototype,g=p.BUGGY_SAFARI_ITERATORS,v=s("iterator"),m="keys",y="values",b="entries",w=function(){return this};e.exports=function(e,t,r,s,p,k,E){o(r,t,s);var x,S,_,T=function(e){if(e===p&&N)return N;if(!g&&e in P)return P[e];switch(e){case m:case y:case b:return function(){return new r(this,e)}}return function(){return new r(this)}},C=t+" Iterator",O=!1,P=e.prototype,R=P[v]||P["@@iterator"]||p&&P[p],N=!g&&R||T(p),L="Array"==t&&P.entries||R;if(L&&(x=a(L.call(new e)),h!==Object.prototype&&x.next&&(f||a(x)===h||(i?i(x,h):"function"!=typeof x[v]&&u(x,v,w)),l(x,C,!0,!0),f&&(d[C]=w))),p==y&&R&&R.name!==y&&(O=!0,N=function(){return R.call(this)}),f&&!E||P[v]===N||u(P,v,N),d[t]=N,p)if(S={values:T(y),keys:k?N:T(m),entries:T(b)},E)for(_ in S)(g||O||!(_ in P))&&c(P,_,S[_]);else n({target:t,proto:!0,forced:g||O},S);return S}},function(e,t,r){var n=r(2),o=r(45);e.exports=function(e){var t=o(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return n(t.call(e))}},function(e,t,r){var n=r(36);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){"use strict";var n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var r,l,u=i(e),c=1;c<arguments.length;c++){for(var s in r=Object(arguments[c]))o.call(r,s)&&(u[s]=r[s]);if(n){l=n(r);for(var f=0;f<l.length;f++)a.call(r,l[f])&&(u[l[f]]=r[l[f]])}}return u}},function(e,t){var r,n,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function l(e){if(r===setTimeout)return setTimeout(e,0);if((r===a||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"===typeof setTimeout?setTimeout:a}catch(e){r=a}try{n="function"===typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var u,c=[],s=!1,f=-1;function d(){s&&u&&(s=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!s){var e=l(d);s=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,s=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function g(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new h(e,t)),1!==c.length||s||l(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=g,o.addListener=g,o.once=g,o.off=g,o.removeListener=g,o.removeAllListeners=g,o.emit=g,o.prependListener=g,o.prependOnceListener=g,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,r){var n=r(191);e.exports=function(e,t){var r;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=n(e))||t&&e&&"number"===typeof e.length){r&&(e=r);var o=0,a=function(){};return{s:a,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return l=e.done,e},e:function(e){u=!0,i=e},f:function(){try{l||null==r.return||r.return()}finally{if(u)throw i}}}}},function(e,t,r){"use strict";!function e(){if("undefined"!==typeof{}&&"function"===typeof{}.checkDCE)try{({}).checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(184)},function(e,t,r){"use strict";var n=r(1),o=r(8),a=r(64),i=r(21),l=r(65),u=r(4),c=r(70),s=r(13),f=r(12),d=r(71),p=r(22),h=r(97);e.exports=function(e,t,r){var g=-1!==e.indexOf("Map"),v=-1!==e.indexOf("Weak"),m=g?"set":"add",y=o[e],b=y&&y.prototype,w=y,k={},E=function(e){var t=b[e];i(b,e,"add"==e?function(e){return t.call(this,0===e?0:e),this}:"delete"==e?function(e){return!(v&&!s(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return v&&!s(e)?void 0:t.call(this,0===e?0:e)}:"has"==e?function(e){return!(v&&!s(e))&&t.call(this,0===e?0:e)}:function(e,r){return t.call(this,0===e?0:e,r),this})};if(a(e,"function"!=typeof y||!(v||b.forEach&&!f((function(){(new y).entries().next()})))))w=r.getConstructor(t,e,g,m),l.REQUIRED=!0;else if(a(e,!0)){var x=new w,S=x[m](v?{}:-0,1)!=x,_=f((function(){x.has(1)})),T=d((function(e){new y(e)})),C=!v&&f((function(){for(var e=new y,t=5;t--;)e[m](t,t);return!e.has(-0)}));T||((w=t((function(t,r){c(t,w,e);var n=h(new y,t,w);return void 0!=r&&u(r,n[m],{that:n,AS_ENTRIES:g}),n}))).prototype=b,b.constructor=w),(_||C)&&(E("delete"),E("has"),g&&E("get")),(C||S)&&E(m),v&&b.clear&&delete b.clear}return k[e]=w,n({global:!0,forced:w!=y},k),p(w,e),v||r.setStrong(w,e,g),w}},function(e,t,r){"use strict";var n={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,a=o&&!n.call({1:2},1);t.f=a?function(e){var t=o(this,e);return!!t&&t.enumerable}:n},function(e,t,r){var n=r(12),o=r(36),a="".split;e.exports=n((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==o(e)?a.call(e,""):Object(e)}:Object},function(e,t,r){var n=r(16),o=r(12),a=r(58);e.exports=!n&&!o((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(e,t,r){var n=r(8),o=r(13),a=n.document,i=o(a)&&o(a.createElement);e.exports=function(e){return i?a.createElement(e):{}}},function(e,t,r){var n=r(39),o=Function.toString;"function"!=typeof n.inspectSource&&(n.inspectSource=function(e){return o.call(e)}),e.exports=n.inspectSource},function(e,t,r){var n=r(11),o=r(93),a=r(35),i=r(14);e.exports=function(e,t){for(var r=o(t),l=i.f,u=a.f,c=0;c<r.length;c++){var s=r[c];n(e,s)||l(e,s,u(t,s))}}},function(e,t,r){var n=r(8);e.exports=n},function(e,t,r){var n=r(11),o=r(20),a=r(94).indexOf,i=r(25);e.exports=function(e,t){var r,l=o(e),u=0,c=[];for(r in l)!n(i,r)&&n(l,r)&&c.push(r);for(;t.length>u;)n(l,r=t[u++])&&(~a(c,r)||c.push(r));return c}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(12),o=/#|\\.prototype\\./,a=function(e,t){var r=l[i(e)];return r==c||r!=u&&("function"==typeof t?n(t):!!t)},i=a.normalize=function(e){return String(e).replace(o,".").toLowerCase()},l=a.data={},u=a.NATIVE="N",c=a.POLYFILL="P";e.exports=a},function(e,t,r){var n=r(25),o=r(13),a=r(11),i=r(14).f,l=r(31),u=r(96),c=l("meta"),s=0,f=Object.isExtensible||function(){return!0},d=function(e){i(e,c,{value:{objectID:"O"+ ++s,weakData:{}}})},p=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,c)){if(!f(e))return"F";if(!t)return"E";d(e)}return e[c].objectID},getWeakData:function(e,t){if(!a(e,c)){if(!f(e))return!0;if(!t)return!1;d(e)}return e[c].weakData},onFreeze:function(e){return u&&p.REQUIRED&&f(e)&&!a(e,c)&&d(e),e}};n[c]=!0},function(e,t,r){var n=r(6),o=r(27),a=n("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||i[a]===e)}},function(e,t,r){var n=r(44);e.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,r){var n=r(46),o=r(36),a=r(6)("toStringTag"),i="Arguments"==o(function(){return arguments}());e.exports=n?o:function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),a))?r:i?o(t):"Object"==(n=o(t))&&"function"==typeof t.callee?"Arguments":n}},function(e,t,r){var n=r(2);e.exports=function(e){var t=e.return;if(void 0!==t)return n(t.call(e)).value}},function(e,t){e.exports=function(e,t,r){if(!(e instanceof t))throw TypeError("Incorrect "+(r?r+" ":"")+"invocation");return e}},function(e,t,r){var n=r(6)("iterator"),o=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){o=!0}};i[n]=function(){return this},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var a={};a[n]=function(){return{next:function(){return{done:r=!0}}}},e(a)}catch(e){}return r}},function(e,t,r){var n=r(2),o=r(98);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(r,[]),t=r instanceof Array}catch(e){}return function(r,a){return n(r),o(a),t?e.call(r,a):r.__proto__=a,r}}():void 0)},function(e,t,r){"use strict";var n=r(14).f,o=r(32),a=r(101),i=r(7),l=r(70),u=r(4),c=r(47),s=r(104),f=r(16),d=r(65).fastKey,p=r(24),h=p.set,g=p.getterFor;e.exports={getConstructor:function(e,t,r,c){var s=e((function(e,n){l(e,s,t),h(e,{type:t,index:o(null),first:void 0,last:void 0,size:0}),f||(e.size=0),void 0!=n&&u(n,e[c],{that:e,AS_ENTRIES:r})})),p=g(t),v=function(e,t,r){var n,o,a=p(e),i=m(e,t);return i?i.value=r:(a.last=i={index:o=d(t,!0),key:t,value:r,previous:n=a.last,next:void 0,removed:!1},a.first||(a.first=i),n&&(n.next=i),f?a.size++:e.size++,"F"!==o&&(a.index[o]=i)),e},m=function(e,t){var r,n=p(e),o=d(t);if("F"!==o)return n.index[o];for(r=n.first;r;r=r.next)if(r.key==t)return r};return a(s.prototype,{clear:function(){for(var e=p(this),t=e.index,r=e.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete t[r.index],r=r.next;e.first=e.last=void 0,f?e.size=0:this.size=0},delete:function(e){var t=this,r=p(t),n=m(t,e);if(n){var o=n.next,a=n.previous;delete r.index[n.index],n.removed=!0,a&&(a.next=o),o&&(o.previous=a),r.first==n&&(r.first=o),r.last==n&&(r.last=a),f?r.size--:t.size--}return!!n},forEach:function(e){for(var t,r=p(this),n=i(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.next:r.first;)for(n(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!m(this,e)}}),a(s.prototype,r?{get:function(e){var t=m(this,e);return t&&t.value},set:function(e,t){return v(this,0===e?0:e,t)}}:{add:function(e){return v(this,e=0===e?0:e,e)}}),f&&n(s.prototype,"size",{get:function(){return p(this).size}}),s},setStrong:function(e,t,r){var n=t+" Iterator",o=g(t),a=g(n);c(e,t,(function(e,t){h(this,{type:n,target:e,state:o(e),kind:t,last:void 0})}),(function(){for(var e=a(this),t=e.kind,r=e.last;r&&r.removed;)r=r.previous;return e.target&&(e.last=r=r?r.next:e.state.first)?"keys"==t?{value:r.key,done:!1}:"values"==t?{value:r.value,done:!1}:{value:[r.key,r.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),r?"entries":"values",!r,!0),s(t)}}},function(e,t,r){var n=r(62),o=r(43);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t,r){"use strict";var n,o,a,i=r(12),l=r(76),u=r(18),c=r(11),s=r(6),f=r(3),d=s("iterator"),p=!1;[].keys&&("next"in(a=[].keys())?(o=l(l(a)))!==Object.prototype&&(n=o):p=!0);var h=void 0==n||i((function(){var e={};return n[d].call(e)!==e}));h&&(n={}),f&&!h||c(n,d)||u(n,d,(function(){return this})),e.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:p}},function(e,t,r){var n=r(11),o=r(28),a=r(30),i=r(103),l=a("IE_PROTO"),u=Object.prototype;e.exports=i?Object.getPrototypeOf:function(e){return e=o(e),n(e,l)?e[l]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?u:null}},function(e,t,r){var n=r(46),o=r(21),a=r(105);n||o(Object.prototype,"toString",a,{unsafe:!0})},function(e,t,r){"use strict";var n=r(107).charAt,o=r(24),a=r(47),i="String Iterator",l=o.set,u=o.getterFor(i);a(String,"String",(function(e){l(this,{type:i,string:String(e),index:0})}),(function(){var e,t=u(this),r=t.string,o=t.index;return o>=r.length?{value:void 0,done:!0}:(e=n(r,o),t.index+=e.length,{value:e,done:!1})}))},function(e,t,r){"use strict";var n=r(2),o=r(5);e.exports=function(){for(var e,t=n(this),r=o(t.delete),a=!0,i=0,l=arguments.length;i<l;i++)e=r.call(t,arguments[i]),a=a&&e;return!!a}},function(e,t,r){"use strict";var n=r(5),o=r(7),a=r(4);e.exports=function(e){var t,r,i,l,u=arguments.length,c=u>1?arguments[1]:void 0;return n(this),(t=void 0!==c)&&n(c),void 0==e?new this:(r=[],t?(i=0,l=o(c,u>2?arguments[2]:void 0,2),a(e,(function(e){r.push(l(e,i++))}))):a(e,r.push,{that:r}),new this(r))}},function(e,t,r){"use strict";e.exports=function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}},function(e,t,r){var n=r(6);t.f=n},function(e,t,r){var n=r(13),o=r(49),a=r(6)("species");e.exports=function(e,t){var r;return o(e)&&("function"!=typeof(r=e.constructor)||r!==Array&&!o(r.prototype)?n(r)&&null===(r=r[a])&&(r=void 0):r=void 0),new(void 0===r?Array:r)(0===t?0:t)}},function(e,t,r){"use strict";var n=r(29),o=r(14),a=r(23);e.exports=function(e,t,r){var i=n(t);i in e?o.f(e,i,a(0,r)):e[i]=r}},function(e,t,r){var n,o,a=r(8),i=r(168),l=a.process,u=l&&l.versions,c=u&&u.v8;c?o=(n=c.split("."))[0]+n[1]:i&&(!(n=i.match(/Edge\\/(\\d+)/))||n[1]>=74)&&(n=i.match(/Chrome\\/(\\d+)/))&&(o=n[1]),e.exports=o&&+o},function(e,t,r){"use strict";var n=r(178);function o(){}var a=null,i={};function l(e){if("object"!==typeof this)throw new TypeError("Promises must be constructed via new");if("function"!==typeof e)throw new TypeError("Promise constructor\'s argument is not a function");this._U=0,this._V=0,this._W=null,this._X=null,e!==o&&p(e,this)}function u(e,t){for(;3===e._V;)e=e._W;if(l._Y&&l._Y(e),0===e._V)return 0===e._U?(e._U=1,void(e._X=t)):1===e._U?(e._U=2,void(e._X=[e._X,t])):void e._X.push(t);!function(e,t){n((function(){var r=1===e._V?t.onFulfilled:t.onRejected;if(null!==r){var n=function(e,t){try{return e(t)}catch(e){return a=e,i}}(r,e._W);n===i?s(t.promise,a):c(t.promise,n)}else 1===e._V?c(t.promise,e._W):s(t.promise,e._W)}))}(e,t)}function c(e,t){if(t===e)return s(e,new TypeError("A promise cannot be resolved with itself."));if(t&&("object"===typeof t||"function"===typeof t)){var r=function(e){try{return e.then}catch(e){return a=e,i}}(t);if(r===i)return s(e,a);if(r===e.then&&t instanceof l)return e._V=3,e._W=t,void f(e);if("function"===typeof r)return void p(r.bind(t),e)}e._V=1,e._W=t,f(e)}function s(e,t){e._V=2,e._W=t,l._Z&&l._Z(e,t),f(e)}function f(e){if(1===e._U&&(u(e,e._X),e._X=null),2===e._U){for(var t=0;t<e._X.length;t++)u(e,e._X[t]);e._X=null}}function d(e,t,r){this.onFulfilled="function"===typeof e?e:null,this.onRejected="function"===typeof t?t:null,this.promise=r}function p(e,t){var r=!1,n=function(e,t,r){try{e(t,r)}catch(e){return a=e,i}}(e,(function(e){r||(r=!0,c(t,e))}),(function(e){r||(r=!0,s(t,e))}));r||n!==i||(r=!0,s(t,a))}e.exports=l,l._Y=null,l._Z=null,l._0=o,l.prototype.then=function(e,t){if(this.constructor!==l)return function(e,t,r){return new e.constructor((function(n,a){var i=new l(o);i.then(n,a),u(e,new d(t,r,i))}))}(this,e,t);var r=new l(o);return u(this,new d(e,t,r)),r}},function(e,t,r){var n=r(204),o={};for(var a in n)n.hasOwnProperty(a)&&(o[n[a]]=a);var i=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var l in i)if(i.hasOwnProperty(l)){if(!("channels"in i[l]))throw new Error("missing channels property: "+l);if(!("labels"in i[l]))throw new Error("missing channel labels property: "+l);if(i[l].labels.length!==i[l].channels)throw new Error("channel and label counts mismatch: "+l);var u=i[l].channels,c=i[l].labels;delete i[l].channels,delete i[l].labels,Object.defineProperty(i[l],"channels",{value:u}),Object.defineProperty(i[l],"labels",{value:c})}i.rgb.hsl=function(e){var t,r,n=e[0]/255,o=e[1]/255,a=e[2]/255,i=Math.min(n,o,a),l=Math.max(n,o,a),u=l-i;return l===i?t=0:n===l?t=(o-a)/u:o===l?t=2+(a-n)/u:a===l&&(t=4+(n-o)/u),(t=Math.min(60*t,360))<0&&(t+=360),r=(i+l)/2,[t,100*(l===i?0:r<=.5?u/(l+i):u/(2-l-i)),100*r]},i.rgb.hsv=function(e){var t,r,n,o,a,i=e[0]/255,l=e[1]/255,u=e[2]/255,c=Math.max(i,l,u),s=c-Math.min(i,l,u),f=function(e){return(c-e)/6/s+.5};return 0===s?o=a=0:(a=s/c,t=f(i),r=f(l),n=f(u),i===c?o=n-r:l===c?o=1/3+t-n:u===c&&(o=2/3+r-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*a,100*c]},i.rgb.hwb=function(e){var t=e[0],r=e[1],n=e[2];return[i.rgb.hsl(e)[0],100*(1/255*Math.min(t,Math.min(r,n))),100*(n=1-1/255*Math.max(t,Math.max(r,n)))]},i.rgb.cmyk=function(e){var t,r=e[0]/255,n=e[1]/255,o=e[2]/255;return[100*((1-r-(t=Math.min(1-r,1-n,1-o)))/(1-t)||0),100*((1-n-t)/(1-t)||0),100*((1-o-t)/(1-t)||0),100*t]},i.rgb.keyword=function(e){var t=o[e];if(t)return t;var r,a,i,l=1/0;for(var u in n)if(n.hasOwnProperty(u)){var c=n[u],s=(a=e,i=c,Math.pow(a[0]-i[0],2)+Math.pow(a[1]-i[1],2)+Math.pow(a[2]-i[2],2));s<l&&(l=s,r=u)}return r},i.keyword.rgb=function(e){return n[e]},i.rgb.xyz=function(e){var t=e[0]/255,r=e[1]/255,n=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)+.1805*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)),100*(.2126*t+.7152*r+.0722*n),100*(.0193*t+.1192*r+.9505*n)]},i.rgb.lab=function(e){var t=i.rgb.xyz(e),r=t[0],n=t[1],o=t[2];return n/=100,o/=108.883,r=(r/=95.047)>.008856?Math.pow(r,1/3):7.787*r+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(r-n),200*(n-(o=o>.008856?Math.pow(o,1/3):7.787*o+16/116))]},i.hsl.rgb=function(e){var t,r,n,o,a,i=e[0]/360,l=e[1]/100,u=e[2]/100;if(0===l)return[a=255*u,a,a];t=2*u-(r=u<.5?u*(1+l):u+l-u*l),o=[0,0,0];for(var c=0;c<3;c++)(n=i+1/3*-(c-1))<0&&n++,n>1&&n--,a=6*n<1?t+6*(r-t)*n:2*n<1?r:3*n<2?t+(r-t)*(2/3-n)*6:t,o[c]=255*a;return o},i.hsl.hsv=function(e){var t=e[0],r=e[1]/100,n=e[2]/100,o=r,a=Math.max(n,.01);return r*=(n*=2)<=1?n:2-n,o*=a<=1?a:2-a,[t,100*(0===n?2*o/(a+o):2*r/(n+r)),100*((n+r)/2)]},i.hsv.rgb=function(e){var t=e[0]/60,r=e[1]/100,n=e[2]/100,o=Math.floor(t)%6,a=t-Math.floor(t),i=255*n*(1-r),l=255*n*(1-r*a),u=255*n*(1-r*(1-a));switch(n*=255,o){case 0:return[n,u,i];case 1:return[l,n,i];case 2:return[i,n,u];case 3:return[i,l,n];case 4:return[u,i,n];case 5:return[n,i,l]}},i.hsv.hsl=function(e){var t,r,n,o=e[0],a=e[1]/100,i=e[2]/100,l=Math.max(i,.01);return n=(2-a)*i,r=a*l,[o,100*(r=(r/=(t=(2-a)*l)<=1?t:2-t)||0),100*(n/=2)]},i.hwb.rgb=function(e){var t,r,n,o,a,i,l,u=e[0]/360,c=e[1]/100,s=e[2]/100,f=c+s;switch(f>1&&(c/=f,s/=f),n=6*u-(t=Math.floor(6*u)),0!==(1&t)&&(n=1-n),o=c+n*((r=1-s)-c),t){default:case 6:case 0:a=r,i=o,l=c;break;case 1:a=o,i=r,l=c;break;case 2:a=c,i=r,l=o;break;case 3:a=c,i=o,l=r;break;case 4:a=o,i=c,l=r;break;case 5:a=r,i=c,l=o}return[255*a,255*i,255*l]},i.cmyk.rgb=function(e){var t=e[0]/100,r=e[1]/100,n=e[2]/100,o=e[3]/100;return[255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o))]},i.xyz.rgb=function(e){var t,r,n,o=e[0]/100,a=e[1]/100,i=e[2]/100;return r=-.9689*o+1.8758*a+.0415*i,n=.0557*o+-.204*a+1.057*i,t=(t=3.2406*o+-1.5372*a+-.4986*i)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,[255*(t=Math.min(Math.max(0,t),1)),255*(r=Math.min(Math.max(0,r),1)),255*(n=Math.min(Math.max(0,n),1))]},i.xyz.lab=function(e){var t=e[0],r=e[1],n=e[2];return r/=100,n/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116)-16,500*(t-r),200*(r-(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116))]},i.lab.xyz=function(e){var t,r,n,o=e[0];t=e[1]/500+(r=(o+16)/116),n=r-e[2]/200;var a=Math.pow(r,3),i=Math.pow(t,3),l=Math.pow(n,3);return r=a>.008856?a:(r-16/116)/7.787,t=i>.008856?i:(t-16/116)/7.787,n=l>.008856?l:(n-16/116)/7.787,[t*=95.047,r*=100,n*=108.883]},i.lab.lch=function(e){var t,r=e[0],n=e[1],o=e[2];return(t=360*Math.atan2(o,n)/2/Math.PI)<0&&(t+=360),[r,Math.sqrt(n*n+o*o),t]},i.lch.lab=function(e){var t,r=e[0],n=e[1];return t=e[2]/360*2*Math.PI,[r,n*Math.cos(t),n*Math.sin(t)]},i.rgb.ansi16=function(e){var t=e[0],r=e[1],n=e[2],o=1 in arguments?arguments[1]:i.rgb.hsv(e)[2];if(0===(o=Math.round(o/50)))return 30;var a=30+(Math.round(n/255)<<2|Math.round(r/255)<<1|Math.round(t/255));return 2===o&&(a+=60),a},i.hsv.ansi16=function(e){return i.rgb.ansi16(i.hsv.rgb(e),e[2])},i.rgb.ansi256=function(e){var t=e[0],r=e[1],n=e[2];return t===r&&r===n?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(r/255*5)+Math.round(n/255*5)},i.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var r=.5*(1+~~(e>50));return[(1&t)*r*255,(t>>1&1)*r*255,(t>>2&1)*r*255]},i.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var r;return e-=16,[Math.floor(e/36)/5*255,Math.floor((r=e%36)/6)/5*255,r%6/5*255]},i.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},i.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var r=t[0];3===t[0].length&&(r=r.split("").map((function(e){return e+e})).join(""));var n=parseInt(r,16);return[n>>16&255,n>>8&255,255&n]},i.rgb.hcg=function(e){var t,r=e[0]/255,n=e[1]/255,o=e[2]/255,a=Math.max(Math.max(r,n),o),i=Math.min(Math.min(r,n),o),l=a-i;return t=l<=0?0:a===r?(n-o)/l%6:a===n?2+(o-r)/l:4+(r-n)/l+4,t/=6,[360*(t%=1),100*l,100*(l<1?i/(1-l):0)]},i.hsl.hcg=function(e){var t=e[1]/100,r=e[2]/100,n=1,o=0;return(n=r<.5?2*t*r:2*t*(1-r))<1&&(o=(r-.5*n)/(1-n)),[e[0],100*n,100*o]},i.hsv.hcg=function(e){var t=e[1]/100,r=e[2]/100,n=t*r,o=0;return n<1&&(o=(r-n)/(1-n)),[e[0],100*n,100*o]},i.hcg.rgb=function(e){var t=e[0]/360,r=e[1]/100,n=e[2]/100;if(0===r)return[255*n,255*n,255*n];var o,a=[0,0,0],i=t%1*6,l=i%1,u=1-l;switch(Math.floor(i)){case 0:a[0]=1,a[1]=l,a[2]=0;break;case 1:a[0]=u,a[1]=1,a[2]=0;break;case 2:a[0]=0,a[1]=1,a[2]=l;break;case 3:a[0]=0,a[1]=u,a[2]=1;break;case 4:a[0]=l,a[1]=0,a[2]=1;break;default:a[0]=1,a[1]=0,a[2]=u}return o=(1-r)*n,[255*(r*a[0]+o),255*(r*a[1]+o),255*(r*a[2]+o)]},i.hcg.hsv=function(e){var t=e[1]/100,r=t+e[2]/100*(1-t),n=0;return r>0&&(n=t/r),[e[0],100*n,100*r]},i.hcg.hsl=function(e){var t=e[1]/100,r=e[2]/100*(1-t)+.5*t,n=0;return r>0&&r<.5?n=t/(2*r):r>=.5&&r<1&&(n=t/(2*(1-r))),[e[0],100*n,100*r]},i.hcg.hwb=function(e){var t=e[1]/100,r=t+e[2]/100*(1-t);return[e[0],100*(r-t),100*(1-r)]},i.hwb.hcg=function(e){var t=e[1]/100,r=1-e[2]/100,n=r-t,o=0;return n<1&&(o=(r-n)/(1-n)),[e[0],100*n,100*o]},i.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},i.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},i.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},i.gray.hsl=i.gray.hsv=function(e){return[0,0,e[0]]},i.gray.hwb=function(e){return[0,100,e[0]]},i.gray.cmyk=function(e){return[0,0,0,e[0]]},i.gray.lab=function(e){return[e[0],0,0]},i.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),r=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(r.length)+r},i.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(187);t.XmlEntities=n.XmlEntities;var o=r(188);t.Html4Entities=o.Html4Entities;var a=r(189);t.Html5Entities=a.Html5Entities,t.AllHtmlEntities=a.Html5Entities},function(e,t,r){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0}),t.codeFrameColumns=c,t.default=function(t,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!a){a=!0;var i="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";if(e.emitWarning)e.emitWarning(i,"DeprecationWarning");else{var l=new Error(i);l.name="DeprecationWarning",console.warn(new Error(i))}}var u={start:{column:n=Math.max(n,0),line:r}};return c(t,u,o)};var n=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=n?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}r.default=e,t&&t.set(e,r);return r}(r(190));function o(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}var a=!1;function i(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}var l=/\\r\\n|[\\n\\r\\u2028\\u2029]/;function u(e,t,r){var n=Object.assign({column:0,line:-1},e.start),o=Object.assign({},n,e.end),a=r||{},i=a.linesAbove,l=void 0===i?2:i,u=a.linesBelow,c=void 0===u?3:u,s=n.line,f=n.column,d=o.line,p=o.column,h=Math.max(s-(l+1),0),g=Math.min(t.length,d+c);-1===s&&(h=0),-1===d&&(g=t.length);var v=d-s,m={};if(v)for(var y=0;y<=v;y++){var b=y+s;if(f)if(0===y){var w=t[b-1].length;m[b]=[f,w-f+1]}else if(y===v)m[b]=[0,p];else{var k=t[b-y].length;m[b]=[0,k]}else m[b]=!0}else m[s]=f===p?!f||[f,0]:[f,p-f];return{start:h,end:g,markerLines:m}}function c(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=(r.highlightCode||r.forceColor)&&(0,n.shouldHighlight)(r),a=(0,n.getChalk)(r),c=i(a),s=function(e,t){return o?e(t):t},f=e.split(l),d=u(t,f,r),p=d.start,h=d.end,g=d.markerLines,v=t.start&&"number"===typeof t.start.column,m=String(h).length,y=o?(0,n.default)(e,r):e,b=y.split(l).slice(p,h).map((function(e,t){var n=p+1+t,o=" ".concat(n).slice(-m),a=" ".concat(o," | "),i=g[n],l=!g[n+1];if(i){var u="";if(Array.isArray(i)){var f=e.slice(0,Math.max(i[0]-1,0)).replace(/[^\\t]/g," "),d=i[1]||1;u=["\\n ",s(c.gutter,a.replace(/\\d/g," ")),f,s(c.marker,"^").repeat(d)].join(""),l&&r.message&&(u+=" "+s(c.message,r.message))}return[s(c.marker,">"),s(c.gutter,a),e,u].join("")}return" ".concat(s(c.gutter,a)).concat(e)})).join("\\n");return r.message&&!v&&(b="".concat(" ".repeat(m+1)).concat(r.message,"\\n").concat(b)),o?a.reset(b):b}}).call(this,r(51))},function(e,t,r){"use strict";r(91),r(77),r(106),r(78),r(108),r(109),r(110),r(111),r(112),r(113),r(114),r(115),r(117),r(118),r(119),r(120),r(121),r(122),r(123),r(124),r(125),r(126),r(128),r(129),r(130),r(131),r(132),r(133),r(134),r(135),r(136),r(137),r(138),r(139),r(140),r(141),r(142),r(143),r(144),r(145),r(149),r(181).polyfill()},function(e,t,r){"use strict";var n=r(54),o=r(73);e.exports=n("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),o)},function(e,t,r){var n=r(8),o=r(59),a=n.WeakMap;e.exports="function"===typeof a&&/native code/.test(o(a))},function(e,t,r){var n=r(10),o=r(41),a=r(63),i=r(2);e.exports=n("Reflect","ownKeys")||function(e){var t=o.f(i(e)),r=a.f;return r?t.concat(r(e)):t}},function(e,t,r){var n=r(20),o=r(26),a=r(95),i=function(e){return function(t,r,i){var l,u=n(t),c=o(u.length),s=a(i,c);if(e&&r!=r){for(;c>s;)if((l=u[s++])!=l)return!0}else for(;c>s;s++)if((e||s in u)&&u[s]===r)return e||s||0;return!e&&-1}};e.exports={includes:i(!0),indexOf:i(!1)}},function(e,t,r){var n=r(42),o=Math.max,a=Math.min;e.exports=function(e,t){var r=n(e);return r<0?o(r+t,0):a(r,t)}},function(e,t,r){var n=r(12);e.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,r){var n=r(13),o=r(72);e.exports=function(e,t,r){var a,i;return o&&"function"==typeof(a=t.constructor)&&a!==r&&n(i=a.prototype)&&i!==r.prototype&&o(e,i),e}},function(e,t,r){var n=r(13);e.exports=function(e){if(!n(e)&&null!==e)throw TypeError("Can\'t set "+String(e)+" as a prototype");return e}},function(e,t,r){var n=r(16),o=r(14),a=r(2),i=r(74);e.exports=n?Object.defineProperties:function(e,t){a(e);for(var r,n=i(t),l=n.length,u=0;l>u;)o.f(e,r=n[u++],t[r]);return e}},function(e,t,r){var n=r(10);e.exports=n("document","documentElement")},function(e,t,r){var n=r(21);e.exports=function(e,t,r){for(var o in t)n(e,o,t[o],r);return e}},function(e,t,r){"use strict";var n=r(75).IteratorPrototype,o=r(32),a=r(23),i=r(22),l=r(27),u=function(){return this};e.exports=function(e,t,r){var c=t+" Iterator";return e.prototype=o(n,{next:a(1,r)}),i(e,c,!1,!0),l[c]=u,e}},function(e,t,r){var n=r(12);e.exports=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,r){"use strict";var n=r(10),o=r(14),a=r(6),i=r(16),l=a("species");e.exports=function(e){var t=n(e),r=o.f;i&&t&&!t[l]&&r(t,l,{configurable:!0,get:function(){return this}})}},function(e,t,r){"use strict";var n=r(46),o=r(68);e.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},function(e,t,r){"use strict";var n=r(54),o=r(73);e.exports=n("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),o)},function(e,t,r){var n=r(42),o=r(37),a=function(e){return function(t,r){var a,i,l=String(o(t)),u=n(r),c=l.length;return u<0||u>=c?e?"":void 0:(a=l.charCodeAt(u))<55296||a>56319||u+1===c||(i=l.charCodeAt(u+1))<56320||i>57343?e?l.charAt(u):a:e?l.slice(u,u+2):i-56320+(a-55296<<10)+65536}};e.exports={codeAt:a(!1),charAt:a(!0)}},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(79);n({target:"Map",proto:!0,real:!0,forced:o},{deleteAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{every:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return!u(r,(function(e,r,o){if(!n(r,e,t))return o()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{filter:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){n(r,e,t)&&d.call(o,e,r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{find:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o(r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{findKey:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o(e)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){r(1)({target:"Map",stat:!0},{from:r(80)})},function(e,t,r){"use strict";var n=r(1),o=r(4),a=r(5);n({target:"Map",stat:!0},{groupBy:function(e,t){var r=new this;a(t);var n=a(r.has),i=a(r.get),l=a(r.set);return o(e,(function(e){var o=t(e);n.call(r,o)?i.call(r,o).push(e):l.call(r,o,[e])})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(15),l=r(116),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{includes:function(e){return u(i(a(this)),(function(t,r,n){if(l(r,e))return n()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,r){"use strict";var n=r(1),o=r(4),a=r(5);n({target:"Map",stat:!0},{keyBy:function(e,t){var r=new this;a(t);var n=a(r.set);return o(e,(function(e){n.call(r,t(e),e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(15),l=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{keyOf:function(e){return l(i(a(this)),(function(t,r,n){if(r===e)return n(t)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{mapKeys:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){d.call(o,n(r,e,t),r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{mapValues:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){d.call(o,e,n(r,e,t))}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{merge:function(e){for(var t=a(this),r=i(t.set),n=0;n<arguments.length;)l(arguments[n++],r,{that:t,AS_ENTRIES:!0});return t}})},function(e,t,r){r(1)({target:"Map",stat:!0},{of:r(81)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{reduce:function(e){var t=a(this),r=l(t),n=arguments.length<2,o=n?void 0:arguments[1];if(i(e),u(r,(function(r,a){n?(n=!1,o=a):o=e(o,a,r,t)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),n)throw TypeError("Reduce of empty map with no initial value");return o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{some:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5);n({target:"Map",proto:!0,real:!0,forced:o},{update:function(e,t){var r=a(this),n=arguments.length;i(t);var o=r.has(e);if(!o&&n<3)throw TypeError("Updating absent value");var l=o?r.get(e):i(n>2?arguments[2]:void 0)(e,r);return r.set(e,t(l,e,r)),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(127);n({target:"Set",proto:!0,real:!0,forced:o},{addAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(2),o=r(5);e.exports=function(){for(var e=n(this),t=o(e.add),r=0,a=arguments.length;r<a;r++)t.call(e,arguments[r]);return e}},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(79);n({target:"Set",proto:!0,real:!0,forced:o},{deleteAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{difference:function(e){var t=i(this),r=new(u(t,a("Set")))(t),n=l(r.delete);return c(e,(function(e){n.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{every:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return!u(r,(function(e,r){if(!n(e,e,t))return r()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(19),f=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{filter:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Set"))),d=l(o.add);return f(r,(function(e){n(e,e,t)&&d.call(o,e)}),{IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{find:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r){if(n(e,e,t))return r(e)}),{IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){r(1)({target:"Set",stat:!0},{from:r(80)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{intersection:function(e){var t=i(this),r=new(u(t,a("Set"))),n=l(t.has),o=l(r.add);return c(e,(function(e){n.call(t,e)&&o.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isDisjointFrom:function(e){var t=a(this),r=i(t.has);return!l(e,(function(e,n){if(!0===r.call(t,e))return n()}),{INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(48),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isSubsetOf:function(e){var t=u(this),r=i(e),n=r.has;return"function"!=typeof n&&(r=new(a("Set"))(e),n=l(r.has)),!c(t,(function(e,t){if(!1===n.call(r,e))return t()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isSupersetOf:function(e){var t=a(this),r=i(t.has);return!l(e,(function(e,n){if(!1===r.call(t,e))return n()}),{INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(19),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{join:function(e){var t=a(this),r=i(t),n=void 0===e?",":String(e),o=[];return l(r,o.push,{that:o,IS_ITERATOR:!0}),o.join(n)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(19),f=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{map:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Set"))),d=l(o.add);return f(r,(function(e){d.call(o,n(e,e,t))}),{IS_ITERATOR:!0}),o}})},function(e,t,r){r(1)({target:"Set",stat:!0},{of:r(81)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{reduce:function(e){var t=a(this),r=l(t),n=arguments.length<2,o=n?void 0:arguments[1];if(i(e),u(r,(function(r){n?(n=!1,o=r):o=e(o,r,r,t)}),{IS_ITERATOR:!0}),n)throw TypeError("Reduce of empty set with no initial value");return o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{some:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r){if(n(e,e,t))return r()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{symmetricDifference:function(e){var t=i(this),r=new(u(t,a("Set")))(t),n=l(r.delete),o=l(r.add);return c(e,(function(e){n.call(r,e)||o.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{union:function(e){var t=i(this),r=new(u(t,a("Set")))(t);return c(e,l(r.add),{that:r}),r}})},function(e,t,r){var n=r(8),o=r(146),a=r(147),i=r(18),l=r(6),u=l("iterator"),c=l("toStringTag"),s=a.values;for(var f in o){var d=n[f],p=d&&d.prototype;if(p){if(p[u]!==s)try{i(p,u,s)}catch(e){p[u]=s}if(p[c]||i(p,c,f),o[f])for(var h in a)if(p[h]!==a[h])try{i(p,h,a[h])}catch(e){p[h]=a[h]}}}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,r){"use strict";var n=r(20),o=r(148),a=r(27),i=r(24),l=r(47),u="Array Iterator",c=i.set,s=i.getterFor(u);e.exports=l(Array,"Array",(function(e,t){c(this,{type:u,target:n(e),index:0,kind:t})}),(function(){var e=s(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:n,done:!1}:"values"==r?{value:t[n],done:!1}:{value:[n,t[n]],done:!1}}),"values"),a.Arguments=a.Array,o("keys"),o("values"),o("entries")},function(e,t,r){var n=r(6),o=r(32),a=r(14),i=n("unscopables"),l=Array.prototype;void 0==l[i]&&a.f(l,i,{configurable:!0,value:o(null)}),e.exports=function(e){l[i][e]=!0}},function(e,t,r){"use strict";r(150),r(153),r(154),r(155),r(156),r(157),r(158),r(159),r(160),r(161),r(162),r(163),r(164),r(165),r(166),r(169),r(172),r(173),r(77),r(78),r(174),r(175),r(176),"undefined"===typeof Promise&&(r(177).enable(),self.Promise=r(179)),"undefined"!==typeof window&&r(180),Object.assign=r(50)},function(e,t,r){"use strict";var n=r(1),o=r(8),a=r(10),i=r(3),l=r(16),u=r(44),c=r(67),s=r(12),f=r(11),d=r(49),p=r(13),h=r(2),g=r(28),v=r(20),m=r(29),y=r(23),b=r(32),w=r(74),k=r(41),E=r(151),x=r(63),S=r(35),_=r(14),T=r(55),C=r(18),O=r(21),P=r(40),R=r(30),N=r(25),L=r(31),A=r(6),I=r(82),j=r(9),M=r(22),D=r(24),q=r(152).forEach,z=R("hidden"),U="Symbol",F=A("toPrimitive"),B=D.set,V=D.getterFor(U),H=Object.prototype,W=o.Symbol,$=a("JSON","stringify"),G=S.f,Q=_.f,Y=E.f,K=T.f,X=P("symbols"),J=P("op-symbols"),Z=P("string-to-symbol-registry"),ee=P("symbol-to-string-registry"),te=P("wks"),re=o.QObject,ne=!re||!re.prototype||!re.prototype.findChild,oe=l&&s((function(){return 7!=b(Q({},"a",{get:function(){return Q(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=G(H,t);n&&delete H[t],Q(e,t,r),n&&e!==H&&Q(H,t,n)}:Q,ae=function(e,t){var r=X[e]=b(W.prototype);return B(r,{type:U,tag:e,description:t}),l||(r.description=t),r},ie=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof W},le=function(e,t,r){e===H&&le(J,t,r),h(e);var n=m(t,!0);return h(r),f(X,n)?(r.enumerable?(f(e,z)&&e[z][n]&&(e[z][n]=!1),r=b(r,{enumerable:y(0,!1)})):(f(e,z)||Q(e,z,y(1,{})),e[z][n]=!0),oe(e,n,r)):Q(e,n,r)},ue=function(e,t){h(e);var r=v(t),n=w(r).concat(de(r));return q(n,(function(t){l&&!ce.call(r,t)||le(e,t,r[t])})),e},ce=function(e){var t=m(e,!0),r=K.call(this,t);return!(this===H&&f(X,t)&&!f(J,t))&&(!(r||!f(this,t)||!f(X,t)||f(this,z)&&this[z][t])||r)},se=function(e,t){var r=v(e),n=m(t,!0);if(r!==H||!f(X,n)||f(J,n)){var o=G(r,n);return!o||!f(X,n)||f(r,z)&&r[z][n]||(o.enumerable=!0),o}},fe=function(e){var t=Y(v(e)),r=[];return q(t,(function(e){f(X,e)||f(N,e)||r.push(e)})),r},de=function(e){var t=e===H,r=Y(t?J:v(e)),n=[];return q(r,(function(e){!f(X,e)||t&&!f(H,e)||n.push(X[e])})),n};(u||(O((W=function(){if(this instanceof W)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=L(e),r=function e(r){this===H&&e.call(J,r),f(this,z)&&f(this[z],t)&&(this[z][t]=!1),oe(this,t,y(1,r))};return l&&ne&&oe(H,t,{configurable:!0,set:r}),ae(t,e)}).prototype,"toString",(function(){return V(this).tag})),O(W,"withoutSetter",(function(e){return ae(L(e),e)})),T.f=ce,_.f=le,S.f=se,k.f=E.f=fe,x.f=de,I.f=function(e){return ae(A(e),e)},l&&(Q(W.prototype,"description",{configurable:!0,get:function(){return V(this).description}}),i||O(H,"propertyIsEnumerable",ce,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:W}),q(w(te),(function(e){j(e)})),n({target:U,stat:!0,forced:!u},{for:function(e){var t=String(e);if(f(Z,t))return Z[t];var r=W(t);return Z[t]=r,ee[r]=t,r},keyFor:function(e){if(!ie(e))throw TypeError(e+" is not a symbol");if(f(ee,e))return ee[e]},useSetter:function(){ne=!0},useSimple:function(){ne=!1}}),n({target:"Object",stat:!0,forced:!u,sham:!l},{create:function(e,t){return void 0===t?b(e):ue(b(e),t)},defineProperty:le,defineProperties:ue,getOwnPropertyDescriptor:se}),n({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:fe,getOwnPropertySymbols:de}),n({target:"Object",stat:!0,forced:s((function(){x.f(1)}))},{getOwnPropertySymbols:function(e){return x.f(g(e))}}),$)&&n({target:"JSON",stat:!0,forced:!u||s((function(){var e=W();return"[null]"!=$([e])||"{}"!=$({a:e})||"{}"!=$(Object(e))}))},{stringify:function(e,t,r){for(var n,o=[e],a=1;arguments.length>a;)o.push(arguments[a++]);if(n=t,(p(t)||void 0!==e)&&!ie(e))return d(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!ie(t))return t}),o[1]=t,$.apply(null,o)}});W.prototype[F]||C(W.prototype,F,W.prototype.valueOf),M(W,U),N[z]=!0},function(e,t,r){var n=r(20),o=r(41).f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==a.call(e)?function(e){try{return o(e)}catch(e){return i.slice()}}(e):o(n(e))}},function(e,t,r){var n=r(7),o=r(56),a=r(28),i=r(26),l=r(83),u=[].push,c=function(e){var t=1==e,r=2==e,c=3==e,s=4==e,f=6==e,d=7==e,p=5==e||f;return function(h,g,v,m){for(var y,b,w=a(h),k=o(w),E=n(g,v,3),x=i(k.length),S=0,_=m||l,T=t?_(h,x):r||d?_(h,0):void 0;x>S;S++)if((p||S in k)&&(b=E(y=k[S],S,w),e))if(t)T[S]=b;else if(b)switch(e){case 3:return!0;case 5:return y;case 6:return S;case 2:u.call(T,y)}else switch(e){case 4:return!1;case 7:u.call(T,y)}return f?-1:c||s?s:T}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterOut:c(7)}},function(e,t,r){"use strict";var n=r(1),o=r(16),a=r(8),i=r(11),l=r(13),u=r(14).f,c=r(60),s=a.Symbol;if(o&&"function"==typeof s&&(!("description"in s.prototype)||void 0!==s().description)){var f={},d=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof d?new s(e):void 0===e?s():s(e);return""===e&&(f[t]=!0),t};c(d,s);var p=d.prototype=s.prototype;p.constructor=d;var h=p.toString,g="Symbol(test)"==String(s("test")),v=/^Symbol\\((.*)\\)[^)]+$/;u(p,"description",{configurable:!0,get:function(){var e=l(this)?this.valueOf():this,t=h.call(e);if(i(f,e))return"";var r=g?t.slice(7,-1):t.replace(v,"$1");return""===r?void 0:r}}),n({global:!0,forced:!0},{Symbol:d})}},function(e,t,r){r(9)("asyncIterator")},function(e,t,r){r(9)("hasInstance")},function(e,t,r){r(9)("isConcatSpreadable")},function(e,t,r){r(9)("iterator")},function(e,t,r){r(9)("match")},function(e,t,r){r(9)("replace")},function(e,t,r){r(9)("search")},function(e,t,r){r(9)("species")},function(e,t,r){r(9)("split")},function(e,t,r){r(9)("toPrimitive")},function(e,t,r){r(9)("toStringTag")},function(e,t,r){r(9)("unscopables")},function(e,t,r){"use strict";var n=r(1),o=r(12),a=r(49),i=r(13),l=r(28),u=r(26),c=r(84),s=r(83),f=r(167),d=r(6),p=r(85),h=d("isConcatSpreadable"),g=9007199254740991,v="Maximum allowed index exceeded",m=p>=51||!o((function(){var e=[];return e[h]=!1,e.concat()[0]!==e})),y=f("concat"),b=function(e){if(!i(e))return!1;var t=e[h];return void 0!==t?!!t:a(e)};n({target:"Array",proto:!0,forced:!m||!y},{concat:function(e){var t,r,n,o,a,i=l(this),f=s(i,0),d=0;for(t=-1,n=arguments.length;t<n;t++)if(b(a=-1===t?i:arguments[t])){if(d+(o=u(a.length))>g)throw TypeError(v);for(r=0;r<o;r++,d++)r in a&&c(f,d,a[r])}else{if(d>=g)throw TypeError(v);c(f,d++,a)}return f.length=d,f}})},function(e,t,r){var n=r(12),o=r(6),a=r(85),i=o("species");e.exports=function(e){return a>=51||!n((function(){var t=[];return(t.constructor={})[i]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,r){var n=r(10);e.exports=n("navigator","userAgent")||""},function(e,t,r){var n=r(1),o=r(170);n({target:"Array",stat:!0,forced:!r(71)((function(e){Array.from(e)}))},{from:o})},function(e,t,r){"use strict";var n=r(7),o=r(28),a=r(171),i=r(66),l=r(26),u=r(84),c=r(45);e.exports=function(e){var t,r,s,f,d,p,h=o(e),g="function"==typeof this?this:Array,v=arguments.length,m=v>1?arguments[1]:void 0,y=void 0!==m,b=c(h),w=0;if(y&&(m=n(m,v>2?arguments[2]:void 0,2)),void 0==b||g==Array&&i(b))for(r=new g(t=l(h.length));t>w;w++)p=y?m(h[w],w):h[w],u(r,w,p);else for(d=(f=b.call(h)).next,r=new g;!(s=d.call(f)).done;w++)p=y?a(f,m,[s.value,w],!0):s.value,u(r,w,p);return r.length=w,r}},function(e,t,r){var n=r(2),o=r(69);e.exports=function(e,t,r,a){try{return a?t(n(r)[0],r[1]):t(r)}catch(t){throw o(e),t}}},function(e,t,r){var n=r(8);r(22)(n.JSON,"JSON",!0)},function(e,t,r){r(22)(Math,"Math",!0)},function(e,t,r){r(9)("dispose")},function(e,t,r){r(9)("observable")},function(e,t,r){r(9)("patternMatch")},function(e,t,r){"use strict";var n=r(86),o=[ReferenceError,TypeError,RangeError],a=!1;function i(){a=!1,n._Y=null,n._Z=null}function l(e,t){return t.some((function(t){return e instanceof t}))}t.disable=i,t.enable=function(e){e=e||{},a&&i();a=!0;var t=0,r=0,u={};function c(t){(e.allRejections||l(u[t].error,e.whitelist||o))&&(u[t].displayId=r++,e.onUnhandled?(u[t].logged=!0,e.onUnhandled(u[t].displayId,u[t].error)):(u[t].logged=!0,function(e,t){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):"),((t&&(t.stack||t))+"").split("\\n").forEach((function(e){console.warn("  "+e)}))}(u[t].displayId,u[t].error)))}n._Y=function(t){2===t._V&&u[t._1]&&(u[t._1].logged?function(t){u[t].logged&&(e.onHandled?e.onHandled(u[t].displayId,u[t].error):u[t].onUnhandled||(console.warn("Promise Rejection Handled (id: "+u[t].displayId+"):"),console.warn(\'  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id \'+u[t].displayId+".")))}(t._1):clearTimeout(u[t._1].timeout),delete u[t._1])},n._Z=function(e,r){0===e._U&&(e._1=t++,u[e._1]={displayId:null,error:r,timeout:setTimeout(c.bind(null,e._1),l(r,o)?100:2e3),logged:!1})}}},function(e,t,r){"use strict";(function(t){function r(e){o.length||(n(),!0),o[o.length]=e}e.exports=r;var n,o=[],a=0;function i(){for(;a<o.length;){var e=a;if(a+=1,o[e].call(),a>1024){for(var t=0,r=o.length-a;t<r;t++)o[t]=o[t+a];o.length-=a,a=0}}o.length=0,a=0,!1}var l,u,c,s="undefined"!==typeof t?t:self,f=s.MutationObserver||s.WebKitMutationObserver;function d(e){return function(){var t=setTimeout(n,0),r=setInterval(n,50);function n(){clearTimeout(t),clearInterval(r),e()}}}"function"===typeof f?(l=1,u=new f(i),c=document.createTextNode(""),u.observe(c,{characterData:!0}),n=function(){l=-l,c.data=l}):n=d(i),r.requestFlush=n,r.makeRequestCallFromTimer=d}).call(this,r(34))},function(e,t,r){"use strict";var n=r(86);e.exports=n;var o=s(!0),a=s(!1),i=s(null),l=s(void 0),u=s(0),c=s("");function s(e){var t=new n(n._0);return t._V=1,t._W=e,t}n.resolve=function(e){if(e instanceof n)return e;if(null===e)return i;if(void 0===e)return l;if(!0===e)return o;if(!1===e)return a;if(0===e)return u;if(""===e)return c;if("object"===typeof e||"function"===typeof e)try{var t=e.then;if("function"===typeof t)return new n(t.bind(e))}catch(e){return new n((function(t,r){r(e)}))}return s(e)};var f=function(e){return"function"===typeof Array.from?(f=Array.from,Array.from(e)):(f=function(e){return Array.prototype.slice.call(e)},Array.prototype.slice.call(e))};n.all=function(e){var t=f(e);return new n((function(e,r){if(0===t.length)return e([]);var o=t.length;function a(i,l){if(l&&("object"===typeof l||"function"===typeof l)){if(l instanceof n&&l.then===n.prototype.then){for(;3===l._V;)l=l._W;return 1===l._V?a(i,l._W):(2===l._V&&r(l._W),void l.then((function(e){a(i,e)}),r))}var u=l.then;if("function"===typeof u)return void new n(u.bind(l)).then((function(e){a(i,e)}),r)}t[i]=l,0===--o&&e(t)}for(var i=0;i<t.length;i++)a(i,t[i])}))},n.reject=function(e){return new n((function(t,r){r(e)}))},n.race=function(e){return new n((function(t,r){f(e).forEach((function(e){n.resolve(e).then(t,r)}))}))},n.prototype.catch=function(e){return this.then(null,e)}},function(e,t,r){"use strict";r.r(t),r.d(t,"Headers",(function(){return h})),r.d(t,"Request",(function(){return k})),r.d(t,"Response",(function(){return x})),r.d(t,"DOMException",(function(){return _})),r.d(t,"fetch",(function(){return T}));var n="undefined"!==typeof globalThis&&globalThis||"undefined"!==typeof self&&self||"undefined"!==typeof n&&n,o="URLSearchParams"in n,a="Symbol"in n&&"iterator"in Symbol,i="FileReader"in n&&"Blob"in n&&function(){try{return new Blob,!0}catch(e){return!1}}(),l="FormData"in n,u="ArrayBuffer"in n;if(u)var c=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=ArrayBuffer.isView||function(e){return e&&c.indexOf(Object.prototype.toString.call(e))>-1};function f(e){if("string"!==typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&\'*+.^_`|~!]/i.test(e)||""===e)throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function d(e){return"string"!==typeof e&&(e=String(e)),e}function p(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return a&&(t[Symbol.iterator]=function(){return t}),t}function h(e){this.map={},e instanceof h?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function g(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function v(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function m(e){var t=new FileReader,r=v(t);return t.readAsArrayBuffer(e),r}function y(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(e){var t;this.bodyUsed=this.bodyUsed,this._bodyInit=e,e?"string"===typeof e?this._bodyText=e:i&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:l&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:o&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():u&&i&&((t=e)&&DataView.prototype.isPrototypeOf(t))?(this._bodyArrayBuffer=y(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):u&&(ArrayBuffer.prototype.isPrototypeOf(e)||s(e))?this._bodyArrayBuffer=y(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"===typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):o&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},i&&(this.blob=function(){var e=g(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){if(this._bodyArrayBuffer){var e=g(this);return e||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}return this.blob().then(m)}),this.text=function(){var e,t,r,n=g(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,t=new FileReader,r=v(t),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},l&&(this.formData=function(){return this.text().then(E)}),this.json=function(){return this.text().then(JSON.parse)},this}h.prototype.append=function(e,t){e=f(e),t=d(t);var r=this.map[e];this.map[e]=r?r+", "+t:t},h.prototype.delete=function(e){delete this.map[f(e)]},h.prototype.get=function(e){return e=f(e),this.has(e)?this.map[e]:null},h.prototype.has=function(e){return this.map.hasOwnProperty(f(e))},h.prototype.set=function(e,t){this.map[f(e)]=d(t)},h.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},h.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),p(e)},h.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),p(e)},h.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),p(e)},a&&(h.prototype[Symbol.iterator]=h.prototype.entries);var w=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function k(e,t){if(!(this instanceof k))throw new TypeError(\'Please use the "new" operator, this DOM object constructor cannot be called as a function.\');var r,n,o=(t=t||{}).body;if(e instanceof k){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new h(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,o||null==e._bodyInit||(o=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",!t.headers&&this.headers||(this.headers=new h(t.headers)),this.method=(r=t.method||this.method||"GET",n=r.toUpperCase(),w.indexOf(n)>-1?n:r),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(o),("GET"===this.method||"HEAD"===this.method)&&("no-store"===t.cache||"no-cache"===t.cache)){var a=/([?&])_=[^&]*/;if(a.test(this.url))this.url=this.url.replace(a,"$1_="+(new Date).getTime());else{this.url+=(/\\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}}function E(e){var t=new FormData;return e.trim().split("&").forEach((function(e){if(e){var r=e.split("="),n=r.shift().replace(/\\+/g," "),o=r.join("=").replace(/\\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(o))}})),t}function x(e,t){if(!(this instanceof x))throw new TypeError(\'Please use the "new" operator, this DOM object constructor cannot be called as a function.\');t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"",this.headers=new h(t.headers),this.url=t.url||"",this._initBody(e)}k.prototype.clone=function(){return new k(this,{body:this._bodyInit})},b.call(k.prototype),b.call(x.prototype),x.prototype.clone=function(){return new x(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new h(this.headers),url:this.url})},x.error=function(){var e=new x(null,{status:0,statusText:""});return e.type="error",e};var S=[301,302,303,307,308];x.redirect=function(e,t){if(-1===S.indexOf(t))throw new RangeError("Invalid status code");return new x(null,{status:t,headers:{location:e}})};var _=n.DOMException;try{new _}catch(e){(_=function(e,t){this.message=e,this.name=t;var r=Error(e);this.stack=r.stack}).prototype=Object.create(Error.prototype),_.prototype.constructor=_}function T(e,t){return new Promise((function(r,o){var a=new k(e,t);if(a.signal&&a.signal.aborted)return o(new _("Aborted","AbortError"));var l=new XMLHttpRequest;function c(){l.abort()}l.onload=function(){var e,t,n={status:l.status,statusText:l.statusText,headers:(e=l.getAllResponseHeaders()||"",t=new h,e.replace(/\\r?\\n[\\t ]+/g," ").split("\\r").map((function(e){return 0===e.indexOf("\\n")?e.substr(1,e.length):e})).forEach((function(e){var r=e.split(":"),n=r.shift().trim();if(n){var o=r.join(":").trim();t.append(n,o)}})),t)};n.url="responseURL"in l?l.responseURL:n.headers.get("X-Request-URL");var o="response"in l?l.response:l.responseText;setTimeout((function(){r(new x(o,n))}),0)},l.onerror=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},l.ontimeout=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},l.onabort=function(){setTimeout((function(){o(new _("Aborted","AbortError"))}),0)},l.open(a.method,function(e){try{return""===e&&n.location.href?n.location.href:e}catch(t){return e}}(a.url),!0),"include"===a.credentials?l.withCredentials=!0:"omit"===a.credentials&&(l.withCredentials=!1),"responseType"in l&&(i?l.responseType="blob":u&&a.headers.get("Content-Type")&&-1!==a.headers.get("Content-Type").indexOf("application/octet-stream")&&(l.responseType="arraybuffer")),!t||"object"!==typeof t.headers||t.headers instanceof h?a.headers.forEach((function(e,t){l.setRequestHeader(t,e)})):Object.getOwnPropertyNames(t.headers).forEach((function(e){l.setRequestHeader(e,d(t.headers[e]))})),a.signal&&(a.signal.addEventListener("abort",c),l.onreadystatechange=function(){4===l.readyState&&a.signal.removeEventListener("abort",c)}),l.send("undefined"===typeof a._bodyInit?null:a._bodyInit)}))}T.polyfill=!0,n.fetch||(n.fetch=T,n.Headers=h,n.Request=k,n.Response=x)},function(e,t,r){(function(t){for(var n=r(182),o="undefined"===typeof window?t:window,a=["moz","webkit"],i="AnimationFrame",l=o["request"+i],u=o["cancel"+i]||o["cancelRequest"+i],c=0;!l&&c<a.length;c++)l=o[a[c]+"Request"+i],u=o[a[c]+"Cancel"+i]||o[a[c]+"CancelRequest"+i];if(!l||!u){var s=0,f=0,d=[];l=function(e){if(0===d.length){var t=n(),r=Math.max(0,16.666666666666668-(t-s));s=r+t,setTimeout((function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(s)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(r))}return d.push({handle:++f,callback:e,cancelled:!1}),f},u=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}e.exports=function(e){return l.call(o,e)},e.exports.cancel=function(){u.apply(o,arguments)},e.exports.polyfill=function(e){e||(e=o),e.requestAnimationFrame=l,e.cancelAnimationFrame=u}}).call(this,r(34))},function(e,t,r){(function(t){(function(){var r,n,o,a,i,l;"undefined"!==typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!==typeof t&&null!==t&&t.hrtime?(e.exports=function(){return(r()-i)/1e6},n=t.hrtime,a=(r=function(){var e;return 1e9*(e=n())[0]+e[1]})(),l=1e9*t.uptime(),i=a-l):Date.now?(e.exports=function(){return Date.now()-o},o=Date.now()):(e.exports=function(){return(new Date).getTime()-o},o=(new Date).getTime())}).call(this)}).call(this,r(51))},function(e,t,r){"use strict";var n=r(50),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"===typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"===typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function v(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||h}function m(){}function y(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},m.prototype=v.prototype;var b=y.prototype=new m;b.constructor=y,n(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,r){var n,a={},i=null,l=null;if(null!=t)for(n in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,n)&&!E.hasOwnProperty(n)&&(a[n]=t[n]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(n in u=e.defaultProps)void 0===a[n]&&(a[n]=u[n]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:w.current}}function S(e){return"object"===typeof e&&null!==e&&e.$$typeof===o}var _=/\\/+/g;function T(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,r,n,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return i=i(u=e),e=""===n?"."+T(u,0):n,Array.isArray(i)?(r="",null!=e&&(r=e.replace(_,"$&/")+"/"),C(i,t,r,"",(function(e){return e}))):null!=i&&(S(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,r+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(_,"$&/")+"/")+e)),t.push(i)),1;if(u=0,n=""===n?".":n+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=n+T(l=e[c],c);u+=C(l,t,r,s,i)}else if("function"===typeof(s=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(l=e.next()).done;)u+=C(l=l.value,t,r,s=n+T(l,c++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function O(e,t,r){if(null==e)return e;var n=[],o=0;return C(e,n,"","",(function(e){return t.call(r,e,o++)})),n}function P(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var R={current:null};function N(){var e=R.current;if(null===e)throw Error(p(321));return e}var L={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:n};t.Children={map:O,forEach:function(e,t,r){O(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error(p(267,e));var a=n({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return N().useCallback(e,t)},t.useContext=function(e,t){return N().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return N().useEffect(e,t)},t.useImperativeHandle=function(e,t,r){return N().useImperativeHandle(e,t,r)},t.useLayoutEffect=function(e,t){return N().useLayoutEffect(e,t)},t.useMemo=function(e,t){return N().useMemo(e,t)},t.useReducer=function(e,t,r){return N().useReducer(e,t,r)},t.useRef=function(e){return N().useRef(e)},t.useState=function(e){return N().useState(e)},t.version="17.0.1"},function(e,t,r){"use strict";var n=r(0),o=r(50),a=r(185);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!n)throw Error(i(227));var l=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},g={};function v(e,t,r,n,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=o,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];m[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,r,n){var o=m.hasOwnProperty(t)?m[t]:null;(null!==o?0===o.type:!n&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,r,n){if(null===t||"undefined"===typeof t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,o,n)&&(r=null),n||null===o?function(e){return!!p.call(g,e)||!p.call(h,e)&&(d.test(e)?g[e]=!0:(h[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):o.mustUseProperty?e[o.propertyName]=null===r?3!==o.type&&"":r:(t=o.attributeName,n=o.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(o=o.type)||4===o&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,x=60106,S=60107,_=60108,T=60114,C=60109,O=60110,P=60112,R=60113,N=60120,L=60115,A=60116,I=60121,j=60128,M=60129,D=60130,q=60131;if("function"===typeof Symbol&&Symbol.for){var z=Symbol.for;E=z("react.element"),x=z("react.portal"),S=z("react.fragment"),_=z("react.strict_mode"),T=z("react.profiler"),C=z("react.provider"),O=z("react.context"),P=z("react.forward_ref"),R=z("react.suspense"),N=z("react.suspense_list"),L=z("react.memo"),A=z("react.lazy"),I=z("react.block"),z("react.scope"),j=z("react.opaque.id"),M=z("react.debug_trace_mode"),D=z("react.offscreen"),q=z("react.legacy_hidden")}var U,F="function"===typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=F&&e[F]||e["@@iterator"])?e:null}function V(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\\n( *(at )?)/);U=t&&t[1]||""}return"\\n"+U+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(e){if(e&&n&&"string"===typeof e.stack){for(var o=e.stack.split("\\n"),a=n.stack.split("\\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l])return"\\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{H=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?V(e):""}function $(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 22:return e=W(e.type._render,!1);case 1:return e=W(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case x:return"Portal";case T:return"Profiler";case _:return"StrictMode";case R:return"Suspense";case N:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case P:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case L:return G(e.type);case I:return G(e._render);case A:t=e._payload,e=e._init;try{return G(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof r&&"function"===typeof r.get&&"function"===typeof r.set){var o=r.get,a=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){n=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=Y(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function J(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var r=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function ee(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=Q(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function re(e,t){te(e,t);var r=Q(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,r):t.hasOwnProperty("defaultValue")&&oe(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ne(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function oe(e,t,r){"number"===t&&J(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return n.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,r,n){if(e=e.options,t){t={};for(var o=0;o<r.length;o++)t["$"+r[o]]=!0;for(r=0;r<e.length;r++)o=t.hasOwnProperty("$"+e[r].value),e[r].selected!==o&&(e[r].selected=o),o&&n&&(e[r].defaultSelected=!0)}else{for(r=""+Q(r),t=null,o=0;o<e.length;o++){if(e[o].value===r)return e[o].selected=!0,void(n&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(i(92));if(Array.isArray(r)){if(!(1>=r.length))throw Error(i(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:Q(r)}}function ce(e,t){var r=Q(t.value),n=Q(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml",de="http://www.w3.org/2000/svg";function pe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?pe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ge,ve,me=(ve=function(e,t){if(e.namespaceURI!==de||"innerHTML"in e)e.innerHTML=t;else{for((ge=ge||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ge.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction((function(){return ve(e,t)}))}:ve);function ye(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var be={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},we=["Webkit","ms","Moz","O"];function ke(e,t,r){return null==t||"boolean"===typeof t||""===t?"":r||"number"!==typeof t||0===t||be.hasOwnProperty(e)&&be[e]?(""+t).trim():t+"px"}function Ee(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),o=ke(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,o):e[r]=o}}Object.keys(be).forEach((function(e){we.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),be[t]=be[e]}))}));var xe=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(xe[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function _e(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Te(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Oe=null,Pe=null;function Re(e){if(e=eo(e)){if("function"!==typeof Ce)throw Error(i(280));var t=e.stateNode;t&&(t=ro(t),Ce(e.stateNode,e.type,t))}}function Ne(e){Oe?Pe?Pe.push(e):Pe=[e]:Oe=e}function Le(){if(Oe){var e=Oe,t=Pe;if(Pe=Oe=null,Re(e),t)for(e=0;e<t.length;e++)Re(t[e])}}function Ae(e,t){return e(t)}function Ie(e,t,r,n,o){return e(t,r,n,o)}function je(){}var Me=Ae,De=!1,qe=!1;function ze(){null===Oe&&null===Pe||(je(),Le())}function Ue(e,t){var r=e.stateNode;if(null===r)return null;var n=ro(r);if(null===n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!==typeof r)throw Error(i(231,t,typeof r));return r}var Fe=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(ve){Fe=!1}function Ve(e,t,r,n,o,a,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(r,c)}catch(e){this.onError(e)}}var He=!1,We=null,$e=!1,Ge=null,Qe={onError:function(e){He=!0,We=e}};function Ye(e,t,r,n,o,a,i,l,u){He=!1,We=null,Ve.apply(Qe,arguments)}function Ke(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Je(e){if(Ke(e)!==e)throw Error(i(188))}function Ze(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ke(e)))throw Error(i(188));return t!==e?null:e}for(var r=e,n=t;;){var o=r.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(n=o.return)){r=n;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===r)return Je(o),e;if(a===n)return Je(o),t;a=a.sibling}throw Error(i(188))}if(r.return!==n.return)r=o,n=a;else{for(var l=!1,u=o.child;u;){if(u===r){l=!0,r=o,n=a;break}if(u===n){l=!0,n=o,r=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===r){l=!0,r=a,n=o;break}if(u===n){l=!0,n=a,r=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(r.alternate!==n)throw Error(i(190))}if(3!==r.tag)throw Error(i(188));return r.stateNode.current===r?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){for(var r=e.alternate;null!==t;){if(t===e||t===r)return!0;t=t.return}return!1}var tt,rt,nt,ot,at=!1,it=[],lt=null,ut=null,ct=null,st=new Map,ft=new Map,dt=[],pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ht(e,t,r,n,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|r,nativeEvent:o,targetContainers:[n]}}function gt(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":ut=null;break;case"mouseover":case"mouseout":ct=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ft.delete(t.pointerId)}}function vt(e,t,r,n,o,a){return null===e||e.nativeEvent!==a?(e=ht(t,r,n,o,a),null!==t&&(null!==(t=eo(t))&&rt(t)),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function mt(e){var t=Zn(e.target);if(null!==t){var r=Ke(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=Xe(r)))return e.blockedOn=t,void ot(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(r)}))}))}else if(3===t&&r.stateNode.hydrate)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=eo(r))&&rt(t),e.blockedOn=r,!1;t.shift()}return!0}function bt(e,t,r){yt(e)&&r.delete(t)}function wt(){for(at=!1;0<it.length;){var e=it[0];if(null!==e.blockedOn){null!==(e=eo(e.blockedOn))&&tt(e);break}for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r){e.blockedOn=r;break}t.shift()}null===e.blockedOn&&it.shift()}null!==lt&&yt(lt)&&(lt=null),null!==ut&&yt(ut)&&(ut=null),null!==ct&&yt(ct)&&(ct=null),st.forEach(bt),ft.forEach(bt)}function kt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,wt)))}function Et(e){function t(t){return kt(t,e)}if(0<it.length){kt(it[0],e);for(var r=1;r<it.length;r++){var n=it[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==lt&&kt(lt,e),null!==ut&&kt(ut,e),null!==ct&&kt(ct,e),st.forEach(t),ft.forEach(t),r=0;r<dt.length;r++)(n=dt[r]).blockedOn===e&&(n.blockedOn=null);for(;0<dt.length&&null===(r=dt[0]).blockedOn;)mt(r),null===r.blockedOn&&dt.shift()}function xt(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var St={animationend:xt("Animation","AnimationEnd"),animationiteration:xt("Animation","AnimationIteration"),animationstart:xt("Animation","AnimationStart"),transitionend:xt("Transition","TransitionEnd")},_t={},Tt={};function Ct(e){if(_t[e])return _t[e];if(!St[e])return e;var t,r=St[e];for(t in r)if(r.hasOwnProperty(t)&&t in Tt)return _t[e]=r[t];return e}f&&(Tt=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Ot=Ct("animationend"),Pt=Ct("animationiteration"),Rt=Ct("animationstart"),Nt=Ct("transitionend"),Lt=new Map,At=new Map,It=["abort","abort",Ot,"animationEnd",Pt,"animationIteration",Rt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Nt,"transitionEnd","waiting","waiting"];function jt(e,t){for(var r=0;r<e.length;r+=2){var n=e[r],o=e[r+1];o="on"+(o[0].toUpperCase()+o.slice(1)),At.set(n,t),Lt.set(n,o),c(o,[n])}}(0,a.unstable_now)();var Mt=8;function Dt(e){if(0!==(1&e))return Mt=15,1;if(0!==(2&e))return Mt=14,2;if(0!==(4&e))return Mt=13,4;var t=24&e;return 0!==t?(Mt=12,t):0!==(32&e)?(Mt=11,32):0!==(t=192&e)?(Mt=10,t):0!==(256&e)?(Mt=9,256):0!==(t=3584&e)?(Mt=8,t):0!==(4096&e)?(Mt=7,4096):0!==(t=4186112&e)?(Mt=6,t):0!==(t=62914560&e)?(Mt=5,t):67108864&e?(Mt=4,67108864):0!==(134217728&e)?(Mt=3,134217728):0!==(t=805306368&e)?(Mt=2,t):0!==(1073741824&e)?(Mt=1,1073741824):(Mt=8,e)}function qt(e,t){var r=e.pendingLanes;if(0===r)return Mt=0;var n=0,o=0,a=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==a)n=a,o=Mt=15;else if(0!==(a=134217727&r)){var u=a&~i;0!==u?(n=Dt(u),o=Mt):0!==(l&=a)&&(n=Dt(l),o=Mt)}else 0!==(a=r&~i)?(n=Dt(a),o=Mt):0!==l&&(n=Dt(l),o=Mt);if(0===n)return 0;if(n=r&((0>(n=31-Ht(n))?0:1<<n)<<1)-1,0!==t&&t!==n&&0===(t&i)){if(Dt(t),o<=Mt)return t;Mt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)o=1<<(r=31-Ht(t)),n|=e[r],t&=~o;return n}function zt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ut(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ft(24&~t))?Ut(10,t):e;case 10:return 0===(e=Ft(192&~t))?Ut(8,t):e;case 8:return 0===(e=Ft(3584&~t))&&(0===(e=Ft(4186112&~t))&&(e=512)),e;case 2:return 0===(t=Ft(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Ft(e){return e&-e}function Bt(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function Vt(e,t,r){e.pendingLanes|=t;var n=t-1;e.suspendedLanes&=n,e.pingedLanes&=n,(e=e.eventTimes)[t=31-Ht(t)]=r}var Ht=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Wt(e)/$t|0)|0},Wt=Math.log,$t=Math.LN2;var Gt=a.unstable_UserBlockingPriority,Qt=a.unstable_runWithPriority,Yt=!0;function Kt(e,t,r,n){De||je();var o=Jt,a=De;De=!0;try{Ie(o,e,t,r,n)}finally{(De=a)||ze()}}function Xt(e,t,r,n){Qt(Gt,Jt.bind(null,e,t,r,n))}function Jt(e,t,r,n){var o;if(Yt)if((o=0===(4&t))&&0<it.length&&-1<pt.indexOf(e))e=ht(null,e,t,r,n),it.push(e);else{var a=Zt(e,t,r,n);if(null===a)o&&gt(e,n);else{if(o){if(-1<pt.indexOf(e))return e=ht(a,e,t,r,n),void it.push(e);if(function(e,t,r,n,o){switch(t){case"focusin":return lt=vt(lt,e,t,r,n,o),!0;case"dragenter":return ut=vt(ut,e,t,r,n,o),!0;case"mouseover":return ct=vt(ct,e,t,r,n,o),!0;case"pointerover":var a=o.pointerId;return st.set(a,vt(st.get(a)||null,e,t,r,n,o)),!0;case"gotpointercapture":return a=o.pointerId,ft.set(a,vt(ft.get(a)||null,e,t,r,n,o)),!0}return!1}(a,e,t,r,n))return;gt(e,n)}Ln(e,t,n,null,r)}}}function Zt(e,t,r,n){var o=Te(n);if(null!==(o=Zn(o))){var a=Ke(o);if(null===a)o=null;else{var i=a.tag;if(13===i){if(null!==(o=Xe(a)))return o;o=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Ln(e,t,n,o,r),null}var er=null,tr=null,rr=null;function nr(){if(rr)return rr;var e,t,r=tr,n=r.length,o="value"in er?er.value:er.textContent,a=o.length;for(e=0;e<n&&r[e]===o[e];e++);var i=n-e;for(t=1;t<=i&&r[n-t]===o[a-t];t++);return rr=o.slice(e,1<t?1-t:void 0)}function or(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function ar(){return!0}function ir(){return!1}function lr(e){function t(t,r,n,o,a){for(var i in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?ar:ir,this.isPropagationStopped=ir,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ar)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ar)},persist:function(){},isPersistent:ar}),t}var ur,cr,sr,fr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dr=lr(fr),pr=o({},fr,{view:0,detail:0}),hr=lr(pr),gr=o({},pr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Tr,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sr&&(sr&&"mousemove"===e.type?(ur=e.screenX-sr.screenX,cr=e.screenY-sr.screenY):cr=ur=0,sr=e),ur)},movementY:function(e){return"movementY"in e?e.movementY:cr}}),vr=lr(gr),mr=lr(o({},gr,{dataTransfer:0})),yr=lr(o({},pr,{relatedTarget:0})),br=lr(o({},fr,{animationName:0,elapsedTime:0,pseudoElement:0})),wr=lr(o({},fr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kr=lr(o({},fr,{data:0})),Er={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _r(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sr[e])&&!!t[e]}function Tr(){return _r}var Cr=lr(o({},pr,{key:function(e){if(e.key){var t=Er[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=or(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Tr,charCode:function(e){return"keypress"===e.type?or(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?or(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Or=lr(o({},gr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pr=lr(o({},pr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Tr})),Rr=lr(o({},fr,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nr=lr(o({},gr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Lr=[9,13,27,32],Ar=f&&"CompositionEvent"in window,Ir=null;f&&"documentMode"in document&&(Ir=document.documentMode);var jr=f&&"TextEvent"in window&&!Ir,Mr=f&&(!Ar||Ir&&8<Ir&&11>=Ir),Dr=String.fromCharCode(32),qr=!1;function zr(e,t){switch(e){case"keyup":return-1!==Lr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ur(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Fr=!1;var Br={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Br[e.type]:"textarea"===t}function Hr(e,t,r,n){Ne(n),0<(t=In(t,"onChange")).length&&(r=new dr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var Wr=null,$r=null;function Gr(e){Tn(e,0)}function Qr(e){if(X(to(e)))return e}function Yr(e,t){if("change"===e)return t}var Kr=!1;if(f){var Xr;if(f){var Jr="oninput"in document;if(!Jr){var Zr=document.createElement("div");Zr.setAttribute("oninput","return;"),Jr="function"===typeof Zr.oninput}Xr=Jr}else Xr=!1;Kr=Xr&&(!document.documentMode||9<document.documentMode)}function en(){Wr&&(Wr.detachEvent("onpropertychange",tn),$r=Wr=null)}function tn(e){if("value"===e.propertyName&&Qr($r)){var t=[];if(Hr(t,$r,e,Te(e)),e=Gr,De)e(t);else{De=!0;try{Ae(e,t)}finally{De=!1,ze()}}}}function rn(e,t,r){"focusin"===e?(en(),$r=r,(Wr=t).attachEvent("onpropertychange",tn)):"focusout"===e&&en()}function nn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qr($r)}function on(e,t){if("click"===e)return Qr(t)}function an(e,t){if("input"===e||"change"===e)return Qr(t)}var ln="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},un=Object.prototype.hasOwnProperty;function cn(e,t){if(ln(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++)if(!un.call(t,r[n])||!ln(e[r[n]],t[r[n]]))return!1;return!0}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var r,n=sn(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=sn(n)}}function dn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pn(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var r="string"===typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=J((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var gn=f&&"documentMode"in document&&11>=document.documentMode,vn=null,mn=null,yn=null,bn=!1;function wn(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;bn||null==vn||vn!==J(n)||("selectionStart"in(n=vn)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},yn&&cn(yn,n)||(yn=n,0<(n=In(mn,"onSelect")).length&&(t=new dr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=vn)))}jt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),jt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),jt(It,2);for(var kn="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),En=0;En<kn.length;En++)At.set(kn[En],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var xn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sn=new Set("cancel close invalid load scroll toggle".split(" ").concat(xn));function _n(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,o,a,l,u,c){if(Ye.apply(this,arguments),He){if(!He)throw Error(i(198));var s=We;He=!1,We=null,$e||($e=!0,Ge=s)}}(n,t,void 0,e),e.currentTarget=null}function Tn(e,t){t=0!==(4&t);for(var r=0;r<e.length;r++){var n=e[r],o=n.event;n=n.listeners;e:{var a=void 0;if(t)for(var i=n.length-1;0<=i;i--){var l=n[i],u=l.instance,c=l.currentTarget;if(l=l.listener,u!==a&&o.isPropagationStopped())break e;_n(o,l,c),a=u}else for(i=0;i<n.length;i++){if(u=(l=n[i]).instance,c=l.currentTarget,l=l.listener,u!==a&&o.isPropagationStopped())break e;_n(o,l,c),a=u}}}if($e)throw e=Ge,$e=!1,Ge=null,e}function Cn(e,t){var r=no(t),n=e+"__bubble";r.has(n)||(Nn(t,e,2,!1),r.add(n))}var On="_reactListening"+Math.random().toString(36).slice(2);function Pn(e){e[On]||(e[On]=!0,l.forEach((function(t){Sn.has(t)||Rn(t,!1,e,null),Rn(t,!0,e,null)})))}function Rn(e,t,r,n){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=r;if("selectionchange"===e&&9!==r.nodeType&&(a=r.ownerDocument),null!==n&&!t&&Sn.has(e)){if("scroll"!==e)return;o|=2,a=n}var i=no(a),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(o|=4),Nn(a,e,o,t),i.add(l))}function Nn(e,t,r,n){var o=At.get(t);switch(void 0===o?2:o){case 0:o=Kt;break;case 1:o=Xt;break;default:o=Jt}r=o.bind(null,t,r,e),o=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),n?void 0!==o?e.addEventListener(t,r,{capture:!0,passive:o}):e.addEventListener(t,r,!0):void 0!==o?e.addEventListener(t,r,{passive:o}):e.addEventListener(t,r,!1)}function Ln(e,t,r,n,o){var a=n;if(0===(1&t)&&0===(2&t)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var l=n.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=n.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=Zn(l)))return;if(5===(u=i.tag)||6===u){n=a=i;continue e}l=l.parentNode}}n=n.return}!function(e,t,r){if(qe)return e(t,r);qe=!0;try{Me(e,t,r)}finally{qe=!1,ze()}}((function(){var n=a,o=Te(r),i=[];e:{var l=Lt.get(e);if(void 0!==l){var u=dr,c=e;switch(e){case"keypress":if(0===or(r))break e;case"keydown":case"keyup":u=Cr;break;case"focusin":c="focus",u=yr;break;case"focusout":c="blur",u=yr;break;case"beforeblur":case"afterblur":u=yr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pr;break;case Ot:case Pt:case Rt:u=br;break;case Nt:u=Rr;break;case"scroll":u=hr;break;case"wheel":u=Nr;break;case"copy":case"cut":case"paste":u=wr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Or}var s=0!==(4&t),f=!s&&"scroll"===e,d=s?null!==l?l+"Capture":null:l;s=[];for(var p,h=n;null!==h;){var g=(p=h).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==d&&(null!=(g=Ue(h,d))&&s.push(An(h,g,p)))),f)break;h=h.return}0<s.length&&(l=new u(l,c,null,r,o),i.push({event:l,listeners:s}))}}if(0===(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!==(16&t)||!(c=r.relatedTarget||r.fromElement)||!Zn(c)&&!c[Xn])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=n,null!==(c=(c=r.relatedTarget||r.toElement)?Zn(c):null)&&(c!==(f=Ke(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=n),u!==c)){if(s=vr,g="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Or,g="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:to(u),p=null==c?l:to(c),(l=new s(g,h+"leave",u,r,o)).target=f,l.relatedTarget=p,g=null,Zn(o)===n&&((s=new s(d,h+"enter",c,r,o)).target=p,s.relatedTarget=f,g=s),f=g,u&&c)e:{for(d=c,h=0,p=s=u;p;p=jn(p))h++;for(p=0,g=d;g;g=jn(g))p++;for(;0<h-p;)s=jn(s),h--;for(;0<p-h;)d=jn(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=jn(s),d=jn(d)}s=null}else s=null;null!==u&&Mn(i,l,u,s,!1),null!==c&&null!==f&&Mn(i,f,c,s,!0)}if("select"===(u=(l=n?to(n):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var v=Yr;else if(Vr(l))if(Kr)v=an;else{v=nn;var m=rn}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(v=on);switch(v&&(v=v(e,n))?Hr(i,v,r,o):(m&&m(e,l,n),"focusout"===e&&(m=l._wrapperState)&&m.controlled&&"number"===l.type&&oe(l,"number",l.value)),m=n?to(n):window,e){case"focusin":(Vr(m)||"true"===m.contentEditable)&&(vn=m,mn=n,yn=null);break;case"focusout":yn=mn=vn=null;break;case"mousedown":bn=!0;break;case"contextmenu":case"mouseup":case"dragend":bn=!1,wn(i,r,o);break;case"selectionchange":if(gn)break;case"keydown":case"keyup":wn(i,r,o)}var y;if(Ar)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Fr?zr(e,r)&&(b="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(b="onCompositionStart");b&&(Mr&&"ko"!==r.locale&&(Fr||"onCompositionStart"!==b?"onCompositionEnd"===b&&Fr&&(y=nr()):(tr="value"in(er=o)?er.value:er.textContent,Fr=!0)),0<(m=In(n,b)).length&&(b=new kr(b,e,null,r,o),i.push({event:b,listeners:m}),y?b.data=y:null!==(y=Ur(r))&&(b.data=y))),(y=jr?function(e,t){switch(e){case"compositionend":return Ur(t);case"keypress":return 32!==t.which?null:(qr=!0,Dr);case"textInput":return(e=t.data)===Dr&&qr?null:e;default:return null}}(e,r):function(e,t){if(Fr)return"compositionend"===e||!Ar&&zr(e,t)?(e=nr(),rr=tr=er=null,Fr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Mr&&"ko"!==t.locale?null:t.data;default:return null}}(e,r))&&(0<(n=In(n,"onBeforeInput")).length&&(o=new kr("onBeforeInput","beforeinput",null,r,o),i.push({event:o,listeners:n}),o.data=y))}Tn(i,t)}))}function An(e,t,r){return{instance:e,listener:t,currentTarget:r}}function In(e,t){for(var r=t+"Capture",n=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Ue(e,r))&&n.unshift(An(e,a,o)),null!=(a=Ue(e,t))&&n.push(An(e,a,o))),e=e.return}return n}function jn(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Mn(e,t,r,n,o){for(var a=t._reactName,i=[];null!==r&&r!==n;){var l=r,u=l.alternate,c=l.stateNode;if(null!==u&&u===n)break;5===l.tag&&null!==c&&(l=c,o?null!=(u=Ue(r,a))&&i.unshift(An(r,u,l)):o||null!=(u=Ue(r,a))&&i.push(An(r,u,l))),r=r.return}0!==i.length&&e.push({event:t,listeners:i})}function Dn(){}var qn=null,zn=null;function Un(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Fn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Bn="function"===typeof setTimeout?setTimeout:void 0,Vn="function"===typeof clearTimeout?clearTimeout:void 0;function Hn(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Wn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function $n(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var Gn=0;var Qn=Math.random().toString(36).slice(2),Yn="__reactFiber$"+Qn,Kn="__reactProps$"+Qn,Xn="__reactContainer$"+Qn,Jn="__reactEvents$"+Qn;function Zn(e){var t=e[Yn];if(t)return t;for(var r=e.parentNode;r;){if(t=r[Xn]||r[Yn]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=$n(e);null!==e;){if(r=e[Yn])return r;e=$n(e)}return t}r=(e=r).parentNode}return null}function eo(e){return!(e=e[Yn]||e[Xn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function to(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ro(e){return e[Kn]||null}function no(e){var t=e[Jn];return void 0===t&&(t=e[Jn]=new Set),t}var oo=[],ao=-1;function io(e){return{current:e}}function lo(e){0>ao||(e.current=oo[ao],oo[ao]=null,ao--)}function uo(e,t){ao++,oo[ao]=e.current,e.current=t}var co={},so=io(co),fo=io(!1),po=co;function ho(e,t){var r=e.type.contextTypes;if(!r)return co;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in r)a[o]=t[o];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function go(e){return null!==(e=e.childContextTypes)&&void 0!==e}function vo(){lo(fo),lo(so)}function mo(e,t,r){if(so.current!==co)throw Error(i(168));uo(so,t),uo(fo,r)}function yo(e,t,r){var n=e.stateNode;if(e=t.childContextTypes,"function"!==typeof n.getChildContext)return r;for(var a in n=n.getChildContext())if(!(a in e))throw Error(i(108,G(t)||"Unknown",a));return o({},r,n)}function bo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||co,po=so.current,uo(so,e),uo(fo,fo.current),!0}function wo(e,t,r){var n=e.stateNode;if(!n)throw Error(i(169));r?(e=yo(e,t,po),n.__reactInternalMemoizedMergedChildContext=e,lo(fo),lo(so),uo(so,e)):lo(fo),uo(fo,r)}var ko=null,Eo=null,xo=a.unstable_runWithPriority,So=a.unstable_scheduleCallback,_o=a.unstable_cancelCallback,To=a.unstable_shouldYield,Co=a.unstable_requestPaint,Oo=a.unstable_now,Po=a.unstable_getCurrentPriorityLevel,Ro=a.unstable_ImmediatePriority,No=a.unstable_UserBlockingPriority,Lo=a.unstable_NormalPriority,Ao=a.unstable_LowPriority,Io=a.unstable_IdlePriority,jo={},Mo=void 0!==Co?Co:function(){},Do=null,qo=null,zo=!1,Uo=Oo(),Fo=1e4>Uo?Oo:function(){return Oo()-Uo};function Bo(){switch(Po()){case Ro:return 99;case No:return 98;case Lo:return 97;case Ao:return 96;case Io:return 95;default:throw Error(i(332))}}function Vo(e){switch(e){case 99:return Ro;case 98:return No;case 97:return Lo;case 96:return Ao;case 95:return Io;default:throw Error(i(332))}}function Ho(e,t){return e=Vo(e),xo(e,t)}function Wo(e,t,r){return e=Vo(e),So(e,t,r)}function $o(){if(null!==qo){var e=qo;qo=null,_o(e)}Go()}function Go(){if(!zo&&null!==Do){zo=!0;var e=0;try{var t=Do;Ho(99,(function(){for(;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}})),Do=null}catch(t){throw null!==Do&&(Do=Do.slice(e+1)),So(Ro,$o),t}finally{zo=!1}}}var Qo=k.ReactCurrentBatchConfig;function Yo(e,t){if(e&&e.defaultProps){for(var r in t=o({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var Ko=io(null),Xo=null,Jo=null,Zo=null;function ea(){Zo=Jo=Xo=null}function ta(e){var t=Ko.current;lo(Ko),e.type._context._currentValue=t}function ra(e,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)===t){if(null===r||(r.childLanes&t)===t)break;r.childLanes|=t}else e.childLanes|=t,null!==r&&(r.childLanes|=t);e=e.return}}function na(e,t){Xo=e,Zo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(Ii=!0),e.firstContext=null)}function oa(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Jo){if(null===Xo)throw Error(i(308));Jo=t,Xo.dependencies={lanes:0,firstContext:t,responders:null}}else Jo=Jo.next=t;return e._currentValue}var aa=!1;function ia(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function la(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ua(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ca(e,t){if(null!==(e=e.updateQueue)){var r=(e=e.shared).pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}}function sa(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var o=null,a=null;if(null!==(r=r.firstBaseUpdate)){do{var i={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===a?o=a=i:a=a.next=i,r=r.next}while(null!==r);null===a?o=a=t:a=a.next=t}else o=a=t;return r={baseState:n.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:n.shared,effects:n.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function fa(e,t,r,n){var a=e.updateQueue;aa=!1;var i=a.firstBaseUpdate,l=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var c=u,s=c.next;c.next=null,null===l?i=s:l.next=s,l=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==i){for(d=a.baseState,l=0,f=s=c=null;;){u=i.lane;var p=i.eventTime;if((n&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,g=i;switch(u=t,p=r,g.tag){case 1:if("function"===typeof(h=g.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null===(u="function"===typeof(h=g.payload)?h.call(p,d,u):h)||void 0===u)break e;d=o({},d,u);break e;case 2:aa=!0}}null!==i.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=a.shared.pending))break;i=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(c=d),a.baseState=c,a.firstBaseUpdate=s,a.lastBaseUpdate=f,ql|=l,e.lanes=l,e.memoizedState=d}}function da(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],o=n.callback;if(null!==o){if(n.callback=null,n=r,"function"!==typeof o)throw Error(i(191,o));o.call(n)}}}var pa=(new n.Component).refs;function ha(e,t,r,n){r=null===(r=r(n,t=e.memoizedState))||void 0===r?t:o({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var ga={isMounted:function(e){return!!(e=e._reactInternals)&&Ke(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=cu(),o=su(e),a=ua(n,o);a.payload=t,void 0!==r&&null!==r&&(a.callback=r),ca(e,a),fu(e,o,n)},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=cu(),o=su(e),a=ua(n,o);a.tag=1,a.payload=t,void 0!==r&&null!==r&&(a.callback=r),ca(e,a),fu(e,o,n)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=cu(),n=su(e),o=ua(r,n);o.tag=2,void 0!==t&&null!==t&&(o.callback=t),ca(e,o),fu(e,n,r)}};function va(e,t,r,n,o,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!cn(r,n)||!cn(o,a))}function ma(e,t,r){var n=!1,o=co,a=t.contextType;return"object"===typeof a&&null!==a?a=oa(a):(o=go(t)?po:so.current,a=(n=null!==(n=t.contextTypes)&&void 0!==n)?ho(e,o):co),t=new t(r,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ga,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ya(e,t,r,n){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&ga.enqueueReplaceState(t,t.state,null)}function ba(e,t,r,n){var o=e.stateNode;o.props=r,o.state=e.memoizedState,o.refs=pa,ia(e);var a=t.contextType;"object"===typeof a&&null!==a?o.context=oa(a):(a=go(t)?po:so.current,o.context=ho(e,a)),fa(e,r,o,n),o.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(ha(e,t,a,r),o.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof o.getSnapshotBeforeUpdate||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||(t=o.state,"function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ga.enqueueReplaceState(o,o.state,null),fa(e,r,o,n),o.state=e.memoizedState),"function"===typeof o.componentDidMount&&(e.flags|=4)}var wa=Array.isArray;function ka(e,t,r){if(null!==(e=r.ref)&&"function"!==typeof e&&"object"!==typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(i(309));var n=r.stateNode}if(!n)throw Error(i(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=n.refs;t===pa&&(t=n.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!==typeof e)throw Error(i(284));if(!r._owner)throw Error(i(290,e))}return e}function Ea(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function xa(e){function t(t,r){if(e){var n=t.lastEffect;null!==n?(n.nextEffect=r,t.lastEffect=r):t.firstEffect=t.lastEffect=r,r.nextEffect=null,r.flags=8}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Vu(e,t)).index=0,e.sibling=null,e}function a(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.flags=2,r):n:(t.flags=2,r):r}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,r,n){return null===t||6!==t.tag?((t=Gu(r,e.mode,n)).return=e,t):((t=o(t,r)).return=e,t)}function c(e,t,r,n){return null!==t&&t.elementType===r.type?((n=o(t,r.props)).ref=ka(e,t,r),n.return=e,n):((n=Hu(r.type,r.key,r.props,null,e.mode,n)).ref=ka(e,t,r),n.return=e,n)}function s(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Qu(r,e.mode,n)).return=e,t):((t=o(t,r.children||[])).return=e,t)}function f(e,t,r,n,a){return null===t||7!==t.tag?((t=Wu(r,e.mode,n,a)).return=e,t):((t=o(t,r)).return=e,t)}function d(e,t,r){if("string"===typeof t||"number"===typeof t)return(t=Gu(""+t,e.mode,r)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case E:return(r=Hu(t.type,t.key,t.props,null,e.mode,r)).ref=ka(e,null,t),r.return=e,r;case x:return(t=Qu(t,e.mode,r)).return=e,t}if(wa(t)||B(t))return(t=Wu(t,e.mode,r,null)).return=e,t;Ea(e,t)}return null}function p(e,t,r,n){var o=null!==t?t.key:null;if("string"===typeof r||"number"===typeof r)return null!==o?null:u(e,t,""+r,n);if("object"===typeof r&&null!==r){switch(r.$$typeof){case E:return r.key===o?r.type===S?f(e,t,r.props.children,n,o):c(e,t,r,n):null;case x:return r.key===o?s(e,t,r,n):null}if(wa(r)||B(r))return null!==o?null:f(e,t,r,n,null);Ea(e,r)}return null}function h(e,t,r,n,o){if("string"===typeof n||"number"===typeof n)return u(t,e=e.get(r)||null,""+n,o);if("object"===typeof n&&null!==n){switch(n.$$typeof){case E:return e=e.get(null===n.key?r:n.key)||null,n.type===S?f(t,e,n.props.children,o,n.key):c(t,e,n,o);case x:return s(t,e=e.get(null===n.key?r:n.key)||null,n,o)}if(wa(n)||B(n))return f(t,e=e.get(r)||null,n,o,null);Ea(t,n)}return null}function g(o,i,l,u){for(var c=null,s=null,f=i,g=i=0,v=null;null!==f&&g<l.length;g++){f.index>g?(v=f,f=null):v=f.sibling;var m=p(o,f,l[g],u);if(null===m){null===f&&(f=v);break}e&&f&&null===m.alternate&&t(o,f),i=a(m,i,g),null===s?c=m:s.sibling=m,s=m,f=v}if(g===l.length)return r(o,f),c;if(null===f){for(;g<l.length;g++)null!==(f=d(o,l[g],u))&&(i=a(f,i,g),null===s?c=f:s.sibling=f,s=f);return c}for(f=n(o,f);g<l.length;g++)null!==(v=h(f,o,g,l[g],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?g:v.key),i=a(v,i,g),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,l,u,c){var s=B(u);if("function"!==typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var f=s=null,g=l,v=l=0,m=null,y=u.next();null!==g&&!y.done;v++,y=u.next()){g.index>v?(m=g,g=null):m=g.sibling;var b=p(o,g,y.value,c);if(null===b){null===g&&(g=m);break}e&&g&&null===b.alternate&&t(o,g),l=a(b,l,v),null===f?s=b:f.sibling=b,f=b,g=m}if(y.done)return r(o,g),s;if(null===g){for(;!y.done;v++,y=u.next())null!==(y=d(o,y.value,c))&&(l=a(y,l,v),null===f?s=y:f.sibling=y,f=y);return s}for(g=n(o,g);!y.done;v++,y=u.next())null!==(y=h(g,o,v,y.value,c))&&(e&&null!==y.alternate&&g.delete(null===y.key?v:y.key),l=a(y,l,v),null===f?s=y:f.sibling=y,f=y);return e&&g.forEach((function(e){return t(o,e)})),s}return function(e,n,a,u){var c="object"===typeof a&&null!==a&&a.type===S&&null===a.key;c&&(a=a.props.children);var s="object"===typeof a&&null!==a;if(s)switch(a.$$typeof){case E:e:{for(s=a.key,c=n;null!==c;){if(c.key===s){switch(c.tag){case 7:if(a.type===S){r(e,c.sibling),(n=o(c,a.props.children)).return=e,e=n;break e}break;default:if(c.elementType===a.type){r(e,c.sibling),(n=o(c,a.props)).ref=ka(e,c,a),n.return=e,e=n;break e}}r(e,c);break}t(e,c),c=c.sibling}a.type===S?((n=Wu(a.props.children,e.mode,u,a.key)).return=e,e=n):((u=Hu(a.type,a.key,a.props,null,e.mode,u)).ref=ka(e,n,a),u.return=e,e=u)}return l(e);case x:e:{for(c=a.key;null!==n;){if(n.key===c){if(4===n.tag&&n.stateNode.containerInfo===a.containerInfo&&n.stateNode.implementation===a.implementation){r(e,n.sibling),(n=o(n,a.children||[])).return=e,e=n;break e}r(e,n);break}t(e,n),n=n.sibling}(n=Qu(a,e.mode,u)).return=e,e=n}return l(e)}if("string"===typeof a||"number"===typeof a)return a=""+a,null!==n&&6===n.tag?(r(e,n.sibling),(n=o(n,a)).return=e,e=n):(r(e,n),(n=Gu(a,e.mode,u)).return=e,e=n),l(e);if(wa(a))return g(e,n,a,u);if(B(a))return v(e,n,a,u);if(s&&Ea(e,a),"undefined"===typeof a&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,G(e.type)||"Component"))}return r(e,n)}}var Sa=xa(!0),_a=xa(!1),Ta={},Ca=io(Ta),Oa=io(Ta),Pa=io(Ta);function Ra(e){if(e===Ta)throw Error(i(174));return e}function Na(e,t){switch(uo(Pa,t),uo(Oa,e),uo(Ca,Ta),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:he(null,"");break;default:t=he(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}lo(Ca),uo(Ca,t)}function La(){lo(Ca),lo(Oa),lo(Pa)}function Aa(e){Ra(Pa.current);var t=Ra(Ca.current),r=he(t,e.type);t!==r&&(uo(Oa,e),uo(Ca,r))}function Ia(e){Oa.current===e&&(lo(Ca),lo(Oa))}var ja=io(0);function Ma(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Da=null,qa=null,za=!1;function Ua(e,t){var r=Fu(5,null,null,0);r.elementType="DELETED",r.type="DELETED",r.stateNode=t,r.return=e,r.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=r,e.lastEffect=r):e.firstEffect=e.lastEffect=r}function Fa(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ba(e){if(za){var t=qa;if(t){var r=t;if(!Fa(e,t)){if(!(t=Wn(r.nextSibling))||!Fa(e,t))return e.flags=-1025&e.flags|2,za=!1,void(Da=e);Ua(Da,r)}Da=e,qa=Wn(t.firstChild)}else e.flags=-1025&e.flags|2,za=!1,Da=e}}function Va(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Da=e}function Ha(e){if(e!==Da)return!1;if(!za)return Va(e),za=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Fn(t,e.memoizedProps))for(t=qa;t;)Ua(e,t),t=Wn(t.nextSibling);if(Va(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){qa=Wn(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}qa=null}}else qa=Da?Wn(e.stateNode.nextSibling):null;return!0}function Wa(){qa=Da=null,za=!1}var $a=[];function Ga(){for(var e=0;e<$a.length;e++)$a[e]._workInProgressVersionPrimary=null;$a.length=0}var Qa=k.ReactCurrentDispatcher,Ya=k.ReactCurrentBatchConfig,Ka=0,Xa=null,Ja=null,Za=null,ei=!1,ti=!1;function ri(){throw Error(i(321))}function ni(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!ln(e[r],t[r]))return!1;return!0}function oi(e,t,r,n,o,a){if(Ka=a,Xa=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Qa.current=null===e||null===e.memoizedState?Ri:Ni,e=r(n,o),ti){a=0;do{if(ti=!1,!(25>a))throw Error(i(301));a+=1,Za=Ja=null,t.updateQueue=null,Qa.current=Li,e=r(n,o)}while(ti)}if(Qa.current=Pi,t=null!==Ja&&null!==Ja.next,Ka=0,Za=Ja=Xa=null,ei=!1,t)throw Error(i(300));return e}function ai(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Za?Xa.memoizedState=Za=e:Za=Za.next=e,Za}function ii(){if(null===Ja){var e=Xa.alternate;e=null!==e?e.memoizedState:null}else e=Ja.next;var t=null===Za?Xa.memoizedState:Za.next;if(null!==t)Za=t,Ja=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Ja=e).memoizedState,baseState:Ja.baseState,baseQueue:Ja.baseQueue,queue:Ja.queue,next:null},null===Za?Xa.memoizedState=Za=e:Za=Za.next=e}return Za}function li(e,t){return"function"===typeof t?t(e):t}function ui(e){var t=ii(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=Ja,o=n.baseQueue,a=r.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}n.baseQueue=o=a,r.pending=null}if(null!==o){o=o.next,n=n.baseState;var u=l=a=null,c=o;do{var s=c.lane;if((Ka&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),n=c.eagerReducer===e?c.eagerState:e(n,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,a=n):u=u.next=f,Xa.lanes|=s,ql|=s}c=c.next}while(null!==c&&c!==o);null===u?a=n:u.next=l,ln(n,t.memoizedState)||(Ii=!0),t.memoizedState=n,t.baseState=a,t.baseQueue=u,r.lastRenderedState=n}return[t.memoizedState,r.dispatch]}function ci(e){var t=ii(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=r.dispatch,o=r.pending,a=t.memoizedState;if(null!==o){r.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);ln(a,t.memoizedState)||(Ii=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),r.lastRenderedState=a}return[a,n]}function si(e,t,r){var n=t._getVersion;n=n(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===n:(e=e.mutableReadLanes,(e=(Ka&e)===e)&&(t._workInProgressVersionPrimary=n,$a.push(t))),e)return r(t._source);throw $a.push(t),Error(i(350))}function fi(e,t,r,n){var o=Rl;if(null===o)throw Error(i(349));var a=t._getVersion,l=a(t._source),u=Qa.current,c=u.useState((function(){return si(o,t,r)})),s=c[1],f=c[0];c=Za;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,g=d.source;d=d.subscribe;var v=Xa;return e.memoizedState={refs:p,source:t,subscribe:n},u.useEffect((function(){p.getSnapshot=r,p.setSnapshot=s;var e=a(t._source);if(!ln(l,e)){e=r(t._source),ln(f,e)||(s(e),e=su(v),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var n=o.entanglements,i=e;0<i;){var u=31-Ht(i),c=1<<u;n[u]|=e,i&=~c}}}),[r,t,n]),u.useEffect((function(){return n(t._source,(function(){var e=p.getSnapshot,r=p.setSnapshot;try{r(e(t._source));var n=su(v);o.mutableReadLanes|=n&o.pendingLanes}catch(e){r((function(){throw e}))}}))}),[t,n]),ln(h,r)&&ln(g,t)&&ln(d,n)||((e={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:f}).dispatch=s=Oi.bind(null,Xa,e),c.queue=e,c.baseQueue=null,f=si(o,t,r),c.memoizedState=c.baseState=f),f}function di(e,t,r){return fi(ii(),e,t,r)}function pi(e){var t=ai();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:e}).dispatch=Oi.bind(null,Xa,e),[t.memoizedState,e]}function hi(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=Xa.updateQueue)?(t={lastEffect:null},Xa.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function gi(e){return e={current:e},ai().memoizedState=e}function vi(){return ii().memoizedState}function mi(e,t,r,n){var o=ai();Xa.flags|=e,o.memoizedState=hi(1|t,r,void 0,void 0===n?null:n)}function yi(e,t,r,n){var o=ii();n=void 0===n?null:n;var a=void 0;if(null!==Ja){var i=Ja.memoizedState;if(a=i.destroy,null!==n&&ni(n,i.deps))return void hi(t,r,a,n)}Xa.flags|=e,o.memoizedState=hi(1|t,r,a,n)}function bi(e,t){return mi(516,4,e,t)}function wi(e,t){return yi(516,4,e,t)}function ki(e,t){return yi(4,2,e,t)}function Ei(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function xi(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,yi(4,2,Ei.bind(null,t,e),r)}function Si(){}function _i(e,t){var r=ii();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ni(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function Ti(e,t){var r=ii();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ni(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function Ci(e,t){var r=Bo();Ho(98>r?98:r,(function(){e(!0)})),Ho(97<r?97:r,(function(){var r=Ya.transition;Ya.transition=1;try{e(!1),t()}finally{Ya.transition=r}}))}function Oi(e,t,r){var n=cu(),o=su(e),a={lane:o,action:r,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===Xa||null!==i&&i===Xa)ti=ei=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,r);if(a.eagerReducer=i,a.eagerState=u,ln(u,l))return}catch(e){}fu(e,o,n)}}var Pi={readContext:oa,useCallback:ri,useContext:ri,useEffect:ri,useImperativeHandle:ri,useLayoutEffect:ri,useMemo:ri,useReducer:ri,useRef:ri,useState:ri,useDebugValue:ri,useDeferredValue:ri,useTransition:ri,useMutableSource:ri,useOpaqueIdentifier:ri,unstable_isNewReconciler:!1},Ri={readContext:oa,useCallback:function(e,t){return ai().memoizedState=[e,void 0===t?null:t],e},useContext:oa,useEffect:bi,useImperativeHandle:function(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,mi(4,2,Ei.bind(null,t,e),r)},useLayoutEffect:function(e,t){return mi(4,2,e,t)},useMemo:function(e,t){var r=ai();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=ai();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Oi.bind(null,Xa,e),[n.memoizedState,e]},useRef:gi,useState:pi,useDebugValue:Si,useDeferredValue:function(e){var t=pi(e),r=t[0],n=t[1];return bi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=pi(!1),t=e[0];return gi(e=Ci.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,r){var n=ai();return n.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:r},fi(n,e,t,r)},useOpaqueIdentifier:function(){if(za){var e=!1,t=function(e){return{$$typeof:j,toString:e,valueOf:e}}((function(){throw e||(e=!0,r("r:"+(Gn++).toString(36))),Error(i(355))})),r=pi(t)[1];return 0===(2&Xa.mode)&&(Xa.flags|=516,hi(5,(function(){r("r:"+(Gn++).toString(36))}),void 0,null)),t}return pi(t="r:"+(Gn++).toString(36)),t},unstable_isNewReconciler:!1},Ni={readContext:oa,useCallback:_i,useContext:oa,useEffect:wi,useImperativeHandle:xi,useLayoutEffect:ki,useMemo:Ti,useReducer:ui,useRef:vi,useState:function(){return ui(li)},useDebugValue:Si,useDeferredValue:function(e){var t=ui(li),r=t[0],n=t[1];return wi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=ui(li)[0];return[vi().current,e]},useMutableSource:di,useOpaqueIdentifier:function(){return ui(li)[0]},unstable_isNewReconciler:!1},Li={readContext:oa,useCallback:_i,useContext:oa,useEffect:wi,useImperativeHandle:xi,useLayoutEffect:ki,useMemo:Ti,useReducer:ci,useRef:vi,useState:function(){return ci(li)},useDebugValue:Si,useDeferredValue:function(e){var t=ci(li),r=t[0],n=t[1];return wi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=ci(li)[0];return[vi().current,e]},useMutableSource:di,useOpaqueIdentifier:function(){return ci(li)[0]},unstable_isNewReconciler:!1},Ai=k.ReactCurrentOwner,Ii=!1;function ji(e,t,r,n){t.child=null===e?_a(t,null,r,n):Sa(t,e.child,r,n)}function Mi(e,t,r,n,o){r=r.render;var a=t.ref;return na(t,o),n=oi(e,t,r,n,a,o),null===e||Ii?(t.flags|=1,ji(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,rl(e,t,o))}function Di(e,t,r,n,o,a){if(null===e){var i=r.type;return"function"!==typeof i||Bu(i)||void 0!==i.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Hu(r.type,null,n,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,qi(e,t,i,n,o,a))}return i=e.child,0===(o&a)&&(o=i.memoizedProps,(r=null!==(r=r.compare)?r:cn)(o,n)&&e.ref===t.ref)?rl(e,t,a):(t.flags|=1,(e=Vu(i,n)).ref=t.ref,e.return=t,t.child=e)}function qi(e,t,r,n,o,a){if(null!==e&&cn(e.memoizedProps,n)&&e.ref===t.ref){if(Ii=!1,0===(a&o))return t.lanes=e.lanes,rl(e,t,a);0!==(16384&e.flags)&&(Ii=!0)}return Fi(e,t,r,n,a)}function zi(e,t,r){var n=t.pendingProps,o=n.children,a=null!==e?e.memoizedState:null;if("hidden"===n.mode||"unstable-defer-without-hiding"===n.mode)if(0===(4&t.mode))t.memoizedState={baseLanes:0},bu(t,r);else{if(0===(1073741824&r))return e=null!==a?a.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},bu(t,e),null;t.memoizedState={baseLanes:0},bu(t,null!==a?a.baseLanes:r)}else null!==a?(n=a.baseLanes|r,t.memoizedState=null):n=r,bu(t,n);return ji(e,t,o,r),t.child}function Ui(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=128)}function Fi(e,t,r,n,o){var a=go(r)?po:so.current;return a=ho(t,a),na(t,o),r=oi(e,t,r,n,a,o),null===e||Ii?(t.flags|=1,ji(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,rl(e,t,o))}function Bi(e,t,r,n,o){if(go(r)){var a=!0;bo(t)}else a=!1;if(na(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ma(t,r,n),ba(t,r,n,o),n=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=r.contextType;"object"===typeof c&&null!==c?c=oa(c):c=ho(t,c=go(r)?po:so.current);var s=r.getDerivedStateFromProps,f="function"===typeof s||"function"===typeof i.getSnapshotBeforeUpdate;f||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==n||u!==c)&&ya(t,i,n,c),aa=!1;var d=t.memoizedState;i.state=d,fa(t,n,i,o),u=t.memoizedState,l!==n||d!==u||fo.current||aa?("function"===typeof s&&(ha(t,r,s,n),u=t.memoizedState),(l=aa||va(t,r,l,n,d,u,c))?(f||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4)):("function"===typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=n,t.memoizedState=u),i.props=n,i.state=u,i.context=c,n=l):("function"===typeof i.componentDidMount&&(t.flags|=4),n=!1)}else{i=t.stateNode,la(e,t),l=t.memoizedProps,c=t.type===t.elementType?l:Yo(t.type,l),i.props=c,f=t.pendingProps,d=i.context,"object"===typeof(u=r.contextType)&&null!==u?u=oa(u):u=ho(t,u=go(r)?po:so.current);var p=r.getDerivedStateFromProps;(s="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==f||d!==u)&&ya(t,i,n,u),aa=!1,d=t.memoizedState,i.state=d,fa(t,n,i,o);var h=t.memoizedState;l!==f||d!==h||fo.current||aa?("function"===typeof p&&(ha(t,r,p,n),h=t.memoizedState),(c=aa||va(t,r,c,n,d,h,u))?(s||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(n,h,u),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,h,u)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=n,t.memoizedState=h),i.props=n,i.state=h,i.context=u,n=c):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),n=!1)}return Vi(e,t,r,n,a,o)}function Vi(e,t,r,n,o,a){Ui(e,t);var i=0!==(64&t.flags);if(!n&&!i)return o&&wo(t,r,!1),rl(e,t,a);n=t.stateNode,Ai.current=t;var l=i&&"function"!==typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&i?(t.child=Sa(t,e.child,null,a),t.child=Sa(t,null,l,a)):ji(e,t,l,a),t.memoizedState=n.state,o&&wo(t,r,!0),t.child}function Hi(e){var t=e.stateNode;t.pendingContext?mo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&mo(0,t.context,!1),Na(e,t.containerInfo)}var Wi,$i,Gi,Qi={dehydrated:null,retryLane:0};function Yi(e,t,r){var n,o=t.pendingProps,a=ja.current,i=!1;return(n=0!==(64&t.flags))||(n=(null===e||null!==e.memoizedState)&&0!==(2&a)),n?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),uo(ja,1&a),null===e?(void 0!==o.fallback&&Ba(t),e=o.children,a=o.fallback,i?(e=Ki(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Qi,e):"number"===typeof o.unstable_expectedLoadTime?(e=Ki(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Qi,t.lanes=33554432,e):((r=$u({mode:"visible",children:e},t.mode,r,null)).return=t,t.child=r)):(e.memoizedState,i?(o=Ji(e,t,o.children,o.fallback,r),i=t.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:r}:{baseLanes:a.baseLanes|r},i.childLanes=e.childLanes&~r,t.memoizedState=Qi,o):(r=Xi(e,t,o.children,r),t.memoizedState=null,r))}function Ki(e,t,r,n){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0===(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=$u(t,o,0,null),r=Wu(r,o,n,null),a.return=e,r.return=e,a.sibling=r,e.child=a,r}function Xi(e,t,r,n){var o=e.child;return e=o.sibling,r=Vu(o,{mode:"visible",children:r}),0===(2&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=r}function Ji(e,t,r,n,o){var a=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:r};return 0===(2&a)&&t.child!==i?((r=t.child).childLanes=0,r.pendingProps=l,null!==(i=r.lastEffect)?(t.firstEffect=r.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):r=Vu(i,l),null!==e?n=Vu(e,n):(n=Wu(n,a,o,null)).flags|=2,n.return=t,r.return=t,r.sibling=n,t.child=r,n}function Zi(e,t){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),ra(e.return,t)}function el(e,t,r,n,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:o,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=n,i.tail=r,i.tailMode=o,i.lastEffect=a)}function tl(e,t,r){var n=t.pendingProps,o=n.revealOrder,a=n.tail;if(ji(e,t,n.children,r),0!==(2&(n=ja.current)))n=1&n|2,t.flags|=64;else{if(null!==e&&0!==(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Zi(e,r);else if(19===e.tag)Zi(e,r);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(uo(ja,n),0===(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(r=t.child,o=null;null!==r;)null!==(e=r.alternate)&&null===Ma(e)&&(o=r),r=r.sibling;null===(r=o)?(o=t.child,t.child=null):(o=r.sibling,r.sibling=null),el(t,!1,o,r,a,t.lastEffect);break;case"backwards":for(r=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Ma(e)){t.child=o;break}e=o.sibling,o.sibling=r,r=o,o=e}el(t,!0,r,null,a,t.lastEffect);break;case"together":el(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function rl(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),ql|=t.lanes,0!==(r&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(r=Vu(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Vu(e,e.pendingProps)).return=t;r.sibling=null}return t.child}return null}function nl(e,t){if(!za)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function ol(e,t,r){var n=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return go(t.type)&&vo(),null;case 3:return La(),lo(fo),lo(so),Ga(),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(Ha(t)?t.flags|=4:n.hydrate||(t.flags|=256)),null;case 5:Ia(t);var a=Ra(Pa.current);if(r=t.type,null!==e&&null!=t.stateNode)$i(e,t,r,n),e.ref!==t.ref&&(t.flags|=128);else{if(!n){if(null===t.stateNode)throw Error(i(166));return null}if(e=Ra(Ca.current),Ha(t)){n=t.stateNode,r=t.type;var l=t.memoizedProps;switch(n[Yn]=t,n[Kn]=l,r){case"dialog":Cn("cancel",n),Cn("close",n);break;case"iframe":case"object":case"embed":Cn("load",n);break;case"video":case"audio":for(e=0;e<xn.length;e++)Cn(xn[e],n);break;case"source":Cn("error",n);break;case"img":case"image":case"link":Cn("error",n),Cn("load",n);break;case"details":Cn("toggle",n);break;case"input":ee(n,l),Cn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!l.multiple},Cn("invalid",n);break;case"textarea":ue(n,l),Cn("invalid",n)}for(var c in Se(r,l),e=null,l)l.hasOwnProperty(c)&&(a=l[c],"children"===c?"string"===typeof a?n.textContent!==a&&(e=["children",a]):"number"===typeof a&&n.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(c)&&null!=a&&"onScroll"===c&&Cn("scroll",n));switch(r){case"input":K(n),ne(n,l,!0);break;case"textarea":K(n),se(n);break;case"select":case"option":break;default:"function"===typeof l.onClick&&(n.onclick=Dn)}n=e,t.updateQueue=n,null!==n&&(t.flags|=4)}else{switch(c=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=pe(r)),e===fe?"script"===r?((e=c.createElement("div")).innerHTML="<script><\\/script>",e=e.removeChild(e.firstChild)):"string"===typeof n.is?e=c.createElement(r,{is:n.is}):(e=c.createElement(r),"select"===r&&(c=e,n.multiple?c.multiple=!0:n.size&&(c.size=n.size))):e=c.createElementNS(e,r),e[Yn]=t,e[Kn]=n,Wi(e,t),t.stateNode=e,c=_e(r,n),r){case"dialog":Cn("cancel",e),Cn("close",e),a=n;break;case"iframe":case"object":case"embed":Cn("load",e),a=n;break;case"video":case"audio":for(a=0;a<xn.length;a++)Cn(xn[a],e);a=n;break;case"source":Cn("error",e),a=n;break;case"img":case"image":case"link":Cn("error",e),Cn("load",e),a=n;break;case"details":Cn("toggle",e),a=n;break;case"input":ee(e,n),a=Z(e,n),Cn("invalid",e);break;case"option":a=ae(e,n);break;case"select":e._wrapperState={wasMultiple:!!n.multiple},a=o({},n,{value:void 0}),Cn("invalid",e);break;case"textarea":ue(e,n),a=le(e,n),Cn("invalid",e);break;default:a=n}Se(r,a);var s=a;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?Ee(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&me(e,f):"children"===l?"string"===typeof f?("textarea"!==r||""!==f)&&ye(e,f):"number"===typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Cn("scroll",e):null!=f&&w(e,l,f,c))}switch(r){case"input":K(e),ne(e,n,!1);break;case"textarea":K(e),se(e);break;case"option":null!=n.value&&e.setAttribute("value",""+Q(n.value));break;case"select":e.multiple=!!n.multiple,null!=(l=n.value)?ie(e,!!n.multiple,l,!1):null!=n.defaultValue&&ie(e,!!n.multiple,n.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=Dn)}Un(r,n)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Gi(0,t,e.memoizedProps,n);else{if("string"!==typeof n&&null===t.stateNode)throw Error(i(166));r=Ra(Pa.current),Ra(Ca.current),Ha(t)?(n=t.stateNode,r=t.memoizedProps,n[Yn]=t,n.nodeValue!==r&&(t.flags|=4)):((n=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[Yn]=t,t.stateNode=n)}return null;case 13:return lo(ja),n=t.memoizedState,0!==(64&t.flags)?(t.lanes=r,t):(n=null!==n,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ha(t):r=null!==e.memoizedState,n&&!r&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&ja.current)?0===jl&&(jl=3):(0!==jl&&3!==jl||(jl=4),null===Rl||0===(134217727&ql)&&0===(134217727&zl)||gu(Rl,Ll))),(n||r)&&(t.flags|=4),null);case 4:return La(),null===e&&Pn(t.stateNode.containerInfo),null;case 10:return ta(t),null;case 17:return go(t.type)&&vo(),null;case 19:if(lo(ja),null===(n=t.memoizedState))return null;if(l=0!==(64&t.flags),null===(c=n.rendering))if(l)nl(n,!1);else{if(0!==jl||null!==e&&0!==(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Ma(e))){for(t.flags|=64,nl(n,!1),null!==(l=c.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===n.lastEffect&&(t.firstEffect=null),t.lastEffect=n.lastEffect,n=r,r=t.child;null!==r;)e=n,(l=r).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(c=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=c.childLanes,l.lanes=c.lanes,l.child=c.child,l.memoizedProps=c.memoizedProps,l.memoizedState=c.memoizedState,l.updateQueue=c.updateQueue,l.type=c.type,e=c.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return uo(ja,1&ja.current|2),t.child}e=e.sibling}null!==n.tail&&Fo()>Vl&&(t.flags|=64,l=!0,nl(n,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Ma(c))){if(t.flags|=64,l=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),nl(n,!0),null===n.tail&&"hidden"===n.tailMode&&!c.alternate&&!za)return null!==(t=t.lastEffect=n.lastEffect)&&(t.nextEffect=null),null}else 2*Fo()-n.renderingStartTime>Vl&&1073741824!==r&&(t.flags|=64,l=!0,nl(n,!1),t.lanes=33554432);n.isBackwards?(c.sibling=t.child,t.child=c):(null!==(r=n.last)?r.sibling=c:t.child=c,n.last=c)}return null!==n.tail?(r=n.tail,n.rendering=r,n.tail=r.sibling,n.lastEffect=t.lastEffect,n.renderingStartTime=Fo(),r.sibling=null,t=ja.current,uo(ja,l?1&t|2:1&t),r):null;case 23:case 24:return wu(),null!==e&&null!==e.memoizedState!==(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==n.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function al(e){switch(e.tag){case 1:go(e.type)&&vo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(La(),lo(fo),lo(so),Ga(),0!==(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Ia(e),null;case 13:return lo(ja),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return lo(ja),null;case 4:return La(),null;case 10:return ta(e),null;case 23:case 24:return wu(),null;default:return null}}function il(e,t){try{var r="",n=t;do{r+=$(n),n=n.return}while(n);var o=r}catch(e){o="\\nError generating stack: "+e.message+"\\n"+e.stack}return{value:e,source:t,stack:o}}function ll(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Wi=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},$i=function(e,t,r,n){var a=e.memoizedProps;if(a!==n){e=t.stateNode,Ra(Ca.current);var i,l=null;switch(r){case"input":a=Z(e,a),n=Z(e,n),l=[];break;case"option":a=ae(e,a),n=ae(e,n),l=[];break;case"select":a=o({},a,{value:void 0}),n=o({},n,{value:void 0}),l=[];break;case"textarea":a=le(e,a),n=le(e,n),l=[];break;default:"function"!==typeof a.onClick&&"function"===typeof n.onClick&&(e.onclick=Dn)}for(f in Se(r,n),r=null,a)if(!n.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var c=a[f];for(i in c)c.hasOwnProperty(i)&&(r||(r={}),r[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in n){var s=n[f];if(c=null!=a?a[f]:void 0,n.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(i in c)!c.hasOwnProperty(i)||s&&s.hasOwnProperty(i)||(r||(r={}),r[i]="");for(i in s)s.hasOwnProperty(i)&&c[i]!==s[i]&&(r||(r={}),r[i]=s[i])}else r||(l||(l=[]),l.push(f,r)),r=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(l=l||[]).push(f,s)):"children"===f?"string"!==typeof s&&"number"!==typeof s||(l=l||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Cn("scroll",e),l||c===s||(l=[])):"object"===typeof s&&null!==s&&s.$$typeof===j?s.toString():(l=l||[]).push(f,s))}r&&(l=l||[]).push("style",r);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Gi=function(e,t,r,n){r!==n&&(t.flags|=4)};var ul="function"===typeof WeakMap?WeakMap:Map;function cl(e,t,r){(r=ua(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){Gl||(Gl=!0,Ql=n),ll(0,t)},r}function sl(e,t,r){(r=ua(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"===typeof n){var o=t.value;r.payload=function(){return ll(0,t),n(o)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(r.callback=function(){"function"!==typeof n&&(null===Yl?Yl=new Set([this]):Yl.add(this),ll(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}var fl="function"===typeof WeakSet?WeakSet:Set;function dl(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(t){Du(e,t)}else t.current=null}function pl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var r=e.memoizedProps,n=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?r:Yo(t.type,r),n),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Hn(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function hl(e,t,r){switch(r.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3===(3&e.tag)){var n=e.create;e.destroy=n()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;n=o.next,0!==(4&(o=o.tag))&&0!==(1&o)&&(Iu(r,e),Au(r,e)),e=n}while(e!==t)}return;case 1:return e=r.stateNode,4&r.flags&&(null===t?e.componentDidMount():(n=r.elementType===r.type?t.memoizedProps:Yo(r.type,t.memoizedProps),e.componentDidUpdate(n,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=r.updateQueue)&&da(r,t,e));case 3:if(null!==(t=r.updateQueue)){if(e=null,null!==r.child)switch(r.child.tag){case 5:e=r.child.stateNode;break;case 1:e=r.child.stateNode}da(r,t,e)}return;case 5:return e=r.stateNode,void(null===t&&4&r.flags&&Un(r.type,r.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===r.memoizedState&&(r=r.alternate,null!==r&&(r=r.memoizedState,null!==r&&(r=r.dehydrated,null!==r&&Et(r)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function gl(e,t){for(var r=e;;){if(5===r.tag){var n=r.stateNode;if(t)"function"===typeof(n=n.style).setProperty?n.setProperty("display","none","important"):n.display="none";else{n=r.stateNode;var o=r.memoizedProps.style;o=void 0!==o&&null!==o&&o.hasOwnProperty("display")?o.display:null,n.style.display=ke("display",o)}}else if(6===r.tag)r.stateNode.nodeValue=t?"":r.memoizedProps;else if((23!==r.tag&&24!==r.tag||null===r.memoizedState||r===e)&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===e)break;for(;null===r.sibling;){if(null===r.return||r.return===e)return;r=r.return}r.sibling.return=r.return,r=r.sibling}}function vl(e,t){if(Eo&&"function"===typeof Eo.onCommitFiberUnmount)try{Eo.onCommitFiberUnmount(ko,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var n=r,o=n.destroy;if(n=n.tag,void 0!==o)if(0!==(4&n))Iu(t,r);else{n=t;try{o()}catch(e){Du(n,e)}}r=r.next}while(r!==e)}break;case 1:if(dl(t),"function"===typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Du(t,e)}break;case 5:dl(t);break;case 4:El(e,t)}}function ml(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function yl(e){return 5===e.tag||3===e.tag||4===e.tag}function bl(e){e:{for(var t=e.return;null!==t;){if(yl(t))break e;t=t.return}throw Error(i(160))}var r=t;switch(t=r.stateNode,r.tag){case 5:var n=!1;break;case 3:case 4:t=t.containerInfo,n=!0;break;default:throw Error(i(161))}16&r.flags&&(ye(t,""),r.flags&=-17);e:t:for(r=e;;){for(;null===r.sibling;){if(null===r.return||yl(r.return)){r=null;break e}r=r.return}for(r.sibling.return=r.return,r=r.sibling;5!==r.tag&&6!==r.tag&&18!==r.tag;){if(2&r.flags)continue t;if(null===r.child||4===r.tag)continue t;r.child.return=r,r=r.child}if(!(2&r.flags)){r=r.stateNode;break e}}n?wl(e,r,t):kl(e,r,t)}function wl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!==(r=r._reactRootContainer)&&void 0!==r||null!==t.onclick||(t.onclick=Dn));else if(4!==n&&null!==(e=e.child))for(wl(e,t,r),e=e.sibling;null!==e;)wl(e,t,r),e=e.sibling}function kl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==n&&null!==(e=e.child))for(kl(e,t,r),e=e.sibling;null!==e;)kl(e,t,r),e=e.sibling}function El(e,t){for(var r,n,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(i(160));switch(r=a.stateNode,a.tag){case 5:n=!1;break e;case 3:case 4:r=r.containerInfo,n=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,c=u;;)if(vl(l,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}n?(l=r,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,n=!0,o.child.return=o,o=o.child;continue}}else if(vl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function xl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var n=r=r.next;do{3===(3&n.tag)&&(e=n.destroy,n.destroy=void 0,void 0!==e&&e()),n=n.next}while(n!==r)}return;case 1:return;case 5:if(null!=(r=t.stateNode)){n=t.memoizedProps;var o=null!==e?e.memoizedProps:n;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(r[Kn]=n,"input"===e&&"radio"===n.type&&null!=n.name&&te(r,n),_e(e,o),t=_e(e,n),o=0;o<a.length;o+=2){var l=a[o],u=a[o+1];"style"===l?Ee(r,u):"dangerouslySetInnerHTML"===l?me(r,u):"children"===l?ye(r,u):w(r,l,u,t)}switch(e){case"input":re(r,n);break;case"textarea":ce(r,n);break;case"select":e=r._wrapperState.wasMultiple,r._wrapperState.wasMultiple=!!n.multiple,null!=(a=n.value)?ie(r,!!n.multiple,a,!1):e!==!!n.multiple&&(null!=n.defaultValue?ie(r,!!n.multiple,n.defaultValue,!0):ie(r,!!n.multiple,n.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((r=t.stateNode).hydrate&&(r.hydrate=!1,Et(r.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Bl=Fo(),gl(t.child,!0)),void Sl(t);case 19:return void Sl(t);case 17:return;case 23:case 24:return void gl(t,null!==t.memoizedState)}throw Error(i(163))}function Sl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new fl),t.forEach((function(t){var n=zu.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}function _l(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var Tl=Math.ceil,Cl=k.ReactCurrentDispatcher,Ol=k.ReactCurrentOwner,Pl=0,Rl=null,Nl=null,Ll=0,Al=0,Il=io(0),jl=0,Ml=null,Dl=0,ql=0,zl=0,Ul=0,Fl=null,Bl=0,Vl=1/0;function Hl(){Vl=Fo()+500}var Wl,$l=null,Gl=!1,Ql=null,Yl=null,Kl=!1,Xl=null,Jl=90,Zl=[],eu=[],tu=null,ru=0,nu=null,ou=-1,au=0,iu=0,lu=null,uu=!1;function cu(){return 0!==(48&Pl)?Fo():-1!==ou?ou:ou=Fo()}function su(e){if(0===(2&(e=e.mode)))return 1;if(0===(4&e))return 99===Bo()?1:2;if(0===au&&(au=Dl),0!==Qo.transition){0!==iu&&(iu=null!==Fl?Fl.pendingLanes:0),e=au;var t=4186112&~iu;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=Bo(),0!==(4&Pl)&&98===e?e=Ut(12,au):e=Ut(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),au),e}function fu(e,t,r){if(50<ru)throw ru=0,nu=null,Error(i(185));if(null===(e=du(e,t)))return null;Vt(e,t,r),e===Rl&&(zl|=t,4===jl&&gu(e,Ll));var n=Bo();1===t?0!==(8&Pl)&&0===(48&Pl)?vu(e):(pu(e,r),0===Pl&&(Hl(),$o())):(0===(4&Pl)||98!==n&&99!==n||(null===tu?tu=new Set([e]):tu.add(e)),pu(e,r)),Fl=e}function du(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}function pu(e,t){for(var r=e.callbackNode,n=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Ht(l),c=1<<u,s=a[u];if(-1===s){if(0===(c&n)||0!==(c&o)){s=t,Dt(c);var f=Mt;a[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);l&=~c}if(n=qt(e,e===Rl?Ll:0),t=Mt,0===n)null!==r&&(r!==jo&&_o(r),e.callbackNode=null,e.callbackPriority=0);else{if(null!==r){if(e.callbackPriority===t)return;r!==jo&&_o(r)}15===t?(r=vu.bind(null,e),null===Do?(Do=[r],qo=So(Ro,Go)):Do.push(r),r=jo):14===t?r=Wo(99,vu.bind(null,e)):r=Wo(r=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),hu.bind(null,e)),e.callbackPriority=t,e.callbackNode=r}}function hu(e){if(ou=-1,iu=au=0,0!==(48&Pl))throw Error(i(327));var t=e.callbackNode;if(Lu()&&e.callbackNode!==t)return null;var r=qt(e,e===Rl?Ll:0);if(0===r)return null;var n=r,o=Pl;Pl|=16;var a=xu();for(Rl===e&&Ll===n||(Hl(),ku(e,n));;)try{Tu();break}catch(t){Eu(e,t)}if(ea(),Cl.current=a,Pl=o,null!==Nl?n=0:(Rl=null,Ll=0,n=jl),0!==(Dl&zl))ku(e,0);else if(0!==n){if(2===n&&(Pl|=64,e.hydrate&&(e.hydrate=!1,Hn(e.containerInfo)),0!==(r=zt(e))&&(n=Su(e,r))),1===n)throw t=Ml,ku(e,0),gu(e,r),pu(e,Fo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=r,n){case 0:case 1:throw Error(i(345));case 2:Pu(e);break;case 3:if(gu(e,r),(62914560&r)===r&&10<(n=Bl+500-Fo())){if(0!==qt(e,0))break;if(((o=e.suspendedLanes)&r)!==r){cu(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Bn(Pu.bind(null,e),n);break}Pu(e);break;case 4:if(gu(e,r),(4186112&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var l=31-Ht(r);a=1<<l,(l=n[l])>o&&(o=l),r&=~a}if(r=o,10<(r=(120>(r=Fo()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Tl(r/1960))-r)){e.timeoutHandle=Bn(Pu.bind(null,e),r);break}Pu(e);break;case 5:Pu(e);break;default:throw Error(i(329))}}return pu(e,Fo()),e.callbackNode===t?hu.bind(null,e):null}function gu(e,t){for(t&=~Ul,t&=~zl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-Ht(t),n=1<<r;e[r]=-1,t&=~n}}function vu(e){if(0!==(48&Pl))throw Error(i(327));if(Lu(),e===Rl&&0!==(e.expiredLanes&Ll)){var t=Ll,r=Su(e,t);0!==(Dl&zl)&&(r=Su(e,t=qt(e,t)))}else r=Su(e,t=qt(e,0));if(0!==e.tag&&2===r&&(Pl|=64,e.hydrate&&(e.hydrate=!1,Hn(e.containerInfo)),0!==(t=zt(e))&&(r=Su(e,t))),1===r)throw r=Ml,ku(e,0),gu(e,t),pu(e,Fo()),r;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Pu(e),pu(e,Fo()),null}function mu(e,t){var r=Pl;Pl|=1;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}}function yu(e,t){var r=Pl;Pl&=-2,Pl|=8;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}}function bu(e,t){uo(Il,Al),Al|=t,Dl|=t}function wu(){Al=Il.current,lo(Il)}function ku(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,Vn(r)),null!==Nl)for(r=Nl.return;null!==r;){var n=r;switch(n.tag){case 1:null!==(n=n.type.childContextTypes)&&void 0!==n&&vo();break;case 3:La(),lo(fo),lo(so),Ga();break;case 5:Ia(n);break;case 4:La();break;case 13:case 19:lo(ja);break;case 10:ta(n);break;case 23:case 24:wu()}r=r.return}Rl=e,Nl=Vu(e.current,null),Ll=Al=Dl=t,jl=0,Ml=null,Ul=zl=ql=0}function Eu(e,t){for(;;){var r=Nl;try{if(ea(),Qa.current=Pi,ei){for(var n=Xa.memoizedState;null!==n;){var o=n.queue;null!==o&&(o.pending=null),n=n.next}ei=!1}if(Ka=0,Za=Ja=Xa=null,ti=!1,Ol.current=null,null===r||null===r.return){jl=1,Ml=t,Nl=null;break}e:{var a=e,i=r.return,l=r,u=t;if(t=Ll,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u;if(0===(2&l.mode)){var s=l.alternate;s?(l.updateQueue=s.updateQueue,l.memoizedState=s.memoizedState,l.lanes=s.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!==(1&ja.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var g=d.memoizedProps;p=void 0!==g.fallback&&(!0!==g.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var m=new Set;m.add(c),d.updateQueue=m}else v.add(c);if(0===(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=ua(-1,1);y.tag=2,ca(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new ul,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(l)){u.add(l);var w=qu.bind(null,a,c,l);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((G(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==jl&&(jl=2),u=il(u,l),d=i;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,sa(d,cl(0,a,t));break e;case 1:a=u;var k=d.type,E=d.stateNode;if(0===(64&d.flags)&&("function"===typeof k.getDerivedStateFromError||null!==E&&"function"===typeof E.componentDidCatch&&(null===Yl||!Yl.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,sa(d,sl(d,a,t));break e}}d=d.return}while(null!==d)}Ou(r)}catch(e){t=e,Nl===r&&null!==r&&(Nl=r=r.return);continue}break}}function xu(){var e=Cl.current;return Cl.current=Pi,null===e?Pi:e}function Su(e,t){var r=Pl;Pl|=16;var n=xu();for(Rl===e&&Ll===t||ku(e,t);;)try{_u();break}catch(t){Eu(e,t)}if(ea(),Pl=r,Cl.current=n,null!==Nl)throw Error(i(261));return Rl=null,Ll=0,jl}function _u(){for(;null!==Nl;)Cu(Nl)}function Tu(){for(;null!==Nl&&!To();)Cu(Nl)}function Cu(e){var t=Wl(e.alternate,e,Al);e.memoizedProps=e.pendingProps,null===t?Ou(e):Nl=t,Ol.current=null}function Ou(e){var t=e;do{var r=t.alternate;if(e=t.return,0===(2048&t.flags)){if(null!==(r=ol(r,t,Al)))return void(Nl=r);if(24!==(r=t).tag&&23!==r.tag||null===r.memoizedState||0!==(1073741824&Al)||0===(4&r.mode)){for(var n=0,o=r.child;null!==o;)n|=o.lanes|o.childLanes,o=o.sibling;r.childLanes=n}null!==e&&0===(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(r=al(t)))return r.flags&=2047,void(Nl=r);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Nl=t);Nl=t=e}while(null!==t);0===jl&&(jl=5)}function Pu(e){var t=Bo();return Ho(99,Ru.bind(null,e,t)),null}function Ru(e,t){do{Lu()}while(null!==Xl);if(0!==(48&Pl))throw Error(i(327));var r=e.finishedWork;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(i(177));e.callbackNode=null;var n=r.lanes|r.childLanes,o=n,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<a;){var c=31-Ht(a),s=1<<c;o[c]=0,l[c]=-1,u[c]=-1,a&=~s}if(null!==tu&&0===(24&n)&&tu.has(e)&&tu.delete(e),e===Rl&&(Nl=Rl=null,Ll=0),1<r.flags?null!==r.lastEffect?(r.lastEffect.nextEffect=r,n=r.firstEffect):n=r:n=r.firstEffect,null!==n){if(o=Pl,Pl|=32,Ol.current=null,qn=Yt,hn(l=pn())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,a=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,g=0,v=l,m=null;t:for(;;){for(var y;v!==u||0!==a&&3!==v.nodeType||(d=f+a),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(y=v.firstChild);)m=v,v=y;for(;;){if(v===l)break t;if(m===u&&++h===a&&(d=f),m===c&&++g===s&&(p=f),null!==(y=v.nextSibling))break;m=(v=m).parentNode}v=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;zn={focusedElem:l,selectionRange:u},Yt=!1,lu=null,uu=!1,$l=n;do{try{Nu()}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);lu=null,$l=n;do{try{for(l=e;null!==$l;){var b=$l.flags;if(16&b&&ye($l.stateNode,""),128&b){var w=$l.alternate;if(null!==w){var k=w.ref;null!==k&&("function"===typeof k?k(null):k.current=null)}}switch(1038&b){case 2:bl($l),$l.flags&=-3;break;case 6:bl($l),$l.flags&=-3,xl($l.alternate,$l);break;case 1024:$l.flags&=-1025;break;case 1028:$l.flags&=-1025,xl($l.alternate,$l);break;case 4:xl($l.alternate,$l);break;case 8:El(l,u=$l);var E=u.alternate;ml(u),null!==E&&ml(E)}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);if(k=zn,w=pn(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&dn(b.ownerDocument.documentElement,b)){null!==l&&hn(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(l.start,u),l=void 0===l.end?E:Math.min(l.end,u),!k.extend&&E>l&&(u=l,l=E,E=u),u=fn(b,E),a=fn(b,l),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>l?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"===typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Yt=!!qn,zn=qn=null,e.current=r,$l=n;do{try{for(b=e;null!==$l;){var x=$l.flags;if(36&x&&hl(b,$l.alternate,$l),128&x){w=void 0;var S=$l.ref;if(null!==S){var _=$l.stateNode;switch($l.tag){case 5:w=_;break;default:w=_}"function"===typeof S?S(w):S.current=w}}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);$l=null,Mo(),Pl=o}else e.current=r;if(Kl)Kl=!1,Xl=e,Jl=t;else for($l=n;null!==$l;)t=$l.nextEffect,$l.nextEffect=null,8&$l.flags&&((x=$l).sibling=null,x.stateNode=null),$l=t;if(0===(n=e.pendingLanes)&&(Yl=null),1===n?e===nu?ru++:(ru=0,nu=e):ru=0,r=r.stateNode,Eo&&"function"===typeof Eo.onCommitFiberRoot)try{Eo.onCommitFiberRoot(ko,r,void 0,64===(64&r.current.flags))}catch(e){}if(pu(e,Fo()),Gl)throw Gl=!1,e=Ql,Ql=null,e;return 0!==(8&Pl)||$o(),null}function Nu(){for(;null!==$l;){var e=$l.alternate;uu||null===lu||(0!==(8&$l.flags)?et($l,lu)&&(uu=!0):13===$l.tag&&_l(e,$l)&&et($l,lu)&&(uu=!0));var t=$l.flags;0!==(256&t)&&pl(e,$l),0===(512&t)||Kl||(Kl=!0,Wo(97,(function(){return Lu(),null}))),$l=$l.nextEffect}}function Lu(){if(90!==Jl){var e=97<Jl?97:Jl;return Jl=90,Ho(e,ju)}return!1}function Au(e,t){Zl.push(t,e),Kl||(Kl=!0,Wo(97,(function(){return Lu(),null})))}function Iu(e,t){eu.push(t,e),Kl||(Kl=!0,Wo(97,(function(){return Lu(),null})))}function ju(){if(null===Xl)return!1;var e=Xl;if(Xl=null,0!==(48&Pl))throw Error(i(331));var t=Pl;Pl|=32;var r=eu;eu=[];for(var n=0;n<r.length;n+=2){var o=r[n],a=r[n+1],l=o.destroy;if(o.destroy=void 0,"function"===typeof l)try{l()}catch(e){if(null===a)throw Error(i(330));Du(a,e)}}for(r=Zl,Zl=[],n=0;n<r.length;n+=2){o=r[n],a=r[n+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(i(330));Du(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Pl=t,$o(),!0}function Mu(e,t,r){ca(e,t=cl(0,t=il(r,t),1)),t=cu(),null!==(e=du(e,1))&&(Vt(e,1,t),pu(e,t))}function Du(e,t){if(3===e.tag)Mu(e,e,t);else for(var r=e.return;null!==r;){if(3===r.tag){Mu(r,e,t);break}if(1===r.tag){var n=r.stateNode;if("function"===typeof r.type.getDerivedStateFromError||"function"===typeof n.componentDidCatch&&(null===Yl||!Yl.has(n))){var o=sl(r,e=il(t,e),1);if(ca(r,o),o=cu(),null!==(r=du(r,1)))Vt(r,1,o),pu(r,o);else if("function"===typeof n.componentDidCatch&&(null===Yl||!Yl.has(n)))try{n.componentDidCatch(t,e)}catch(e){}break}}r=r.return}}function qu(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=cu(),e.pingedLanes|=e.suspendedLanes&r,Rl===e&&(Ll&r)===r&&(4===jl||3===jl&&(62914560&Ll)===Ll&&500>Fo()-Bl?ku(e,0):Ul|=r),pu(e,t)}function zu(e,t){var r=e.stateNode;null!==r&&r.delete(t),0===(t=0)&&(0===(2&(t=e.mode))?t=1:0===(4&t)?t=99===Bo()?1:2:(0===au&&(au=Dl),0===(t=Ft(62914560&~au))&&(t=4194304))),r=cu(),null!==(e=du(e,t))&&(Vt(e,t,r),pu(e,r))}function Uu(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Fu(e,t,r,n){return new Uu(e,t,r,n)}function Bu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Vu(e,t){var r=e.alternate;return null===r?((r=Fu(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Hu(e,t,r,n,o,a){var l=2;if(n=e,"function"===typeof e)Bu(e)&&(l=1);else if("string"===typeof e)l=5;else e:switch(e){case S:return Wu(r.children,o,a,t);case M:l=8,o|=16;break;case _:l=8,o|=1;break;case T:return(e=Fu(12,r,t,8|o)).elementType=T,e.type=T,e.lanes=a,e;case R:return(e=Fu(13,r,t,o)).type=R,e.elementType=R,e.lanes=a,e;case N:return(e=Fu(19,r,t,o)).elementType=N,e.lanes=a,e;case D:return $u(r,o,a,t);case q:return(e=Fu(24,r,t,o)).elementType=q,e.lanes=a,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case C:l=10;break e;case O:l=9;break e;case P:l=11;break e;case L:l=14;break e;case A:l=16,n=null;break e;case I:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Fu(l,r,t,o)).elementType=e,t.type=n,t.lanes=a,t}function Wu(e,t,r,n){return(e=Fu(7,e,n,t)).lanes=r,e}function $u(e,t,r,n){return(e=Fu(23,e,n,t)).elementType=D,e.lanes=r,e}function Gu(e,t,r){return(e=Fu(6,e,null,t)).lanes=r,e}function Qu(e,t,r){return(t=Fu(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Yu(e,t,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=r,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function Ku(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==n?null:""+n,children:e,containerInfo:t,implementation:r}}function Xu(e,t,r,n){var o=t.current,a=cu(),l=su(o);e:if(r){t:{if(Ke(r=r._reactInternals)!==r||1!==r.tag)throw Error(i(170));var u=r;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(go(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===r.tag){var c=r.type;if(go(c)){r=yo(r,c,u);break e}}r=u}else r=co;return null===t.context?t.context=r:t.pendingContext=r,(t=ua(a,l)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),ca(o,t),fu(o,l,a),l}function Ju(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Zu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function ec(e,t){Zu(e,t),(e=e.alternate)&&Zu(e,t)}function tc(e,t,r){var n=null!=r&&null!=r.hydrationOptions&&r.hydrationOptions.mutableSources||null;if(r=new Yu(e,t,null!=r&&!0===r.hydrate),t=Fu(3,null,null,2===t?7:1===t?3:0),r.current=t,t.stateNode=r,ia(t),e[Xn]=r.current,Pn(8===e.nodeType?e.parentNode:e),n)for(e=0;e<n.length;e++){var o=(t=n[e])._getVersion;o=o(t._source),null==r.mutableSourceEagerHydrationData?r.mutableSourceEagerHydrationData=[t,o]:r.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=r}function rc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function nc(e,t,r,n,o){var a=r._reactRootContainer;if(a){var i=a._internalRoot;if("function"===typeof o){var l=o;o=function(){var e=Ju(i);l.call(e)}}Xu(t,i,e,o)}else{if(a=r._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var r;r=e.lastChild;)e.removeChild(r);return new tc(e,0,t?{hydrate:!0}:void 0)}(r,n),i=a._internalRoot,"function"===typeof o){var u=o;o=function(){var e=Ju(i);u.call(e)}}yu((function(){Xu(t,i,e,o)}))}return Ju(i)}function oc(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rc(t))throw Error(i(200));return Ku(e,t,null,r)}Wl=function(e,t,r){var n=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||fo.current)Ii=!0;else{if(0===(r&n)){switch(Ii=!1,t.tag){case 3:Hi(t),Wa();break;case 5:Aa(t);break;case 1:go(t.type)&&bo(t);break;case 4:Na(t,t.stateNode.containerInfo);break;case 10:n=t.memoizedProps.value;var o=t.type._context;uo(Ko,o._currentValue),o._currentValue=n;break;case 13:if(null!==t.memoizedState)return 0!==(r&t.child.childLanes)?Yi(e,t,r):(uo(ja,1&ja.current),null!==(t=rl(e,t,r))?t.sibling:null);uo(ja,1&ja.current);break;case 19:if(n=0!==(r&t.childLanes),0!==(64&e.flags)){if(n)return tl(e,t,r);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),uo(ja,ja.current),n)break;return null;case 23:case 24:return t.lanes=0,zi(e,t,r)}return rl(e,t,r)}Ii=0!==(16384&e.flags)}else Ii=!1;switch(t.lanes=0,t.tag){case 2:if(n=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=ho(t,so.current),na(t,r),o=oi(null,t,n,e,o,r),t.flags|=1,"object"===typeof o&&null!==o&&"function"===typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,go(n)){var a=!0;bo(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ia(t);var l=n.getDerivedStateFromProps;"function"===typeof l&&ha(t,n,l,e),o.updater=ga,t.stateNode=o,o._reactInternals=t,ba(t,n,e,r),t=Vi(null,t,n,!0,a,r)}else t.tag=0,ji(null,t,o,r),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"===typeof e)return Bu(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===P)return 11;if(e===L)return 14}return 2}(o),e=Yo(o,e),a){case 0:t=Fi(null,t,o,e,r);break e;case 1:t=Bi(null,t,o,e,r);break e;case 11:t=Mi(null,t,o,e,r);break e;case 14:t=Di(null,t,o,Yo(o.type,e),n,r);break e}throw Error(i(306,o,""))}return t;case 0:return n=t.type,o=t.pendingProps,Fi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 1:return n=t.type,o=t.pendingProps,Bi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 3:if(Hi(t),n=t.updateQueue,null===e||null===n)throw Error(i(282));if(n=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,la(e,t),fa(t,n,null,r),(n=t.memoizedState.element)===o)Wa(),t=rl(e,t,r);else{if((a=(o=t.stateNode).hydrate)&&(qa=Wn(t.stateNode.containerInfo.firstChild),Da=t,a=za=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],$a.push(a);for(r=_a(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|1024,r=r.sibling}else ji(e,t,n,r),Wa();t=t.child}return t;case 5:return Aa(t),null===e&&Ba(t),n=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Fn(n,o)?l=null:null!==a&&Fn(n,a)&&(t.flags|=16),Ui(e,t),ji(e,t,l,r),t.child;case 6:return null===e&&Ba(t),null;case 13:return Yi(e,t,r);case 4:return Na(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=Sa(t,null,n,r):ji(e,t,n,r),t.child;case 11:return n=t.type,o=t.pendingProps,Mi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 7:return ji(e,t,t.pendingProps,r),t.child;case 8:case 12:return ji(e,t,t.pendingProps.children,r),t.child;case 10:e:{n=t.type._context,o=t.pendingProps,l=t.memoizedProps,a=o.value;var u=t.type._context;if(uo(Ko,u._currentValue),u._currentValue=a,null!==l)if(u=l.value,0===(a=ln(u,a)?0:0|("function"===typeof n._calculateChangedBits?n._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!fo.current){t=rl(e,t,r);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===n&&0!==(s.observedBits&a)){1===u.tag&&((s=ua(-1,r&-r)).tag=2,ca(u,s)),u.lanes|=r,null!==(s=u.alternate)&&(s.lanes|=r),ra(u.return,r),c.lanes|=r;break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}ji(e,t,o.children,r),t=t.child}return t;case 9:return o=t.type,n=(a=t.pendingProps).children,na(t,r),n=n(o=oa(o,a.unstable_observedBits)),t.flags|=1,ji(e,t,n,r),t.child;case 14:return a=Yo(o=t.type,t.pendingProps),Di(e,t,o,a=Yo(o.type,a),n,r);case 15:return qi(e,t,t.type,t.pendingProps,n,r);case 17:return n=t.type,o=t.pendingProps,o=t.elementType===n?o:Yo(n,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,go(n)?(e=!0,bo(t)):e=!1,na(t,r),ma(t,n,o),ba(t,n,o,r),Vi(null,t,n,!0,e,r);case 19:return tl(e,t,r);case 23:case 24:return zi(e,t,r)}throw Error(i(156,t.tag))},tc.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Xn]=null}))},tt=function(e){13===e.tag&&(fu(e,4,cu()),ec(e,4))},rt=function(e){13===e.tag&&(fu(e,67108864,cu()),ec(e,67108864))},nt=function(e){if(13===e.tag){var t=cu(),r=su(e);fu(e,r,t),ec(e,r)}},ot=function(e,t){return t()},Ce=function(e,t,r){switch(t){case"input":if(re(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+\'][type="radio"]\'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var o=ro(n);if(!o)throw Error(i(90));X(n),re(n,o)}}}break;case"textarea":ce(e,r);break;case"select":null!=(t=r.value)&&ie(e,!!r.multiple,t,!1)}},Ae=mu,Ie=function(e,t,r,n,o){var a=Pl;Pl|=4;try{return Ho(98,e.bind(null,t,r,n,o))}finally{0===(Pl=a)&&(Hl(),$o())}},je=function(){0===(49&Pl)&&(function(){if(null!==tu){var e=tu;tu=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,pu(e,Fo())}))}$o()}(),Lu())},Me=function(e,t){var r=Pl;Pl|=2;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}};var ac={Events:[eo,to,ro,Ne,Le,Lu,{current:!1}]},ic={findFiberByHostInstance:Zn,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},lc={bundleType:ic.bundleType,version:ic.version,rendererPackageName:ic.rendererPackageName,rendererConfig:ic.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:ic.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof{}){var uc={};if(!uc.isDisabled&&uc.supportsFiber)try{ko=uc.inject(lc),Eo=uc}catch(ve){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ac,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var r=Pl;if(0!==(48&r))return e(t);Pl|=1;try{if(e)return Ho(99,e.bind(null,t))}finally{Pl=r,$o()}},t.hydrate=function(e,t,r){if(!rc(t))throw Error(i(200));return nc(null,e,t,!0,r)},t.render=function(e,t,r){if(!rc(t))throw Error(i(200));return nc(null,e,t,!1,r)},t.unmountComponentAtNode=function(e){if(!rc(e))throw Error(i(40));return!!e._reactRootContainer&&(yu((function(){nc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Xn]=null}))})),!0)},t.unstable_batchedUpdates=mu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,r,n){if(!rc(r))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return nc(e,t,r,!1,n)},t.version="17.0.1"},function(e,t,r){"use strict";e.exports=r(186)},function(e,t,r){"use strict";var n,o,a,i;if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var u=Date,c=u.now();t.unstable_now=function(){return u.now()-c}}if("undefined"===typeof window||"function"!==typeof MessageChannel){var s=null,f=null,d=function e(){if(null!==s)try{var r=t.unstable_now();s(!0,r),s=null}catch(t){throw setTimeout(e,0),t}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(d,0))},o=function(e,t){f=setTimeout(e,t)},a=function(){clearTimeout(f)},t.unstable_shouldYield=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var p=window.setTimeout,h=window.clearTimeout;if("undefined"!==typeof console){var g=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn\'t support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!==typeof g&&console.error("This browser doesn\'t support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var v=!1,m=null,y=-1,b=5,w=0;t.unstable_shouldYield=function(){return t.unstable_now()>=w},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<e?Math.floor(1e3/e):5};var k=new MessageChannel,E=k.port2;k.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();w=e+b;try{m(!0,e)?E.postMessage(null):(v=!1,m=null)}catch(e){throw E.postMessage(null),e}}else v=!1},n=function(e){m=e,v||(v=!0,E.postMessage(null))},o=function(e,r){y=p((function(){e(t.unstable_now())}),r)},a=function(){h(y),y=-1}}function x(e,t){var r=e.length;e.push(t);e:for(;;){var n=r-1>>>1,o=e[n];if(!(void 0!==o&&0<T(o,t)))break e;e[n]=t,e[r]=o,r=n}}function S(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,o=e.length;n<o;){var a=2*(n+1)-1,i=e[a],l=a+1,u=e[l];if(void 0!==i&&0>T(i,r))void 0!==u&&0>T(u,i)?(e[n]=u,e[l]=r,n=l):(e[n]=i,e[a]=r,n=a);else{if(!(void 0!==u&&0>T(u,r)))break e;e[n]=u,e[l]=r,n=l}}}return t}return null}function T(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}var C=[],O=[],P=1,R=null,N=3,L=!1,A=!1,I=!1;function j(e){for(var t=S(O);null!==t;){if(null===t.callback)_(O);else{if(!(t.startTime<=e))break;_(O),t.sortIndex=t.expirationTime,x(C,t)}t=S(O)}}function M(e){if(I=!1,j(e),!A)if(null!==S(C))A=!0,n(D);else{var t=S(O);null!==t&&o(M,t.startTime-e)}}function D(e,r){A=!1,I&&(I=!1,a()),L=!0;var n=N;try{for(j(r),R=S(C);null!==R&&(!(R.expirationTime>r)||e&&!t.unstable_shouldYield());){var i=R.callback;if("function"===typeof i){R.callback=null,N=R.priorityLevel;var l=i(R.expirationTime<=r);r=t.unstable_now(),"function"===typeof l?R.callback=l:R===S(C)&&_(C),j(r)}else _(C);R=S(C)}if(null!==R)var u=!0;else{var c=S(O);null!==c&&o(M,c.startTime-r),u=!1}return u}finally{R=null,N=n,L=!1}}var q=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){A||L||(A=!0,n(D))},t.unstable_getCurrentPriorityLevel=function(){return N},t.unstable_getFirstCallbackNode=function(){return S(C)},t.unstable_next=function(e){switch(N){case 1:case 2:case 3:var t=3;break;default:t=N}var r=N;N=t;try{return e()}finally{N=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=q,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=N;N=e;try{return t()}finally{N=r}},t.unstable_scheduleCallback=function(e,r,i){var l=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?l+i:l:i=l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:r,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,x(O,e),null===S(C)&&e===S(O)&&(I?a():I=!0,o(M,i-l))):(e.sortIndex=u,x(C,e),A||L||(A=!0,n(D))),e},t.unstable_wrapCallback=function(e){var t=N;return function(){var r=N;N=t;try{return e.apply(this,arguments)}finally{N=r}}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={"&lt":"<","&gt":">","&quot":\'"\',"&apos":"\'","&amp":"&","&lt;":"<","&gt;":">","&quot;":\'"\',"&apos;":"\'","&amp;":"&"},o={60:"lt",62:"gt",34:"quot",39:"apos",38:"amp"},a={"<":"&lt;",">":"&gt;",\'"\':"&quot;","\'":"&apos;","&":"&amp;"},i=function(){function e(){}return e.prototype.encode=function(e){return e&&e.length?e.replace(/[<>"\'&]/g,(function(e){return a[e]})):""},e.encode=function(t){return(new e).encode(t)},e.prototype.decode=function(e){return e&&e.length?e.replace(/&#?[0-9a-zA-Z]+;?/g,(function(e){if("#"===e.charAt(1)){var t="x"===e.charAt(2).toLowerCase()?parseInt(e.substr(3),16):parseInt(e.substr(2));return isNaN(t)||t<-32768||t>65535?"":String.fromCharCode(t)}return n[e]||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var a=e.charCodeAt(n),i=o[a];i?(r+="&"+i+";",n++):(r+=a<32||a>126?"&#"+a+";":e.charAt(n),n++)}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.XmlEntities=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=["apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","Aelig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams"],o=[39,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,38,60,62,338,339,352,353,376,710,732,8194,8195,8201,8204,8205,8206,8207,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8240,8249,8250,8364,402,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,977,978,982,8226,8230,8242,8243,8254,8260,8472,8465,8476,8482,8501,8592,8593,8594,8595,8596,8629,8656,8657,8658,8659,8660,8704,8706,8707,8709,8711,8712,8713,8715,8719,8721,8722,8727,8730,8733,8734,8736,8743,8744,8745,8746,8747,8756,8764,8773,8776,8800,8801,8804,8805,8834,8835,8836,8838,8839,8853,8855,8869,8901,8968,8969,8970,8971,9001,9002,9674,9824,9827,9829,9830],a={},i={};!function(){for(var e=0,t=n.length;e<t;){var r=n[e],l=o[e];a[r]=String.fromCharCode(l),i[l]=r,e++}}();var l=function(){function e(){}return e.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,(function(e,t){var r;if("#"===t.charAt(0)){var n="x"===t.charAt(1).toLowerCase()?parseInt(t.substr(2),16):parseInt(t.substr(1));isNaN(n)||n<-32768||n>65535||(r=String.fromCharCode(n))}else r=a[t];return r||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=i[e.charCodeAt(n)];r+=o?"&"+o+";":e.charAt(n),n++}return r},e.encode=function(t){return(new e).encode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n),a=i[o];r+=a?"&"+a+";":o<32||o>126?"&#"+o+";":e.charAt(n),n++}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.Html4Entities=l},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=[["Aacute",[193]],["aacute",[225]],["Abreve",[258]],["abreve",[259]],["ac",[8766]],["acd",[8767]],["acE",[8766,819]],["Acirc",[194]],["acirc",[226]],["acute",[180]],["Acy",[1040]],["acy",[1072]],["AElig",[198]],["aelig",[230]],["af",[8289]],["Afr",[120068]],["afr",[120094]],["Agrave",[192]],["agrave",[224]],["alefsym",[8501]],["aleph",[8501]],["Alpha",[913]],["alpha",[945]],["Amacr",[256]],["amacr",[257]],["amalg",[10815]],["amp",[38]],["AMP",[38]],["andand",[10837]],["And",[10835]],["and",[8743]],["andd",[10844]],["andslope",[10840]],["andv",[10842]],["ang",[8736]],["ange",[10660]],["angle",[8736]],["angmsdaa",[10664]],["angmsdab",[10665]],["angmsdac",[10666]],["angmsdad",[10667]],["angmsdae",[10668]],["angmsdaf",[10669]],["angmsdag",[10670]],["angmsdah",[10671]],["angmsd",[8737]],["angrt",[8735]],["angrtvb",[8894]],["angrtvbd",[10653]],["angsph",[8738]],["angst",[197]],["angzarr",[9084]],["Aogon",[260]],["aogon",[261]],["Aopf",[120120]],["aopf",[120146]],["apacir",[10863]],["ap",[8776]],["apE",[10864]],["ape",[8778]],["apid",[8779]],["apos",[39]],["ApplyFunction",[8289]],["approx",[8776]],["approxeq",[8778]],["Aring",[197]],["aring",[229]],["Ascr",[119964]],["ascr",[119990]],["Assign",[8788]],["ast",[42]],["asymp",[8776]],["asympeq",[8781]],["Atilde",[195]],["atilde",[227]],["Auml",[196]],["auml",[228]],["awconint",[8755]],["awint",[10769]],["backcong",[8780]],["backepsilon",[1014]],["backprime",[8245]],["backsim",[8765]],["backsimeq",[8909]],["Backslash",[8726]],["Barv",[10983]],["barvee",[8893]],["barwed",[8965]],["Barwed",[8966]],["barwedge",[8965]],["bbrk",[9141]],["bbrktbrk",[9142]],["bcong",[8780]],["Bcy",[1041]],["bcy",[1073]],["bdquo",[8222]],["becaus",[8757]],["because",[8757]],["Because",[8757]],["bemptyv",[10672]],["bepsi",[1014]],["bernou",[8492]],["Bernoullis",[8492]],["Beta",[914]],["beta",[946]],["beth",[8502]],["between",[8812]],["Bfr",[120069]],["bfr",[120095]],["bigcap",[8898]],["bigcirc",[9711]],["bigcup",[8899]],["bigodot",[10752]],["bigoplus",[10753]],["bigotimes",[10754]],["bigsqcup",[10758]],["bigstar",[9733]],["bigtriangledown",[9661]],["bigtriangleup",[9651]],["biguplus",[10756]],["bigvee",[8897]],["bigwedge",[8896]],["bkarow",[10509]],["blacklozenge",[10731]],["blacksquare",[9642]],["blacktriangle",[9652]],["blacktriangledown",[9662]],["blacktriangleleft",[9666]],["blacktriangleright",[9656]],["blank",[9251]],["blk12",[9618]],["blk14",[9617]],["blk34",[9619]],["block",[9608]],["bne",[61,8421]],["bnequiv",[8801,8421]],["bNot",[10989]],["bnot",[8976]],["Bopf",[120121]],["bopf",[120147]],["bot",[8869]],["bottom",[8869]],["bowtie",[8904]],["boxbox",[10697]],["boxdl",[9488]],["boxdL",[9557]],["boxDl",[9558]],["boxDL",[9559]],["boxdr",[9484]],["boxdR",[9554]],["boxDr",[9555]],["boxDR",[9556]],["boxh",[9472]],["boxH",[9552]],["boxhd",[9516]],["boxHd",[9572]],["boxhD",[9573]],["boxHD",[9574]],["boxhu",[9524]],["boxHu",[9575]],["boxhU",[9576]],["boxHU",[9577]],["boxminus",[8863]],["boxplus",[8862]],["boxtimes",[8864]],["boxul",[9496]],["boxuL",[9563]],["boxUl",[9564]],["boxUL",[9565]],["boxur",[9492]],["boxuR",[9560]],["boxUr",[9561]],["boxUR",[9562]],["boxv",[9474]],["boxV",[9553]],["boxvh",[9532]],["boxvH",[9578]],["boxVh",[9579]],["boxVH",[9580]],["boxvl",[9508]],["boxvL",[9569]],["boxVl",[9570]],["boxVL",[9571]],["boxvr",[9500]],["boxvR",[9566]],["boxVr",[9567]],["boxVR",[9568]],["bprime",[8245]],["breve",[728]],["Breve",[728]],["brvbar",[166]],["bscr",[119991]],["Bscr",[8492]],["bsemi",[8271]],["bsim",[8765]],["bsime",[8909]],["bsolb",[10693]],["bsol",[92]],["bsolhsub",[10184]],["bull",[8226]],["bullet",[8226]],["bump",[8782]],["bumpE",[10926]],["bumpe",[8783]],["Bumpeq",[8782]],["bumpeq",[8783]],["Cacute",[262]],["cacute",[263]],["capand",[10820]],["capbrcup",[10825]],["capcap",[10827]],["cap",[8745]],["Cap",[8914]],["capcup",[10823]],["capdot",[10816]],["CapitalDifferentialD",[8517]],["caps",[8745,65024]],["caret",[8257]],["caron",[711]],["Cayleys",[8493]],["ccaps",[10829]],["Ccaron",[268]],["ccaron",[269]],["Ccedil",[199]],["ccedil",[231]],["Ccirc",[264]],["ccirc",[265]],["Cconint",[8752]],["ccups",[10828]],["ccupssm",[10832]],["Cdot",[266]],["cdot",[267]],["cedil",[184]],["Cedilla",[184]],["cemptyv",[10674]],["cent",[162]],["centerdot",[183]],["CenterDot",[183]],["cfr",[120096]],["Cfr",[8493]],["CHcy",[1063]],["chcy",[1095]],["check",[10003]],["checkmark",[10003]],["Chi",[935]],["chi",[967]],["circ",[710]],["circeq",[8791]],["circlearrowleft",[8634]],["circlearrowright",[8635]],["circledast",[8859]],["circledcirc",[8858]],["circleddash",[8861]],["CircleDot",[8857]],["circledR",[174]],["circledS",[9416]],["CircleMinus",[8854]],["CirclePlus",[8853]],["CircleTimes",[8855]],["cir",[9675]],["cirE",[10691]],["cire",[8791]],["cirfnint",[10768]],["cirmid",[10991]],["cirscir",[10690]],["ClockwiseContourIntegral",[8754]],["clubs",[9827]],["clubsuit",[9827]],["colon",[58]],["Colon",[8759]],["Colone",[10868]],["colone",[8788]],["coloneq",[8788]],["comma",[44]],["commat",[64]],["comp",[8705]],["compfn",[8728]],["complement",[8705]],["complexes",[8450]],["cong",[8773]],["congdot",[10861]],["Congruent",[8801]],["conint",[8750]],["Conint",[8751]],["ContourIntegral",[8750]],["copf",[120148]],["Copf",[8450]],["coprod",[8720]],["Coproduct",[8720]],["copy",[169]],["COPY",[169]],["copysr",[8471]],["CounterClockwiseContourIntegral",[8755]],["crarr",[8629]],["cross",[10007]],["Cross",[10799]],["Cscr",[119966]],["cscr",[119992]],["csub",[10959]],["csube",[10961]],["csup",[10960]],["csupe",[10962]],["ctdot",[8943]],["cudarrl",[10552]],["cudarrr",[10549]],["cuepr",[8926]],["cuesc",[8927]],["cularr",[8630]],["cularrp",[10557]],["cupbrcap",[10824]],["cupcap",[10822]],["CupCap",[8781]],["cup",[8746]],["Cup",[8915]],["cupcup",[10826]],["cupdot",[8845]],["cupor",[10821]],["cups",[8746,65024]],["curarr",[8631]],["curarrm",[10556]],["curlyeqprec",[8926]],["curlyeqsucc",[8927]],["curlyvee",[8910]],["curlywedge",[8911]],["curren",[164]],["curvearrowleft",[8630]],["curvearrowright",[8631]],["cuvee",[8910]],["cuwed",[8911]],["cwconint",[8754]],["cwint",[8753]],["cylcty",[9005]],["dagger",[8224]],["Dagger",[8225]],["daleth",[8504]],["darr",[8595]],["Darr",[8609]],["dArr",[8659]],["dash",[8208]],["Dashv",[10980]],["dashv",[8867]],["dbkarow",[10511]],["dblac",[733]],["Dcaron",[270]],["dcaron",[271]],["Dcy",[1044]],["dcy",[1076]],["ddagger",[8225]],["ddarr",[8650]],["DD",[8517]],["dd",[8518]],["DDotrahd",[10513]],["ddotseq",[10871]],["deg",[176]],["Del",[8711]],["Delta",[916]],["delta",[948]],["demptyv",[10673]],["dfisht",[10623]],["Dfr",[120071]],["dfr",[120097]],["dHar",[10597]],["dharl",[8643]],["dharr",[8642]],["DiacriticalAcute",[180]],["DiacriticalDot",[729]],["DiacriticalDoubleAcute",[733]],["DiacriticalGrave",[96]],["DiacriticalTilde",[732]],["diam",[8900]],["diamond",[8900]],["Diamond",[8900]],["diamondsuit",[9830]],["diams",[9830]],["die",[168]],["DifferentialD",[8518]],["digamma",[989]],["disin",[8946]],["div",[247]],["divide",[247]],["divideontimes",[8903]],["divonx",[8903]],["DJcy",[1026]],["djcy",[1106]],["dlcorn",[8990]],["dlcrop",[8973]],["dollar",[36]],["Dopf",[120123]],["dopf",[120149]],["Dot",[168]],["dot",[729]],["DotDot",[8412]],["doteq",[8784]],["doteqdot",[8785]],["DotEqual",[8784]],["dotminus",[8760]],["dotplus",[8724]],["dotsquare",[8865]],["doublebarwedge",[8966]],["DoubleContourIntegral",[8751]],["DoubleDot",[168]],["DoubleDownArrow",[8659]],["DoubleLeftArrow",[8656]],["DoubleLeftRightArrow",[8660]],["DoubleLeftTee",[10980]],["DoubleLongLeftArrow",[10232]],["DoubleLongLeftRightArrow",[10234]],["DoubleLongRightArrow",[10233]],["DoubleRightArrow",[8658]],["DoubleRightTee",[8872]],["DoubleUpArrow",[8657]],["DoubleUpDownArrow",[8661]],["DoubleVerticalBar",[8741]],["DownArrowBar",[10515]],["downarrow",[8595]],["DownArrow",[8595]],["Downarrow",[8659]],["DownArrowUpArrow",[8693]],["DownBreve",[785]],["downdownarrows",[8650]],["downharpoonleft",[8643]],["downharpoonright",[8642]],["DownLeftRightVector",[10576]],["DownLeftTeeVector",[10590]],["DownLeftVectorBar",[10582]],["DownLeftVector",[8637]],["DownRightTeeVector",[10591]],["DownRightVectorBar",[10583]],["DownRightVector",[8641]],["DownTeeArrow",[8615]],["DownTee",[8868]],["drbkarow",[10512]],["drcorn",[8991]],["drcrop",[8972]],["Dscr",[119967]],["dscr",[119993]],["DScy",[1029]],["dscy",[1109]],["dsol",[10742]],["Dstrok",[272]],["dstrok",[273]],["dtdot",[8945]],["dtri",[9663]],["dtrif",[9662]],["duarr",[8693]],["duhar",[10607]],["dwangle",[10662]],["DZcy",[1039]],["dzcy",[1119]],["dzigrarr",[10239]],["Eacute",[201]],["eacute",[233]],["easter",[10862]],["Ecaron",[282]],["ecaron",[283]],["Ecirc",[202]],["ecirc",[234]],["ecir",[8790]],["ecolon",[8789]],["Ecy",[1069]],["ecy",[1101]],["eDDot",[10871]],["Edot",[278]],["edot",[279]],["eDot",[8785]],["ee",[8519]],["efDot",[8786]],["Efr",[120072]],["efr",[120098]],["eg",[10906]],["Egrave",[200]],["egrave",[232]],["egs",[10902]],["egsdot",[10904]],["el",[10905]],["Element",[8712]],["elinters",[9191]],["ell",[8467]],["els",[10901]],["elsdot",[10903]],["Emacr",[274]],["emacr",[275]],["empty",[8709]],["emptyset",[8709]],["EmptySmallSquare",[9723]],["emptyv",[8709]],["EmptyVerySmallSquare",[9643]],["emsp13",[8196]],["emsp14",[8197]],["emsp",[8195]],["ENG",[330]],["eng",[331]],["ensp",[8194]],["Eogon",[280]],["eogon",[281]],["Eopf",[120124]],["eopf",[120150]],["epar",[8917]],["eparsl",[10723]],["eplus",[10865]],["epsi",[949]],["Epsilon",[917]],["epsilon",[949]],["epsiv",[1013]],["eqcirc",[8790]],["eqcolon",[8789]],["eqsim",[8770]],["eqslantgtr",[10902]],["eqslantless",[10901]],["Equal",[10869]],["equals",[61]],["EqualTilde",[8770]],["equest",[8799]],["Equilibrium",[8652]],["equiv",[8801]],["equivDD",[10872]],["eqvparsl",[10725]],["erarr",[10609]],["erDot",[8787]],["escr",[8495]],["Escr",[8496]],["esdot",[8784]],["Esim",[10867]],["esim",[8770]],["Eta",[919]],["eta",[951]],["ETH",[208]],["eth",[240]],["Euml",[203]],["euml",[235]],["euro",[8364]],["excl",[33]],["exist",[8707]],["Exists",[8707]],["expectation",[8496]],["exponentiale",[8519]],["ExponentialE",[8519]],["fallingdotseq",[8786]],["Fcy",[1060]],["fcy",[1092]],["female",[9792]],["ffilig",[64259]],["fflig",[64256]],["ffllig",[64260]],["Ffr",[120073]],["ffr",[120099]],["filig",[64257]],["FilledSmallSquare",[9724]],["FilledVerySmallSquare",[9642]],["fjlig",[102,106]],["flat",[9837]],["fllig",[64258]],["fltns",[9649]],["fnof",[402]],["Fopf",[120125]],["fopf",[120151]],["forall",[8704]],["ForAll",[8704]],["fork",[8916]],["forkv",[10969]],["Fouriertrf",[8497]],["fpartint",[10765]],["frac12",[189]],["frac13",[8531]],["frac14",[188]],["frac15",[8533]],["frac16",[8537]],["frac18",[8539]],["frac23",[8532]],["frac25",[8534]],["frac34",[190]],["frac35",[8535]],["frac38",[8540]],["frac45",[8536]],["frac56",[8538]],["frac58",[8541]],["frac78",[8542]],["frasl",[8260]],["frown",[8994]],["fscr",[119995]],["Fscr",[8497]],["gacute",[501]],["Gamma",[915]],["gamma",[947]],["Gammad",[988]],["gammad",[989]],["gap",[10886]],["Gbreve",[286]],["gbreve",[287]],["Gcedil",[290]],["Gcirc",[284]],["gcirc",[285]],["Gcy",[1043]],["gcy",[1075]],["Gdot",[288]],["gdot",[289]],["ge",[8805]],["gE",[8807]],["gEl",[10892]],["gel",[8923]],["geq",[8805]],["geqq",[8807]],["geqslant",[10878]],["gescc",[10921]],["ges",[10878]],["gesdot",[10880]],["gesdoto",[10882]],["gesdotol",[10884]],["gesl",[8923,65024]],["gesles",[10900]],["Gfr",[120074]],["gfr",[120100]],["gg",[8811]],["Gg",[8921]],["ggg",[8921]],["gimel",[8503]],["GJcy",[1027]],["gjcy",[1107]],["gla",[10917]],["gl",[8823]],["glE",[10898]],["glj",[10916]],["gnap",[10890]],["gnapprox",[10890]],["gne",[10888]],["gnE",[8809]],["gneq",[10888]],["gneqq",[8809]],["gnsim",[8935]],["Gopf",[120126]],["gopf",[120152]],["grave",[96]],["GreaterEqual",[8805]],["GreaterEqualLess",[8923]],["GreaterFullEqual",[8807]],["GreaterGreater",[10914]],["GreaterLess",[8823]],["GreaterSlantEqual",[10878]],["GreaterTilde",[8819]],["Gscr",[119970]],["gscr",[8458]],["gsim",[8819]],["gsime",[10894]],["gsiml",[10896]],["gtcc",[10919]],["gtcir",[10874]],["gt",[62]],["GT",[62]],["Gt",[8811]],["gtdot",[8919]],["gtlPar",[10645]],["gtquest",[10876]],["gtrapprox",[10886]],["gtrarr",[10616]],["gtrdot",[8919]],["gtreqless",[8923]],["gtreqqless",[10892]],["gtrless",[8823]],["gtrsim",[8819]],["gvertneqq",[8809,65024]],["gvnE",[8809,65024]],["Hacek",[711]],["hairsp",[8202]],["half",[189]],["hamilt",[8459]],["HARDcy",[1066]],["hardcy",[1098]],["harrcir",[10568]],["harr",[8596]],["hArr",[8660]],["harrw",[8621]],["Hat",[94]],["hbar",[8463]],["Hcirc",[292]],["hcirc",[293]],["hearts",[9829]],["heartsuit",[9829]],["hellip",[8230]],["hercon",[8889]],["hfr",[120101]],["Hfr",[8460]],["HilbertSpace",[8459]],["hksearow",[10533]],["hkswarow",[10534]],["hoarr",[8703]],["homtht",[8763]],["hookleftarrow",[8617]],["hookrightarrow",[8618]],["hopf",[120153]],["Hopf",[8461]],["horbar",[8213]],["HorizontalLine",[9472]],["hscr",[119997]],["Hscr",[8459]],["hslash",[8463]],["Hstrok",[294]],["hstrok",[295]],["HumpDownHump",[8782]],["HumpEqual",[8783]],["hybull",[8259]],["hyphen",[8208]],["Iacute",[205]],["iacute",[237]],["ic",[8291]],["Icirc",[206]],["icirc",[238]],["Icy",[1048]],["icy",[1080]],["Idot",[304]],["IEcy",[1045]],["iecy",[1077]],["iexcl",[161]],["iff",[8660]],["ifr",[120102]],["Ifr",[8465]],["Igrave",[204]],["igrave",[236]],["ii",[8520]],["iiiint",[10764]],["iiint",[8749]],["iinfin",[10716]],["iiota",[8489]],["IJlig",[306]],["ijlig",[307]],["Imacr",[298]],["imacr",[299]],["image",[8465]],["ImaginaryI",[8520]],["imagline",[8464]],["imagpart",[8465]],["imath",[305]],["Im",[8465]],["imof",[8887]],["imped",[437]],["Implies",[8658]],["incare",[8453]],["in",[8712]],["infin",[8734]],["infintie",[10717]],["inodot",[305]],["intcal",[8890]],["int",[8747]],["Int",[8748]],["integers",[8484]],["Integral",[8747]],["intercal",[8890]],["Intersection",[8898]],["intlarhk",[10775]],["intprod",[10812]],["InvisibleComma",[8291]],["InvisibleTimes",[8290]],["IOcy",[1025]],["iocy",[1105]],["Iogon",[302]],["iogon",[303]],["Iopf",[120128]],["iopf",[120154]],["Iota",[921]],["iota",[953]],["iprod",[10812]],["iquest",[191]],["iscr",[119998]],["Iscr",[8464]],["isin",[8712]],["isindot",[8949]],["isinE",[8953]],["isins",[8948]],["isinsv",[8947]],["isinv",[8712]],["it",[8290]],["Itilde",[296]],["itilde",[297]],["Iukcy",[1030]],["iukcy",[1110]],["Iuml",[207]],["iuml",[239]],["Jcirc",[308]],["jcirc",[309]],["Jcy",[1049]],["jcy",[1081]],["Jfr",[120077]],["jfr",[120103]],["jmath",[567]],["Jopf",[120129]],["jopf",[120155]],["Jscr",[119973]],["jscr",[119999]],["Jsercy",[1032]],["jsercy",[1112]],["Jukcy",[1028]],["jukcy",[1108]],["Kappa",[922]],["kappa",[954]],["kappav",[1008]],["Kcedil",[310]],["kcedil",[311]],["Kcy",[1050]],["kcy",[1082]],["Kfr",[120078]],["kfr",[120104]],["kgreen",[312]],["KHcy",[1061]],["khcy",[1093]],["KJcy",[1036]],["kjcy",[1116]],["Kopf",[120130]],["kopf",[120156]],["Kscr",[119974]],["kscr",[12e4]],["lAarr",[8666]],["Lacute",[313]],["lacute",[314]],["laemptyv",[10676]],["lagran",[8466]],["Lambda",[923]],["lambda",[955]],["lang",[10216]],["Lang",[10218]],["langd",[10641]],["langle",[10216]],["lap",[10885]],["Laplacetrf",[8466]],["laquo",[171]],["larrb",[8676]],["larrbfs",[10527]],["larr",[8592]],["Larr",[8606]],["lArr",[8656]],["larrfs",[10525]],["larrhk",[8617]],["larrlp",[8619]],["larrpl",[10553]],["larrsim",[10611]],["larrtl",[8610]],["latail",[10521]],["lAtail",[10523]],["lat",[10923]],["late",[10925]],["lates",[10925,65024]],["lbarr",[10508]],["lBarr",[10510]],["lbbrk",[10098]],["lbrace",[123]],["lbrack",[91]],["lbrke",[10635]],["lbrksld",[10639]],["lbrkslu",[10637]],["Lcaron",[317]],["lcaron",[318]],["Lcedil",[315]],["lcedil",[316]],["lceil",[8968]],["lcub",[123]],["Lcy",[1051]],["lcy",[1083]],["ldca",[10550]],["ldquo",[8220]],["ldquor",[8222]],["ldrdhar",[10599]],["ldrushar",[10571]],["ldsh",[8626]],["le",[8804]],["lE",[8806]],["LeftAngleBracket",[10216]],["LeftArrowBar",[8676]],["leftarrow",[8592]],["LeftArrow",[8592]],["Leftarrow",[8656]],["LeftArrowRightArrow",[8646]],["leftarrowtail",[8610]],["LeftCeiling",[8968]],["LeftDoubleBracket",[10214]],["LeftDownTeeVector",[10593]],["LeftDownVectorBar",[10585]],["LeftDownVector",[8643]],["LeftFloor",[8970]],["leftharpoondown",[8637]],["leftharpoonup",[8636]],["leftleftarrows",[8647]],["leftrightarrow",[8596]],["LeftRightArrow",[8596]],["Leftrightarrow",[8660]],["leftrightarrows",[8646]],["leftrightharpoons",[8651]],["leftrightsquigarrow",[8621]],["LeftRightVector",[10574]],["LeftTeeArrow",[8612]],["LeftTee",[8867]],["LeftTeeVector",[10586]],["leftthreetimes",[8907]],["LeftTriangleBar",[10703]],["LeftTriangle",[8882]],["LeftTriangleEqual",[8884]],["LeftUpDownVector",[10577]],["LeftUpTeeVector",[10592]],["LeftUpVectorBar",[10584]],["LeftUpVector",[8639]],["LeftVectorBar",[10578]],["LeftVector",[8636]],["lEg",[10891]],["leg",[8922]],["leq",[8804]],["leqq",[8806]],["leqslant",[10877]],["lescc",[10920]],["les",[10877]],["lesdot",[10879]],["lesdoto",[10881]],["lesdotor",[10883]],["lesg",[8922,65024]],["lesges",[10899]],["lessapprox",[10885]],["lessdot",[8918]],["lesseqgtr",[8922]],["lesseqqgtr",[10891]],["LessEqualGreater",[8922]],["LessFullEqual",[8806]],["LessGreater",[8822]],["lessgtr",[8822]],["LessLess",[10913]],["lesssim",[8818]],["LessSlantEqual",[10877]],["LessTilde",[8818]],["lfisht",[10620]],["lfloor",[8970]],["Lfr",[120079]],["lfr",[120105]],["lg",[8822]],["lgE",[10897]],["lHar",[10594]],["lhard",[8637]],["lharu",[8636]],["lharul",[10602]],["lhblk",[9604]],["LJcy",[1033]],["ljcy",[1113]],["llarr",[8647]],["ll",[8810]],["Ll",[8920]],["llcorner",[8990]],["Lleftarrow",[8666]],["llhard",[10603]],["lltri",[9722]],["Lmidot",[319]],["lmidot",[320]],["lmoustache",[9136]],["lmoust",[9136]],["lnap",[10889]],["lnapprox",[10889]],["lne",[10887]],["lnE",[8808]],["lneq",[10887]],["lneqq",[8808]],["lnsim",[8934]],["loang",[10220]],["loarr",[8701]],["lobrk",[10214]],["longleftarrow",[10229]],["LongLeftArrow",[10229]],["Longleftarrow",[10232]],["longleftrightarrow",[10231]],["LongLeftRightArrow",[10231]],["Longleftrightarrow",[10234]],["longmapsto",[10236]],["longrightarrow",[10230]],["LongRightArrow",[10230]],["Longrightarrow",[10233]],["looparrowleft",[8619]],["looparrowright",[8620]],["lopar",[10629]],["Lopf",[120131]],["lopf",[120157]],["loplus",[10797]],["lotimes",[10804]],["lowast",[8727]],["lowbar",[95]],["LowerLeftArrow",[8601]],["LowerRightArrow",[8600]],["loz",[9674]],["lozenge",[9674]],["lozf",[10731]],["lpar",[40]],["lparlt",[10643]],["lrarr",[8646]],["lrcorner",[8991]],["lrhar",[8651]],["lrhard",[10605]],["lrm",[8206]],["lrtri",[8895]],["lsaquo",[8249]],["lscr",[120001]],["Lscr",[8466]],["lsh",[8624]],["Lsh",[8624]],["lsim",[8818]],["lsime",[10893]],["lsimg",[10895]],["lsqb",[91]],["lsquo",[8216]],["lsquor",[8218]],["Lstrok",[321]],["lstrok",[322]],["ltcc",[10918]],["ltcir",[10873]],["lt",[60]],["LT",[60]],["Lt",[8810]],["ltdot",[8918]],["lthree",[8907]],["ltimes",[8905]],["ltlarr",[10614]],["ltquest",[10875]],["ltri",[9667]],["ltrie",[8884]],["ltrif",[9666]],["ltrPar",[10646]],["lurdshar",[10570]],["luruhar",[10598]],["lvertneqq",[8808,65024]],["lvnE",[8808,65024]],["macr",[175]],["male",[9794]],["malt",[10016]],["maltese",[10016]],["Map",[10501]],["map",[8614]],["mapsto",[8614]],["mapstodown",[8615]],["mapstoleft",[8612]],["mapstoup",[8613]],["marker",[9646]],["mcomma",[10793]],["Mcy",[1052]],["mcy",[1084]],["mdash",[8212]],["mDDot",[8762]],["measuredangle",[8737]],["MediumSpace",[8287]],["Mellintrf",[8499]],["Mfr",[120080]],["mfr",[120106]],["mho",[8487]],["micro",[181]],["midast",[42]],["midcir",[10992]],["mid",[8739]],["middot",[183]],["minusb",[8863]],["minus",[8722]],["minusd",[8760]],["minusdu",[10794]],["MinusPlus",[8723]],["mlcp",[10971]],["mldr",[8230]],["mnplus",[8723]],["models",[8871]],["Mopf",[120132]],["mopf",[120158]],["mp",[8723]],["mscr",[120002]],["Mscr",[8499]],["mstpos",[8766]],["Mu",[924]],["mu",[956]],["multimap",[8888]],["mumap",[8888]],["nabla",[8711]],["Nacute",[323]],["nacute",[324]],["nang",[8736,8402]],["nap",[8777]],["napE",[10864,824]],["napid",[8779,824]],["napos",[329]],["napprox",[8777]],["natural",[9838]],["naturals",[8469]],["natur",[9838]],["nbsp",[160]],["nbump",[8782,824]],["nbumpe",[8783,824]],["ncap",[10819]],["Ncaron",[327]],["ncaron",[328]],["Ncedil",[325]],["ncedil",[326]],["ncong",[8775]],["ncongdot",[10861,824]],["ncup",[10818]],["Ncy",[1053]],["ncy",[1085]],["ndash",[8211]],["nearhk",[10532]],["nearr",[8599]],["neArr",[8663]],["nearrow",[8599]],["ne",[8800]],["nedot",[8784,824]],["NegativeMediumSpace",[8203]],["NegativeThickSpace",[8203]],["NegativeThinSpace",[8203]],["NegativeVeryThinSpace",[8203]],["nequiv",[8802]],["nesear",[10536]],["nesim",[8770,824]],["NestedGreaterGreater",[8811]],["NestedLessLess",[8810]],["nexist",[8708]],["nexists",[8708]],["Nfr",[120081]],["nfr",[120107]],["ngE",[8807,824]],["nge",[8817]],["ngeq",[8817]],["ngeqq",[8807,824]],["ngeqslant",[10878,824]],["nges",[10878,824]],["nGg",[8921,824]],["ngsim",[8821]],["nGt",[8811,8402]],["ngt",[8815]],["ngtr",[8815]],["nGtv",[8811,824]],["nharr",[8622]],["nhArr",[8654]],["nhpar",[10994]],["ni",[8715]],["nis",[8956]],["nisd",[8954]],["niv",[8715]],["NJcy",[1034]],["njcy",[1114]],["nlarr",[8602]],["nlArr",[8653]],["nldr",[8229]],["nlE",[8806,824]],["nle",[8816]],["nleftarrow",[8602]],["nLeftarrow",[8653]],["nleftrightarrow",[8622]],["nLeftrightarrow",[8654]],["nleq",[8816]],["nleqq",[8806,824]],["nleqslant",[10877,824]],["nles",[10877,824]],["nless",[8814]],["nLl",[8920,824]],["nlsim",[8820]],["nLt",[8810,8402]],["nlt",[8814]],["nltri",[8938]],["nltrie",[8940]],["nLtv",[8810,824]],["nmid",[8740]],["NoBreak",[8288]],["NonBreakingSpace",[160]],["nopf",[120159]],["Nopf",[8469]],["Not",[10988]],["not",[172]],["NotCongruent",[8802]],["NotCupCap",[8813]],["NotDoubleVerticalBar",[8742]],["NotElement",[8713]],["NotEqual",[8800]],["NotEqualTilde",[8770,824]],["NotExists",[8708]],["NotGreater",[8815]],["NotGreaterEqual",[8817]],["NotGreaterFullEqual",[8807,824]],["NotGreaterGreater",[8811,824]],["NotGreaterLess",[8825]],["NotGreaterSlantEqual",[10878,824]],["NotGreaterTilde",[8821]],["NotHumpDownHump",[8782,824]],["NotHumpEqual",[8783,824]],["notin",[8713]],["notindot",[8949,824]],["notinE",[8953,824]],["notinva",[8713]],["notinvb",[8951]],["notinvc",[8950]],["NotLeftTriangleBar",[10703,824]],["NotLeftTriangle",[8938]],["NotLeftTriangleEqual",[8940]],["NotLess",[8814]],["NotLessEqual",[8816]],["NotLessGreater",[8824]],["NotLessLess",[8810,824]],["NotLessSlantEqual",[10877,824]],["NotLessTilde",[8820]],["NotNestedGreaterGreater",[10914,824]],["NotNestedLessLess",[10913,824]],["notni",[8716]],["notniva",[8716]],["notnivb",[8958]],["notnivc",[8957]],["NotPrecedes",[8832]],["NotPrecedesEqual",[10927,824]],["NotPrecedesSlantEqual",[8928]],["NotReverseElement",[8716]],["NotRightTriangleBar",[10704,824]],["NotRightTriangle",[8939]],["NotRightTriangleEqual",[8941]],["NotSquareSubset",[8847,824]],["NotSquareSubsetEqual",[8930]],["NotSquareSuperset",[8848,824]],["NotSquareSupersetEqual",[8931]],["NotSubset",[8834,8402]],["NotSubsetEqual",[8840]],["NotSucceeds",[8833]],["NotSucceedsEqual",[10928,824]],["NotSucceedsSlantEqual",[8929]],["NotSucceedsTilde",[8831,824]],["NotSuperset",[8835,8402]],["NotSupersetEqual",[8841]],["NotTilde",[8769]],["NotTildeEqual",[8772]],["NotTildeFullEqual",[8775]],["NotTildeTilde",[8777]],["NotVerticalBar",[8740]],["nparallel",[8742]],["npar",[8742]],["nparsl",[11005,8421]],["npart",[8706,824]],["npolint",[10772]],["npr",[8832]],["nprcue",[8928]],["nprec",[8832]],["npreceq",[10927,824]],["npre",[10927,824]],["nrarrc",[10547,824]],["nrarr",[8603]],["nrArr",[8655]],["nrarrw",[8605,824]],["nrightarrow",[8603]],["nRightarrow",[8655]],["nrtri",[8939]],["nrtrie",[8941]],["nsc",[8833]],["nsccue",[8929]],["nsce",[10928,824]],["Nscr",[119977]],["nscr",[120003]],["nshortmid",[8740]],["nshortparallel",[8742]],["nsim",[8769]],["nsime",[8772]],["nsimeq",[8772]],["nsmid",[8740]],["nspar",[8742]],["nsqsube",[8930]],["nsqsupe",[8931]],["nsub",[8836]],["nsubE",[10949,824]],["nsube",[8840]],["nsubset",[8834,8402]],["nsubseteq",[8840]],["nsubseteqq",[10949,824]],["nsucc",[8833]],["nsucceq",[10928,824]],["nsup",[8837]],["nsupE",[10950,824]],["nsupe",[8841]],["nsupset",[8835,8402]],["nsupseteq",[8841]],["nsupseteqq",[10950,824]],["ntgl",[8825]],["Ntilde",[209]],["ntilde",[241]],["ntlg",[8824]],["ntriangleleft",[8938]],["ntrianglelefteq",[8940]],["ntriangleright",[8939]],["ntrianglerighteq",[8941]],["Nu",[925]],["nu",[957]],["num",[35]],["numero",[8470]],["numsp",[8199]],["nvap",[8781,8402]],["nvdash",[8876]],["nvDash",[8877]],["nVdash",[8878]],["nVDash",[8879]],["nvge",[8805,8402]],["nvgt",[62,8402]],["nvHarr",[10500]],["nvinfin",[10718]],["nvlArr",[10498]],["nvle",[8804,8402]],["nvlt",[60,8402]],["nvltrie",[8884,8402]],["nvrArr",[10499]],["nvrtrie",[8885,8402]],["nvsim",[8764,8402]],["nwarhk",[10531]],["nwarr",[8598]],["nwArr",[8662]],["nwarrow",[8598]],["nwnear",[10535]],["Oacute",[211]],["oacute",[243]],["oast",[8859]],["Ocirc",[212]],["ocirc",[244]],["ocir",[8858]],["Ocy",[1054]],["ocy",[1086]],["odash",[8861]],["Odblac",[336]],["odblac",[337]],["odiv",[10808]],["odot",[8857]],["odsold",[10684]],["OElig",[338]],["oelig",[339]],["ofcir",[10687]],["Ofr",[120082]],["ofr",[120108]],["ogon",[731]],["Ograve",[210]],["ograve",[242]],["ogt",[10689]],["ohbar",[10677]],["ohm",[937]],["oint",[8750]],["olarr",[8634]],["olcir",[10686]],["olcross",[10683]],["oline",[8254]],["olt",[10688]],["Omacr",[332]],["omacr",[333]],["Omega",[937]],["omega",[969]],["Omicron",[927]],["omicron",[959]],["omid",[10678]],["ominus",[8854]],["Oopf",[120134]],["oopf",[120160]],["opar",[10679]],["OpenCurlyDoubleQuote",[8220]],["OpenCurlyQuote",[8216]],["operp",[10681]],["oplus",[8853]],["orarr",[8635]],["Or",[10836]],["or",[8744]],["ord",[10845]],["order",[8500]],["orderof",[8500]],["ordf",[170]],["ordm",[186]],["origof",[8886]],["oror",[10838]],["orslope",[10839]],["orv",[10843]],["oS",[9416]],["Oscr",[119978]],["oscr",[8500]],["Oslash",[216]],["oslash",[248]],["osol",[8856]],["Otilde",[213]],["otilde",[245]],["otimesas",[10806]],["Otimes",[10807]],["otimes",[8855]],["Ouml",[214]],["ouml",[246]],["ovbar",[9021]],["OverBar",[8254]],["OverBrace",[9182]],["OverBracket",[9140]],["OverParenthesis",[9180]],["para",[182]],["parallel",[8741]],["par",[8741]],["parsim",[10995]],["parsl",[11005]],["part",[8706]],["PartialD",[8706]],["Pcy",[1055]],["pcy",[1087]],["percnt",[37]],["period",[46]],["permil",[8240]],["perp",[8869]],["pertenk",[8241]],["Pfr",[120083]],["pfr",[120109]],["Phi",[934]],["phi",[966]],["phiv",[981]],["phmmat",[8499]],["phone",[9742]],["Pi",[928]],["pi",[960]],["pitchfork",[8916]],["piv",[982]],["planck",[8463]],["planckh",[8462]],["plankv",[8463]],["plusacir",[10787]],["plusb",[8862]],["pluscir",[10786]],["plus",[43]],["plusdo",[8724]],["plusdu",[10789]],["pluse",[10866]],["PlusMinus",[177]],["plusmn",[177]],["plussim",[10790]],["plustwo",[10791]],["pm",[177]],["Poincareplane",[8460]],["pointint",[10773]],["popf",[120161]],["Popf",[8473]],["pound",[163]],["prap",[10935]],["Pr",[10939]],["pr",[8826]],["prcue",[8828]],["precapprox",[10935]],["prec",[8826]],["preccurlyeq",[8828]],["Precedes",[8826]],["PrecedesEqual",[10927]],["PrecedesSlantEqual",[8828]],["PrecedesTilde",[8830]],["preceq",[10927]],["precnapprox",[10937]],["precneqq",[10933]],["precnsim",[8936]],["pre",[10927]],["prE",[10931]],["precsim",[8830]],["prime",[8242]],["Prime",[8243]],["primes",[8473]],["prnap",[10937]],["prnE",[10933]],["prnsim",[8936]],["prod",[8719]],["Product",[8719]],["profalar",[9006]],["profline",[8978]],["profsurf",[8979]],["prop",[8733]],["Proportional",[8733]],["Proportion",[8759]],["propto",[8733]],["prsim",[8830]],["prurel",[8880]],["Pscr",[119979]],["pscr",[120005]],["Psi",[936]],["psi",[968]],["puncsp",[8200]],["Qfr",[120084]],["qfr",[120110]],["qint",[10764]],["qopf",[120162]],["Qopf",[8474]],["qprime",[8279]],["Qscr",[119980]],["qscr",[120006]],["quaternions",[8461]],["quatint",[10774]],["quest",[63]],["questeq",[8799]],["quot",[34]],["QUOT",[34]],["rAarr",[8667]],["race",[8765,817]],["Racute",[340]],["racute",[341]],["radic",[8730]],["raemptyv",[10675]],["rang",[10217]],["Rang",[10219]],["rangd",[10642]],["range",[10661]],["rangle",[10217]],["raquo",[187]],["rarrap",[10613]],["rarrb",[8677]],["rarrbfs",[10528]],["rarrc",[10547]],["rarr",[8594]],["Rarr",[8608]],["rArr",[8658]],["rarrfs",[10526]],["rarrhk",[8618]],["rarrlp",[8620]],["rarrpl",[10565]],["rarrsim",[10612]],["Rarrtl",[10518]],["rarrtl",[8611]],["rarrw",[8605]],["ratail",[10522]],["rAtail",[10524]],["ratio",[8758]],["rationals",[8474]],["rbarr",[10509]],["rBarr",[10511]],["RBarr",[10512]],["rbbrk",[10099]],["rbrace",[125]],["rbrack",[93]],["rbrke",[10636]],["rbrksld",[10638]],["rbrkslu",[10640]],["Rcaron",[344]],["rcaron",[345]],["Rcedil",[342]],["rcedil",[343]],["rceil",[8969]],["rcub",[125]],["Rcy",[1056]],["rcy",[1088]],["rdca",[10551]],["rdldhar",[10601]],["rdquo",[8221]],["rdquor",[8221]],["CloseCurlyDoubleQuote",[8221]],["rdsh",[8627]],["real",[8476]],["realine",[8475]],["realpart",[8476]],["reals",[8477]],["Re",[8476]],["rect",[9645]],["reg",[174]],["REG",[174]],["ReverseElement",[8715]],["ReverseEquilibrium",[8651]],["ReverseUpEquilibrium",[10607]],["rfisht",[10621]],["rfloor",[8971]],["rfr",[120111]],["Rfr",[8476]],["rHar",[10596]],["rhard",[8641]],["rharu",[8640]],["rharul",[10604]],["Rho",[929]],["rho",[961]],["rhov",[1009]],["RightAngleBracket",[10217]],["RightArrowBar",[8677]],["rightarrow",[8594]],["RightArrow",[8594]],["Rightarrow",[8658]],["RightArrowLeftArrow",[8644]],["rightarrowtail",[8611]],["RightCeiling",[8969]],["RightDoubleBracket",[10215]],["RightDownTeeVector",[10589]],["RightDownVectorBar",[10581]],["RightDownVector",[8642]],["RightFloor",[8971]],["rightharpoondown",[8641]],["rightharpoonup",[8640]],["rightleftarrows",[8644]],["rightleftharpoons",[8652]],["rightrightarrows",[8649]],["rightsquigarrow",[8605]],["RightTeeArrow",[8614]],["RightTee",[8866]],["RightTeeVector",[10587]],["rightthreetimes",[8908]],["RightTriangleBar",[10704]],["RightTriangle",[8883]],["RightTriangleEqual",[8885]],["RightUpDownVector",[10575]],["RightUpTeeVector",[10588]],["RightUpVectorBar",[10580]],["RightUpVector",[8638]],["RightVectorBar",[10579]],["RightVector",[8640]],["ring",[730]],["risingdotseq",[8787]],["rlarr",[8644]],["rlhar",[8652]],["rlm",[8207]],["rmoustache",[9137]],["rmoust",[9137]],["rnmid",[10990]],["roang",[10221]],["roarr",[8702]],["robrk",[10215]],["ropar",[10630]],["ropf",[120163]],["Ropf",[8477]],["roplus",[10798]],["rotimes",[10805]],["RoundImplies",[10608]],["rpar",[41]],["rpargt",[10644]],["rppolint",[10770]],["rrarr",[8649]],["Rrightarrow",[8667]],["rsaquo",[8250]],["rscr",[120007]],["Rscr",[8475]],["rsh",[8625]],["Rsh",[8625]],["rsqb",[93]],["rsquo",[8217]],["rsquor",[8217]],["CloseCurlyQuote",[8217]],["rthree",[8908]],["rtimes",[8906]],["rtri",[9657]],["rtrie",[8885]],["rtrif",[9656]],["rtriltri",[10702]],["RuleDelayed",[10740]],["ruluhar",[10600]],["rx",[8478]],["Sacute",[346]],["sacute",[347]],["sbquo",[8218]],["scap",[10936]],["Scaron",[352]],["scaron",[353]],["Sc",[10940]],["sc",[8827]],["sccue",[8829]],["sce",[10928]],["scE",[10932]],["Scedil",[350]],["scedil",[351]],["Scirc",[348]],["scirc",[349]],["scnap",[10938]],["scnE",[10934]],["scnsim",[8937]],["scpolint",[10771]],["scsim",[8831]],["Scy",[1057]],["scy",[1089]],["sdotb",[8865]],["sdot",[8901]],["sdote",[10854]],["searhk",[10533]],["searr",[8600]],["seArr",[8664]],["searrow",[8600]],["sect",[167]],["semi",[59]],["seswar",[10537]],["setminus",[8726]],["setmn",[8726]],["sext",[10038]],["Sfr",[120086]],["sfr",[120112]],["sfrown",[8994]],["sharp",[9839]],["SHCHcy",[1065]],["shchcy",[1097]],["SHcy",[1064]],["shcy",[1096]],["ShortDownArrow",[8595]],["ShortLeftArrow",[8592]],["shortmid",[8739]],["shortparallel",[8741]],["ShortRightArrow",[8594]],["ShortUpArrow",[8593]],["shy",[173]],["Sigma",[931]],["sigma",[963]],["sigmaf",[962]],["sigmav",[962]],["sim",[8764]],["simdot",[10858]],["sime",[8771]],["simeq",[8771]],["simg",[10910]],["simgE",[10912]],["siml",[10909]],["simlE",[10911]],["simne",[8774]],["simplus",[10788]],["simrarr",[10610]],["slarr",[8592]],["SmallCircle",[8728]],["smallsetminus",[8726]],["smashp",[10803]],["smeparsl",[10724]],["smid",[8739]],["smile",[8995]],["smt",[10922]],["smte",[10924]],["smtes",[10924,65024]],["SOFTcy",[1068]],["softcy",[1100]],["solbar",[9023]],["solb",[10692]],["sol",[47]],["Sopf",[120138]],["sopf",[120164]],["spades",[9824]],["spadesuit",[9824]],["spar",[8741]],["sqcap",[8851]],["sqcaps",[8851,65024]],["sqcup",[8852]],["sqcups",[8852,65024]],["Sqrt",[8730]],["sqsub",[8847]],["sqsube",[8849]],["sqsubset",[8847]],["sqsubseteq",[8849]],["sqsup",[8848]],["sqsupe",[8850]],["sqsupset",[8848]],["sqsupseteq",[8850]],["square",[9633]],["Square",[9633]],["SquareIntersection",[8851]],["SquareSubset",[8847]],["SquareSubsetEqual",[8849]],["SquareSuperset",[8848]],["SquareSupersetEqual",[8850]],["SquareUnion",[8852]],["squarf",[9642]],["squ",[9633]],["squf",[9642]],["srarr",[8594]],["Sscr",[119982]],["sscr",[120008]],["ssetmn",[8726]],["ssmile",[8995]],["sstarf",[8902]],["Star",[8902]],["star",[9734]],["starf",[9733]],["straightepsilon",[1013]],["straightphi",[981]],["strns",[175]],["sub",[8834]],["Sub",[8912]],["subdot",[10941]],["subE",[10949]],["sube",[8838]],["subedot",[10947]],["submult",[10945]],["subnE",[10955]],["subne",[8842]],["subplus",[10943]],["subrarr",[10617]],["subset",[8834]],["Subset",[8912]],["subseteq",[8838]],["subseteqq",[10949]],["SubsetEqual",[8838]],["subsetneq",[8842]],["subsetneqq",[10955]],["subsim",[10951]],["subsub",[10965]],["subsup",[10963]],["succapprox",[10936]],["succ",[8827]],["succcurlyeq",[8829]],["Succeeds",[8827]],["SucceedsEqual",[10928]],["SucceedsSlantEqual",[8829]],["SucceedsTilde",[8831]],["succeq",[10928]],["succnapprox",[10938]],["succneqq",[10934]],["succnsim",[8937]],["succsim",[8831]],["SuchThat",[8715]],["sum",[8721]],["Sum",[8721]],["sung",[9834]],["sup1",[185]],["sup2",[178]],["sup3",[179]],["sup",[8835]],["Sup",[8913]],["supdot",[10942]],["supdsub",[10968]],["supE",[10950]],["supe",[8839]],["supedot",[10948]],["Superset",[8835]],["SupersetEqual",[8839]],["suphsol",[10185]],["suphsub",[10967]],["suplarr",[10619]],["supmult",[10946]],["supnE",[10956]],["supne",[8843]],["supplus",[10944]],["supset",[8835]],["Supset",[8913]],["supseteq",[8839]],["supseteqq",[10950]],["supsetneq",[8843]],["supsetneqq",[10956]],["supsim",[10952]],["supsub",[10964]],["supsup",[10966]],["swarhk",[10534]],["swarr",[8601]],["swArr",[8665]],["swarrow",[8601]],["swnwar",[10538]],["szlig",[223]],["Tab",[9]],["target",[8982]],["Tau",[932]],["tau",[964]],["tbrk",[9140]],["Tcaron",[356]],["tcaron",[357]],["Tcedil",[354]],["tcedil",[355]],["Tcy",[1058]],["tcy",[1090]],["tdot",[8411]],["telrec",[8981]],["Tfr",[120087]],["tfr",[120113]],["there4",[8756]],["therefore",[8756]],["Therefore",[8756]],["Theta",[920]],["theta",[952]],["thetasym",[977]],["thetav",[977]],["thickapprox",[8776]],["thicksim",[8764]],["ThickSpace",[8287,8202]],["ThinSpace",[8201]],["thinsp",[8201]],["thkap",[8776]],["thksim",[8764]],["THORN",[222]],["thorn",[254]],["tilde",[732]],["Tilde",[8764]],["TildeEqual",[8771]],["TildeFullEqual",[8773]],["TildeTilde",[8776]],["timesbar",[10801]],["timesb",[8864]],["times",[215]],["timesd",[10800]],["tint",[8749]],["toea",[10536]],["topbot",[9014]],["topcir",[10993]],["top",[8868]],["Topf",[120139]],["topf",[120165]],["topfork",[10970]],["tosa",[10537]],["tprime",[8244]],["trade",[8482]],["TRADE",[8482]],["triangle",[9653]],["triangledown",[9663]],["triangleleft",[9667]],["trianglelefteq",[8884]],["triangleq",[8796]],["triangleright",[9657]],["trianglerighteq",[8885]],["tridot",[9708]],["trie",[8796]],["triminus",[10810]],["TripleDot",[8411]],["triplus",[10809]],["trisb",[10701]],["tritime",[10811]],["trpezium",[9186]],["Tscr",[119983]],["tscr",[120009]],["TScy",[1062]],["tscy",[1094]],["TSHcy",[1035]],["tshcy",[1115]],["Tstrok",[358]],["tstrok",[359]],["twixt",[8812]],["twoheadleftarrow",[8606]],["twoheadrightarrow",[8608]],["Uacute",[218]],["uacute",[250]],["uarr",[8593]],["Uarr",[8607]],["uArr",[8657]],["Uarrocir",[10569]],["Ubrcy",[1038]],["ubrcy",[1118]],["Ubreve",[364]],["ubreve",[365]],["Ucirc",[219]],["ucirc",[251]],["Ucy",[1059]],["ucy",[1091]],["udarr",[8645]],["Udblac",[368]],["udblac",[369]],["udhar",[10606]],["ufisht",[10622]],["Ufr",[120088]],["ufr",[120114]],["Ugrave",[217]],["ugrave",[249]],["uHar",[10595]],["uharl",[8639]],["uharr",[8638]],["uhblk",[9600]],["ulcorn",[8988]],["ulcorner",[8988]],["ulcrop",[8975]],["ultri",[9720]],["Umacr",[362]],["umacr",[363]],["uml",[168]],["UnderBar",[95]],["UnderBrace",[9183]],["UnderBracket",[9141]],["UnderParenthesis",[9181]],["Union",[8899]],["UnionPlus",[8846]],["Uogon",[370]],["uogon",[371]],["Uopf",[120140]],["uopf",[120166]],["UpArrowBar",[10514]],["uparrow",[8593]],["UpArrow",[8593]],["Uparrow",[8657]],["UpArrowDownArrow",[8645]],["updownarrow",[8597]],["UpDownArrow",[8597]],["Updownarrow",[8661]],["UpEquilibrium",[10606]],["upharpoonleft",[8639]],["upharpoonright",[8638]],["uplus",[8846]],["UpperLeftArrow",[8598]],["UpperRightArrow",[8599]],["upsi",[965]],["Upsi",[978]],["upsih",[978]],["Upsilon",[933]],["upsilon",[965]],["UpTeeArrow",[8613]],["UpTee",[8869]],["upuparrows",[8648]],["urcorn",[8989]],["urcorner",[8989]],["urcrop",[8974]],["Uring",[366]],["uring",[367]],["urtri",[9721]],["Uscr",[119984]],["uscr",[120010]],["utdot",[8944]],["Utilde",[360]],["utilde",[361]],["utri",[9653]],["utrif",[9652]],["uuarr",[8648]],["Uuml",[220]],["uuml",[252]],["uwangle",[10663]],["vangrt",[10652]],["varepsilon",[1013]],["varkappa",[1008]],["varnothing",[8709]],["varphi",[981]],["varpi",[982]],["varpropto",[8733]],["varr",[8597]],["vArr",[8661]],["varrho",[1009]],["varsigma",[962]],["varsubsetneq",[8842,65024]],["varsubsetneqq",[10955,65024]],["varsupsetneq",[8843,65024]],["varsupsetneqq",[10956,65024]],["vartheta",[977]],["vartriangleleft",[8882]],["vartriangleright",[8883]],["vBar",[10984]],["Vbar",[10987]],["vBarv",[10985]],["Vcy",[1042]],["vcy",[1074]],["vdash",[8866]],["vDash",[8872]],["Vdash",[8873]],["VDash",[8875]],["Vdashl",[10982]],["veebar",[8891]],["vee",[8744]],["Vee",[8897]],["veeeq",[8794]],["vellip",[8942]],["verbar",[124]],["Verbar",[8214]],["vert",[124]],["Vert",[8214]],["VerticalBar",[8739]],["VerticalLine",[124]],["VerticalSeparator",[10072]],["VerticalTilde",[8768]],["VeryThinSpace",[8202]],["Vfr",[120089]],["vfr",[120115]],["vltri",[8882]],["vnsub",[8834,8402]],["vnsup",[8835,8402]],["Vopf",[120141]],["vopf",[120167]],["vprop",[8733]],["vrtri",[8883]],["Vscr",[119985]],["vscr",[120011]],["vsubnE",[10955,65024]],["vsubne",[8842,65024]],["vsupnE",[10956,65024]],["vsupne",[8843,65024]],["Vvdash",[8874]],["vzigzag",[10650]],["Wcirc",[372]],["wcirc",[373]],["wedbar",[10847]],["wedge",[8743]],["Wedge",[8896]],["wedgeq",[8793]],["weierp",[8472]],["Wfr",[120090]],["wfr",[120116]],["Wopf",[120142]],["wopf",[120168]],["wp",[8472]],["wr",[8768]],["wreath",[8768]],["Wscr",[119986]],["wscr",[120012]],["xcap",[8898]],["xcirc",[9711]],["xcup",[8899]],["xdtri",[9661]],["Xfr",[120091]],["xfr",[120117]],["xharr",[10231]],["xhArr",[10234]],["Xi",[926]],["xi",[958]],["xlarr",[10229]],["xlArr",[10232]],["xmap",[10236]],["xnis",[8955]],["xodot",[10752]],["Xopf",[120143]],["xopf",[120169]],["xoplus",[10753]],["xotime",[10754]],["xrarr",[10230]],["xrArr",[10233]],["Xscr",[119987]],["xscr",[120013]],["xsqcup",[10758]],["xuplus",[10756]],["xutri",[9651]],["xvee",[8897]],["xwedge",[8896]],["Yacute",[221]],["yacute",[253]],["YAcy",[1071]],["yacy",[1103]],["Ycirc",[374]],["ycirc",[375]],["Ycy",[1067]],["ycy",[1099]],["yen",[165]],["Yfr",[120092]],["yfr",[120118]],["YIcy",[1031]],["yicy",[1111]],["Yopf",[120144]],["yopf",[120170]],["Yscr",[119988]],["yscr",[120014]],["YUcy",[1070]],["yucy",[1102]],["yuml",[255]],["Yuml",[376]],["Zacute",[377]],["zacute",[378]],["Zcaron",[381]],["zcaron",[382]],["Zcy",[1047]],["zcy",[1079]],["Zdot",[379]],["zdot",[380]],["zeetrf",[8488]],["ZeroWidthSpace",[8203]],["Zeta",[918]],["zeta",[950]],["zfr",[120119]],["Zfr",[8488]],["ZHcy",[1046]],["zhcy",[1078]],["zigrarr",[8669]],["zopf",[120171]],["Zopf",[8484]],["Zscr",[119989]],["zscr",[120015]],["zwj",[8205]],["zwnj",[8204]]],o={},a={};!function(e,t){var r=n.length;for(;r--;){var o=n[r],a=o[0],i=o[1],l=i[0],u=l<32||l>126||62===l||60===l||38===l||34===l||39===l,c=void 0;if(u&&(c=t[l]=t[l]||{}),i[1]){var s=i[1];e[a]=String.fromCharCode(l)+String.fromCharCode(s),u&&(c[s]=a)}else e[a]=String.fromCharCode(l),u&&(c[""]=a)}}(o,a);var i=function(){function e(){}return e.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,(function(e,t){var r;if("#"===t.charAt(0)){var n="x"===t.charAt(1)?parseInt(t.substr(2).toLowerCase(),16):parseInt(t.substr(1));isNaN(n)||n<-32768||n>65535||(r=String.fromCharCode(n))}else r=o[t];return r||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=a[e.charCodeAt(n)];if(o){var i=o[e.charCodeAt(n+1)];if(i?n++:i=o[""],i){r+="&"+i+";",n++;continue}}r+=e.charAt(n),n++}return r},e.encode=function(t){return(new e).encode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n),i=a[o];if(i){var l=i[e.charCodeAt(n+1)];if(l?n++:l=i[""],l){r+="&"+l+";",n++;continue}}r+=o<32||o>126?"&#"+o+";":e.charAt(n),n++}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.Html5Entities=i},function(e,t,r){"use strict";var n=r(52),o=r(193);Object.defineProperty(t,"__esModule",{value:!0}),t.shouldHighlight=b,t.getChalk=w,t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(b(t)){var r=w(t),n=f(r);return y(n,e)}return e};var a,i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=n?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(r(195)),l=r(196),u=(a=r(199))&&a.__esModule?a:{default:a};function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}var s=new Set(["as","async","from","get","of","set"]);function f(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}var d,p=/\\r\\n|[\\n\\r\\u2028\\u2029]/,h=/^[()[\\]{}]$/,g=i.matchToToken,v=/^[a-z][\\w-]*$/i,m=function(e,t,r){if("name"===e.type){if((0,l.isKeyword)(e.value)||(0,l.isStrictReservedWord)(e.value,!0)||s.has(e.value))return"keyword";if(v.test(e.value)&&("<"===r[t-1]||"</"==r.substr(t-2,2)))return"jsxIdentifier";if(e.value[0]!==e.value[0].toLowerCase())return"capitalized"}return"punctuator"===e.type&&h.test(e.value)?"bracket":"invalid"!==e.type||"@"!==e.value&&"#"!==e.value?e.type:"punctuator"};function y(e,t){var r,o="",a=n(d(t));try{var i=function(){var t=r.value,n=t.type,a=t.value,i=e[n];o+=i?a.split(p).map((function(e){return i(e)})).join("\\n"):a};for(a.s();!(r=a.n()).done;)i()}catch(e){a.e(e)}finally{a.f()}return o}function b(e){return u.default.supportsColor||e.forceColor}function w(e){var t=u.default;return e.forceColor&&(t=new u.default.constructor({enabled:!0,level:1})),t}d=o.mark((function e(t){var r,n;return o.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(r=i.default.exec(t))){e.next=6;break}return n=g(r),e.next=4,{type:m(n,r.index,t),value:n.value};case 4:e.next=0;break;case 6:case"end":return e.stop()}}),e)}))},function(e,t,r){var n=r(192);e.exports=function(e,t){if(e){if("string"===typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}},function(e,t){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}},function(e,t,r){e.exports=r(194)},function(e,t,r){var n=function(e){"use strict";var t,r=Object.prototype,n=r.hasOwnProperty,o="function"===typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function u(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,r){return e[t]=r}}function c(e,t,r,n){var o=t&&t.prototype instanceof v?t:v,a=Object.create(o.prototype),i=new O(n||[]);return a._invoke=function(e,t,r){var n=f;return function(o,a){if(n===p)throw new Error("Generator is already running");if(n===h){if("throw"===o)throw a;return R()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var l=_(i,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===f)throw n=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=p;var u=s(e,t,r);if("normal"===u.type){if(n=r.done?h:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=h,r.method="throw",r.arg=u.arg)}}}(e,r,i),a}function s(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var f="suspendedStart",d="suspendedYield",p="executing",h="completed",g={};function v(){}function m(){}function y(){}var b={};b[a]=function(){return this};var w=Object.getPrototypeOf,k=w&&w(w(P([])));k&&k!==r&&n.call(k,a)&&(b=k);var E=y.prototype=v.prototype=Object.create(b);function x(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function r(o,a,i,l){var u=s(e[o],e,a);if("throw"!==u.type){var c=u.arg,f=c.value;return f&&"object"===typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,i,l)}),(function(e){r("throw",e,i,l)})):t.resolve(f).then((function(e){c.value=e,i(c)}),(function(e){return r("throw",e,i,l)}))}l(u.arg)}var o;this._invoke=function(e,n){function a(){return new t((function(t,o){r(e,n,t,o)}))}return o=o?o.then(a,a):a()}}function _(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,_(e,r),"throw"===r.method))return g;r.method="throw",r.arg=new TypeError("The iterator does not provide a \'throw\' method")}return g}var o=s(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,g;var a=o.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function P(e){if(e){var r=e[a];if(r)return r.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}return{next:R}}function R(){return{value:t,done:!0}}return m.prototype=E.constructor=y,y.constructor=m,m.displayName=u(y,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===m||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,u(e,l,"GeneratorFunction")),e.prototype=Object.create(E),e},e.awrap=function(e){return{__await:e}},x(S.prototype),S.prototype[i]=function(){return this},e.AsyncIterator=S,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new S(c(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},x(E),u(E,l,"Generator"),E[a]=function(){return this},E.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=P,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(C),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return l.type="throw",l.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],l=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(u&&c){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),C(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;C(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:P(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=n}catch(e){Function("r","regeneratorRuntime = r")(n)}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=/(([\'"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\\'"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:void 0};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isIdentifierName",{enumerable:!0,get:function(){return n.isIdentifierName}}),Object.defineProperty(t,"isIdentifierChar",{enumerable:!0,get:function(){return n.isIdentifierChar}}),Object.defineProperty(t,"isIdentifierStart",{enumerable:!0,get:function(){return n.isIdentifierStart}}),Object.defineProperty(t,"isReservedWord",{enumerable:!0,get:function(){return o.isReservedWord}}),Object.defineProperty(t,"isStrictBindOnlyReservedWord",{enumerable:!0,get:function(){return o.isStrictBindOnlyReservedWord}}),Object.defineProperty(t,"isStrictBindReservedWord",{enumerable:!0,get:function(){return o.isStrictBindReservedWord}}),Object.defineProperty(t,"isStrictReservedWord",{enumerable:!0,get:function(){return o.isStrictReservedWord}}),Object.defineProperty(t,"isKeyword",{enumerable:!0,get:function(){return o.isKeyword}});var n=r(197),o=r(198)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isIdentifierStart=s,t.isIdentifierChar=f,t.isIdentifierName=function(e){for(var t=!0,r=0,n=Array.from(e);r<n.length;r++){var o=n[r].codePointAt(0);if(t){if(!s(o))return!1;t=!1}else if(!f(o))return!1}return!t};var n="\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC",o="\u200C\u200D\xb7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF\u1AC0\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F",a=new RegExp("["+n+"]"),i=new RegExp("["+n+o+"]");n=o=null;var l=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938],u=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];function c(e,t){for(var r=65536,n=0,o=t.length;n<o;n+=2){if((r+=t[n])>e)return!1;if((r+=t[n+1])>=e)return!0}return!1}function s(e){return e<65?36===e:e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&a.test(String.fromCharCode(e)):c(e,l)))}function f(e){return e<48?36===e:e<58||!(e<65)&&(e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&i.test(String.fromCharCode(e)):c(e,l)||c(e,u))))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isReservedWord=u,t.isStrictReservedWord=c,t.isStrictBindOnlyReservedWord=s,t.isStrictBindReservedWord=function(e,t){return c(e,t)||s(e)},t.isKeyword=function(e){return a.has(e)};var n=["implements","interface","let","package","private","protected","public","static","yield"],o=["eval","arguments"],a=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),i=new Set(n),l=new Set(o);function u(e,t){return t&&"await"===e||"enum"===e}function c(e,t){return u(e,t)||i.has(e)}function s(e){return l.has(e)}},function(e,t,r){"use strict";(function(t){var n=r(52),o=r(200),a=r(201),i=r(206).stdout,l=r(207),u="win32"===t.platform&&!(Object({NODE_ENV:"production"}).TERM||"").toLowerCase().startsWith("xterm"),c=["ansi","ansi","ansi256","ansi16m"],s=new Set(["gray"]),f=Object.create(null);function d(e,t){t=t||{};var r=i?i.level:0;e.level=void 0===t.level?r:t.level,e.enabled="enabled"in t?t.enabled:e.level>0}function p(e){if(!this||!(this instanceof p)||this.template){var t={};return d(t,e),t.template=function(){var e=[].slice.call(arguments);return T.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,p.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=p,t.template}d(this,e)}u&&(a.blue.open="\x1b[94m");for(var h=function(){var e=v[g];a[e].closeRe=new RegExp(o(a[e].close),"g"),f[e]={get:function(){var t=a[e];return S.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}}},g=0,v=Object.keys(a);g<v.length;g++)h();f.visible={get:function(){return S.call(this,this._styles||[],!0,"visible")}},a.color.closeRe=new RegExp(o(a.color.close),"g");for(var m=function(){var e=b[y];if(s.has(e))return"continue";f[e]={get:function(){var t=this.level;return function(){var r=a.color[c[t]][e].apply(null,arguments),n={open:r,close:a.color.close,closeRe:a.color.closeRe};return S.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},y=0,b=Object.keys(a.color.ansi);y<b.length;y++)m();a.bgColor.closeRe=new RegExp(o(a.bgColor.close),"g");for(var w=function(){var e=E[k];if(s.has(e))return"continue";var t="bg"+e[0].toUpperCase()+e.slice(1);f[t]={get:function(){var t=this.level;return function(){var r=a.bgColor[c[t]][e].apply(null,arguments),n={open:r,close:a.bgColor.close,closeRe:a.bgColor.closeRe};return S.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},k=0,E=Object.keys(a.bgColor.ansi);k<E.length;k++)w();var x=Object.defineProperties((function(){}),f);function S(e,t,r){var n=function e(){return _.apply(e,arguments)};n._styles=e,n._empty=t;var o=this;return Object.defineProperty(n,"level",{enumerable:!0,get:function(){return o.level},set:function(e){o.level=e}}),Object.defineProperty(n,"enabled",{enumerable:!0,get:function(){return o.enabled},set:function(e){o.enabled=e}}),n.hasGrey=this.hasGrey||"gray"===r||"grey"===r,n.__proto__=x,n}function _(){var e=arguments,t=e.length,r=String(arguments[0]);if(0===t)return"";if(t>1)for(var o=1;o<t;o++)r+=" "+e[o];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;var i=a.dim.open;u&&this.hasGrey&&(a.dim.open="");var l,c=n(this._styles.slice().reverse());try{for(c.s();!(l=c.n()).done;){var s=l.value;r=(r=s.open+r.replace(s.closeRe,s.open)+s.close).replace(/\\r?\\n/g,"".concat(s.close,"$&").concat(s.open))}}catch(e){c.e(e)}finally{c.f()}return a.dim.open=i,r}function T(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");for(var r=[].slice.call(arguments,2),n=[t.raw[0]],o=1;o<t.length;o++)n.push(String(r[o-1]).replace(/[{}\\\\]/g,"\\\\$&")),n.push(String(t.raw[o]));return l(e,n.join(""))}Object.defineProperties(p.prototype,f),e.exports=p(),e.exports.supportsColor=i,e.exports.default=e.exports}).call(this,r(51))},function(e,t,r){"use strict";var n=/[|\\\\{}()[\\]^$+*?.]/g;e.exports=function(e){if("string"!==typeof e)throw new TypeError("Expected a string");return e.replace(n,"\\\\$&")}},function(e,t,r){"use strict";(function(e){var t=r(203),n=function(e,r){return function(){var n=e.apply(t,arguments);return"\x1b[".concat(n+r,"m")}},o=function(e,r){return function(){var n=e.apply(t,arguments);return"\x1b[".concat(38+r,";5;").concat(n,"m")}},a=function(e,r){return function(){var n=e.apply(t,arguments);return"\x1b[".concat(38+r,";2;").concat(n[0],";").concat(n[1],";").concat(n[2],"m")}};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){var e=new Map,r={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};r.color.grey=r.color.gray;for(var i=0,l=Object.keys(r);i<l.length;i++){for(var u=l[i],c=r[u],s=0,f=Object.keys(c);s<f.length;s++){var d=f[s],p=c[d];r[d]={open:"\x1b[".concat(p[0],"m"),close:"\x1b[".concat(p[1],"m")},c[d]=r[d],e.set(p[0],p[1])}Object.defineProperty(r,u,{value:c,enumerable:!1}),Object.defineProperty(r,"codes",{value:e,enumerable:!1})}var h=function(e){return e},g=function(e,t,r){return[e,t,r]};r.color.close="\x1b[39m",r.bgColor.close="\x1b[49m",r.color.ansi={ansi:n(h,0)},r.color.ansi256={ansi256:o(h,0)},r.color.ansi16m={rgb:a(g,0)},r.bgColor.ansi={ansi:n(h,10)},r.bgColor.ansi256={ansi256:o(h,10)},r.bgColor.ansi16m={rgb:a(g,10)};for(var v=0,m=Object.keys(t);v<m.length;v++){var y=m[v];if("object"===typeof t[y]){var b=t[y];"ansi16"===y&&(y="ansi"),"ansi16"in b&&(r.color.ansi[y]=n(b.ansi16,0),r.bgColor.ansi[y]=n(b.ansi16,10)),"ansi256"in b&&(r.color.ansi256[y]=o(b.ansi256,0),r.bgColor.ansi256[y]=o(b.ansi256,10)),"rgb"in b&&(r.color.ansi16m[y]=a(b.rgb,0),r.bgColor.ansi16m[y]=a(b.rgb,10))}}return r}})}).call(this,r(202)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,r){var n=r(87),o=r(205),a={};Object.keys(n).forEach((function(e){a[e]={},Object.defineProperty(a[e],"channels",{value:n[e].channels}),Object.defineProperty(a[e],"labels",{value:n[e].labels});var t=o(e);Object.keys(t).forEach((function(r){var n=t[r];a[e][r]=function(e){var t=function(t){if(void 0===t||null===t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var r=e(t);if("object"===typeof r)for(var n=r.length,o=0;o<n;o++)r[o]=Math.round(r[o]);return r};return"conversion"in e&&(t.conversion=e.conversion),t}(n),a[e][r].raw=function(e){var t=function(t){return void 0===t||null===t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(n)}))})),e.exports=a},function(e,t,r){"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},function(e,t,r){var n=r(87);function o(e){var t=function(){for(var e={},t=Object.keys(n),r=t.length,o=0;o<r;o++)e[t[o]]={distance:-1,parent:null};return e}(),r=[e];for(t[e].distance=0;r.length;)for(var o=r.pop(),a=Object.keys(n[o]),i=a.length,l=0;l<i;l++){var u=a[l],c=t[u];-1===c.distance&&(c.distance=t[o].distance+1,c.parent=o,r.unshift(u))}return t}function a(e,t){return function(r){return t(e(r))}}function i(e,t){for(var r=[t[e].parent,e],o=n[t[e].parent][e],i=t[e].parent;t[i].parent;)r.unshift(t[i].parent),o=a(n[t[i].parent][i],o),i=t[i].parent;return o.conversion=r,o}e.exports=function(e){for(var t=o(e),r={},n=Object.keys(t),a=n.length,l=0;l<a;l++){var u=n[l];null!==t[u].parent&&(r[u]=i(u,t))}return r}},function(e,t,r){"use strict";e.exports={stdout:!1,stderr:!1}},function(e,t,r){"use strict";var n=r(52),o=/(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi,a=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g,i=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/,l=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,u=new Map([["n","\\n"],["r","\\r"],["t","\\t"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","\x1b"],["a","\x07"]]);function c(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):u.get(e)||e}function s(e,t){var r,o,a=[],u=t.trim().split(/\\s*,\\s*/g),s=n(u);try{for(s.s();!(o=s.n()).done;){var f=o.value;if(isNaN(f)){if(!(r=f.match(i)))throw new Error("Invalid Chalk template style argument: ".concat(f," (in style \'").concat(e,"\')"));a.push(r[2].replace(l,(function(e,t,r){return t?c(t):r})))}else a.push(Number(f))}}catch(e){s.e(e)}finally{s.f()}return a}function f(e){a.lastIndex=0;for(var t,r=[];null!==(t=a.exec(e));){var n=t[1];if(t[2]){var o=s(n,t[2]);r.push([n].concat(o))}else r.push([n])}return r}function d(e,t){var r,o={},a=n(t);try{for(a.s();!(r=a.n()).done;){var i,l=r.value,u=n(l.styles);try{for(u.s();!(i=u.n()).done;){var c=i.value;o[c[0]]=l.inverse?null:c.slice(1)}}catch(e){u.e(e)}finally{u.f()}}}catch(e){a.e(e)}finally{a.f()}for(var s=e,f=0,d=Object.keys(o);f<d.length;f++){var p=d[f];if(Array.isArray(o[p])){if(!(p in s))throw new Error("Unknown Chalk style: ".concat(p));s=o[p].length>0?s[p].apply(s,o[p]):s[p]}}return s}e.exports=function(e,t){var r=[],n=[],a=[];if(t.replace(o,(function(t,o,i,l,u,s){if(o)a.push(c(o));else if(l){var p=a.join("");a=[],n.push(0===r.length?p:d(e,r)(p)),r.push({inverse:i,styles:f(l)})}else if(u){if(0===r.length)throw new Error("Found extraneous } in Chalk template literal");n.push(d(e,r)(a.join(""))),a=[],r.pop()}else a.push(s)})),n.push(a.join("")),r.length>0){var i="Chalk template literal is missing ".concat(r.length," closing bracket").concat(1===r.length?"":"s"," (`}`)");throw new Error(i)}return n.join("")}},function(e,t,r){"use strict";r.r(t),r.d(t,"ThemeContext",(function(){return me}));r(90);var n=r(0),o=r.n(n),a=r(53),i=r.n(a),l=function(e){return{position:"relative",display:"inline-flex",flexDirection:"column",height:"100%",width:"1024px",maxWidth:"100%",overflowX:"hidden",overflowY:"auto",padding:"0.5rem",boxSizing:"border-box",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"11px",whiteSpace:"pre-wrap",wordBreak:"break-word",lineHeight:1.5,color:e.color}},u=null;var c=function(e){var t=Object(n.useContext)(me),r=e.shortcutHandler;return Object(n.useEffect)((function(){var e=function(e){r&&r(e.key)};return window.addEventListener("keydown",e),u&&u.addEventListener("keydown",e),function(){window.removeEventListener("keydown",e),u&&u.removeEventListener("keydown",e)}}),[r]),o.a.createElement("div",{style:l(t),ref:function(e){if(e){var t=e.ownerDocument;u=t.defaultView}}},e.children)},s=function(e){return{fontFamily:"sans-serif",color:e.footer,marginTop:"0.5rem",flex:"0 0 auto"}};var f=function(e){var t=Object(n.useContext)(me);return o.a.createElement("div",{style:s(t)},e.line1,o.a.createElement("br",null),e.line2)},d=function(e){return{fontSize:"2em",fontFamily:"sans-serif",color:e.headerColor,whiteSpace:"pre-wrap",margin:"0 2rem 0.75rem 0",flex:"0 0 auto",maxHeight:"50%",overflow:"auto"}};var p=function(e){var t=Object(n.useContext)(me);return o.a.createElement("div",{style:d(t)},e.headerText)};function h(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function g(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function v(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?g(Object(r),!0).forEach((function(t){h(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):g(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var m={position:"relative",display:"block",padding:"0.5em",marginTop:"0.5em",marginBottom:"0.5em",overflowX:"auto",whiteSpace:"pre-wrap",borderRadius:"0.25rem"},y={fontFamily:"Consolas, Menlo, monospace"};var b=function(e){var t=e.main,r=e.codeHTML,a=Object(n.useContext)(me),i=v(v({},m),{},{backgroundColor:a.primaryPreBackground,color:a.primaryPreColor}),l=v(v({},m),{},{backgroundColor:a.secondaryPreBackground,color:a.secondaryPreColor}),u=t?i:l,c={__html:r};return o.a.createElement("pre",{style:u},o.a.createElement("code",{style:y,dangerouslySetInnerHTML:c}))},w=r(33),k=r.n(w),E=new(r(88).AllHtmlEntities),x=function(e){return{reset:[e.base05,"transparent"],black:e.base05,red:e.base08,green:e.base0B,yellow:e.base08,blue:e.base0C,magenta:e.base0C,cyan:e.base0E,gray:e.base03,lightgrey:e.base01,darkgrey:e.base03}},S={"ansi-bright-black":"black","ansi-bright-yellow":"yellow","ansi-yellow":"yellow","ansi-bright-green":"green","ansi-green":"green","ansi-bright-cyan":"cyan","ansi-cyan":"cyan","ansi-bright-red":"red","ansi-red":"red","ansi-bright-magenta":"magenta","ansi-magenta":"magenta","ansi-white":"darkgrey"};var _=function(e,t){for(var r=(new k.a).ansiToJson(E.encode(e),{use_classes:!0}),n="",o=!1,a=0;a<r.length;++a)for(var i=r[a],l=i.content,u=i.fg,c=l.split("\\n"),s=0;s<c.length;++s){o||(n+=\'<span data-ansi-line="true">\',o=!0);var f=c[s].replace("\\r",""),d=x(t)[S[u]];null!=d?n+=\'<span style="color: \'+d+\';">\'+f+"</span>":(null!=u&&console.log("Missing color mapping: ",u),n+="<span>"+f+"</span>"),s<c.length-1&&(n+="</span>",o=!1,n+="<br/>")}return o&&(n+="</span>",o=!1),n},T=/^\\.(\\/[^/\\n ]+)+\\.[^/\\n ]+$/,C=[/^.*\\((\\d+):(\\d+)\\)$/,/^Line (\\d+):.+$/];var O=function(e){for(var t=e.split("\\n"),r="",n=0,o=0,a=0;a<t.length;a++){var i=k.a.ansiToText(t[a]).trim();if(i){!r&&i.match(T)&&(r=i);for(var l=0;l<C.length;){var u=i.match(C[l]);if(u){n=parseInt(u[1],10),o=parseInt(u[2],10)+1||1;break}l++}if(r&&n)break}}return r&&n?{fileName:r,lineNumber:n,colNumber:o}:null},P={cursor:"pointer"};var R=function(e){var t=Object(n.useContext)(me),r=e.error,a=e.editorHandler,i=O(r),l=null!==i&&null!==a;return o.a.createElement(c,null,o.a.createElement(p,{headerText:"Failed to compile"}),o.a.createElement("div",{onClick:l&&i?function(){return a(i)}:null,style:l?P:null},o.a.createElement(b,{main:!0,codeHTML:_(r,t)})),o.a.createElement(f,{line1:"This error occurred during the build time and cannot be dismissed."}))};function N(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function L(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function A(e,t,r){return t&&L(e.prototype,t),r&&L(e,r),e}function I(e,t){return(I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}function M(e){return(M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function D(e){return(D="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){return!t||"object"!==D(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return e}(e):t}function z(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=M(e);if(t){var o=M(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return q(this,r)}}var U=function(e){return{color:e.closeColor,lineHeight:"1rem",fontSize:"1.5rem",padding:"1rem",cursor:"pointer",position:"absolute",right:0,top:0}};var F=function(e){var t=e.close,r=Object(n.useContext)(me);return o.a.createElement("span",{title:"Click or press Escape to dismiss.",onClick:t,style:U(r)},"\xd7")},B={marginBottom:"0.5rem"},V={marginRight:"1em"},H={border:"none",borderRadius:"4px",padding:"3px 6px",cursor:"pointer"},W=function(e){return v(v({},H),{},{backgroundColor:e.navBackground,color:e.navArrow,borderTopRightRadius:"0px",borderBottomRightRadius:"0px",marginRight:"1px"})},$=function(e){return v(v({},H),{},{backgroundColor:e.navBackground,color:e.navArrow,borderTopLeftRadius:"0px",borderBottomLeftRadius:"0px"})};var G=function(e){var t=Object(n.useContext)(me),r=e.currentError,a=e.totalErrors,i=e.previous,l=e.next;return o.a.createElement("div",{style:B},o.a.createElement("span",{style:V},o.a.createElement("button",{onClick:i,style:W(t)},"\u2190"),o.a.createElement("button",{onClick:l,style:$(t)},"\u2192")),"".concat(r," of ").concat(a," errors on the page"))};function Q(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Y(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return r}}(e,t)||function(e,t){if(e){if("string"===typeof e)return Q(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Q(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function K(e,t){for(;null!=t&&"br"!==t.tagName.toLowerCase();)t=t.nextElementSibling;null!=t&&e.removeChild(t)}var X=r(89);var J=function(e){var t=Object(n.useContext)(me),r=e.lines,a=e.lineNum,i=e.columnNum,l=e.contextSize,u=e.main,c=[],s=1/0;r.forEach((function(e){var t=e.content,r=t.match(/^\\s*/);""!==t&&(s=r&&r[0]?Math.min(s,r[0].length):0)})),r.forEach((function(e){var t=e.content,r=e.lineNumber;isFinite(s)&&(t=t.substring(s)),c[r-1]=t}));var f=Object(X.codeFrameColumns)(c.join("\\n"),{start:{line:a,column:null==i?0:i-(isFinite(s)?s:0)}},{forceColor:!0,linesAbove:l,linesBelow:l}),d=_(f,t),p=document.createElement("code");p.innerHTML=d,function(e){for(var t=e.childNodes,r=0;r<t.length;++r){var n=t[r];if("span"===n.tagName.toLowerCase()){var o=n.innerText;null!=o&&"|^"===o.replace(/\\s/g,"")&&(n.style.position="absolute",K(e,n))}}}(p);var h=p.childNodes;e:for(var g=0;g<h.length;++g)for(var v=h[g].childNodes,m=0;m<v.length;++m){var y=v[m].innerText;if(null!=y&&-1!==y.indexOf(" "+a+" |"))break e}return o.a.createElement(b,{main:u,codeHTML:p.innerHTML})};function Z(e,t,r,n,o,a,i){var l;if(!i&&e&&"number"===typeof t){var u=/^[/|\\\\].*?[/|\\\\]((src|node_modules)[/|\\\\].*)/.exec(e);l=u&&u[1]?u[1]:e,l+=":"+t,r&&(l+=":"+r)}else n&&"number"===typeof o?(l=n+":"+o,a&&(l+=":"+a)):l="unknown";return l.replace("webpack://",".")}var ee=function(e){return{textDecoration:"none",color:e.anchorColor,cursor:"pointer"}},te=function(e){return{marginBottom:"1.5em",color:e.toggleColor,cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",background:e.toggleBackground,fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"}};var re=function(e){var t=Object(n.useContext)(me),r=Y(Object(n.useState)(!1),2),a=r[0],i=r[1],l=function(){var t=e.frame,r=t._originalFileName,n=t._originalLineNumber;return r?-1!==r.trim().indexOf(" ")?null:{fileName:r,lineNumber:n||1}:null},u=function(){var t=l();t&&e.editorHandler(t)},c=e.frame,s=e.contextSize,f=e.critical,d=e.showCode,p=c.fileName,h=c.lineNumber,g=c.columnNumber,v=c._scriptCode,m=c._originalFileName,y=c._originalLineNumber,b=c._originalColumnNumber,w=c._originalScriptCode,k=c.getFunctionName(),E=Z(m,y,b,p,h,g,a),x=null;d&&(a&&v&&0!==v.length&&null!=h?x={lines:v,lineNum:h,columnNum:g,contextSize:s,main:f}:!a&&w&&0!==w.length&&null!=y&&(x={lines:w,lineNum:y,columnNum:b,contextSize:s,main:f}));var S=null!==l()&&null!==e.editorHandler;return o.a.createElement("div",null,o.a.createElement("div",null,k),o.a.createElement("div",{style:{fontSize:"0.9em",marginBottom:"0.9em"}},o.a.createElement("span",{style:S?ee(t):null,onClick:S?u:null,onKeyDown:S?function(e){"Enter"===e.key&&u()}:null,tabIndex:S?"0":null},E)),x&&o.a.createElement("span",null,o.a.createElement("span",{onClick:S?u:null,style:S?{cursor:"pointer"}:null},o.a.createElement(J,x)),o.a.createElement("button",{style:te(t),onClick:function(){i(!a)}},"View "+(a?"source":"compiled"))))},ne={cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"},oe=function(e){return v(v({},ne),{},{color:e.color,background:e.background,marginBottom:"1.5em"})},ae=function(e){return v(v({},ne),{},{color:e.color,background:e.background,marginBottom:"0.6em"})};var ie=function(e){var t=Object(n.useContext)(me),r=Y(Object(n.useState)(!0),2),a=r[0],i=r[1],l=function(){i(!a)},u=e.children.length;return o.a.createElement("div",null,o.a.createElement("button",{onClick:l,style:a?oe(t):ae(t)},(a?"\u25B6":"\u25BC")+" ".concat(u," stack frames were ")+(a?"collapsed.":"expanded.")),o.a.createElement("div",{style:{display:a?"none":"block"}},e.children,o.a.createElement("button",{onClick:l,style:ae(t)},"\u25B2 ".concat(u," stack frames were expanded."))))};function le(e){switch(e){case"EvalError":case"InternalError":case"RangeError":case"ReferenceError":case"SyntaxError":case"TypeError":case"URIError":return!0;default:return!1}}var ue={fontSize:"1em",flex:"0 1 auto",minHeight:"0px",overflow:"auto"},ce=function(e){j(r,e);var t=z(r);function r(){return N(this,r),t.apply(this,arguments)}return A(r,[{key:"renderFrames",value:function(){var e=this.props,t=e.stackFrames,r=e.errorName,n=e.contextSize,a=e.editorHandler,i=[],l=!1,u=[],c=0;return t.forEach((function(e,s){var f=e.fileName,d=function(e,t){return null==e||""===e||-1!==e.indexOf("/~/")||-1!==e.indexOf("/node_modules/")||-1!==e.trim().indexOf(" ")||null==t||""===t}(e._originalFileName,f),p=!le(r),h=d&&(p||l);d||(l=!0);var g=o.a.createElement(re,{key:"frame-"+s,frame:e,contextSize:n,critical:0===s,showCode:!h,editorHandler:a}),v=s===t.length-1;h&&u.push(g),h&&!v||(1===u.length?i.push(u[0]):u.length>1&&(c++,i.push(o.a.createElement(ie,{key:"bundle-"+c},u))),u=[]),h||i.push(g)})),i}},{key:"render",value:function(){return o.a.createElement("div",{style:ue},this.renderFrames())}}]),r}(n.Component),se={display:"flex",flexDirection:"column"};var fe=function(e){var t=e.errorRecord,r=e.editorHandler,n=t.error,a=t.unhandledRejection,i=t.contextSize,l=t.stackFrames,u=a?"Unhandled Rejection ("+n.name+")":n.name,c=n.message,s=c.match(/^\\w*:/)||!u?c:u+": "+c;return s=s.replace(/^Invariant Violation:\\s*/,"").replace(/^Warning:\\s*/,"").replace(" Check the render method","\\n\\nCheck the render method").replace(" Check your code at","\\n\\nCheck your code at"),o.a.createElement("div",{style:se},o.a.createElement(p,{headerText:s}),o.a.createElement(ce,{stackFrames:l,errorName:u,contextSize:i,editorHandler:r}))},de=function(e){j(r,e);var t=z(r);function r(){var e;N(this,r);for(var n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return(e=t.call.apply(t,[this].concat(o))).state={currentIndex:0},e.previous=function(){e.setState((function(e,t){return{currentIndex:e.currentIndex>0?e.currentIndex-1:t.errorRecords.length-1}}))},e.next=function(){e.setState((function(e,t){return{currentIndex:e.currentIndex<t.errorRecords.length-1?e.currentIndex+1:0}}))},e.shortcutHandler=function(t){"Escape"===t?e.props.close():"ArrowLeft"===t?e.previous():"ArrowRight"===t&&e.next()},e}return A(r,[{key:"render",value:function(){var e=this.props,t=e.errorRecords,r=e.close,n=t.length;return o.a.createElement(c,{shortcutHandler:this.shortcutHandler},o.a.createElement(F,{close:r}),n>1&&o.a.createElement(G,{currentError:this.state.currentIndex+1,totalErrors:n,previous:this.previous,next:this.next}),o.a.createElement(fe,{errorRecord:t[this.state.currentIndex],editorHandler:this.props.editorHandler}),o.a.createElement(f,{line1:"This screen is visible only in development. It will not appear if the app crashes in production.",line2:"Open your browser\u2019s developer console to further inspect this error.  Click the \'X\' or hit ESC to dismiss this message."}))}}]),r}(n.PureComponent),pe={background:"white",color:"black",headerColor:"#ce1126",primaryPreBackground:"rgba(206, 17, 38, 0.05)",primaryPreColor:"inherit",secondaryPreBackground:"rgba(251, 245, 180, 0.3)",secondaryPreColor:"inherit",footer:"#878e91",anchorColor:"#878e91",toggleBackground:"transparent",toggleColor:"#878e91",closeColor:"#293238",navBackground:"rgba(206, 17, 38, 0.05)",navArrow:"#ce1126",base01:"#f5f5f5",base03:"#6e6e6e",base05:"#333333",base08:"#881280",base0B:"#1155cc",base0C:"#994500",base0E:"#c80000"},he={background:"#353535",color:"white",headerColor:"#e83b46",primaryPreBackground:"rgba(206, 17, 38, 0.1)",primaryPreColor:"#fccfcf",secondaryPreBackground:"rgba(251, 245, 180, 0.1)",secondaryPreColor:"#fbf5b4",footer:"#878e91",anchorColor:"#878e91",toggleBackground:"transparent",toggleColor:"#878e91",closeColor:"#ffffff",navBackground:"rgba(206, 17, 38, 0.2)",navArrow:"#ce1126",base01:"#282a2e",base03:"#969896",base05:"#c5c8c6",base08:"#cc6666",base0B:"#b5bd68",base0C:"#8abeb7",base0E:"#b294bb"};var ge=null,ve=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?he:pe,me=Object(n.createContext)();window.updateContent=function(e){var t,r,n,a,l,u=(r=(t=e).currentBuildError,n=t.currentRuntimeErrorRecords,a=t.dismissRuntimeErrors,l=t.editorHandler,r?o.a.createElement(me.Provider,{value:ve},o.a.createElement(R,{error:r,editorHandler:l})):n.length>0?o.a.createElement(me.Provider,{value:ve},o.a.createElement(de,{errorRecords:n,close:a,editorHandler:l})):null);return null===u?(i.a.unmountComponentAtNode(ge),!1):(i.a.render(u,ge),!0)},document.body.style.margin="0",document.body.style["max-width"]="100vw",function(e,t){for(var r in e.setAttribute("style",""),t)t.hasOwnProperty(r)&&(e.style[r]=t[r])}(ge=document.createElement("div"),{width:"100%",height:"100%","box-sizing":"border-box","text-align":"center","background-color":ve.background}),document.body.appendChild(ge),window.parent.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady()}]);', ee = null, te = !1, re = !1, ne = null, oe = null, ae = [], ie = null, le = null;
            function ue(e) {
                ne = e, ee && me();
            }
            function ce(e) {
                oe = e, me();
            }
            function se(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                ie = t, X(pe(t))(e);
            }
            function fe() {
                oe = null, me();
            }
            function de(e) {
                if (null !== le) throw new Error("Already listening");
                e.launchEditorEndpoint && console.warn("Warning: `startReportingRuntimeErrors` doesn\u2019t accept `launchEditorEndpoint` argument anymore. Use `listenToOpenInEditor` instead with your own implementation to open errors in editor "), ie = e, le = K(pe(e), e.filename);
            }
            var pe = function(e) {
                return function(t) {
                    try {
                        "function" == typeof e.onError && e.onError.call(null);
                    } finally{
                        if (ae.some(function(e) {
                            return e.error === t.error;
                        })) return;
                        ae = ae.concat([
                            t
                        ]), me();
                    }
                };
            };
            function he() {
                ae = [], me();
            }
            function ge() {
                if (null === le) throw new Error("Not currently listening");
                ie = null;
                try {
                    le();
                } finally{
                    le = null;
                }
            }
            function me() {
                if (!te) {
                    if (re) ve();
                    else {
                        te = !0;
                        var e = window.document.createElement("iframe");
                        !function(e, t) {
                            for(var r in e.setAttribute("style", ""), t)t.hasOwnProperty(r) && (e.style[r] = t[r]);
                        }(e, J), e.onload = function() {
                            var t = e.contentDocument;
                            if (null != t && null != t.body) {
                                ee = e;
                                var r = e.contentWindow.document.createElement("script");
                                r.type = "text/javascript", r.innerHTML = Z, t.body.appendChild(r);
                            }
                        }, window.document.body.appendChild(e);
                    }
                }
            }
            function ve() {
                if (!ie) throw new Error("Expected options to be injected.");
                if (!ee) throw new Error("Iframe has not been created yet.");
                ee.contentWindow.updateContent({
                    currentBuildError: oe,
                    currentRuntimeErrorRecords: ae,
                    dismissRuntimeErrors: he,
                    editorHandler: ne
                }) || (window.document.body.removeChild(ee), ee = null, re = !1);
            }
            window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ = window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ || {}, window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady = function() {
                re = !0, te = !1, ve();
            };
        }
    ]);
});

},{"d1546958eb39fdcf":"d5jf4"}],"d5jf4":[function(require,module,exports) {
// shim for using process in browser
var process = module.exports = {};
// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var cachedSetTimeout;
var cachedClearTimeout;
function defaultSetTimout() {
    throw new Error("setTimeout has not been defined");
}
function defaultClearTimeout() {
    throw new Error("clearTimeout has not been defined");
}
(function() {
    try {
        if (typeof setTimeout === "function") cachedSetTimeout = setTimeout;
        else cachedSetTimeout = defaultSetTimout;
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === "function") cachedClearTimeout = clearTimeout;
        else cachedClearTimeout = defaultClearTimeout;
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations
    return setTimeout(fun, 0);
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations
    return clearTimeout(marker);
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;
function cleanUpNextTick() {
    if (!draining || !currentQueue) return;
    draining = false;
    if (currentQueue.length) queue = currentQueue.concat(queue);
    else queueIndex = -1;
    if (queue.length) drainQueue();
}
function drainQueue() {
    if (draining) return;
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while(len){
        currentQueue = queue;
        queue = [];
        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}
process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) runTimeout(drainQueue);
};
// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function() {
    this.fun.apply(null, this.array);
};
process.title = "browser";
process.browser = true;
process.env = {};
process.argv = [];
process.version = ""; // empty string to avoid regexp issues
process.versions = {};
function noop() {}
process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;
process.listeners = function(name) {
    return [];
};
process.binding = function(name) {
    throw new Error("process.binding is not supported");
};
process.cwd = function() {
    return "/";
};
process.chdir = function(dir) {
    throw new Error("process.chdir is not supported");
};
process.umask = function() {
    return 0;
};

},{}],"d8Dch":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$98a3 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$98a3.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _globalCss = require("../global.css");
var _styleguideCss = require("../styleguide.css");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _client = require("react-dom/client");
var _clientDefault = parcelHelpers.interopDefault(_client);
var _element = require("./screens/Element");
const app = document.getElementById("app");
const root = (0, _clientDefault.default).createRoot(app);
root.render(/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _element.Element), {}, void 0, false, {
    fileName: "src/index.jsx",
    lineNumber: 9,
    columnNumber: 13
}, undefined));

  $parcel$ReactRefreshHelpers$98a3.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","../global.css":"6ZjVH","../styleguide.css":"7C4k8","react":"21dqq","react-dom/client":"lOjBx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru","./screens/Element":"igX3A"}],"iTorj":[function(require,module,exports) {
"use strict";
module.exports = require("ee51401569654d91");

},{"ee51401569654d91":"48uCM"}],"48uCM":[function(require,module,exports) {
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    var React = require("58362d9d82be395f");
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for("react.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator";
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== "object") return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === "function") return maybeIterator;
        return null;
    }
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning("error", format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== "") {
            format += "%s";
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift("Warning: " + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
    function isValidElementType(type) {
        if (typeof type === "string" || typeof type === "function") return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || "Context";
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === "number") error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === "function") return type.displayName || type.name || null;
        if (typeof type === "string") return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return "\n" + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, "props", {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === "string") {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = "\n" + sampleLines[s].replace(" at new ", " at "); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes("<anonymous>")) _frame = _frame.replace("<anonymous>", fn.displayName);
                            if (typeof fn === "function") componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : "";
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        if (typeof fn === "function") componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return "";
        if (typeof type === "function") return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === "string") return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return "";
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== "function") {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error("Failed %s type: %s", location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;
    var didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
            var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function warnIfStringRefCannotBeAutoConverted(config, self) {
        if (typeof config.ref === "string" && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, "validated", {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, "_self", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, "_source", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */ function jsxDEV(type, config, maybeKey, source, self) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
        // but as an intermediary step, we will use jsxDEV for everything except
        // <div {...props} key="Hi" />, because we aren't currently able to tell if
        // key is explicitly declared to be undefined or not.
        if (maybeKey !== undefined) {
            checkKeyStringCoercion(maybeKey);
            key = "" + maybeKey;
        }
        if (hasValidKey(config)) {
            checkKeyStringCoercion(config.key);
            key = "" + config.key;
        }
        if (hasValidRef(config)) {
            ref = config.ref;
            warnIfStringRefCannotBeAutoConverted(config, self);
        } // Remaining properties are added to a new props object
        for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
         // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner$1.current) {
            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
            if (name) return "\n\nCheck the render method of `" + name + "`.";
        }
        return "";
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
        }
        return "";
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = "";
        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== "object") return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === "string") return;
        var propTypes;
        if (typeof type === "function") propTypes = type.propTypes;
        else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
        }
        if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error("Invalid attribute `ref` supplied to `React.Fragment`.");
            setCurrentlyValidatingElement$1(null);
        }
    }
    var didWarnAboutKeySpread = {};
    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = "";
            if (type === undefined || typeof type === "object" && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendum(source);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = "null";
            else if (isArray(type)) typeString = "array";
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
            } else typeString = typeof type;
            error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) {
            var children = props.children;
            if (children !== undefined) {
                if (isStaticChildren) {
                    if (isArray(children)) {
                        for(var i = 0; i < children.length; i++)validateChildKeys(children[i], type);
                        if (Object.freeze) Object.freeze(children);
                    } else error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                } else validateChildKeys(children, type);
            }
        }
        if (hasOwnProperty.call(props, "key")) {
            var componentName = getComponentNameFromType(type);
            var keys = Object.keys(props).filter(function(k) {
                return k !== "key";
            });
            var beforeExample = keys.length > 0 ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            if (!didWarnAboutKeySpread[componentName + beforeExample]) {
                var afterExample = keys.length > 0 ? "{" + keys.join(": ..., ") + ": ...}" : "{}";
                error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);
                didWarnAboutKeySpread[componentName + beforeExample] = true;
            }
        }
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    } // These two functions exist to still get child warnings in dev
    var jsxDEV$1 = jsxWithValidation;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = jsxDEV$1;
})();

},{"58362d9d82be395f":"21dqq"}],"21dqq":[function(require,module,exports) {
"use strict";
module.exports = require("a569817e6ea559f6");

},{"a569817e6ea559f6":"6YvXz"}],"6YvXz":[function(require,module,exports) {
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var ReactVersion = "18.3.1";
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for("react.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator";
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== "object") return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === "function") return maybeIterator;
        return null;
    }
    /**
 * Keeps track of the current dispatcher.
 */ var ReactCurrentDispatcher = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    /**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */ var ReactCurrentBatchConfig = {
        transition: null
    };
    var ReactCurrentActQueue = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: false,
        didScheduleLegacyUpdate: false
    };
    /**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */ var ReactCurrentOwner = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    var ReactDebugCurrentFrame = {};
    var currentExtraStackFrame = null;
    function setExtraStackFrame(stack) {
        currentExtraStackFrame = stack;
    }
    ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
        currentExtraStackFrame = stack;
    }; // Stack implementation injected by the current renderer.
    ReactDebugCurrentFrame.getCurrentStack = null;
    ReactDebugCurrentFrame.getStackAddendum = function() {
        var stack = ""; // Add an extra top frame while an element is being validated
        if (currentExtraStackFrame) stack += currentExtraStackFrame;
         // Delegate to the injected renderer-specific implementation
        var impl = ReactDebugCurrentFrame.getCurrentStack;
        if (impl) stack += impl() || "";
        return stack;
    };
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var ReactSharedInternals = {
        ReactCurrentDispatcher: ReactCurrentDispatcher,
        ReactCurrentBatchConfig: ReactCurrentBatchConfig,
        ReactCurrentOwner: ReactCurrentOwner
    };
    ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
    ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        printWarning("warn", format, args);
    }
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning("error", format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== "") {
            format += "%s";
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift("Warning: " + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var didWarnStateUpdateForUnmountedComponent = {};
    function warnNoop(publicInstance, callerName) {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
        var warningKey = componentName + "." + callerName;
        if (didWarnStateUpdateForUnmountedComponent[warningKey]) return;
        error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
    }
    /**
 * This is the abstract API for an update queue.
 */ var ReactNoopUpdateQueue = {
        /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */ isMounted: function(publicInstance) {
            return false;
        },
        /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, "forceUpdate");
        },
        /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, "replaceState");
        },
        /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, "setState");
        }
    };
    var assign = Object.assign;
    var emptyObject = {};
    Object.freeze(emptyObject);
    /**
 * Base class helpers for the updating state of a component.
 */ function Component(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
    }
    Component.prototype.isReactComponent = {};
    /**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */ Component.prototype.setState = function(partialState, callback) {
        if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, "setState");
    };
    /**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */ Component.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
    };
    var deprecatedAPIs = {
        isMounted: [
            "isMounted",
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            "replaceState",
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    };
    var defineDeprecationWarning = function(methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
            get: function() {
                warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                return undefined;
            }
        });
    };
    for(var fnName in deprecatedAPIs)if (deprecatedAPIs.hasOwnProperty(fnName)) defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    function ComponentDummy() {}
    ComponentDummy.prototype = Component.prototype;
    /**
 * Convenience component with default shallow equality check for sCU.
 */ function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
    assign(pureComponentPrototype, Component.prototype);
    pureComponentPrototype.isPureReactComponent = true;
    // an immutable object with a single mutable value
    function createRef() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || "Context";
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === "number") error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === "function") return type.displayName || type.name || null;
        if (typeof type === "string") return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
            var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    function warnIfStringRefCannotBeAutoConverted(config) {
        if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, "validated", {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, "_self", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, "_source", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */ function createElement(type, config, children) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null;
        var self = null;
        var source = null;
        if (config != null) {
            if (hasValidRef(config)) {
                ref = config.ref;
                warnIfStringRefCannotBeAutoConverted(config);
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = "" + config.key;
            }
            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            if (Object.freeze) Object.freeze(childArray);
            props.children = childArray;
        } // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
        return newElement;
    }
    /**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */ function cloneElement(element, config, children) {
        if (element === null || element === undefined) throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        var propName; // Original props are copied
        var props = assign({}, element.props); // Reserved names are extracted
        var key = element.key;
        var ref = element.ref; // Self is preserved since the owner is preserved.
        var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
        // transpiler, and the original source is probably a better indicator of the
        // true owner.
        var source = element._source; // Owner will be preserved, unless ref is overridden
        var owner = element._owner;
        if (config != null) {
            if (hasValidRef(config)) {
                // Silently steal the ref from the parent.
                ref = config.ref;
                owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = "" + config.key;
            } // Remaining properties override existing props
            var defaultProps;
            if (element.type && element.type.defaultProps) defaultProps = element.type.defaultProps;
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) // Resolve default props
                props[propName] = defaultProps[propName];
                else props[propName] = config[propName];
            }
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            props.children = childArray;
        }
        return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    var SEPARATOR = ".";
    var SUBSEPARATOR = ":";
    /**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */ function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
            "=": "=0",
            ":": "=2"
        };
        var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
        });
        return "$" + escapedString;
    }
    /**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */ var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
        return text.replace(userProvidedKeyEscapeRegex, "$&/");
    }
    /**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */ function getElementKey(element, index) {
        // Do some typechecking here since we call this blindly. We want to ensure
        // that we don't block potential future ES APIs.
        if (typeof element === "object" && element !== null && element.key != null) {
            checkKeyStringCoercion(element.key);
            return escape("" + element.key);
        } // Implicit key determined by the index in the set
        return index.toString(36);
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if (type === "undefined" || type === "boolean") // All of the above are perceived as null.
        children = null;
        var invokeCallback = false;
        if (children === null) invokeCallback = true;
        else switch(type){
            case "string":
            case "number":
                invokeCallback = true;
                break;
            case "object":
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = true;
                }
        }
        if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
            // so that it's consistent if the number of children grows:
            var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray(mappedChild)) {
                var escapedChildKey = "";
                if (childKey != null) escapedChildKey = escapeUserProvidedKey(childKey) + "/";
                mapIntoArray(mappedChild, array, escapedChildKey, "", function(c) {
                    return c;
                });
            } else if (mappedChild != null) {
                if (isValidElement(mappedChild)) {
                    // The `if` statement here prevents auto-disabling of the safe
                    // coercion ESLint rule, so we must manually disable it below.
                    // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                    if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) checkKeyStringCoercion(mappedChild.key);
                    mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children
                    escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // eslint-disable-next-line react-internal/safe-string-coercion
                    escapeUserProvidedKey("" + mappedChild.key) + "/" : "") + childKey);
                }
                array.push(mappedChild);
            }
            return 1;
        }
        var child;
        var nextName;
        var subtreeCount = 0; // Count of children found in the current subtree.
        var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
        if (isArray(children)) for(var i = 0; i < children.length; i++){
            child = children[i];
            nextName = nextNamePrefix + getElementKey(child, i);
            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        }
        else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === "function") {
                var iterableChildren = children;
                // Warn about using Maps as children
                if (iteratorFn === iterableChildren.entries) {
                    if (!didWarnAboutMaps) warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                    didWarnAboutMaps = true;
                }
                var iterator = iteratorFn.call(iterableChildren);
                var step;
                var ii = 0;
                while(!(step = iterator.next()).done){
                    child = step.value;
                    nextName = nextNamePrefix + getElementKey(child, ii++);
                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                }
            } else if (type === "object") {
                // eslint-disable-next-line react-internal/safe-string-coercion
                var childrenString = String(children);
                throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). " + "If you meant to render a collection of children, use an array " + "instead.");
            }
        }
        return subtreeCount;
    }
    /**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */ function mapChildren(children, func, context) {
        if (children == null) return children;
        var result = [];
        var count = 0;
        mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    /**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */ function countChildren(children) {
        var n = 0;
        mapChildren(children, function() {
            n++; // Don't return anything
        });
        return n;
    }
    /**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */ function forEachChildren(children, forEachFunc, forEachContext) {
        mapChildren(children, function() {
            forEachFunc.apply(this, arguments); // Don't return anything.
        }, forEachContext);
    }
    /**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */ function toArray(children) {
        return mapChildren(children, function(child) {
            return child;
        }) || [];
    }
    /**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */ function onlyChild(children) {
        if (!isValidElement(children)) throw new Error("React.Children.only expected to receive a single React element child.");
        return children;
    }
    function createContext(defaultValue) {
        // TODO: Second argument used to be an optional `calculateChangedBits`
        // function. Warn to reserve for future use?
        var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            _defaultValue: null,
            _globalName: null
        };
        context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
        };
        var hasWarnedAboutUsingNestedContextConsumers = false;
        var hasWarnedAboutUsingConsumerProvider = false;
        var hasWarnedAboutDisplayNameOnConsumer = false;
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
            $$typeof: REACT_CONTEXT_TYPE,
            _context: context
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here
        Object.defineProperties(Consumer, {
            Provider: {
                get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                        hasWarnedAboutUsingConsumerProvider = true;
                        error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                },
                set: function(_Provider) {
                    context.Provider = _Provider;
                }
            },
            _currentValue: {
                get: function() {
                    return context._currentValue;
                },
                set: function(_currentValue) {
                    context._currentValue = _currentValue;
                }
            },
            _currentValue2: {
                get: function() {
                    return context._currentValue2;
                },
                set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                }
            },
            _threadCount: {
                get: function() {
                    return context._threadCount;
                },
                set: function(_threadCount) {
                    context._threadCount = _threadCount;
                }
            },
            Consumer: {
                get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                        hasWarnedAboutUsingNestedContextConsumers = true;
                        error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                }
            },
            displayName: {
                get: function() {
                    return context.displayName;
                },
                set: function(displayName) {
                    if (!hasWarnedAboutDisplayNameOnConsumer) {
                        warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                        hasWarnedAboutDisplayNameOnConsumer = true;
                    }
                }
            }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
        context.Consumer = Consumer;
        context._currentRenderer = null;
        context._currentRenderer2 = null;
        return context;
    }
    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;
    function lazyInitializer(payload) {
        if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor(); // Transition to the next state.
            // This might throw either because it's missing or throws. If so, we treat it
            // as still uninitialized and try again next time. Which is the same as what
            // happens if the ctor or any wrappers processing the ctor throws. This might
            // end up fixing it if the resolution was a concurrency bug.
            thenable.then(function(moduleObject) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var resolved = payload;
                    resolved._status = Resolved;
                    resolved._result = moduleObject;
                }
            }, function(error) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var rejected = payload;
                    rejected._status = Rejected;
                    rejected._result = error;
                }
            });
            if (payload._status === Uninitialized) {
                // In case, we're still uninitialized, then we're waiting for the thenable
                // to resolve. Set it as pending in the meantime.
                var pending = payload;
                pending._status = Pending;
                pending._result = thenable;
            }
        }
        if (payload._status === Resolved) {
            var moduleObject = payload._result;
            if (moduleObject === undefined) error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
            if (!("default" in moduleObject)) error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
            return moduleObject.default;
        } else throw payload._result;
    }
    function lazy(ctor) {
        var payload = {
            // We use these fields to store the result.
            _status: Uninitialized,
            _result: ctor
        };
        var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
        };
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes; // $FlowFixMe
        Object.defineProperties(lazyType, {
            defaultProps: {
                configurable: true,
                get: function() {
                    return defaultProps;
                },
                set: function(newDefaultProps) {
                    error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps = newDefaultProps; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, "defaultProps", {
                        enumerable: true
                    });
                }
            },
            propTypes: {
                configurable: true,
                get: function() {
                    return propTypes;
                },
                set: function(newPropTypes) {
                    error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, "propTypes", {
                        enumerable: true
                    });
                }
            }
        });
        return lazyType;
    }
    function forwardRef(render) {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
        else if (typeof render !== "function") error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
        else if (render.length !== 0 && render.length !== 2) error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
        if (render != null) {
            if (render.defaultProps != null || render.propTypes != null) error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        }
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        };
        var ownName;
        Object.defineProperty(elementType, "displayName", {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.forwardRef((props, ref) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!render.name && !render.displayName) render.displayName = name;
            }
        });
        return elementType;
    }
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
    function isValidElementType(type) {
        if (typeof type === "string" || typeof type === "function") return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function memo(type, compare) {
        if (!isValidElementType(type)) error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
        var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: compare === undefined ? null : compare
        };
        var ownName;
        Object.defineProperty(elementType, "displayName", {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.memo((props) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!type.name && !type.displayName) type.displayName = name;
            }
        });
        return elementType;
    }
    function resolveDispatcher() {
        var dispatcher = ReactCurrentDispatcher.current;
        if (dispatcher === null) error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        // intentionally don't throw our own error because this is in a hot path.
        // Also helps ensure this is inlined.
        return dispatcher;
    }
    function useContext(Context) {
        var dispatcher = resolveDispatcher();
        // TODO: add a more generic warning for invalid values.
        if (Context._context !== undefined) {
            var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
            // and nobody should be using this in existing code.
            if (realContext.Consumer === Context) error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
            else if (realContext.Provider === Context) error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return dispatcher.useContext(Context);
    }
    function useState(initialState) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useState(initialState);
    }
    function useReducer(reducer, initialArg, init) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useReducer(reducer, initialArg, init);
    }
    function useRef(initialValue) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useRef(initialValue);
    }
    function useEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useEffect(create, deps);
    }
    function useInsertionEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useInsertionEffect(create, deps);
    }
    function useLayoutEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useLayoutEffect(create, deps);
    }
    function useCallback(callback, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useCallback(callback, deps);
    }
    function useMemo(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useMemo(create, deps);
    }
    function useImperativeHandle(ref, create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useImperativeHandle(ref, create, deps);
    }
    function useDebugValue(value, formatterFn) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
    }
    function useTransition() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useTransition();
    }
    function useDeferredValue(value) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDeferredValue(value);
    }
    function useId() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useId();
    }
    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return "\n" + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher$1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, "props", {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === "string") {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = "\n" + sampleLines[s].replace(" at new ", " at "); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes("<anonymous>")) _frame = _frame.replace("<anonymous>", fn.displayName);
                            if (typeof fn === "function") componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher$1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : "";
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        if (typeof fn === "function") componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return "";
        if (typeof type === "function") return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === "string") return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return "";
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== "function") {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error("Failed %s type: %s", location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            setExtraStackFrame(stack);
        } else setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) return "\n\nCheck the render method of `" + name + "`.";
        }
        return "";
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
        }
        return "";
    }
    function getSourceInfoErrorAddendumForProps(elementProps) {
        if (elementProps !== null && elementProps !== undefined) return getSourceInfoErrorAddendum(elementProps.__source);
        return "";
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = "";
        if (element && element._owner && element._owner !== ReactCurrentOwner.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== "object") return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === "string") return;
        var propTypes;
        if (typeof type === "function") propTypes = type.propTypes;
        else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
        }
        if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error("Invalid attribute `ref` supplied to `React.Fragment`.");
            setCurrentlyValidatingElement$1(null);
        }
    }
    function createElementWithValidation(type, props, children) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = "";
            if (type === undefined || typeof type === "object" && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = "null";
            else if (isArray(type)) typeString = "array";
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
            } else typeString = typeof type;
            error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], type);
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    }
    var didWarnAboutDeprecatedCreateFactory = false;
    function createFactoryWithValidation(type) {
        var validatedFactory = createElementWithValidation.bind(null, type);
        validatedFactory.type = type;
        if (!didWarnAboutDeprecatedCreateFactory) {
            didWarnAboutDeprecatedCreateFactory = true;
            warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
        } // Legacy hook: remove it
        Object.defineProperty(validatedFactory, "type", {
            enumerable: false,
            get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                    value: type
                });
                return type;
            }
        });
        return validatedFactory;
    }
    function cloneElementWithValidation(element, props, children) {
        var newElement = cloneElement.apply(this, arguments);
        for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], newElement.type);
        validatePropTypes(newElement);
        return newElement;
    }
    function startTransition(scope, options) {
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = {};
        var currentTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition._updatedFibers = new Set();
        try {
            scope();
        } finally{
            ReactCurrentBatchConfig.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    var didWarnAboutMessageChannel = false;
    var enqueueTaskImpl = null;
    function enqueueTask(task) {
        if (enqueueTaskImpl === null) try {
            // read require off the module object to get around the bundlers.
            // we don't want them to detect a require and bundle a Node polyfill.
            var requireString = ("require" + Math.random()).slice(0, 7);
            var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
            // version of setImmediate, bypassing fake timers if any.
            enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
        } catch (_err) {
            // we're in a browser
            // we can't use regular timers because they may still be faked
            // so we try MessageChannel+postMessage instead
            enqueueTaskImpl = function(callback) {
                if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === "undefined") error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(undefined);
            };
        }
        return enqueueTaskImpl(task);
    }
    var actScopeDepth = 0;
    var didWarnNoAwaitAct = false;
    function act(callback) {
        // `act` calls can be nested, so we track the depth. This represents the
        // number of `act` scopes on the stack.
        var prevActScopeDepth = actScopeDepth;
        actScopeDepth++;
        if (ReactCurrentActQueue.current === null) // This is the outermost `act` scope. Initialize the queue. The reconciler
        // will detect the queue and use it instead of Scheduler.
        ReactCurrentActQueue.current = [];
        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
        var result;
        try {
            // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
            // set to `true` while the given callback is executed, not for updates
            // triggered during an async event, because this is how the legacy
            // implementation of `act` behaved.
            ReactCurrentActQueue.isBatchingLegacy = true;
            result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
            // which flushed updates immediately after the scope function exits, even
            // if it's an async function.
            if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                    ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                    flushActQueue(queue);
                }
            }
        } catch (error) {
            popActScope(prevActScopeDepth);
            throw error;
        } finally{
            ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
        }
        if (result !== null && typeof result === "object" && typeof result.then === "function") {
            var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
            // for it to resolve before exiting the current scope.
            var wasAwaited = false;
            var thenable = {
                then: function(resolve, reject) {
                    wasAwaited = true;
                    thenableResult.then(function(returnValue) {
                        popActScope(prevActScopeDepth);
                        if (actScopeDepth === 0) // We've exited the outermost act scope. Recursively flush the
                        // queue until there's no remaining work.
                        recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        else resolve(returnValue);
                    }, function(error) {
                        // The callback threw an error.
                        popActScope(prevActScopeDepth);
                        reject(error);
                    });
                }
            };
            if (!didWarnNoAwaitAct && typeof Promise !== "undefined") // eslint-disable-next-line no-undef
            Promise.resolve().then(function() {}).then(function() {
                if (!wasAwaited) {
                    didWarnNoAwaitAct = true;
                    error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                }
            });
            return thenable;
        } else {
            var returnValue = result; // The callback is not an async function. Exit the current scope
            // immediately, without awaiting.
            popActScope(prevActScopeDepth);
            if (actScopeDepth === 0) {
                // Exiting the outermost act scope. Flush the queue.
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                    flushActQueue(_queue);
                    ReactCurrentActQueue.current = null;
                } // Return a thenable. If the user awaits it, we'll flush again in
                // case additional work was scheduled by a microtask.
                var _thenable = {
                    then: function(resolve, reject) {
                        // Confirm we haven't re-entered another `act` scope, in case
                        // the user does something weird like await the thenable
                        // multiple times.
                        if (ReactCurrentActQueue.current === null) {
                            // Recursively flush the queue until there's no remaining work.
                            ReactCurrentActQueue.current = [];
                            recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        } else resolve(returnValue);
                    }
                };
                return _thenable;
            } else {
                // Since we're inside a nested `act` scope, the returned thenable
                // immediately resolves. The outer scope will flush the queue.
                var _thenable2 = {
                    then: function(resolve, reject) {
                        resolve(returnValue);
                    }
                };
                return _thenable2;
            }
        }
    }
    function popActScope(prevActScopeDepth) {
        if (prevActScopeDepth !== actScopeDepth - 1) error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
        actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        var queue = ReactCurrentActQueue.current;
        if (queue !== null) try {
            flushActQueue(queue);
            enqueueTask(function() {
                if (queue.length === 0) {
                    // No additional work was scheduled. Finish.
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                } else // Keep flushing work until there's none left.
                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            });
        } catch (error) {
            reject(error);
        }
        else resolve(returnValue);
    }
    var isFlushing = false;
    function flushActQueue(queue) {
        if (!isFlushing) {
            // Prevent re-entrance.
            isFlushing = true;
            var i = 0;
            try {
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(true);
                    while (callback !== null);
                }
                queue.length = 0;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                queue = queue.slice(i + 1);
                throw error;
            } finally{
                isFlushing = false;
            }
        }
    }
    var createElement$1 = createElementWithValidation;
    var cloneElement$1 = cloneElementWithValidation;
    var createFactory = createFactoryWithValidation;
    var Children = {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
    };
    exports.Children = Children;
    exports.Component = Component;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
    exports.act = act;
    exports.cloneElement = cloneElement$1;
    exports.createContext = createContext;
    exports.createElement = createElement$1;
    exports.createFactory = createFactory;
    exports.createRef = createRef;
    exports.forwardRef = forwardRef;
    exports.isValidElement = isValidElement;
    exports.lazy = lazy;
    exports.memo = memo;
    exports.startTransition = startTransition;
    exports.unstable_act = act;
    exports.useCallback = useCallback;
    exports.useContext = useContext;
    exports.useDebugValue = useDebugValue;
    exports.useDeferredValue = useDeferredValue;
    exports.useEffect = useEffect;
    exports.useId = useId;
    exports.useImperativeHandle = useImperativeHandle;
    exports.useInsertionEffect = useInsertionEffect;
    exports.useLayoutEffect = useLayoutEffect;
    exports.useMemo = useMemo;
    exports.useReducer = useReducer;
    exports.useRef = useRef;
    exports.useState = useState;
    exports.useSyncExternalStore = useSyncExternalStore;
    exports.useTransition = useTransition;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"6ZjVH":[function() {},{}],"7C4k8":[function() {},{}],"lOjBx":[function(require,module,exports) {
"use strict";
var m = require("aaccff5d309d9239");
var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
exports.createRoot = function(c, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.createRoot(c, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};
exports.hydrateRoot = function(c, h, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.hydrateRoot(c, h, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};

},{"aaccff5d309d9239":"j6uA9"}],"j6uA9":[function(require,module,exports) {
"use strict";
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error("^_^");
}
module.exports = require("b0f0e6b9e8349dac");

},{"b0f0e6b9e8349dac":"3iA9v"}],"3iA9v":[function(require,module,exports) {
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var React = require("6f0162e9ab224cd4");
    var Scheduler = require("8ad4ca65319d28a7");
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    var suppressWarning = false;
    function setSuppressWarning(newSuppressWarning) {
        suppressWarning = newSuppressWarning;
    } // In DEV, calls to console.warn and console.error get replaced
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        if (!suppressWarning) {
            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
            printWarning("warn", format, args);
        }
    }
    function error(format) {
        if (!suppressWarning) {
            for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
            printWarning("error", format, args);
        }
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== "") {
            format += "%s";
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift("Warning: " + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class
    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var ScopeComponent = 21;
    var OffscreenComponent = 22;
    var LegacyHiddenComponent = 23;
    var CacheComponent = 24;
    var TracingMarkerComponent = 25;
    // -----------------------------------------------------------------------------
    var enableClientRenderFallbackOnTextMismatch = true; // TODO: Need to review this code one more time before landing
    // the react-reconciler package.
    var enableNewReconciler = false; // Support legacy Primer support on internal FB www
    var enableLazyContextPropagation = false; // FB-only usage. The new API has different semantics.
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    var enableSuspenseAvoidThisFallback = false; // Enables unstable_avoidThisFallback feature in Fizz
    // React DOM Chopping Block
    //
    // Similar to main Chopping Block but only flags related to React DOM. These are
    // grouped because we will likely batch all of them into a single major release.
    // -----------------------------------------------------------------------------
    // Disable support for comment nodes as React DOM containers. Already disabled
    // in open source, but www codebase still relies on it. Need to remove.
    var disableCommentsAsDOMContainers = true; // Disable javascript: URL strings in href for XSS protection.
    // and client rendering, mostly to allow JSX attributes to apply to the custom
    // element's object properties instead of only HTML attributes.
    // https://github.com/facebook/react/issues/11347
    var enableCustomElementPropertySupport = false; // Disables children for <textarea> elements
    var warnAboutStringRefs = true; // -----------------------------------------------------------------------------
    // Debugging and DevTools
    // -----------------------------------------------------------------------------
    // Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
    // for an experimental timeline tool.
    var enableSchedulingProfiler = true; // Helps identify side effects in render-phase lifecycle hooks and setState
    var enableProfilerTimer = true; // Record durations for commit and passive effects phases.
    var enableProfilerCommitHooks = true; // Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".
    var allNativeEvents = new Set();
    /**
 * Mapping from registration name to event name
 */ var registrationNameDependencies = {};
    /**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */ var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + "Capture", dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        if (registrationNameDependencies[registrationName]) error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;
        if (registrationName === "onDoubleClick") possibleRegistrationNames.ondblclick = registrationName;
        for(var i = 0; i < dependencies.length; i++)allNativeEvents.add(dependencies[i]);
    }
    var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkPropStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.
    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the filter are presumed to have this type.
    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.
    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.
    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.
    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.
    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */ var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */ var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return true;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return false;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
        }
        illegalAttributeNameCache[attributeName] = true;
        error("Invalid attribute name: `%s`", attributeName);
        return false;
    }
    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null) return propertyInfo.type === RESERVED;
        if (isCustomComponentTag) return false;
        if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) return true;
        return false;
    }
    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED) return false;
        switch(typeof value){
            case "function":
            case "symbol":
                // eslint-disable-line
                return true;
            case "boolean":
                if (isCustomComponentTag) return false;
                if (propertyInfo !== null) return !propertyInfo.acceptsBooleans;
                else {
                    var prefix = name.toLowerCase().slice(0, 5);
                    return prefix !== "data-" && prefix !== "aria-";
                }
            default:
                return false;
        }
    }
    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
        if (value === null || typeof value === "undefined") return true;
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) return true;
        if (isCustomComponentTag) return false;
        if (propertyInfo !== null) switch(propertyInfo.type){
            case BOOLEAN:
                return !value;
            case OVERLOADED_BOOLEAN:
                return value === false;
            case NUMERIC:
                return isNaN(value);
            case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
        }
        return false;
    }
    function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
    }
    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
        this.attributeName = attributeName;
        this.attributeNamespace = attributeNamespace;
        this.mustUseProperty = mustUseProperty;
        this.propertyName = name;
        this.type = type;
        this.sanitizeURL = sanitizeURL;
        this.removeEmptyString = removeEmptyString;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.
    var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.
    var reservedProps = [
        "children",
        "dangerouslySetInnerHTML",
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        "defaultValue",
        "defaultChecked",
        "innerHTML",
        "suppressContentEditableWarning",
        "suppressHydrationWarning",
        "style"
    ];
    reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.
    [
        [
            "acceptCharset",
            "accept-charset"
        ],
        [
            "className",
            "class"
        ],
        [
            "htmlFor",
            "for"
        ],
        [
            "httpEquiv",
            "http-equiv"
        ]
    ].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    [
        "contentEditable",
        "draggable",
        "spellCheck",
        "value"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.
    [
        "autoReverse",
        "externalResourcesRequired",
        "focusable",
        "preserveAlpha"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
    }); // These are HTML boolean attributes.
    [
        "allowFullScreen",
        "async",
        // on the client side because the browsers are inconsistent. Instead we call focus().
        "autoFocus",
        "autoPlay",
        "controls",
        "default",
        "defer",
        "disabled",
        "disablePictureInPicture",
        "disableRemotePlayback",
        "formNoValidate",
        "hidden",
        "loop",
        "noModule",
        "noValidate",
        "open",
        "playsInline",
        "readOnly",
        "required",
        "reversed",
        "scoped",
        "seamless",
        "itemScope"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.
    [
        "checked",
        // disabled with `removeAttribute`. We have special logic for handling this.
        "multiple",
        "muted",
        "selected" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.
    [
        "capture",
        "download" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
    }); // These are HTML attributes that must be positive numbers.
    [
        "cols",
        "rows",
        "size",
        "span" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
    }); // These are HTML attributes that must be numbers.
    [
        "rowSpan",
        "start"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;
    var capitalize = function(token) {
        return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML attribute filter.
    // Some of these attributes can be hard to find. This list was created by
    // scraping the MDN documentation.
    [
        "accent-height",
        "alignment-baseline",
        "arabic-form",
        "baseline-shift",
        "cap-height",
        "clip-path",
        "clip-rule",
        "color-interpolation",
        "color-interpolation-filters",
        "color-profile",
        "color-rendering",
        "dominant-baseline",
        "enable-background",
        "fill-opacity",
        "fill-rule",
        "flood-color",
        "flood-opacity",
        "font-family",
        "font-size",
        "font-size-adjust",
        "font-stretch",
        "font-style",
        "font-variant",
        "font-weight",
        "glyph-name",
        "glyph-orientation-horizontal",
        "glyph-orientation-vertical",
        "horiz-adv-x",
        "horiz-origin-x",
        "image-rendering",
        "letter-spacing",
        "lighting-color",
        "marker-end",
        "marker-mid",
        "marker-start",
        "overline-position",
        "overline-thickness",
        "paint-order",
        "panose-1",
        "pointer-events",
        "rendering-intent",
        "shape-rendering",
        "stop-color",
        "stop-opacity",
        "strikethrough-position",
        "strikethrough-thickness",
        "stroke-dasharray",
        "stroke-dashoffset",
        "stroke-linecap",
        "stroke-linejoin",
        "stroke-miterlimit",
        "stroke-opacity",
        "stroke-width",
        "text-anchor",
        "text-decoration",
        "text-rendering",
        "underline-position",
        "underline-thickness",
        "unicode-bidi",
        "unicode-range",
        "units-per-em",
        "v-alphabetic",
        "v-hanging",
        "v-ideographic",
        "v-mathematical",
        "vector-effect",
        "vert-adv-y",
        "vert-origin-x",
        "vert-origin-y",
        "word-spacing",
        "writing-mode",
        "xmlns:xlink",
        "x-height" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // String SVG attributes with the xlink namespace.
    [
        "xlink:actuate",
        "xlink:arcrole",
        "xlink:role",
        "xlink:show",
        "xlink:title",
        "xlink:type" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/1999/xlink", false, false);
    }); // String SVG attributes with the xml namespace.
    [
        "xml:base",
        "xml:lang",
        "xml:space" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/XML/1998/namespace", false, false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.
    [
        "tabIndex",
        "crossOrigin"
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.
    var xlinkHref = "xlinkHref";
    properties[xlinkHref] = new PropertyInfoRecord("xlinkHref", STRING, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
    [
        "src",
        "href",
        "action",
        "formAction"
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
    });
    // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space
    /* eslint-disable max-len */ var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;
    function sanitizeURL(url) {
        if (!didWarn && isJavaScriptProtocol.test(url)) {
            didWarn = true;
            error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
        }
    }
    /**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */ function getValueForProperty(node, name, expected, propertyInfo) {
        if (propertyInfo.mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            return node[propertyName];
        } else {
            checkAttributeStringCoercion(expected, name);
            if (propertyInfo.sanitizeURL) // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            // eslint-disable-next-line react-internal/safe-string-coercion
            sanitizeURL("" + expected);
            var attributeName = propertyInfo.attributeName;
            var stringValue = null;
            if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === "") return true;
                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return value;
                     // eslint-disable-next-line react-internal/safe-string-coercion
                    if (value === "" + expected) return expected;
                    return value;
                }
            } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) // We had an attribute but shouldn't have had one, so read it
                // for the error message.
                return node.getAttribute(attributeName);
                if (propertyInfo.type === BOOLEAN) // If this was a boolean, it doesn't matter what the value is
                // the fact that we have it is the same as the expected.
                return expected;
                 // Even if this property uses a namespace we use getAttribute
                // because we assume its namespaced name is the same as our config.
                // To use getAttributeNS we need the local name which we don't have
                // in our config atm.
                stringValue = node.getAttribute(attributeName);
            }
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return stringValue === null ? expected : stringValue; // eslint-disable-next-line react-internal/safe-string-coercion
            else if (stringValue === "" + expected) return expected;
            else return stringValue;
        }
    }
    /**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */ function getValueForAttribute(node, name, expected, isCustomComponentTag) {
        if (!isAttributeNameSafe(name)) return;
        if (!node.hasAttribute(name)) return expected === undefined ? undefined : null;
        var value = node.getAttribute(name);
        checkAttributeStringCoercion(expected, name);
        if (value === "" + expected) return expected;
        return value;
    }
    /**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */ function setValueForProperty(node, name, value, isCustomComponentTag) {
        var propertyInfo = getPropertyInfo(name);
        if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) return;
        if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) value = null;
        if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) node.removeAttribute(_attributeName);
                else {
                    checkAttributeStringCoercion(value, name);
                    node.setAttribute(_attributeName, "" + value);
                }
            }
            return;
        }
        var mustUseProperty = propertyInfo.mustUseProperty;
        if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
                var type = propertyInfo.type;
                node[propertyName] = type === BOOLEAN ? false : "";
            } else // Contrary to `setAttribute`, object properties are properly
            // `toString`ed by IE8/9.
            node[propertyName] = value;
            return;
        } // The rest are treated as attributes with special cases.
        var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
        if (value === null) node.removeAttribute(attributeName);
        else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) // If attribute type is boolean, we know for sure it won't be an execution sink
            // and we won't require Trusted Type here.
            attributeValue = "";
            else {
                checkAttributeStringCoercion(value, attributeName);
                attributeValue = "" + value;
                if (propertyInfo.sanitizeURL) sanitizeURL(attributeValue.toString());
            }
            if (attributeNamespace) node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            else node.setAttribute(attributeName, attributeValue);
        }
    }
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for("react.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_SCOPE_TYPE = Symbol.for("react.scope");
    var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
    var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
    var REACT_CACHE_TYPE = Symbol.for("react.cache");
    var REACT_TRACING_MARKER_TYPE = Symbol.for("react.tracing_marker");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator";
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== "object") return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === "function") return maybeIterator;
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return "\n" + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, "props", {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === "string") {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = "\n" + sampleLines[s].replace(" at new ", " at "); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes("<anonymous>")) _frame = _frame.replace("<anonymous>", fn.displayName);
                            if (typeof fn === "function") componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : "";
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        if (typeof fn === "function") componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, true);
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return "";
        if (typeof type === "function") return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === "string") return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return "";
    }
    function describeFiber(fiber) {
        var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
        var source = fiber._debugSource;
        switch(fiber.tag){
            case HostComponent:
                return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
                return describeBuiltInComponentFrame("Lazy");
            case SuspenseComponent:
                return describeBuiltInComponentFrame("Suspense");
            case SuspenseListComponent:
                return describeBuiltInComponentFrame("SuspenseList");
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
                return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
                return describeFunctionComponentFrame(fiber.type.render);
            case ClassComponent:
                return describeClassComponentFrame(fiber.type);
            default:
                return "";
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = "";
            var node = workInProgress;
            do {
                info += describeFiber(node);
                node = node.return;
            }while (node);
            return info;
        } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || "Context";
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === "number") error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === "function") return type.displayName || type.name || null;
        if (typeof type === "string") return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    function getWrappedName$1(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || "";
        return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
    } // Keep in sync with shared/getComponentNameFromType
    function getContextName$1(type) {
        return type.displayName || "Context";
    }
    function getComponentNameFromFiber(fiber) {
        var tag = fiber.tag, type = fiber.type;
        switch(tag){
            case CacheComponent:
                return "Cache";
            case ContextConsumer:
                var context = type;
                return getContextName$1(context) + ".Consumer";
            case ContextProvider:
                var provider = type;
                return getContextName$1(provider._context) + ".Provider";
            case DehydratedFragment:
                return "DehydratedFragment";
            case ForwardRef:
                return getWrappedName$1(type, type.render, "ForwardRef");
            case Fragment:
                return "Fragment";
            case HostComponent:
                // Host component type is the display name (e.g. "div", "View")
                return type;
            case HostPortal:
                return "Portal";
            case HostRoot:
                return "Root";
            case HostText:
                return "Text";
            case LazyComponent:
                // Name comes from the type in this case; we don't have a tag.
                return getComponentNameFromType(type);
            case Mode:
                if (type === REACT_STRICT_MODE_TYPE) // Don't be less specific than shared/getComponentNameFromType
                return "StrictMode";
                return "Mode";
            case OffscreenComponent:
                return "Offscreen";
            case Profiler:
                return "Profiler";
            case ScopeComponent:
                return "Scope";
            case SuspenseComponent:
                return "Suspense";
            case SuspenseListComponent:
                return "SuspenseList";
            case TracingMarkerComponent:
                return "TracingMarker";
            // The display name for this tags come from the user-provided type:
            case ClassComponent:
            case FunctionComponent:
            case IncompleteClassComponent:
            case IndeterminateComponent:
            case MemoComponent:
            case SimpleMemoComponent:
                if (typeof type === "function") return type.displayName || type.name || null;
                if (typeof type === "string") return type;
                break;
        }
        return null;
    }
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var current = null;
    var isRendering = false;
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (current === null) return null;
        var owner = current._debugOwner;
        if (owner !== null && typeof owner !== "undefined") return getComponentNameFromFiber(owner);
        return null;
    }
    function getCurrentFiberStackInDev() {
        if (current === null) return "";
         // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.
        return getStackByFiberInDevAndProd(current);
    }
    function resetCurrentFiber() {
        ReactDebugCurrentFrame.getCurrentStack = null;
        current = null;
        isRendering = false;
    }
    function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
        current = fiber;
        isRendering = false;
    }
    function getCurrentFiber() {
        return current;
    }
    function setIsRendering(rendering) {
        isRendering = rendering;
    }
    // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.
    function toString(value) {
        // The coercion safety check is performed in getToStringValue().
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case "boolean":
            case "number":
            case "string":
            case "undefined":
                return value;
            case "object":
                checkFormFieldValueStringCoercion(value);
                return value;
            default:
                // function, symbol are assigned as empty strings
                return "";
        }
    }
    var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
    };
    function checkControlledValueProps(tagName, props) {
        if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
        if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isCheckable(elem) {
        var type = elem.type;
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
    }
    function getTracker(node) {
        return node._valueTracker;
    }
    function detachTracker(node) {
        node._valueTracker = null;
    }
    function getValueFromNode(node) {
        var value = "";
        if (!node) return value;
        if (isCheckable(node)) value = node.checked ? "true" : "false";
        else value = node.value;
        return value;
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? "checked" : "value";
        var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = "" + node[valueField]; // if someone has already defined a value or Safari, then bail
        // and don't track value will cause over reporting of changes,
        // but it's better then a hard failure
        // (needed for certain tests that spyOn input values and Safari)
        if (node.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") return;
        var get = descriptor.get, set = descriptor.set;
        Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
                return get.call(this);
            },
            set: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = "" + value;
                set.call(this, value);
            }
        }); // We could've passed this the first time
        // but it triggers a bug in IE11 and Edge 14/15.
        // Calling defineProperty() again should be equivalent.
        // https://github.com/facebook/react/issues/11768
        Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
        });
        var tracker = {
            getValue: function() {
                return currentValue;
            },
            setValue: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = "" + value;
            },
            stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
            }
        };
        return tracker;
    }
    function track(node) {
        if (getTracker(node)) return;
         // TODO: Once it's just Fiber we can move this to node._wrapperState
        node._valueTracker = trackValueOnNode(node);
    }
    function updateValueIfChanged(node) {
        if (!node) return false;
        var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
        // that trying again will succeed
        if (!tracker) return true;
        var lastValue = tracker.getValue();
        var nextValue = getValueFromNode(node);
        if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
        }
        return false;
    }
    function getActiveElement(doc) {
        doc = doc || (typeof document !== "undefined" ? document : undefined);
        if (typeof doc === "undefined") return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function isControlled(props) {
        var usesChecked = props.type === "checkbox" || props.type === "radio";
        return usesChecked ? props.checked != null : props.value != null;
    }
    /**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */ function getHostProps(element, props) {
        var node = element;
        var checked = props.checked;
        var hostProps = assign({}, props, {
            defaultChecked: undefined,
            defaultValue: undefined,
            value: undefined,
            checked: checked != null ? checked : node._wrapperState.initialChecked
        });
        return hostProps;
    }
    function initWrapperState(element, props) {
        checkControlledValueProps("input", props);
        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
            didWarnCheckedDefaultChecked = true;
        }
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
            didWarnValueDefaultValue = true;
        }
        var node = element;
        var defaultValue = props.defaultValue == null ? "" : props.defaultValue;
        node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
        };
    }
    function updateChecked(element, props) {
        var node = element;
        var checked = props.checked;
        if (checked != null) setValueForProperty(node, "checked", checked, false);
    }
    function updateWrapper(element, props) {
        var node = element;
        var controlled = isControlled(props);
        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnUncontrolledToControlled = true;
        }
        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnControlledToUncontrolled = true;
        }
        updateChecked(element, props);
        var value = getToStringValue(props.value);
        var type = props.type;
        if (value != null) {
            if (type === "number") {
                if (value === 0 && node.value === "" || // We explicitly want to coerce to number here if possible.
                // eslint-disable-next-line
                node.value != value) node.value = toString(value);
            } else if (node.value !== toString(value)) node.value = toString(value);
        } else if (type === "submit" || type === "reset") {
            // Submit/reset inputs need the attribute removed completely to avoid
            // blank-text buttons.
            node.removeAttribute("value");
            return;
        }
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty("value")) setDefaultValue(node, props.type, value);
        else if (props.hasOwnProperty("defaultValue")) setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) node.defaultChecked = !!props.defaultChecked;
    }
    function postMountWrapper(element, props, isHydrating) {
        var node = element; // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.
        if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
            var type = props.type;
            var isButton = type === "submit" || type === "reset"; // Avoid setting value attribute on submit/reset inputs as it overrides the
            // default value provided by the browser. See: #12872
            if (isButton && (props.value === undefined || props.value === null)) return;
            var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
            // from being lost during SSR hydration.
            if (!isHydrating) // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            {
                if (initialValue !== node.value) node.value = initialValue;
            }
            // Otherwise, the value attribute is synchronized to the property,
            // so we assign defaultValue to the same thing as the value property
            // assignment step above.
            node.defaultValue = initialValue;
        } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
        // this is needed to work around a chrome bug where setting defaultChecked
        // will sometimes influence the value of checked (even after detachment).
        // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
        // We need to temporarily unset name to avoid disrupting radio button groups.
        var name = node.name;
        if (name !== "") node.name = "";
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
        if (name !== "") node.name = name;
    }
    function restoreControlledState(element, props) {
        var node = element;
        updateWrapper(node, props);
        updateNamedCousins(node, props);
    }
    function updateNamedCousins(rootNode, props) {
        var name = props.name;
        if (props.type === "radio" && name != null) {
            var queryRoot = rootNode;
            while(queryRoot.parentNode)queryRoot = queryRoot.parentNode;
             // If `rootNode.form` was non-null, then we could try `form.elements`,
            checkAttributeStringCoercion(name, "name");
            var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]');
            for(var i = 0; i < group.length; i++){
                var otherNode = group[i];
                if (otherNode === rootNode || otherNode.form !== rootNode.form) continue;
                 // This will throw if radio buttons rendered by different copies of React
                // and the same name are rendered into the same form (same as #1939).
                // That's probably okay; we don't support it just as we don't support
                // mixing React radio buttons with non-React ones.
                var otherProps = getFiberCurrentPropsFromNode(otherNode);
                if (!otherProps) throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                 // We need update the tracked value on the named cousin since the value
                // was changed but the input saw no event or value set
                updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
                // was previously checked to update will cause it to be come re-checked
                // as appropriate.
                updateWrapper(otherNode, otherProps);
            }
        }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253
    function setDefaultValue(node, type, value) {
        if (type !== "number" || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) node.defaultValue = toString(node._wrapperState.initialValue);
            else if (node.defaultValue !== toString(value)) node.defaultValue = toString(value);
        }
    }
    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;
    var didWarnInvalidInnerHTML = false;
    /**
 * Implements an <option> host component that warns when `selected` is set.
 */ function validateProps(element, props) {
        // If a value is not provided, then the children must be simple.
        if (props.value == null) {
            if (typeof props.children === "object" && props.children !== null) React.Children.forEach(props.children, function(child) {
                if (child == null) return;
                if (typeof child === "string" || typeof child === "number") return;
                if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                }
            });
            else if (props.dangerouslySetInnerHTML != null) {
                if (!didWarnInvalidInnerHTML) {
                    didWarnInvalidInnerHTML = true;
                    error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                }
            }
        } // TODO: Remove support for `selected` in <option>.
        if (props.selected != null && !didWarnSelectedSetOnOption) {
            error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
            didWarnSelectedSetOnOption = true;
        }
    }
    function postMountWrapper$1(element, props) {
        // value="" should make a value attribute (#6219)
        if (props.value != null) element.setAttribute("value", toString(getToStringValue(props.value)));
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    var didWarnValueDefaultValue$1;
    didWarnValueDefaultValue$1 = false;
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        if (ownerName) return "\n\nCheck the render method of `" + ownerName + "`.";
        return "";
    }
    var valuePropNames = [
        "value",
        "defaultValue"
    ];
    /**
 * Validation function for `value` and `defaultValue`.
 */ function checkSelectPropTypes(props) {
        checkControlledValueProps("select", props);
        for(var i = 0; i < valuePropNames.length; i++){
            var propName = valuePropNames[i];
            if (props[propName] == null) continue;
            var propNameIsArray = isArray(props[propName]);
            if (props.multiple && !propNameIsArray) error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
            else if (!props.multiple && propNameIsArray) error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
        }
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        var options = node.options;
        if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for(var i = 0; i < selectedValues.length; i++)// Prefix to avoid chaos with special keys.
            selectedValue["$" + selectedValues[i]] = true;
            for(var _i = 0; _i < options.length; _i++){
                var selected = selectedValue.hasOwnProperty("$" + options[_i].value);
                if (options[_i].selected !== selected) options[_i].selected = selected;
                if (selected && setDefaultSelected) options[_i].defaultSelected = true;
            }
        } else {
            // Do not set `select.value` as exact behavior isn't consistent across all
            // browsers for all cases.
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for(var _i2 = 0; _i2 < options.length; _i2++){
                if (options[_i2].value === _selectedValue) {
                    options[_i2].selected = true;
                    if (setDefaultSelected) options[_i2].defaultSelected = true;
                    return;
                }
                if (defaultSelected === null && !options[_i2].disabled) defaultSelected = options[_i2];
            }
            if (defaultSelected !== null) defaultSelected.selected = true;
        }
    }
    /**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */ function getHostProps$1(element, props) {
        return assign({}, props, {
            value: undefined
        });
    }
    function initWrapperState$1(element, props) {
        var node = element;
        checkSelectPropTypes(props);
        node._wrapperState = {
            wasMultiple: !!props.multiple
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
            error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
            didWarnValueDefaultValue$1 = true;
        }
    }
    function postMountWrapper$2(element, props) {
        var node = element;
        node.multiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
    }
    function postUpdateWrapper(element, props) {
        var node = element;
        var wasMultiple = node._wrapperState.wasMultiple;
        node._wrapperState.wasMultiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (wasMultiple !== !!props.multiple) {
            // For simplicity, reapply `defaultValue` if `multiple` is toggled.
            if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
            else // Revert the select back to its default unselected state.
            updateOptions(node, !!props.multiple, props.multiple ? [] : "", false);
        }
    }
    function restoreControlledState$1(element, props) {
        var node = element;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
    }
    var didWarnValDefaultVal = false;
    /**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */ function getHostProps$2(element, props) {
        var node = element;
        if (props.dangerouslySetInnerHTML != null) throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
         // Always set children to the same thing. In IE9, the selection range will
        // get reset if `textContent` is mutated.  We could add a check in setTextContent
        // to only set the value if/when the value differs from the node value (which would
        // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
        // solution. The value can be a boolean or object so that's why it's forced
        // to be a string.
        var hostProps = assign({}, props, {
            value: undefined,
            defaultValue: undefined,
            children: toString(node._wrapperState.initialValue)
        });
        return hostProps;
    }
    function initWrapperState$2(element, props) {
        var node = element;
        checkControlledValueProps("textarea", props);
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
            didWarnValDefaultVal = true;
        }
        var initialValue = props.value; // Only bother fetching default value if we're going to use it
        if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
                error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                if (defaultValue != null) throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                if (isArray(children)) {
                    if (children.length > 1) throw new Error("<textarea> can only have at most one child.");
                    children = children[0];
                }
                defaultValue = children;
            }
            if (defaultValue == null) defaultValue = "";
            initialValue = defaultValue;
        }
        node._wrapperState = {
            initialValue: getToStringValue(initialValue)
        };
    }
    function updateWrapper$1(element, props) {
        var node = element;
        var value = getToStringValue(props.value);
        var defaultValue = getToStringValue(props.defaultValue);
        if (value != null) {
            // Cast `value` to a string to ensure the value is set correctly. While
            // browsers typically do this as necessary, jsdom doesn't.
            var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed
            if (newValue !== node.value) node.value = newValue;
            if (props.defaultValue == null && node.defaultValue !== newValue) node.defaultValue = newValue;
        }
        if (defaultValue != null) node.defaultValue = toString(defaultValue);
    }
    function postMountWrapper$3(element, props) {
        var node = element; // This is in postMount because we need access to the DOM node, which is not
        // available until after the component has mounted.
        var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
        // initial value. In IE10/IE11 there is a bug where the placeholder attribute
        // will populate textContent as well.
        // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
        if (textContent === node._wrapperState.initialValue) {
            if (textContent !== "" && textContent !== null) node.value = textContent;
        }
    }
    function restoreControlledState$2(element, props) {
        // DOM component is still mounted; update
        updateWrapper$1(element, props);
    }
    var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
    var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
    var SVG_NAMESPACE = "http://www.w3.org/2000/svg"; // Assumes there is no parent namespace.
    function getIntrinsicNamespace(type) {
        switch(type){
            case "svg":
                return SVG_NAMESPACE;
            case "math":
                return MATH_NAMESPACE;
            default:
                return HTML_NAMESPACE;
        }
    }
    function getChildNamespace(parentNamespace, type) {
        if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
        if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") // We're leaving SVG.
        return HTML_NAMESPACE;
         // By default, pass namespace below.
        return parentNamespace;
    }
    /* globals MSApp */ /**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */ var createMicrosoftUnsafeLocalFunction = function(func) {
        if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) return function(arg0, arg1, arg2, arg3) {
            MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
            });
        };
        else return func;
    };
    var reusableSVGContainer;
    /**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */ var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
        if (node.namespaceURI === SVG_NAMESPACE) {
            if (!("innerHTML" in node)) {
                // IE does not have innerHTML for SVG nodes, so instead we inject the
                // new markup in a temp node and then move the child nodes across into
                // the target node
                reusableSVGContainer = reusableSVGContainer || document.createElement("div");
                reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
                var svgNode = reusableSVGContainer.firstChild;
                while(node.firstChild)node.removeChild(node.firstChild);
                while(svgNode.firstChild)node.appendChild(svgNode.firstChild);
                return;
            }
        }
        node.innerHTML = html;
    });
    /**
 * HTML nodeType values that represent the type of the node
 */ var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */ var setTextContent = function(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    };
    // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
    var shorthandToLonghand = {
        animation: [
            "animationDelay",
            "animationDirection",
            "animationDuration",
            "animationFillMode",
            "animationIterationCount",
            "animationName",
            "animationPlayState",
            "animationTimingFunction"
        ],
        background: [
            "backgroundAttachment",
            "backgroundClip",
            "backgroundColor",
            "backgroundImage",
            "backgroundOrigin",
            "backgroundPositionX",
            "backgroundPositionY",
            "backgroundRepeat",
            "backgroundSize"
        ],
        backgroundPosition: [
            "backgroundPositionX",
            "backgroundPositionY"
        ],
        border: [
            "borderBottomColor",
            "borderBottomStyle",
            "borderBottomWidth",
            "borderImageOutset",
            "borderImageRepeat",
            "borderImageSlice",
            "borderImageSource",
            "borderImageWidth",
            "borderLeftColor",
            "borderLeftStyle",
            "borderLeftWidth",
            "borderRightColor",
            "borderRightStyle",
            "borderRightWidth",
            "borderTopColor",
            "borderTopStyle",
            "borderTopWidth"
        ],
        borderBlockEnd: [
            "borderBlockEndColor",
            "borderBlockEndStyle",
            "borderBlockEndWidth"
        ],
        borderBlockStart: [
            "borderBlockStartColor",
            "borderBlockStartStyle",
            "borderBlockStartWidth"
        ],
        borderBottom: [
            "borderBottomColor",
            "borderBottomStyle",
            "borderBottomWidth"
        ],
        borderColor: [
            "borderBottomColor",
            "borderLeftColor",
            "borderRightColor",
            "borderTopColor"
        ],
        borderImage: [
            "borderImageOutset",
            "borderImageRepeat",
            "borderImageSlice",
            "borderImageSource",
            "borderImageWidth"
        ],
        borderInlineEnd: [
            "borderInlineEndColor",
            "borderInlineEndStyle",
            "borderInlineEndWidth"
        ],
        borderInlineStart: [
            "borderInlineStartColor",
            "borderInlineStartStyle",
            "borderInlineStartWidth"
        ],
        borderLeft: [
            "borderLeftColor",
            "borderLeftStyle",
            "borderLeftWidth"
        ],
        borderRadius: [
            "borderBottomLeftRadius",
            "borderBottomRightRadius",
            "borderTopLeftRadius",
            "borderTopRightRadius"
        ],
        borderRight: [
            "borderRightColor",
            "borderRightStyle",
            "borderRightWidth"
        ],
        borderStyle: [
            "borderBottomStyle",
            "borderLeftStyle",
            "borderRightStyle",
            "borderTopStyle"
        ],
        borderTop: [
            "borderTopColor",
            "borderTopStyle",
            "borderTopWidth"
        ],
        borderWidth: [
            "borderBottomWidth",
            "borderLeftWidth",
            "borderRightWidth",
            "borderTopWidth"
        ],
        columnRule: [
            "columnRuleColor",
            "columnRuleStyle",
            "columnRuleWidth"
        ],
        columns: [
            "columnCount",
            "columnWidth"
        ],
        flex: [
            "flexBasis",
            "flexGrow",
            "flexShrink"
        ],
        flexFlow: [
            "flexDirection",
            "flexWrap"
        ],
        font: [
            "fontFamily",
            "fontFeatureSettings",
            "fontKerning",
            "fontLanguageOverride",
            "fontSize",
            "fontSizeAdjust",
            "fontStretch",
            "fontStyle",
            "fontVariant",
            "fontVariantAlternates",
            "fontVariantCaps",
            "fontVariantEastAsian",
            "fontVariantLigatures",
            "fontVariantNumeric",
            "fontVariantPosition",
            "fontWeight",
            "lineHeight"
        ],
        fontVariant: [
            "fontVariantAlternates",
            "fontVariantCaps",
            "fontVariantEastAsian",
            "fontVariantLigatures",
            "fontVariantNumeric",
            "fontVariantPosition"
        ],
        gap: [
            "columnGap",
            "rowGap"
        ],
        grid: [
            "gridAutoColumns",
            "gridAutoFlow",
            "gridAutoRows",
            "gridTemplateAreas",
            "gridTemplateColumns",
            "gridTemplateRows"
        ],
        gridArea: [
            "gridColumnEnd",
            "gridColumnStart",
            "gridRowEnd",
            "gridRowStart"
        ],
        gridColumn: [
            "gridColumnEnd",
            "gridColumnStart"
        ],
        gridColumnGap: [
            "columnGap"
        ],
        gridGap: [
            "columnGap",
            "rowGap"
        ],
        gridRow: [
            "gridRowEnd",
            "gridRowStart"
        ],
        gridRowGap: [
            "rowGap"
        ],
        gridTemplate: [
            "gridTemplateAreas",
            "gridTemplateColumns",
            "gridTemplateRows"
        ],
        listStyle: [
            "listStyleImage",
            "listStylePosition",
            "listStyleType"
        ],
        margin: [
            "marginBottom",
            "marginLeft",
            "marginRight",
            "marginTop"
        ],
        marker: [
            "markerEnd",
            "markerMid",
            "markerStart"
        ],
        mask: [
            "maskClip",
            "maskComposite",
            "maskImage",
            "maskMode",
            "maskOrigin",
            "maskPositionX",
            "maskPositionY",
            "maskRepeat",
            "maskSize"
        ],
        maskPosition: [
            "maskPositionX",
            "maskPositionY"
        ],
        outline: [
            "outlineColor",
            "outlineStyle",
            "outlineWidth"
        ],
        overflow: [
            "overflowX",
            "overflowY"
        ],
        padding: [
            "paddingBottom",
            "paddingLeft",
            "paddingRight",
            "paddingTop"
        ],
        placeContent: [
            "alignContent",
            "justifyContent"
        ],
        placeItems: [
            "alignItems",
            "justifyItems"
        ],
        placeSelf: [
            "alignSelf",
            "justifySelf"
        ],
        textDecoration: [
            "textDecorationColor",
            "textDecorationLine",
            "textDecorationStyle"
        ],
        textEmphasis: [
            "textEmphasisColor",
            "textEmphasisStyle"
        ],
        transition: [
            "transitionDelay",
            "transitionDuration",
            "transitionProperty",
            "transitionTimingFunction"
        ],
        wordWrap: [
            "overflowWrap"
        ]
    };
    /**
 * CSS properties which accept numbers but are not in units of "px".
 */ var isUnitlessNumber = {
        animationIterationCount: true,
        aspectRatio: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        columns: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridArea: true,
        gridRow: true,
        gridRowEnd: true,
        gridRowSpan: true,
        gridRowStart: true,
        gridColumn: true,
        gridColumnEnd: true,
        gridColumnSpan: true,
        gridColumnStart: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,
        // SVG-related properties
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true
    };
    /**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */ function prefixKey(prefix, key) {
        return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */ var prefixes = [
        "Webkit",
        "ms",
        "Moz",
        "O"
    ]; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.
    Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes.forEach(function(prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
        });
    });
    /**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */ function dangerousStyleValue(name, value, isCustomProperty) {
        // Note that we've removed escapeTextForBrowser() calls here since the
        // whole string will be escaped when the attribute is injected into
        // the markup. If you provide unsafe user data here they can inject
        // arbitrary CSS which may be problematic (I couldn't repro this):
        // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
        // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
        // This is not an XSS hole but instead a potential CSS injection issue
        // which has lead to a greater discussion about how we're going to
        // trust URLs moving forward. See #2115901
        var isEmpty = value == null || typeof value === "boolean" || value === "";
        if (isEmpty) return "";
        if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + "px"; // Presumes implicit 'px' suffix for unitless numbers
        checkCSSPropertyStringCoercion(value, name);
        return ("" + value).trim();
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */ function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
    }
    var warnValidStyle = function() {};
    // 'msTransform' is correct, but the other prefixes should be capitalized
    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
    var msPattern$1 = /^-ms-/;
    var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon
    var badStyleValueWithSemicolonPattern = /;\s*$/;
    var warnedStyleNames = {};
    var warnedStyleValues = {};
    var warnedForNaNValue = false;
    var warnedForInfinityValue = false;
    var camelize = function(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    };
    var warnHyphenatedStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error("Unsupported style property %s. Did you mean %s?", name, // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, "ms-")));
    };
    var warnBadVendoredStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
    };
    var warnStyleValueWithSemicolon = function(name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) return;
        warnedStyleValues[value] = true;
        error('Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ""));
    };
    var warnStyleValueIsNaN = function(name, value) {
        if (warnedForNaNValue) return;
        warnedForNaNValue = true;
        error("`NaN` is an invalid value for the `%s` css style property.", name);
    };
    var warnStyleValueIsInfinity = function(name, value) {
        if (warnedForInfinityValue) return;
        warnedForInfinityValue = true;
        error("`Infinity` is an invalid value for the `%s` css style property.", name);
    };
    warnValidStyle = function(name, value) {
        if (name.indexOf("-") > -1) warnHyphenatedStyleName(name);
        else if (badVendoredStyleNamePattern.test(name)) warnBadVendoredStyleName(name);
        else if (badStyleValueWithSemicolonPattern.test(value)) warnStyleValueWithSemicolon(name, value);
        if (typeof value === "number") {
            if (isNaN(value)) warnStyleValueIsNaN(name, value);
            else if (!isFinite(value)) warnStyleValueIsInfinity(name, value);
        }
    };
    var warnValidStyle$1 = warnValidStyle;
    /**
 * Operations for dealing with CSS properties.
 */ /**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */ function createDangerousStringForStyles(styles) {
        var serialized = "";
        var delimiter = "";
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var styleValue = styles[styleName];
            if (styleValue != null) {
                var isCustomProperty = styleName.indexOf("--") === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ";";
            }
        }
        return serialized || null;
    }
    /**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */ function setValueForStyles(node, styles) {
        var style = node.style;
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var isCustomProperty = styleName.indexOf("--") === 0;
            if (!isCustomProperty) warnValidStyle$1(styleName, styles[styleName]);
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === "float") styleName = "cssFloat";
            if (isCustomProperty) style.setProperty(styleName, styleValue);
            else style[styleName] = styleValue;
        }
    }
    function isValueEmpty(value) {
        return value == null || typeof value === "boolean" || value === "";
    }
    /**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */ function expandShorthandMap(styles) {
        var expanded = {};
        for(var key in styles){
            var longhands = shorthandToLonghand[key] || [
                key
            ];
            for(var i = 0; i < longhands.length; i++)expanded[longhands[i]] = key;
        }
        return expanded;
    }
    /**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */ function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
        if (!nextStyles) return;
        var expandedUpdates = expandShorthandMap(styleUpdates);
        var expandedStyles = expandShorthandMap(nextStyles);
        var warnedAbout = {};
        for(var key in expandedUpdates){
            var originalKey = expandedUpdates[key];
            var correctOriginalKey = expandedStyles[key];
            if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + "," + correctOriginalKey;
                if (warnedAbout[warningKey]) continue;
                warnedAbout[warningKey] = true;
                error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
            }
        }
    }
    // For HTML, certain tags should omit their close tag. We keep a list for
    // those special-case tags.
    var omittedCloseTags = {
        area: true,
        base: true,
        br: true,
        col: true,
        embed: true,
        hr: true,
        img: true,
        input: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.
    };
    // `omittedCloseTags` except that `menuitem` should still have its closing tag.
    var voidElementTags = assign({
        menuitem: true
    }, omittedCloseTags);
    var HTML = "__html";
    function assertValidProps(tag, props) {
        if (!props) return;
         // Note the use of `==` which checks for null or undefined.
        if (voidElementTags[tag]) {
            if (props.children != null || props.dangerouslySetInnerHTML != null) throw new Error(tag + " is a void element tag and must neither have `children` nor " + "use `dangerouslySetInnerHTML`.");
        }
        if (props.dangerouslySetInnerHTML != null) {
            if (props.children != null) throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            if (typeof props.dangerouslySetInnerHTML !== "object" || !(HTML in props.dangerouslySetInnerHTML)) throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
        if (props.style != null && typeof props.style !== "object") throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
    }
    function isCustomComponent(tagName, props) {
        if (tagName.indexOf("-") === -1) return typeof props.is === "string";
        switch(tagName){
            // These are reserved SVG and MathML elements.
            // We don't mind this list too much because we expect it to never grow.
            // The alternative is to track the namespace in a few places which is convoluted.
            // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return false;
            default:
                return true;
        }
    }
    // When adding attributes to the HTML or SVG allowed attribute list, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.
    var possibleStandardNames = {
        // HTML
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        // SVG
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
    };
    var ariaProperties = {
        "aria-current": 0,
        // state
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        // state
        "aria-hidden": 0,
        // state
        "aria-invalid": 0,
        // state
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        // Widget Attributes
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        // Live Region Attributes
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        // Drag-and-Drop Attributes
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        // Relationship Attributes
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
    };
    var warnedProperties = {};
    var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
    var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
    function validateProperty(tagName, name) {
        if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) return true;
        if (rARIACamel.test(name)) {
            var ariaName = "aria-" + name.slice(4).toLowerCase();
            var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (correctName == null) {
                error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== correctName) {
                error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
            }
        }
        if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (standardName == null) {
                warnedProperties[name] = true;
                return false;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== standardName) {
                error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
            }
        }
        return true;
    }
    function warnInvalidARIAProps(type, props) {
        var invalidProps = [];
        for(var key in props){
            var isValid = validateProperty(type, key);
            if (!isValid) invalidProps.push(key);
        }
        var unknownPropString = invalidProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        if (invalidProps.length === 1) error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        else if (invalidProps.length > 1) error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
    }
    function validateProperties(type, props) {
        if (isCustomComponent(type, props)) return;
        warnInvalidARIAProps(type, props);
    }
    var didWarnValueNull = false;
    function validateProperties$1(type, props) {
        if (type !== "input" && type !== "textarea" && type !== "select") return;
        if (props != null && props.value === null && !didWarnValueNull) {
            didWarnValueNull = true;
            if (type === "select" && props.multiple) error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
            else error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
        }
    }
    var validateProperty$1 = function() {};
    var warnedProperties$1 = {};
    var EVENT_NAME_REGEX = /^on./;
    var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
    var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
    var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
    validateProperty$1 = function(tagName, name, value, eventRegistry) {
        if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return true;
        var lowerCasedName = name.toLowerCase();
        if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
            error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
            warnedProperties$1[name] = true;
            return true;
        } // We can't rely on the event system being injected on the server.
        if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name)) return true;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null) {
                error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
            }
            if (EVENT_NAME_REGEX.test(name)) {
                error("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (EVENT_NAME_REGEX.test(name)) {
            // If no event plugins have been injected, we are in a server environment.
            // So we can't tell if the event name is correct for sure, but we can filter
            // out known bad ones like `onclick`. We can't suggest a specific replacement though.
            if (INVALID_EVENT_NAME_REGEX.test(name)) error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
            warnedProperties$1[name] = true;
            return true;
        } // Let the ARIA attribute hook validate ARIA attributes
        if (rARIA$1.test(name) || rARIACamel$1.test(name)) return true;
        if (lowerCasedName === "innerhtml") {
            error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === "aria") {
            error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === "is" && value !== null && value !== undefined && typeof value !== "string") {
            error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === "number" && isNaN(value)) {
            error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
            warnedProperties$1[name] = true;
            return true;
        }
        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name) {
                error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (!isReserved && name !== lowerCasedName) {
            // Unknown attributes should have lowercase casing since that's how they
            // will be cased anyway with server rendering.
            error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            if (value) error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
            else error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
            warnedProperties$1[name] = true;
            return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props
        if (isReserved) return true;
         // Warn when a known attribute is a bad type
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            warnedProperties$1[name] = true;
            return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop
        if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
            error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
            warnedProperties$1[name] = true;
            return true;
        }
        return true;
    };
    var warnUnknownProperties = function(type, props, eventRegistry) {
        var unknownProps = [];
        for(var key in props){
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            if (!isValid) unknownProps.push(key);
        }
        var unknownPropString = unknownProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        if (unknownProps.length === 1) error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        else if (unknownProps.length > 1) error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
    };
    function validateProperties$2(type, props, eventRegistry) {
        if (isCustomComponent(type, props)) return;
        warnUnknownProperties(type, props, eventRegistry);
    }
    var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
    var IS_NON_DELEGATED = 2;
    var IS_CAPTURE_PHASE = 4;
    // set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
    // we call willDeferLaterForLegacyFBSupport, thus not bailing out
    // will result in endless cycles like an infinite loop.
    // We also don't want to defer during event replaying.
    var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
    // This exists to avoid circular dependency between ReactDOMEventReplaying
    // and DOMPluginEventSystem.
    var currentReplayingEvent = null;
    function setReplayingEvent(event) {
        if (currentReplayingEvent !== null) error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = event;
    }
    function resetReplayingEvent() {
        if (currentReplayingEvent === null) error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = null;
    }
    function isReplayingEvent(event) {
        return event === currentReplayingEvent;
    }
    /**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */ function getEventTarget(nativeEvent) {
        // Fallback to nativeEvent.srcElement for IE9
        // https://github.com/facebook/react/issues/12506
        var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963
        if (target.correspondingUseElement) target = target.correspondingUseElement;
         // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
        // @see http://www.quirksmode.org/js/events_properties.html
        return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }
    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;
    function restoreStateOfTarget(target) {
        // We perform this translation at the end of the event loop so that we
        // always receive the correct fiber here
        var internalInstance = getInstanceFromNode(target);
        if (!internalInstance) // Unmounted
        return;
        if (typeof restoreImpl !== "function") throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.
        if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
        }
    }
    function setRestoreImplementation(impl) {
        restoreImpl = impl;
    }
    function enqueueStateRestore(target) {
        if (restoreTarget) {
            if (restoreQueue) restoreQueue.push(target);
            else restoreQueue = [
                target
            ];
        } else restoreTarget = target;
    }
    function needsStateRestore() {
        return restoreTarget !== null || restoreQueue !== null;
    }
    function restoreStateIfNeeded() {
        if (!restoreTarget) return;
        var target = restoreTarget;
        var queuedTargets = restoreQueue;
        restoreTarget = null;
        restoreQueue = null;
        restoreStateOfTarget(target);
        if (queuedTargets) for(var i = 0; i < queuedTargets.length; i++)restoreStateOfTarget(queuedTargets[i]);
    }
    // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults
    var batchedUpdatesImpl = function(fn, bookkeeping) {
        return fn(bookkeeping);
    };
    var flushSyncImpl = function() {};
    var isInsideEventHandler = false;
    function finishEventHandler() {
        // Here we wait until all updates have propagated, which is important
        // when using controlled components within layers:
        // https://github.com/facebook/react/issues/1698
        // Then we restore state of any controlled component.
        var controlledComponentsHavePendingUpdates = needsStateRestore();
        if (controlledComponentsHavePendingUpdates) {
            // If a controlled event was fired, we may need to restore the state of
            // the DOM node back to the controlled value. This is necessary when React
            // bails out of the update without touching the DOM.
            // TODO: Restore state in the microtask, after the discrete updates flush,
            // instead of early flushing them here.
            flushSyncImpl();
            restoreStateIfNeeded();
        }
    }
    function batchedUpdates(fn, a, b) {
        if (isInsideEventHandler) // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
        isInsideEventHandler = true;
        try {
            return batchedUpdatesImpl(fn, a, b);
        } finally{
            isInsideEventHandler = false;
            finishEventHandler();
        }
    } // TODO: Replace with flushSync
    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
        batchedUpdatesImpl = _batchedUpdatesImpl;
        flushSyncImpl = _flushSyncImpl;
    }
    function isInteractive(tag) {
        return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
    }
    function shouldPreventMouseEvent(name, type, props) {
        switch(name){
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
                return !!(props.disabled && isInteractive(type));
            default:
                return false;
        }
    }
    /**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */ function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (stateNode === null) // Work in progress (ex: onload events in incremental mode).
        return null;
        var props = getFiberCurrentPropsFromNode(stateNode);
        if (props === null) // Work in progress.
        return null;
        var listener = props[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        if (listener && typeof listener !== "function") throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        return listener;
    }
    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
    if (canUseDOM) try {
        var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value
        Object.defineProperty(options, "passive", {
            get: function() {
                passiveBrowserEventsSupported = true;
            }
        });
        window.addEventListener("test", options, options);
        window.removeEventListener("test", options, options);
    } catch (e) {
        passiveBrowserEventsSupported = false;
    }
    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
            func.apply(context, funcArgs);
        } catch (error) {
            this.onError(error);
        }
    }
    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
    // In DEV mode, we swap out invokeGuardedCallback for a special version
    // that plays more nicely with the browser's DevTools. The idea is to preserve
    // "Pause on exceptions" behavior. Because React wraps all user-provided
    // functions in invokeGuardedCallback, and the production version of
    // invokeGuardedCallback uses a try-catch, all user exceptions are treated
    // like caught exceptions, and the DevTools won't pause unless the developer
    // takes the extra step of enabling pause on caught exceptions. This is
    // unintuitive, though, because even though React has caught the error, from
    // the developer's perspective, the error is uncaught.
    //
    // To preserve the expected "Pause on exceptions" behavior, we don't use a
    // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
    // DOM node, and call the user-provided callback from inside an event handler
    // for that fake event. If the callback throws, the error is "captured" using
    // a global event handler. But because the error happens in a different
    // event loop context, it does not interrupt the normal program flow.
    // Effectively, this gives us try-catch behavior without actually using
    // try-catch. Neat!
    // Check that the browser supports the APIs we need to implement our special
    // DEV version of invokeGuardedCallback
    if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
        var fakeNode = document.createElement("react");
        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
            // If document doesn't exist we know for sure we will crash in this method
            // when we call document.createEvent(). However this can cause confusing
            // errors: https://github.com/facebook/create-react-app/issues/3482
            // So we preemptively throw with a better message instead.
            if (typeof document === "undefined" || document === null) throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
            var evt = document.createEvent("Event");
            var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
            // set this to true at the beginning, then set it to false right after
            // calling the function. If the function errors, `didError` will never be
            // set to false. This strategy works even if the browser is flaky and
            // fails to call our global error handler, because it doesn't rely on
            // the error event at all.
            var didError = true; // Keeps track of the value of window.event so that we can reset it
            // during the callback to let user code access window.event in the
            // browsers that support it.
            var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
            // dispatching: https://github.com/facebook/react/issues/13688
            var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
            function restoreAfterDispatch() {
                // We immediately remove the callback from event listeners so that
                // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                // nested call would trigger the fake event handlers of any call higher
                // in the stack.
                fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
                // window.event assignment in both IE <= 10 as they throw an error
                // "Member not found" in strict mode, and in Firefox which does not
                // support window.event.
                if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) window.event = windowEvent;
            } // Create an event handler for our fake event. We will synchronously
            // dispatch our fake event using `dispatchEvent`. Inside the handler, we
            // call the user-provided callback.
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            function callCallback() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
            } // Create a global error event handler. We use this to capture the value
            // that was thrown. It's possible that this error handler will fire more
            // than once; for example, if non-React code also calls `dispatchEvent`
            // and a handler for that event throws. We should be resilient to most of
            // those cases. Even if our error event handler fires more than once, the
            // last error event is always used. If the callback actually does error,
            // we know that the last error event is the correct one, because it's not
            // possible for anything else to have happened in between our callback
            // erroring and the code that follows the `dispatchEvent` call below. If
            // the callback doesn't error, but the error event was fired, we know to
            // ignore it because `didError` will be false, as described above.
            var error; // Use this to track whether the error event is ever called.
            var didSetError = false;
            var isCrossOriginError = false;
            function handleWindowError(event) {
                error = event.error;
                didSetError = true;
                if (error === null && event.colno === 0 && event.lineno === 0) isCrossOriginError = true;
                if (event.defaultPrevented) {
                    // Some other error handler has prevented default.
                    // Browsers silence the error report if this happens.
                    // We'll remember this to later decide whether to log it or not.
                    if (error != null && typeof error === "object") try {
                        error._suppressLogging = true;
                    } catch (inner) {}
                }
            } // Create a fake event type.
            var evtType = "react-" + (name ? name : "invokeguardedcallback"); // Attach our event handlers
            window.addEventListener("error", handleWindowError);
            fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
            // errors, it will trigger our global error handler.
            evt.initEvent(evtType, false, false);
            fakeNode.dispatchEvent(evt);
            if (windowEventDescriptor) Object.defineProperty(window, "event", windowEventDescriptor);
            if (didCall && didError) {
                if (!didSetError) // The callback errored, but the error event never fired.
                // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the \"Pause on exceptions\" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.");
                else if (isCrossOriginError) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                this.onError(error);
            } // Remove our event listeners
            window.removeEventListener("error", handleWindowError);
            if (!didCall) {
                // Something went really wrong, and our event was not dispatched.
                // https://github.com/facebook/react/issues/16734
                // https://github.com/facebook/react/issues/16585
                // Fall back to the production implementation.
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
            }
        };
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.
    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
        onError: function(error) {
            hasError = true;
            caughtError = error;
        }
    };
    /**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        hasError = false;
        caughtError = null;
        invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        invokeGuardedCallback.apply(this, arguments);
        if (hasError) {
            var error = clearCaughtError();
            if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error;
            }
        }
    }
    /**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */ function rethrowCaughtError() {
        if (hasRethrowError) {
            var error = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error;
        }
    }
    function hasCaughtError() {
        return hasError;
    }
    function clearCaughtError() {
        if (hasError) {
            var error = caughtError;
            hasError = false;
            caughtError = null;
            return error;
        } else throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    /**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */ function get(key) {
        return key._reactInternals;
    }
    function has(key) {
        return key._reactInternals !== undefined;
    }
    function set(key, value) {
        key._reactInternals = value;
    }
    // Don't change these two values. They're used by React Dev Tools.
    var NoFlags = /*                      */ 0;
    var PerformedWork = /*                */ 1; // You can change the rest (and add more).
    var Placement = /*                    */ 2;
    var Update = /*                       */ 4;
    var ChildDeletion = /*                */ 16;
    var ContentReset = /*                 */ 32;
    var Callback = /*                     */ 64;
    var DidCapture = /*                   */ 128;
    var ForceClientRender = /*            */ 256;
    var Ref = /*                          */ 512;
    var Snapshot = /*                     */ 1024;
    var Passive = /*                      */ 2048;
    var Hydrating = /*                    */ 4096;
    var Visibility = /*                   */ 8192;
    var StoreConsistency = /*             */ 16384;
    var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)
    var HostEffectMask = /*               */ 32767; // These are not really side effects, but we still reuse this field.
    var Incomplete = /*                   */ 32768;
    var ShouldCapture = /*                */ 65536;
    var ForceUpdateForLegacySuspense = /* */ 131072;
    var Forked = /*                       */ 1048576; // Static tags describe aspects of a fiber that are not specific to a render,
    // e.g. a fiber uses a passive effect (even if there are no updates on this particular render).
    // This enables us to defer more work in the unmount case,
    // since we can defer traversing the tree during layout to look for Passive effects,
    // and instead rely on the static flag as a signal that there may be cleanup work.
    var RefStatic = /*                    */ 2097152;
    var LayoutStatic = /*                 */ 4194304;
    var PassiveStatic = /*                */ 8388608; // These flags allow us to traverse to fibers that have effects on mount
    // without traversing the entire tree after every commit for
    // double invoking
    var MountLayoutDev = /*               */ 16777216;
    var MountPassiveDev = /*              */ 33554432; // Groups of flags that are used in the commit phase to skip over trees that
    // don't contain effects, by checking subtreeFlags.
    var BeforeMutationMask = // flag logic (see #20043)
    Update | Snapshot | 0;
    var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
    var LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask
    var PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.
    // This allows certain concepts to persist without recalculating them,
    // e.g. whether a subtree contains passive effects or portals.
    var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    function getNearestMountedFiber(fiber) {
        var node = fiber;
        var nearestMounted = fiber;
        if (!fiber.alternate) {
            // If there is no alternate, this might be a new tree that isn't inserted
            // yet. If it is, then it will have a pending insertion effect on it.
            var nextNode = node;
            do {
                node = nextNode;
                if ((node.flags & (Placement | Hydrating)) !== NoFlags) // This is an insertion or in-progress hydration. The nearest possible
                // mounted fiber is the parent but we need to continue to figure out
                // if that one is still mounted.
                nearestMounted = node.return;
                nextNode = node.return;
            }while (nextNode);
        } else while(node.return)node = node.return;
        if (node.tag === HostRoot) // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
         // If we didn't hit the root, that means that we're in an disconnected tree
        // that has been unmounted.
        return null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
                var current = fiber.alternate;
                if (current !== null) suspenseState = current.memoizedState;
            }
            if (suspenseState !== null) return suspenseState.dehydrated;
        }
        return null;
    }
    function getContainerFromFiber(fiber) {
        return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }
    function isFiberMounted(fiber) {
        return getNearestMountedFiber(fiber) === fiber;
    }
    function isMounted(component) {
        var owner = ReactCurrentOwner.current;
        if (owner !== null && owner.tag === ClassComponent) {
            var ownerFiber = owner;
            var instance = ownerFiber.stateNode;
            if (!instance._warnedAboutRefsInRender) error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || "A component");
            instance._warnedAboutRefsInRender = true;
        }
        var fiber = get(component);
        if (!fiber) return false;
        return getNearestMountedFiber(fiber) === fiber;
    }
    function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber) throw new Error("Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            // If there is no alternate, then we only need to check if it is mounted.
            var nearestMounted = getNearestMountedFiber(fiber);
            if (nearestMounted === null) throw new Error("Unable to find node on an unmounted component.");
            if (nearestMounted !== fiber) return null;
            return fiber;
        } // If we have two possible branches, we'll walk backwards up to the root
        // to see what path the root points to. On the way we may hit one of the
        // special cases and we'll deal with them.
        var a = fiber;
        var b = alternate;
        while(true){
            var parentA = a.return;
            if (parentA === null) break;
            var parentB = parentA.alternate;
            if (parentB === null) {
                // There is no alternate. This is an unusual case. Currently, it only
                // happens when a Suspense component is hidden. An extra fragment fiber
                // is inserted in between the Suspense fiber and its children. Skip
                // over this extra fragment fiber and proceed to the next parent.
                var nextParent = parentA.return;
                if (nextParent !== null) {
                    a = b = nextParent;
                    continue;
                } // If there's no parent, we're at the root.
                break;
            } // If both copies of the parent fiber point to the same child, we can
            // assume that the child is current. This happens when we bailout on low
            // priority: the bailed out fiber's child reuses the current child.
            if (parentA.child === parentB.child) {
                var child = parentA.child;
                while(child){
                    if (child === a) {
                        // We've determined that A is the current branch.
                        assertIsMounted(parentA);
                        return fiber;
                    }
                    if (child === b) {
                        // We've determined that B is the current branch.
                        assertIsMounted(parentA);
                        return alternate;
                    }
                    child = child.sibling;
                } // We should never have an alternate for any mounting node. So the only
                // way this could possibly happen is if this was unmounted, if at all.
                throw new Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) {
                // The return pointer of A and the return pointer of B point to different
                // fibers. We assume that return pointers never criss-cross, so A must
                // belong to the child set of A.return, and B must belong to the child
                // set of B.return.
                a = parentA;
                b = parentB;
            } else {
                // The return pointers point to the same fiber. We'll have to use the
                // default, slow path: scan the child sets of each parent alternate to see
                // which child belongs to which set.
                //
                // Search parent A's child set
                var didFindChild = false;
                var _child = parentA.child;
                while(_child){
                    if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    // Search parent B's child set
                    _child = parentB.child;
                    while(_child){
                        if (_child === a) {
                            didFindChild = true;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = true;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (a.alternate !== b) throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        } // If the root is not a host container, we're in a disconnected tree. I.e.
        // unmounted.
        if (a.tag !== HostRoot) throw new Error("Unable to find node on an unmounted component.");
        if (a.stateNode.current === a) // We've determined that A is the current branch.
        return fiber;
         // Otherwise B has to be current branch.
        return alternate;
    }
    function findCurrentHostFiber(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
    }
    function findCurrentHostFiberImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            var match = findCurrentHostFiberImpl(child);
            if (match !== null) return match;
            child = child.sibling;
        }
        return null;
    }
    function findCurrentHostFiberWithNoPortals(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
    }
    function findCurrentHostFiberWithNoPortalsImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            if (child.tag !== HostPortal) {
                var match = findCurrentHostFiberWithNoPortalsImpl(child);
                if (match !== null) return match;
            }
            child = child.sibling;
        }
        return null;
    }
    // This module only exists as an ESM wrapper around the external CommonJS
    var scheduleCallback = Scheduler.unstable_scheduleCallback;
    var cancelCallback = Scheduler.unstable_cancelCallback;
    var shouldYield = Scheduler.unstable_shouldYield;
    var requestPaint = Scheduler.unstable_requestPaint;
    var now = Scheduler.unstable_now;
    var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
    var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
    var NormalPriority = Scheduler.unstable_NormalPriority;
    var LowPriority = Scheduler.unstable_LowPriority;
    var IdlePriority = Scheduler.unstable_IdlePriority;
    // this doesn't actually exist on the scheduler, but it *does*
    // on scheduler/unstable_mock, which we'll need for internal testing
    var unstable_yieldValue = Scheduler.unstable_yieldValue;
    var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;
    var rendererID = null;
    var injectedHook = null;
    var injectedProfilingHooks = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
    function injectInternals(internals) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") // No DevTools
        return false;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
        if (!hook.supportsFiber) {
            error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            return true;
        }
        try {
            if (enableSchedulingProfiler) // Conditionally inject these hooks only if Timeline profiler is supported by this build.
            // This gives DevTools a way to feature detect that isn't tied to version number
            // (since profiling and timeline are controlled by different feature flags).
            internals = assign({}, internals, {
                getLaneLabelMap: getLaneLabelMap,
                injectProfilingHooks: injectProfilingHooks
            });
            rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.
            injectedHook = hook;
        } catch (err) {
            error("React instrumentation encountered an error: %s.", err);
        }
        if (hook.checkDCE) // This is the real DevTools.
        return true;
        else // This is likely a hook installed by Fast Refresh runtime.
        return false;
    }
    function onScheduleRoot(root, children) {
        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") try {
            injectedHook.onScheduleFiberRoot(rendererID, root, children);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function onCommitRoot(root, eventPriority) {
        if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") try {
            var didError = (root.current.flags & DidCapture) === DidCapture;
            if (enableProfilerTimer) {
                var schedulerPriority;
                switch(eventPriority){
                    case DiscreteEventPriority:
                        schedulerPriority = ImmediatePriority;
                        break;
                    case ContinuousEventPriority:
                        schedulerPriority = UserBlockingPriority;
                        break;
                    case DefaultEventPriority:
                        schedulerPriority = NormalPriority;
                        break;
                    case IdleEventPriority:
                        schedulerPriority = IdlePriority;
                        break;
                    default:
                        schedulerPriority = NormalPriority;
                        break;
                }
                injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);
            } else injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function onPostCommitRoot(root) {
        if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === "function") try {
            injectedHook.onPostCommitFiberRoot(rendererID, root);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function onCommitUnmount(fiber) {
        if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") try {
            injectedHook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
        if (typeof unstable_yieldValue === "function") {
            // We're in a test because Scheduler.unstable_yieldValue only exists
            // in SchedulerMock. To reduce the noise in strict mode tests,
            // suppress warnings and disable scheduler yielding during the double render
            unstable_setDisableYieldValue(newIsStrictMode);
            setSuppressWarning(newIsStrictMode);
        }
        if (injectedHook && typeof injectedHook.setStrictMode === "function") try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    } // Profiler API hooks
    function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
    }
    function getLaneLabelMap() {
        var map = new Map();
        var lane = 1;
        for(var index = 0; index < TotalLanes; index++){
            var label = getLabelForLane(lane);
            map.set(lane, label);
            lane *= 2;
        }
        return map;
    }
    function markCommitStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === "function") injectedProfilingHooks.markCommitStarted(lanes);
    }
    function markCommitStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === "function") injectedProfilingHooks.markCommitStopped();
    }
    function markComponentRenderStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === "function") injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
    function markComponentRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === "function") injectedProfilingHooks.markComponentRenderStopped();
    }
    function markComponentPassiveEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === "function") injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
    }
    function markComponentPassiveEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === "function") injectedProfilingHooks.markComponentPassiveEffectMountStopped();
    }
    function markComponentPassiveEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === "function") injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
    }
    function markComponentPassiveEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === "function") injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
    }
    function markComponentLayoutEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === "function") injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
    }
    function markComponentLayoutEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === "function") injectedProfilingHooks.markComponentLayoutEffectMountStopped();
    }
    function markComponentLayoutEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === "function") injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
    }
    function markComponentLayoutEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === "function") injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
    }
    function markComponentErrored(fiber, thrownValue, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === "function") injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
    }
    function markComponentSuspended(fiber, wakeable, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === "function") injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
    }
    function markLayoutEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === "function") injectedProfilingHooks.markLayoutEffectsStarted(lanes);
    }
    function markLayoutEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === "function") injectedProfilingHooks.markLayoutEffectsStopped();
    }
    function markPassiveEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === "function") injectedProfilingHooks.markPassiveEffectsStarted(lanes);
    }
    function markPassiveEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === "function") injectedProfilingHooks.markPassiveEffectsStopped();
    }
    function markRenderStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === "function") injectedProfilingHooks.markRenderStarted(lanes);
    }
    function markRenderYielded() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === "function") injectedProfilingHooks.markRenderYielded();
    }
    function markRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === "function") injectedProfilingHooks.markRenderStopped();
    }
    function markRenderScheduled(lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === "function") injectedProfilingHooks.markRenderScheduled(lane);
    }
    function markForceUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === "function") injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
    }
    function markStateUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === "function") injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
    var NoMode = /*                         */ 0; // TODO: Remove ConcurrentMode by reading from the root tag instead
    var ConcurrentMode = /*                 */ 1;
    var ProfileMode = /*                    */ 2;
    var StrictLegacyMode = /*               */ 8;
    var StrictEffectsMode = /*              */ 16;
    // TODO: This is pretty well supported by browsers. Maybe we can drop it.
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.
    // Based on:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(x) {
        var asUint = x >>> 0;
        if (asUint === 0) return 32;
        return 31 - (log(asUint) / LN2 | 0) | 0;
    }
    // If those values are changed that package should be rebuilt and redeployed.
    var TotalLanes = 31;
    var NoLanes = /*                        */ 0;
    var NoLane = /*                          */ 0;
    var SyncLane = /*                        */ 1;
    var InputContinuousHydrationLane = /*    */ 2;
    var InputContinuousLane = /*             */ 4;
    var DefaultHydrationLane = /*            */ 8;
    var DefaultLane = /*                     */ 16;
    var TransitionHydrationLane = /*                */ 32;
    var TransitionLanes = /*                       */ 4194240;
    var TransitionLane1 = /*                        */ 64;
    var TransitionLane2 = /*                        */ 128;
    var TransitionLane3 = /*                        */ 256;
    var TransitionLane4 = /*                        */ 512;
    var TransitionLane5 = /*                        */ 1024;
    var TransitionLane6 = /*                        */ 2048;
    var TransitionLane7 = /*                        */ 4096;
    var TransitionLane8 = /*                        */ 8192;
    var TransitionLane9 = /*                        */ 16384;
    var TransitionLane10 = /*                       */ 32768;
    var TransitionLane11 = /*                       */ 65536;
    var TransitionLane12 = /*                       */ 131072;
    var TransitionLane13 = /*                       */ 262144;
    var TransitionLane14 = /*                       */ 524288;
    var TransitionLane15 = /*                       */ 1048576;
    var TransitionLane16 = /*                       */ 2097152;
    var RetryLanes = /*                            */ 130023424;
    var RetryLane1 = /*                             */ 4194304;
    var RetryLane2 = /*                             */ 8388608;
    var RetryLane3 = /*                             */ 16777216;
    var RetryLane4 = /*                             */ 33554432;
    var RetryLane5 = /*                             */ 67108864;
    var SomeRetryLane = RetryLane1;
    var SelectiveHydrationLane = /*          */ 134217728;
    var NonIdleLanes = /*                          */ 268435455;
    var IdleHydrationLane = /*               */ 268435456;
    var IdleLane = /*                        */ 536870912;
    var OffscreenLane = /*                   */ 1073741824; // This function is used for the experimental timeline (react-devtools-timeline)
    // It should be kept in sync with the Lanes values above.
    function getLabelForLane(lane) {
        if (lane & SyncLane) return "Sync";
        if (lane & InputContinuousHydrationLane) return "InputContinuousHydration";
        if (lane & InputContinuousLane) return "InputContinuous";
        if (lane & DefaultHydrationLane) return "DefaultHydration";
        if (lane & DefaultLane) return "Default";
        if (lane & TransitionHydrationLane) return "TransitionHydration";
        if (lane & TransitionLanes) return "Transition";
        if (lane & RetryLanes) return "Retry";
        if (lane & SelectiveHydrationLane) return "SelectiveHydration";
        if (lane & IdleHydrationLane) return "IdleHydration";
        if (lane & IdleLane) return "Idle";
        if (lane & OffscreenLane) return "Offscreen";
    }
    var NoTimestamp = -1;
    var nextTransitionLane = TransitionLane1;
    var nextRetryLane = RetryLane1;
    function getHighestPriorityLanes(lanes) {
        switch(getHighestPriorityLane(lanes)){
            case SyncLane:
                return SyncLane;
            case InputContinuousHydrationLane:
                return InputContinuousHydrationLane;
            case InputContinuousLane:
                return InputContinuousLane;
            case DefaultHydrationLane:
                return DefaultHydrationLane;
            case DefaultLane:
                return DefaultLane;
            case TransitionHydrationLane:
                return TransitionHydrationLane;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return lanes & TransitionLanes;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                return lanes & RetryLanes;
            case SelectiveHydrationLane:
                return SelectiveHydrationLane;
            case IdleHydrationLane:
                return IdleHydrationLane;
            case IdleLane:
                return IdleLane;
            case OffscreenLane:
                return OffscreenLane;
            default:
                error("Should have found matching lanes. This is a bug in React.");
                return lanes;
        }
    }
    function getNextLanes(root, wipLanes) {
        // Early bailout if there's no pending work left.
        var pendingLanes = root.pendingLanes;
        if (pendingLanes === NoLanes) return NoLanes;
        var nextLanes = NoLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,
        // even if the work is suspended.
        var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
        if (nonIdlePendingLanes !== NoLanes) {
            var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
            if (nonIdleUnblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
            else {
                var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                if (nonIdlePingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
            }
        } else {
            // The only remaining work is Idle.
            var unblockedLanes = pendingLanes & ~suspendedLanes;
            if (unblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(unblockedLanes);
            else if (pingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(pingedLanes);
        }
        if (nextLanes === NoLanes) // This should only be reachable if we're suspended
        // TODO: Consider warning in this path if a fallback timer is not scheduled.
        return NoLanes;
         // If we're already in the middle of a render, switching lanes will interrupt
        // it and we'll lose our progress. We should only do this if the new lanes are
        // higher priority.
        if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
        // bother waiting until the root is complete.
        (wipLanes & suspendedLanes) === NoLanes) {
            var nextLane = getHighestPriorityLane(nextLanes);
            var wipLane = getHighestPriorityLane(wipLanes);
            if (// one. This works because the bits decrease in priority as you go left.
            nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The
            // only difference between default updates and transition updates is that
            // default updates do not support refresh transitions.
            nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) // Keep working on the existing in-progress tree. Do not interrupt.
            return wipLanes;
        }
        if ((nextLanes & InputContinuousLane) !== NoLanes) // When updates are sync by default, we entangle continuous priority updates
        // and default updates, so they render in the same batch. The only reason
        // they use separate lanes is because continuous updates should interrupt
        // transitions, but default updates should not.
        nextLanes |= pendingLanes & DefaultLane;
         // Check for entangled lanes and add them to the batch.
        //
        // A lane is said to be entangled with another when it's not allowed to render
        // in a batch that does not also include the other lane. Typically we do this
        // when multiple updates have the same source, and we only want to respond to
        // the most recent event from that source.
        //
        // Note that we apply entanglements *after* checking for partial work above.
        // This means that if a lane is entangled during an interleaved event while
        // it's already rendering, we won't interrupt it. This is intentional, since
        // entanglement is usually "best effort": we'll try our best to render the
        // lanes in the same batch, but it's not worth throwing out partially
        // completed work in order to do it.
        // TODO: Reconsider this. The counter-argument is that the partial work
        // represents an intermediate state, which we don't want to show to the user.
        // And by spending extra time finishing it, we're increasing the amount of
        // time it takes to show the final state, which is what they are actually
        // waiting for.
        //
        // For those exceptions where entanglement is semantically important, like
        // useMutableSource, we should ensure that there is no partial work at the
        // time we apply the entanglement.
        var entangledLanes = root.entangledLanes;
        if (entangledLanes !== NoLanes) {
            var entanglements = root.entanglements;
            var lanes = nextLanes & entangledLanes;
            while(lanes > 0){
                var index = pickArbitraryLaneIndex(lanes);
                var lane = 1 << index;
                nextLanes |= entanglements[index];
                lanes &= ~lane;
            }
        }
        return nextLanes;
    }
    function getMostRecentEventTime(root, lanes) {
        var eventTimes = root.eventTimes;
        var mostRecentEventTime = NoTimestamp;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var eventTime = eventTimes[index];
            if (eventTime > mostRecentEventTime) mostRecentEventTime = eventTime;
            lanes &= ~lane;
        }
        return mostRecentEventTime;
    }
    function computeExpirationTime(lane, currentTime) {
        switch(lane){
            case SyncLane:
            case InputContinuousHydrationLane:
            case InputContinuousLane:
                // User interactions should expire slightly more quickly.
                //
                // NOTE: This is set to the corresponding constant as in Scheduler.js.
                // When we made it larger, a product metric in www regressed, suggesting
                // there's a user interaction that's being starved by a series of
                // synchronous updates. If that theory is correct, the proper solution is
                // to fix the starvation. However, this scenario supports the idea that
                // expiration times are an important safeguard when starvation
                // does happen.
                return currentTime + 250;
            case DefaultHydrationLane:
            case DefaultLane:
            case TransitionHydrationLane:
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return currentTime + 5000;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                // TODO: Retries should be allowed to expire if they are CPU bound for
                // too long, but when I made this change it caused a spike in browser
                // crashes. There must be some other underlying bug; not super urgent but
                // ideally should figure out why and fix it. Unfortunately we don't have
                // a repro for the crashes, only detected via production metrics.
                return NoTimestamp;
            case SelectiveHydrationLane:
            case IdleHydrationLane:
            case IdleLane:
            case OffscreenLane:
                // Anything idle priority or lower should never expire.
                return NoTimestamp;
            default:
                error("Should have found matching lanes. This is a bug in React.");
                return NoTimestamp;
        }
    }
    function markStarvedLanesAsExpired(root, currentTime) {
        // TODO: This gets called every time we yield. We can optimize by storing
        // the earliest expiration time on the root. Then use that to quickly bail out
        // of this function.
        var pendingLanes = root.pendingLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes;
        var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
        // expiration time. If so, we'll assume the update is being starved and mark
        // it as expired to force it to finish.
        var lanes = pendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var expirationTime = expirationTimes[index];
            if (expirationTime === NoTimestamp) // Found a pending lane with no expiration time. If it's not suspended, or
            // if it's pinged, assume it's CPU-bound. Compute a new expiration time
            // using the current time.
            {
                if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) // Assumes timestamps are monotonically increasing.
                expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else if (expirationTime <= currentTime) // This lane expired
            root.expiredLanes |= lane;
            lanes &= ~lane;
        }
    } // This returns the highest priority pending lanes regardless of whether they
    // are suspended.
    function getHighestPriorityPendingLanes(root) {
        return getHighestPriorityLanes(root.pendingLanes);
    }
    function getLanesToRetrySynchronouslyOnError(root) {
        var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;
        if (everythingButOffscreen !== NoLanes) return everythingButOffscreen;
        if (everythingButOffscreen & OffscreenLane) return OffscreenLane;
        return NoLanes;
    }
    function includesSyncLane(lanes) {
        return (lanes & SyncLane) !== NoLanes;
    }
    function includesNonIdleWork(lanes) {
        return (lanes & NonIdleLanes) !== NoLanes;
    }
    function includesOnlyRetries(lanes) {
        return (lanes & RetryLanes) === lanes;
    }
    function includesOnlyNonUrgentLanes(lanes) {
        var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
        return (lanes & UrgentLanes) === NoLanes;
    }
    function includesOnlyTransitions(lanes) {
        return (lanes & TransitionLanes) === lanes;
    }
    function includesBlockingLane(root, lanes) {
        var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
        return (lanes & SyncDefaultLanes) !== NoLanes;
    }
    function includesExpiredLane(root, lanes) {
        // This is a separate check from includesBlockingLane because a lane can
        // expire after a render has already started.
        return (lanes & root.expiredLanes) !== NoLanes;
    }
    function isTransitionLane(lane) {
        return (lane & TransitionLanes) !== NoLanes;
    }
    function claimNextTransitionLane() {
        // Cycle through the lanes, assigning each new transition to the next lane.
        // In most cases, this means every transition gets its own lane, until we
        // run out of lanes and cycle back to the beginning.
        var lane = nextTransitionLane;
        nextTransitionLane <<= 1;
        if ((nextTransitionLane & TransitionLanes) === NoLanes) nextTransitionLane = TransitionLane1;
        return lane;
    }
    function claimNextRetryLane() {
        var lane = nextRetryLane;
        nextRetryLane <<= 1;
        if ((nextRetryLane & RetryLanes) === NoLanes) nextRetryLane = RetryLane1;
        return lane;
    }
    function getHighestPriorityLane(lanes) {
        return lanes & -lanes;
    }
    function pickArbitraryLane(lanes) {
        // This wrapper function gets inlined. Only exists so to communicate that it
        // doesn't matter which bit is selected; you can pick any bit without
        // affecting the algorithms where its used. Here I'm using
        // getHighestPriorityLane because it requires the fewest operations.
        return getHighestPriorityLane(lanes);
    }
    function pickArbitraryLaneIndex(lanes) {
        return 31 - clz32(lanes);
    }
    function laneToIndex(lane) {
        return pickArbitraryLaneIndex(lane);
    }
    function includesSomeLane(a, b) {
        return (a & b) !== NoLanes;
    }
    function isSubsetOfLanes(set, subset) {
        return (set & subset) === subset;
    }
    function mergeLanes(a, b) {
        return a | b;
    }
    function removeLanes(set, subset) {
        return set & ~subset;
    }
    function intersectLanes(a, b) {
        return a & b;
    } // Seems redundant, but it changes the type from a single lane (used for
    // updates) to a group of lanes (used for flushing work).
    function laneToLanes(lane) {
        return lane;
    }
    function higherPriorityLane(a, b) {
        // This works because the bit ranges decrease in priority as you go left.
        return a !== NoLane && a < b ? a : b;
    }
    function createLaneMap(initial) {
        // Intentionally pushing one by one.
        // https://v8.dev/blog/elements-kinds#avoid-creating-holes
        var laneMap = [];
        for(var i = 0; i < TotalLanes; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated(root, updateLane, eventTime) {
        root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update
        // could unblock them. Clear the suspended lanes so that we can try rendering
        // them again.
        //
        // TODO: We really only need to unsuspend only lanes that are in the
        // `subtreeLanes` of the updated fiber, or the update lanes of the return
        // path. This would exclude suspended updates in an unrelated sibling tree,
        // since there's no way for this update to unblock it.
        //
        // We don't do this if the incoming update is idle, because we never process
        // idle updates until after all the regular updates have finished; there's no
        // way it could unblock a transition.
        if (updateLane !== IdleLane) {
            root.suspendedLanes = NoLanes;
            root.pingedLanes = NoLanes;
        }
        var eventTimes = root.eventTimes;
        var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
        // recent event, and we assume time is monotonically increasing.
        eventTimes[index] = eventTime;
    }
    function markRootSuspended(root, suspendedLanes) {
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.
        var expirationTimes = root.expirationTimes;
        var lanes = suspendedLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootPinged(root, pingedLanes, eventTime) {
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
    }
    function markRootFinished(root, remainingLanes) {
        var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
        root.pendingLanes = remainingLanes; // Let's try everything again
        root.suspendedLanes = NoLanes;
        root.pingedLanes = NoLanes;
        root.expiredLanes &= remainingLanes;
        root.mutableReadLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        var entanglements = root.entanglements;
        var eventTimes = root.eventTimes;
        var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work
        var lanes = noLongerPendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            entanglements[index] = NoLanes;
            eventTimes[index] = NoTimestamp;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootEntangled(root, entangledLanes) {
        // In addition to entangling each of the given lanes with each other, we also
        // have to consider _transitive_ entanglements. For each lane that is already
        // entangled with *any* of the given lanes, that lane is now transitively
        // entangled with *all* the given lanes.
        //
        // Translated: If C is entangled with A, then entangling A with B also
        // entangles C with B.
        //
        // If this is hard to grasp, it might help to intentionally break this
        // function and look at the tests that fail in ReactTransition-test.js. Try
        // commenting out one of the conditions below.
        var rootEntangledLanes = root.entangledLanes |= entangledLanes;
        var entanglements = root.entanglements;
        var lanes = rootEntangledLanes;
        while(lanes){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            if (lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?
            entanglements[index] & entangledLanes) entanglements[index] |= entangledLanes;
            lanes &= ~lane;
        }
    }
    function getBumpedLaneForHydration(root, renderLanes) {
        var renderLane = getHighestPriorityLane(renderLanes);
        var lane;
        switch(renderLane){
            case InputContinuousLane:
                lane = InputContinuousHydrationLane;
                break;
            case DefaultLane:
                lane = DefaultHydrationLane;
                break;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                lane = TransitionHydrationLane;
                break;
            case IdleLane:
                lane = IdleHydrationLane;
                break;
            default:
                // Everything else is already either a hydration lane, or shouldn't
                // be retried at a hydration lane.
                lane = NoLane;
                break;
        } // Check if the lane we chose is suspended. If so, that indicates that we
        // already attempted and failed to hydrate at that level. Also check if we're
        // already rendering that lane, which is rare but could happen.
        if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) // Give up trying to hydrate and fall back to client render.
        return NoLane;
        return lane;
    }
    function addFiberToLanesMap(root, fiber, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            updaters.add(fiber);
            lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        var memoizedUpdaters = root.memoizedUpdaters;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            if (updaters.size > 0) {
                updaters.forEach(function(fiber) {
                    var alternate = fiber.alternate;
                    if (alternate === null || !memoizedUpdaters.has(alternate)) memoizedUpdaters.add(fiber);
                });
                updaters.clear();
            }
            lanes &= ~lane;
        }
    }
    function getTransitionsForLanes(root, lanes) {
        return null;
    }
    var DiscreteEventPriority = SyncLane;
    var ContinuousEventPriority = InputContinuousLane;
    var DefaultEventPriority = DefaultLane;
    var IdleEventPriority = IdleLane;
    var currentUpdatePriority = NoLane;
    function getCurrentUpdatePriority() {
        return currentUpdatePriority;
    }
    function setCurrentUpdatePriority(newPriority) {
        currentUpdatePriority = newPriority;
    }
    function runWithPriority(priority, fn) {
        var previousPriority = currentUpdatePriority;
        try {
            currentUpdatePriority = priority;
            return fn();
        } finally{
            currentUpdatePriority = previousPriority;
        }
    }
    function higherEventPriority(a, b) {
        return a !== 0 && a < b ? a : b;
    }
    function lowerEventPriority(a, b) {
        return a === 0 || a > b ? a : b;
    }
    function isHigherEventPriority(a, b) {
        return a !== 0 && a < b;
    }
    function lanesToEventPriority(lanes) {
        var lane = getHighestPriorityLane(lanes);
        if (!isHigherEventPriority(DiscreteEventPriority, lane)) return DiscreteEventPriority;
        if (!isHigherEventPriority(ContinuousEventPriority, lane)) return ContinuousEventPriority;
        if (includesNonIdleWork(lane)) return DefaultEventPriority;
        return IdleEventPriority;
    }
    // This is imported by the event replaying implementation in React DOM. It's
    // in a separate file to break a circular dependency between the renderer and
    // the reconciler.
    function isRootDehydrated(root) {
        var currentState = root.current.memoizedState;
        return currentState.isDehydrated;
    }
    var _attemptSynchronousHydration;
    function setAttemptSynchronousHydration(fn) {
        _attemptSynchronousHydration = fn;
    }
    function attemptSynchronousHydration(fiber) {
        _attemptSynchronousHydration(fiber);
    }
    var attemptContinuousHydration;
    function setAttemptContinuousHydration(fn) {
        attemptContinuousHydration = fn;
    }
    var attemptHydrationAtCurrentPriority;
    function setAttemptHydrationAtCurrentPriority(fn) {
        attemptHydrationAtCurrentPriority = fn;
    }
    var getCurrentUpdatePriority$1;
    function setGetCurrentUpdatePriority(fn) {
        getCurrentUpdatePriority$1 = fn;
    }
    var attemptHydrationAtPriority;
    function setAttemptHydrationAtPriority(fn) {
        attemptHydrationAtPriority = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that
    // has this definition built-in.
    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.
    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.
    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.
    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.
    var queuedExplicitHydrationTargets = [];
    var discreteReplayableEvents = [
        "mousedown",
        "mouseup",
        "touchcancel",
        "touchend",
        "touchstart",
        "auxclick",
        "dblclick",
        "pointercancel",
        "pointerdown",
        "pointerup",
        "dragend",
        "dragstart",
        "drop",
        "compositionend",
        "compositionstart",
        "keydown",
        "keypress",
        "keyup",
        "input",
        "textInput",
        "copy",
        "cut",
        "paste",
        "click",
        "change",
        "contextmenu",
        "reset",
        "submit"
    ];
    function isDiscreteEventThatRequiresHydration(eventType) {
        return discreteReplayableEvents.indexOf(eventType) > -1;
    }
    function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        return {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        };
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case "focusin":
            case "focusout":
                queuedFocus = null;
                break;
            case "dragenter":
            case "dragleave":
                queuedDrag = null;
                break;
            case "mouseover":
            case "mouseout":
                queuedMouse = null;
                break;
            case "pointerover":
            case "pointerout":
                var pointerId = nativeEvent.pointerId;
                queuedPointers.delete(pointerId);
                break;
            case "gotpointercapture":
            case "lostpointercapture":
                var _pointerId = nativeEvent.pointerId;
                queuedPointerCaptures.delete(_pointerId);
                break;
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
                var _fiber2 = getInstanceFromNode(blockedOn);
                if (_fiber2 !== null) // Attempt to increase the priority of this target.
                attemptContinuousHydration(_fiber2);
            }
            return queuedEvent;
        } // If we have already queued this exact event, then it's because
        // the different event systems have different DOM event listeners.
        // We can accumulate the flags, and the targetContainers, and
        // store a single event to be replayed.
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        var targetContainers = existingQueuedEvent.targetContainers;
        if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) targetContainers.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // These set relatedTarget to null because the replayed event will be treated as if we
        // moved from outside the window (no target) onto the target once it hydrates.
        // Instead of mutating we could clone the event.
        switch(domEventName){
            case "focusin":
                var focusEvent = nativeEvent;
                queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                return true;
            case "dragenter":
                var dragEvent = nativeEvent;
                queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                return true;
            case "mouseover":
                var mouseEvent = nativeEvent;
                queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                return true;
            case "pointerover":
                var pointerEvent = nativeEvent;
                var pointerId = pointerEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                return true;
            case "gotpointercapture":
                var _pointerEvent = nativeEvent;
                var _pointerId2 = _pointerEvent.pointerId;
                queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                return true;
        }
        return false;
    } // Check if this target is unblocked. Returns true if it's unblocked.
    function attemptExplicitHydrationTarget(queuedTarget) {
        // TODO: This function shares a lot of logic with findInstanceBlockingEvent.
        // Try to unify them. It's a bit tricky since it would require two return
        // values.
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) {
                        // We're blocked on hydrating this boundary.
                        // Increase its priority.
                        queuedTarget.blockedOn = instance;
                        attemptHydrationAtPriority(queuedTarget.priority, function() {
                            attemptHydrationAtCurrentPriority(nearestMounted);
                        });
                        return;
                    }
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) {
                        queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
                        // a root other than sync.
                        return;
                    }
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function queueExplicitHydrationTarget(target) {
        // TODO: This will read the priority if it's dispatched by the React
        // event system but not native events. Should read window.event.type, like
        // we do for updates (getCurrentEventPriority).
        var updatePriority = getCurrentUpdatePriority$1();
        var queuedTarget = {
            blockedOn: null,
            target: target,
            priority: updatePriority
        };
        var i = 0;
        for(; i < queuedExplicitHydrationTargets.length; i++){
            // Stop once we hit the first target with lower priority than
            if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) break;
        }
        queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);
        if (i === 0) attemptExplicitHydrationTarget(queuedTarget);
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (queuedEvent.blockedOn !== null) return false;
        var targetContainers = queuedEvent.targetContainers;
        while(targetContainers.length > 0){
            var targetContainer = targetContainers[0];
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn === null) {
                var nativeEvent = queuedEvent.nativeEvent;
                var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                setReplayingEvent(nativeEventClone);
                nativeEvent.target.dispatchEvent(nativeEventClone);
                resetReplayingEvent();
            } else {
                // We're still blocked. Try again later.
                var _fiber3 = getInstanceFromNode(nextBlockedOn);
                if (_fiber3 !== null) attemptContinuousHydration(_fiber3);
                queuedEvent.blockedOn = nextBlockedOn;
                return false;
            } // This target container was successfully dispatched. Try the next.
            targetContainers.shift();
        }
        return true;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        if (attemptReplayContinuousQueuedEvent(queuedEvent)) map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = false;
        if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) queuedFocus = null;
        if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) queuedDrag = null;
        if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) queuedMouse = null;
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
                hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
                // now unblocked. This first might not actually be unblocked yet.
                // We could check it early to avoid scheduling an unnecessary callback.
                Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
        }
    }
    function retryIfBlockedOn(unblocked) {
        // Mark anything that was blocked on this as no longer blocked
        // and eligible for a replay.
        if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
            // worth it because we expect very few discrete events to queue up and once
            // we are actually fully unblocked it will be fast to replay them.
            for(var i = 1; i < queuedDiscreteEvents.length; i++){
                var queuedEvent = queuedDiscreteEvents[i];
                if (queuedEvent.blockedOn === unblocked) queuedEvent.blockedOn = null;
            }
        }
        if (queuedFocus !== null) scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        if (queuedDrag !== null) scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        if (queuedMouse !== null) scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        var unblock = function(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        };
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++){
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) queuedTarget.blockedOn = null;
        }
        while(queuedExplicitHydrationTargets.length > 0){
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) break;
            else {
                attemptExplicitHydrationTarget(nextExplicitTarget);
                if (nextExplicitTarget.blockedOn === null) // We're unblocked.
                queuedExplicitHydrationTargets.shift();
            }
        }
    }
    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig; // TODO: can we stop exporting these?
    var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
    // We'd like to remove this but it's not clear if this is safe.
    function setEnabled(enabled) {
        _enabled = !!enabled;
    }
    function isEnabled() {
        return _enabled;
    }
    function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
        var eventPriority = getEventPriority(domEventName);
        var listenerWrapper;
        switch(eventPriority){
            case DiscreteEventPriority:
                listenerWrapper = dispatchDiscreteEvent;
                break;
            case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
            case DefaultEventPriority:
            default:
                listenerWrapper = dispatchEvent;
                break;
        }
        return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(DiscreteEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(ContinuousEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (!_enabled) return;
        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
    }
    function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
        if (blockedOn === null) {
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
            clearIfContinuousEvent(domEventName, nativeEvent);
            return;
        }
        if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
            nativeEvent.stopPropagation();
            return;
        } // We need to clear only if we didn't queue because
        // queueing is accumulative.
        clearIfContinuousEvent(domEventName, nativeEvent);
        if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
            while(blockedOn !== null){
                var fiber = getInstanceFromNode(blockedOn);
                if (fiber !== null) attemptSynchronousHydration(fiber);
                var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
                if (nextBlockedOn === null) dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                if (nextBlockedOn === blockedOn) break;
                blockedOn = nextBlockedOn;
            }
            if (blockedOn !== null) nativeEvent.stopPropagation();
            return;
        } // This is not replayable so we'll invoke it but without a target,
        // in case the event system needs to trace it.
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
    }
    var return_targetInst = null; // Returns a SuspenseInstance or Container if it's blocked.
    // The return_targetInst field above is conceptually part of the return value.
    function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // TODO: Warn if _enabled is false.
        return_targetInst = null;
        var nativeEventTarget = getEventTarget(nativeEvent);
        var targetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) // This tree has been unmounted already. Dispatch without a target.
            targetInst = null;
            else {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) // Queue the event to be replayed later. Abort dispatching since we
                    // don't want this event dispatched twice through the event system.
                    // TODO: If this is the first discrete event in the queue. Schedule an increased
                    // priority for this boundary.
                    return instance;
                     // This shouldn't happen, something went wrong but to avoid blocking
                    // the whole system, dispatch the event without a target.
                    // TODO: Warn.
                    targetInst = null;
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) // If this happens during a replay something went wrong and it might block
                    // the whole system.
                    return getContainerFromFiber(nearestMounted);
                    targetInst = null;
                } else if (nearestMounted !== targetInst) // If we get an event (ex: img onload) before committing that
                // component's mount, ignore it for now (that is, treat it as if it was an
                // event on a non-React tree). We might also consider queueing events and
                // dispatching them after the mount.
                targetInst = null;
            }
        }
        return_targetInst = targetInst; // We're not blocked on anything.
        return null;
    }
    function getEventPriority(domEventName) {
        switch(domEventName){
            // Used by SimpleEventPlugin:
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            // eslint-disable-next-line no-fallthrough
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            // eslint-disable-next-line no-fallthrough
            case "beforeblur":
            case "afterblur":
            // eslint-disable-next-line no-fallthrough
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
                return DiscreteEventPriority;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "toggle":
            case "touchmove":
            case "wheel":
            // eslint-disable-next-line no-fallthrough
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
                return ContinuousEventPriority;
            case "message":
                // We might be in the Scheduler callback.
                // Eventually this mechanism will be replaced by a check
                // of the current priority on the native scheduler.
                var schedulerPriority = getCurrentPriorityLevel();
                switch(schedulerPriority){
                    case ImmediatePriority:
                        return DiscreteEventPriority;
                    case UserBlockingPriority:
                        return ContinuousEventPriority;
                    case NormalPriority:
                    case LowPriority:
                        // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
                        return DefaultEventPriority;
                    case IdlePriority:
                        return IdleEventPriority;
                    default:
                        return DefaultEventPriority;
                }
            default:
                return DefaultEventPriority;
        }
    }
    function addEventBubbleListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, false);
        return listener;
    }
    function addEventCaptureListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, true);
        return listener;
    }
    function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            capture: true,
            passive: passive
        });
        return listener;
    }
    function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            passive: passive
        });
        return listener;
    }
    /**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */ var root = null;
    var startText = null;
    var fallbackText = null;
    function initialize(nativeEventTarget) {
        root = nativeEventTarget;
        startText = getText();
        return true;
    }
    function reset() {
        root = null;
        startText = null;
        fallbackText = null;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start;
        var startValue = startText;
        var startLength = startValue.length;
        var end;
        var endValue = getText();
        var endLength = endValue.length;
        for(start = 0; start < startLength; start++){
            if (startValue[start] !== endValue[start]) break;
        }
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd; end++){
            if (startValue[startLength - end] !== endValue[endLength - end]) break;
        }
        var sliceTail = end > 1 ? 1 - end : undefined;
        fallbackText = endValue.slice(start, sliceTail);
        return fallbackText;
    }
    function getText() {
        if ("value" in root) return root.value;
        return root.textContent;
    }
    /**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */ function getEventCharCode(nativeEvent) {
        var charCode;
        var keyCode = nativeEvent.keyCode;
        if ("charCode" in nativeEvent) {
            charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.
            if (charCode === 0 && keyCode === 13) charCode = 13;
        } else // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
         // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
        // report Enter as charCode 10 when ctrl is pressed.
        if (charCode === 10) charCode = 13;
         // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
        // Must not discard the (non-)printable Enter-key.
        if (charCode >= 32 || charCode === 13) return charCode;
        return 0;
    }
    function functionThatReturnsTrue() {
        return true;
    }
    function functionThatReturnsFalse() {
        return false;
    } // This is intentionally a factory so that we have different returned constructors.
    // If we had a single constructor, it would be megamorphic and engines would deopt.
    function createSyntheticEvent(Interface) {
        /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */ function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var _propName in Interface){
                if (!Interface.hasOwnProperty(_propName)) continue;
                var normalize = Interface[_propName];
                if (normalize) this[_propName] = normalize(nativeEvent);
                else this[_propName] = nativeEvent[_propName];
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) this.isDefaultPrevented = functionThatReturnsTrue;
            else this.isDefaultPrevented = functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) return;
                if (event.preventDefault) event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.returnValue !== "unknown") event.returnValue = false;
                this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) return;
                if (event.stopPropagation) event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.cancelBubble !== "unknown") // The ChangeEventPlugin registers a "propertychange" event for
                // IE. This event does not support bubbling or cancelling, and
                // any references to cancelBubble throw "Member not found".  A
                // typeof check of "unknown" circumvents this issue (and is also
                // IE specific).
                event.cancelBubble = true;
                this.isPropagationStopped = functionThatReturnsTrue;
            },
            /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */ persist: function() {},
            /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */ isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    };
    var SyntheticEvent = createSyntheticEvent(EventInterface);
    var UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
    });
    var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
    var lastMovementX;
    var lastMovementY;
    var lastMouseEvent;
    function updateMouseMovementPolyfillState(event) {
        if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === "mousemove") {
                lastMovementX = event.screenX - lastMouseEvent.screenX;
                lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
                lastMovementX = 0;
                lastMovementY = 0;
            }
            lastMouseEvent = event;
        }
    }
    /**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
        },
        movementX: function(event) {
            if ("movementX" in event) return event.movementX;
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
        },
        movementY: function(event) {
            if ("movementY" in event) return event.movementY;
             // Don't need to call updateMouseMovementPolyfillState() here
            // because it's guaranteed to have already run when movementX
            // was copied.
            return lastMovementY;
        }
    });
    var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
    /**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
    });
    var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
    /**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
    });
    var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */ var AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */ var ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
        }
    });
    var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */ var CompositionEventInterface = assign({}, EventInterface, {
        data: 0
    });
    var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */ // Happens to share the same list for now.
    var SyntheticInputEvent = SyntheticCompositionEvent;
    /**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var normalizeKey = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
    };
    /**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var translateToKey = {
        "8": "Backspace",
        "9": "Tab",
        "12": "Clear",
        "13": "Enter",
        "16": "Shift",
        "17": "Control",
        "18": "Alt",
        "19": "Pause",
        "20": "CapsLock",
        "27": "Escape",
        "32": " ",
        "33": "PageUp",
        "34": "PageDown",
        "35": "End",
        "36": "Home",
        "37": "ArrowLeft",
        "38": "ArrowUp",
        "39": "ArrowRight",
        "40": "ArrowDown",
        "45": "Insert",
        "46": "Delete",
        "112": "F1",
        "113": "F2",
        "114": "F3",
        "115": "F4",
        "116": "F5",
        "117": "F6",
        "118": "F7",
        "119": "F8",
        "120": "F9",
        "121": "F10",
        "122": "F11",
        "123": "F12",
        "144": "NumLock",
        "145": "ScrollLock",
        "224": "Meta"
    };
    /**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */ function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
            // Normalize inconsistent values reported by browsers due to
            // implementations of a working draft specification.
            // FireFox implements `key` but returns `MozPrintableKey` for all
            // printable characters (normalized to `Unidentified`), ignore it.
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== "Unidentified") return key;
        } // Browser does not implement `key`, polyfill as much of it as we can.
        if (nativeEvent.type === "keypress") {
            var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
            // thus be captured by `keypress`, no other non-printable key should.
            return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
        }
        if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || "Unidentified";
        return "";
    }
    /**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */ var modifierKeyToProp = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.
    function modifierStateGetter(keyArg) {
        var syntheticEvent = this;
        var nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState) return nativeEvent.getModifierState(keyArg);
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : false;
    }
    function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
    }
    /**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var KeyboardEventInterface = assign({}, UIEventInterface, {
        key: getEventKey,
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function(event) {
            // `charCode` is the result of a KeyPress event and represents the value of
            // the actual printable character.
            // KeyPress is deprecated, but its replacement is not yet final and not
            // implemented in any major browser. Only KeyPress has charCode.
            if (event.type === "keypress") return getEventCharCode(event);
            return 0;
        },
        keyCode: function(event) {
            // `keyCode` is the result of a KeyDown/Up event and represents the value of
            // physical keyboard key.
            // The actual meaning of the value depends on the users' keyboard layout
            // which cannot be detected. Assuming that it is a US keyboard layout
            // provides a surprisingly accurate mapping for US and European users.
            // Due to this, it is left to the user to implement at this time.
            if (event.type === "keydown" || event.type === "keyup") return event.keyCode;
            return 0;
        },
        which: function(event) {
            // `which` is an alias for either `keyCode` or `charCode` depending on the
            // type of the event.
            if (event.type === "keypress") return getEventCharCode(event);
            if (event.type === "keydown" || event.type === "keyup") return event.keyCode;
            return 0;
        }
    });
    var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
    /**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */ var PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    });
    var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
    /**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */ var TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    });
    var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */ var TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
    /**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: 0
    });
    var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
    var END_KEYCODES = [
        9,
        13,
        27,
        32
    ]; // Tab, Return, Esc, Space
    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && "CompositionEvent" in window;
    var documentMode = null;
    if (canUseDOM && "documentMode" in document) documentMode = document.documentMode;
     // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.
    var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.
    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
    function registerEvents() {
        registerTwoPhaseEvent("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste"
        ]);
        registerTwoPhaseEvent("onCompositionEnd", [
            "compositionend",
            "focusout",
            "keydown",
            "keypress",
            "keyup",
            "mousedown"
        ]);
        registerTwoPhaseEvent("onCompositionStart", [
            "compositionstart",
            "focusout",
            "keydown",
            "keypress",
            "keyup",
            "mousedown"
        ]);
        registerTwoPhaseEvent("onCompositionUpdate", [
            "compositionupdate",
            "focusout",
            "keydown",
            "keypress",
            "keyup",
            "mousedown"
        ]);
    } // Track whether we've ever handled a keypress on the space key.
    var hasSpaceKeypress = false;
    /**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */ function isKeypressCommand(nativeEvent) {
        return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
        !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
 * Translate native top level events into event types.
 */ function getCompositionEventType(domEventName) {
        switch(domEventName){
            case "compositionstart":
                return "onCompositionStart";
            case "compositionend":
                return "onCompositionEnd";
            case "compositionupdate":
                return "onCompositionUpdate";
        }
    }
    /**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */ function isFallbackCompositionStart(domEventName, nativeEvent) {
        return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
 * Does our fallback mode think that this event is the end of composition?
 */ function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case "keyup":
                // Command keys insert or clear IME input.
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case "keydown":
                // Expect IME keyCode on each keydown. If we get any other
                // code we must have exited earlier.
                return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
                // Events are not possible without cancelling IME.
                return true;
            default:
                return false;
        }
    }
    /**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */ function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        if (typeof detail === "object" && "data" in detail) return detail.data;
        return null;
    }
    /**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */ function isUsingKoreanIME(nativeEvent) {
        return nativeEvent.locale === "ko";
    } // Track the current IME composition status, if any.
    var isComposing = false;
    /**
 * @return {?object} A SyntheticCompositionEvent.
 */ function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var eventType;
        var fallbackData;
        if (canUseCompositionEvent) eventType = getCompositionEventType(domEventName);
        else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) eventType = "onCompositionStart";
        } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) eventType = "onCompositionEnd";
        if (!eventType) return null;
        if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            // The current composition is stored statically and must not be
            // overwritten while composition continues.
            if (!isComposing && eventType === "onCompositionStart") isComposing = initialize(nativeEventTarget);
            else if (eventType === "onCompositionEnd") {
                if (isComposing) fallbackData = getData();
            }
        }
        var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
        if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            if (fallbackData) // Inject data generated from fallback path into the synthetic event.
            // This matches the property of native CompositionEventInterface.
            event.data = fallbackData;
            else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) event.data = customData;
            }
        }
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case "compositionend":
                return getDataFromCustomEvent(nativeEvent);
            case "keypress":
                /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */ var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;
            case "textInput":
                // Record the characters to be added to the DOM.
                var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
                // it at the keypress level and bail immediately. Android Chrome
                // doesn't give us keycodes, so we need to ignore it.
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) return null;
                return chars;
            default:
                // For other native event types, do nothing.
                return null;
        }
    }
    /**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */ function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        // If we are currently composing (IME) and using a fallback to do so,
        // try to extract the composed characters from the fallback object.
        // If composition event is available, we extract a string only at
        // compositionevent, otherwise extract it at fallback events.
        if (isComposing) {
            if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
            }
            return null;
        }
        switch(domEventName){
            case "paste":
                // If a paste event occurs after a keypress, throw out the input
                // chars. Paste events should not lead to BeforeInput events.
                return null;
            case "keypress":
                /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */ if (!isKeypressCommand(nativeEvent)) {
                    // IE fires the `keypress` event when a user types an emoji via
                    // Touch keyboard of Windows.  In such a case, the `char` property
                    // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                    // is 2, the property `which` does not represent an emoji correctly.
                    // In such a case, we directly return the `char` property instead of
                    // using `which`.
                    if (nativeEvent.char && nativeEvent.char.length > 1) return nativeEvent.char;
                    else if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case "compositionend":
                return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    /**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */ function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var chars;
        if (canUseTextInputEvent) chars = getNativeBeforeInputChars(domEventName, nativeEvent);
        else chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
         // If no characters are being inserted, no BeforeInput event should
        // be fired.
        if (!chars) return null;
        var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
        if (listeners.length > 0) {
            var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            event.data = chars;
        }
    }
    /**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */ function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    }
    /**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */ var supportedInputTypes = {
        color: true,
        date: true,
        datetime: true,
        "datetime-local": true,
        email: true,
        month: true,
        number: true,
        password: true,
        range: true,
        search: true,
        tel: true,
        text: true,
        time: true,
        url: true,
        week: true
    };
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        if (nodeName === "input") return !!supportedInputTypes[elem.type];
        if (nodeName === "textarea") return true;
        return false;
    }
    /**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */ function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return false;
        var eventName = "on" + eventNameSuffix;
        var isSupported = eventName in document;
        if (!isSupported) {
            var element = document.createElement("div");
            element.setAttribute(eventName, "return;");
            isSupported = typeof element[eventName] === "function";
        }
        return isSupported;
    }
    function registerEvents$1() {
        registerTwoPhaseEvent("onChange", [
            "change",
            "click",
            "focusin",
            "focusout",
            "input",
            "keydown",
            "keyup",
            "selectionchange"
        ]);
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        // Flag this event loop as needing state restore.
        enqueueStateRestore(target);
        var listeners = accumulateTwoPhaseListeners(inst, "onChange");
        if (listeners.length > 0) {
            var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
        }
    }
    /**
 * For IE shims
 */ var activeElement = null;
    var activeElementInst = null;
    /**
 * SECTION: handle `change` event
 */ function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === "select" || nodeName === "input" && elem.type === "file";
    }
    function manualDispatchChangeEvent(nativeEvent) {
        var dispatchQueue = [];
        createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
        // other events and have it go through ReactBrowserEventEmitter. Since it
        // doesn't, we manually listen for the events and so we have to enqueue and
        // process the abstract event manually.
        //
        // Batching is necessary here in order to ensure that all event handlers run
        // before the next rerender (including event handlers attached to ancestor
        // elements instead of directly on the input). Without this, controlled
        // components don't work properly in conjunction with event bubbling because
        // the component is rerendered and the value reverted before all the event
        // handlers can run. See https://github.com/facebook/react/issues/708.
        batchedUpdates(runEventInBatch, dispatchQueue);
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if (domEventName === "change") return targetInst;
    }
    /**
 * SECTION: handle `input` event
 */ var isInputEventSupported = false;
    if (canUseDOM) // IE9 claims to support the input event but fails to trigger it when
    // deleting text, so we ignore its input events.
    isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
    /**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */ function startWatchingForValueChange(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElement.attachEvent("onpropertychange", handlePropertyChange);
    }
    /**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */ function stopWatchingForValueChange() {
        if (!activeElement) return;
        activeElement.detachEvent("onpropertychange", handlePropertyChange);
        activeElement = null;
        activeElementInst = null;
    }
    /**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */ function handlePropertyChange(nativeEvent) {
        if (nativeEvent.propertyName !== "value") return;
        if (getInstIfValueChanged(activeElementInst)) manualDispatchChangeEvent(nativeEvent);
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        if (domEventName === "focusin") {
            // In IE9, propertychange fires for most input events but is buggy and
            // doesn't fire when text is deleted, but conveniently, selectionchange
            // appears to fire in all of the remaining cases so we catch those and
            // forward the event if the value has changed
            // In either case, we don't want to call the event handler if the value
            // is changed from JS so we redefine a setter for `.value` that updates
            // our activeElementValue variable, allowing us to ignore those changes
            //
            // stopWatching() should be a noop here but we call it just in case we
            // missed a blur event somehow.
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
        } else if (domEventName === "focusout") stopWatchingForValueChange();
    } // For IE8 and IE9.
    function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
        if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
    }
    /**
 * SECTION: handle `click` event
 */ function shouldUseClickEvent(elem) {
        // Use the `click` event to detect changes to checkbox and radio inputs.
        // This approach works across all browsers, whereas `change` does not fire
        // until `blur` in IE8.
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if (domEventName === "click") return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if (domEventName === "input" || domEventName === "change") return getInstIfValueChanged(targetInst);
    }
    function handleControlledInputBlur(node) {
        var state = node._wrapperState;
        if (!state || !state.controlled || node.type !== "number") return;
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, "number", node.value);
    }
    /**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */ function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) getTargetInstFunc = getTargetInstForChangeEvent;
        else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
            }
        } else if (shouldUseClickEvent(targetNode)) getTargetInstFunc = getTargetInstForClickEvent;
        if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
                createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                return;
            }
        }
        if (handleEventFunc) handleEventFunc(domEventName, targetNode, targetInst);
         // When blurring, set the value attribute for number inputs
        if (domEventName === "focusout") handleControlledInputBlur(targetNode);
    }
    function registerEvents$2() {
        registerDirectEvent("onMouseEnter", [
            "mouseout",
            "mouseover"
        ]);
        registerDirectEvent("onMouseLeave", [
            "mouseout",
            "mouseover"
        ]);
        registerDirectEvent("onPointerEnter", [
            "pointerout",
            "pointerover"
        ]);
        registerDirectEvent("onPointerLeave", [
            "pointerout",
            "pointerover"
        ]);
    }
    /**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */ function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
        var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
        if (isOverEvent && !isReplayingEvent(nativeEvent)) {
            // If this is an over event with a target, we might have already dispatched
            // the event in the out event of the other target. If this is replayed,
            // then it's because we couldn't dispatch against this target previously
            // so we have to do it now instead.
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
                // If the related node is managed by React, we can assume that we have
                // already dispatched the corresponding events during its mouseout.
                if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) return;
            }
        }
        if (!isOutEvent && !isOverEvent) // Must not be a mouse or pointer in or out - ignoring.
        return;
        var win; // TODO: why is this nullable in the types but we read from it?
        if (nativeEventTarget.window === nativeEventTarget) // `nativeEventTarget` is probably a window object.
        win = nativeEventTarget;
        else {
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            var doc = nativeEventTarget.ownerDocument;
            if (doc) win = doc.defaultView || doc.parentWindow;
            else win = window;
        }
        var from;
        var to;
        if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
                var nearestMounted = getNearestMountedFiber(to);
                if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) to = null;
            }
        } else {
            // Moving to a node from outside the window.
            from = null;
            to = targetInst;
        }
        if (from === to) // Nothing pertains to our managed components.
        return;
        var SyntheticEventCtor = SyntheticMouseEvent;
        var leaveEventType = "onMouseLeave";
        var enterEventType = "onMouseEnter";
        var eventTypePrefix = "mouse";
        if (domEventName === "pointerout" || domEventName === "pointerover") {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = "onPointerLeave";
            enterEventType = "onPointerEnter";
            eventTypePrefix = "pointer";
        }
        var fromNode = from == null ? win : getNodeFromInstance(from);
        var toNode = to == null ? win : getNodeFromInstance(to);
        var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = null; // We should only process this nativeEvent if we are processing
        // the first ancestor. Next time, we will ignore the event.
        var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
        }
        accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
    }
    /**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */ function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
        ;
    }
    var objectIs = typeof Object.is === "function" ? Object.is : is;
    /**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */ function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return true;
        if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) return false;
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return false;
         // Test for A's keys different from B.
        for(var i = 0; i < keysA.length; i++){
            var currentKey = keysA[i];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return false;
        }
        return true;
    }
    /**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */ function getLeafNode(node) {
        while(node && node.firstChild)node = node.firstChild;
        return node;
    }
    /**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */ function getSiblingNode(node) {
        while(node){
            if (node.nextSibling) return node.nextSibling;
            node = node.parentNode;
        }
    }
    /**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */ function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        var nodeStart = 0;
        var nodeEnd = 0;
        while(node){
            if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;
                if (nodeStart <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - nodeStart
                };
                nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
        }
    }
    /**
 * @param {DOMElement} outerNode
 * @return {?object}
 */ function getOffsets(outerNode) {
        var ownerDocument = outerNode.ownerDocument;
        var win = ownerDocument && ownerDocument.defaultView || window;
        var selection = win.getSelection && win.getSelection();
        if (!selection || selection.rangeCount === 0) return null;
        var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
        // up/down buttons on an <input type="number">. Anonymous divs do not seem to
        // expose properties, triggering a "Permission denied error" if any of its
        // properties are accessed. The only seemingly possible way to avoid erroring
        // is to access a property that typically works for non-anonymous divs and
        // catch any error that may otherwise arise. See
        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
        try {
            /* eslint-disable no-unused-expressions */ anchorNode.nodeType;
            focusNode.nodeType;
        /* eslint-enable no-unused-expressions */ } catch (e) {
            return null;
        }
        return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */ function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
        var length = 0;
        var start = -1;
        var end = -1;
        var indexWithinAnchor = 0;
        var indexWithinFocus = 0;
        var node = outerNode;
        var parentNode = null;
        outer: while(true){
            var next = null;
            while(true){
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) start = length + anchorOffset;
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) end = length + focusOffset;
                if (node.nodeType === TEXT_NODE) length += node.nodeValue.length;
                if ((next = node.firstChild) === null) break;
                 // Moving from `node` to its first child `next`.
                parentNode = node;
                node = next;
            }
            while(true){
                if (node === outerNode) break outer;
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) start = length;
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) end = length;
                if ((next = node.nextSibling) !== null) break;
                node = parentNode;
                parentNode = node.parentNode;
            } // Moving from `node` to its next sibling `next`.
            node = next;
        }
        if (start === -1 || end === -1) // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
        return {
            start: start,
            end: end
        };
    }
    /**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */ function setOffsets(node, offsets) {
        var doc = node.ownerDocument || document;
        var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
        // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
        // fails when pasting 100+ items)
        if (!win.getSelection) return;
        var selection = win.getSelection();
        var length = node.textContent.length;
        var start = Math.min(offsets.start, length);
        var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
        // Flip backward selections, so we can set with a single range.
        if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
        }
        var startMarker = getNodeForCharacterOffset(node, start);
        var endMarker = getNodeForCharacterOffset(node, end);
        if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) return;
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
            } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
            }
        }
    }
    function isTextNode(node) {
        return node && node.nodeType === TEXT_NODE;
    }
    function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) return false;
        else if (outerNode === innerNode) return true;
        else if (isTextNode(outerNode)) return false;
        else if (isTextNode(innerNode)) return containsNode(outerNode, innerNode.parentNode);
        else if ("contains" in outerNode) return outerNode.contains(innerNode);
        else if (outerNode.compareDocumentPosition) return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        else return false;
    }
    function isInDocument(node) {
        return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }
    function isSameOriginFrame(iframe) {
        try {
            // Accessing the contentDocument of a HTMLIframeElement can cause the browser
            // to throw, e.g. if it has a cross-origin src attribute.
            // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
            // iframe.contentDocument.defaultView;
            // A safety way is to access one of the cross origin properties: Window or Location
            // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
            // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
            return typeof iframe.contentWindow.location.href === "string";
        } catch (err) {
            return false;
        }
    }
    function getActiveElementDeep() {
        var win = window;
        var element = getActiveElement();
        while(element instanceof win.HTMLIFrameElement){
            if (isSameOriginFrame(element)) win = element.contentWindow;
            else return element;
            element = getActiveElement(win.document);
        }
        return element;
    }
    /**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */ /**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */ function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
    }
    function getSelectionInformation() {
        var focusedElem = getActiveElementDeep();
        return {
            focusedElem: focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
        };
    }
    /**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */ function restoreSelection(priorSelectionInformation) {
        var curFocusedElem = getActiveElementDeep();
        var priorFocusedElem = priorSelectionInformation.focusedElem;
        var priorSelectionRange = priorSelectionInformation.selectionRange;
        if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) setSelection(priorFocusedElem, priorSelectionRange);
             // Focusing a node can change the scroll position, which is undesirable
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while(ancestor = ancestor.parentNode)if (ancestor.nodeType === ELEMENT_NODE) ancestors.push({
                element: ancestor,
                left: ancestor.scrollLeft,
                top: ancestor.scrollTop
            });
            if (typeof priorFocusedElem.focus === "function") priorFocusedElem.focus();
            for(var i = 0; i < ancestors.length; i++){
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
            }
        }
    }
    /**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */ function getSelection(input) {
        var selection;
        if ("selectionStart" in input) // Modern browser with input or textarea.
        selection = {
            start: input.selectionStart,
            end: input.selectionEnd
        };
        else // Content editable or old IE textarea.
        selection = getOffsets(input);
        return selection || {
            start: 0,
            end: 0
        };
    }
    /**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */ function setSelection(input, offsets) {
        var start = offsets.start;
        var end = offsets.end;
        if (end === undefined) end = start;
        if ("selectionStart" in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
        } else setOffsets(input, offsets);
    }
    var skipSelectionChangeEvent = canUseDOM && "documentMode" in document && document.documentMode <= 11;
    function registerEvents$3() {
        registerTwoPhaseEvent("onSelect", [
            "focusout",
            "contextmenu",
            "dragend",
            "focusin",
            "keydown",
            "keyup",
            "mousedown",
            "mouseup",
            "selectionchange"
        ]);
    }
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */ function getSelection$1(node) {
        if ("selectionStart" in node && hasSelectionCapabilities(node)) return {
            start: node.selectionStart,
            end: node.selectionEnd
        };
        else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
            };
        }
    }
    /**
 * Get document associated with the event target.
 */ function getEventTargetDocument(eventTarget) {
        return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */ function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        // Ensure we have the right element, and that the user is not dragging a
        // selection (this matches native `select` event behavior). In HTML5, select
        // fires only on input and textarea thus if there's no focused element we
        // won't dispatch.
        var doc = getEventTargetDocument(nativeEventTarget);
        if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) return;
         // Only fire when selection has actually changed.
        var currentSelection = getSelection$1(activeElement$1);
        if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
            if (listeners.length > 0) {
                var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                    event: event,
                    listeners: listeners
                });
                event.target = activeElement$1;
            }
        }
    }
    /**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */ function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        switch(domEventName){
            // Track the input node that has focus.
            case "focusin":
                if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                    activeElement$1 = targetNode;
                    activeElementInst$1 = targetInst;
                    lastSelection = null;
                }
                break;
            case "focusout":
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
            // Don't fire the event while the user is dragging. This matches the
            // semantics of the native select event.
            case "mousedown":
                mouseDown = true;
                break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
                mouseDown = false;
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                break;
            // Chrome and IE fire non-standard event when selection is changed (and
            // sometimes when it hasn't). IE's event fires out of order with respect
            // to key and input events on deletion, so we discard it.
            //
            // Firefox doesn't support selectionchange, so check selection status
            // after each key entry. The selection changes after keydown and before
            // keyup, but we check on keydown as well in the case of holding down a
            // key, when multiple keydown events are fired but only one keyup is.
            // This is also our approach for IE handling, for the reason above.
            case "selectionchange":
                if (skipSelectionChangeEvent) break;
            // falls through
            case "keydown":
            case "keyup":
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
        }
    }
    /**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */ function makePrefixMap(styleProp, eventName) {
        var prefixes = {};
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes["Webkit" + styleProp] = "webkit" + eventName;
        prefixes["Moz" + styleProp] = "moz" + eventName;
        return prefixes;
    }
    /**
 * A list of event names to a configurable list of vendor prefixes.
 */ var vendorPrefixes = {
        animationend: makePrefixMap("Animation", "AnimationEnd"),
        animationiteration: makePrefixMap("Animation", "AnimationIteration"),
        animationstart: makePrefixMap("Animation", "AnimationStart"),
        transitionend: makePrefixMap("Transition", "TransitionEnd")
    };
    /**
 * Event names that have already been detected and prefixed (if applicable).
 */ var prefixedEventNames = {};
    /**
 * Element to check for prefixes on.
 */ var style = {};
    /**
 * Bootstrap if a DOM exists.
 */ if (canUseDOM) {
        style = document.createElement("div").style; // On some platforms, in particular some releases of Android 4.x,
        // the un-prefixed "animation" and "transition" properties are defined on the
        // style object but the events that fire will still be prefixed, so we need
        // to check if the un-prefixed events are usable, and if not remove them from the map.
        if (!("AnimationEvent" in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
        } // Same as above
        if (!("TransitionEvent" in window)) delete vendorPrefixes.transitionend.transition;
    }
    /**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */ function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        else if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName];
        for(var styleProp in prefixMap){
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
        return eventName;
    }
    var ANIMATION_END = getVendorPrefixedEventName("animationend");
    var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
    var ANIMATION_START = getVendorPrefixedEventName("animationstart");
    var TRANSITION_END = getVendorPrefixedEventName("transitionend");
    var topLevelEventsToReactNames = new Map(); // NOTE: Capitalization is important in this list!
    //
    // E.g. it needs "pointerDown", not "pointerdown".
    // This is because we derive both React name ("onPointerDown")
    // and DOM name ("pointerdown") from the same list.
    //
    // Exceptions that don't match this convention are listed separately.
    //
    // prettier-ignore
    var simpleEventPluginEvents = [
        "abort",
        "auxClick",
        "cancel",
        "canPlay",
        "canPlayThrough",
        "click",
        "close",
        "contextMenu",
        "copy",
        "cut",
        "drag",
        "dragEnd",
        "dragEnter",
        "dragExit",
        "dragLeave",
        "dragOver",
        "dragStart",
        "drop",
        "durationChange",
        "emptied",
        "encrypted",
        "ended",
        "error",
        "gotPointerCapture",
        "input",
        "invalid",
        "keyDown",
        "keyPress",
        "keyUp",
        "load",
        "loadedData",
        "loadedMetadata",
        "loadStart",
        "lostPointerCapture",
        "mouseDown",
        "mouseMove",
        "mouseOut",
        "mouseOver",
        "mouseUp",
        "paste",
        "pause",
        "play",
        "playing",
        "pointerCancel",
        "pointerDown",
        "pointerMove",
        "pointerOut",
        "pointerOver",
        "pointerUp",
        "progress",
        "rateChange",
        "reset",
        "resize",
        "seeked",
        "seeking",
        "stalled",
        "submit",
        "suspend",
        "timeUpdate",
        "touchCancel",
        "touchEnd",
        "touchStart",
        "volumeChange",
        "scroll",
        "toggle",
        "touchMove",
        "waiting",
        "wheel"
    ];
    function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName);
        registerTwoPhaseEvent(reactName, [
            domEventName
        ]);
    }
    function registerSimpleEvents() {
        for(var i = 0; i < simpleEventPluginEvents.length; i++){
            var eventName = simpleEventPluginEvents[i];
            var domEventName = eventName.toLowerCase();
            var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, "on" + capitalizedEvent);
        } // Special cases where event names don't match.
        registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
        registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
        registerSimpleEvent(ANIMATION_START, "onAnimationStart");
        registerSimpleEvent("dblclick", "onDoubleClick");
        registerSimpleEvent("focusin", "onFocus");
        registerSimpleEvent("focusout", "onBlur");
        registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
    }
    function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var reactName = topLevelEventsToReactNames.get(domEventName);
        if (reactName === undefined) return;
        var SyntheticEventCtor = SyntheticEvent;
        var reactEventType = domEventName;
        switch(domEventName){
            case "keypress":
                // Firefox creates a keypress event for function keys too. This removes
                // the unwanted keypress events. Enter is however both printable and
                // non-printable. One would expect Tab to be as well (but it isn't).
                if (getEventCharCode(nativeEvent) === 0) return;
            /* falls through */ case "keydown":
            case "keyup":
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
            case "focusin":
                reactEventType = "focus";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case "focusout":
                reactEventType = "blur";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case "beforeblur":
            case "afterblur":
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case "click":
                // Firefox creates a click event on right mouse clicks. This removes the
                // unwanted click events.
                if (nativeEvent.button === 2) return;
            /* falls through */ case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            /* falls through */ case "mouseout":
            case "mouseover":
            case "contextmenu":
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
                SyntheticEventCtor = SyntheticDragEvent;
                break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
            case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
            case "scroll":
                SyntheticEventCtor = SyntheticUIEvent;
                break;
            case "wheel":
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
            case "copy":
            case "cut":
            case "paste":
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
        }
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        // Some events don't bubble in the browser.
        // In the past, React has always bubbled them, but this can be surprising.
        // We're going to try aligning closer to the browser behavior by not bubbling
        // them in React either. We'll start by not bubbling onScroll, and then expand.
        var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
        // nonDelegatedEvents list in DOMPluginEventSystem.
        // Then we can remove this special list.
        // This is a breaking change that can wait until React 18.
        domEventName === "scroll";
        var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
        if (_listeners.length > 0) {
            // Intentionally create event lazily.
            var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: _event,
                listeners: _listeners
            });
        }
    }
    // TODO: remove top-level side effect.
    registerSimpleEvents();
    registerEvents$2();
    registerEvents$1();
    registerEvents$3();
    registerEvents();
    function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        // TODO: we should remove the concept of a "SimpleEventPlugin".
        // This is the basic functionality of the event system. All
        // the other plugins are essentially polyfills. So the plugin
        // should probably be inlined somewhere and have its logic
        // be core the to event system. This would potentially allow
        // us to ship builds of React without the polyfilled plugins below.
        extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
        // event's native "bubble" phase, which means that we're
        // not in the capture phase. That's because we emulate
        // the capture phase here still. This is a trade-off,
        // because in an ideal world we would not emulate and use
        // the phases properly, like we do with the SimpleEvent
        // plugin. However, the plugins below either expect
        // emulation (EnterLeave) or use state localized to that
        // plugin (BeforeInput, Change, Select). The state in
        // these modules complicates things, as you'll essentially
        // get the case where the capture phase event might change
        // state, only for the following bubble event to come in
        // later and not trigger anything as the state now
        // invalidates the heuristics of the event plugin. We
        // could alter all these plugins to work in such ways, but
        // that might cause other unknown side-effects that we
        // can't foresee right now.
        if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
    } // List of events that need to be individually attached to media elements.
    var mediaEventTypes = [
        "abort",
        "canplay",
        "canplaythrough",
        "durationchange",
        "emptied",
        "encrypted",
        "ended",
        "error",
        "loadeddata",
        "loadedmetadata",
        "loadstart",
        "pause",
        "play",
        "playing",
        "progress",
        "ratechange",
        "resize",
        "seeked",
        "seeking",
        "stalled",
        "suspend",
        "timeupdate",
        "volumechange",
        "waiting"
    ]; // We should not delegate these events to the container, but rather
    // set them on the actual target element itself. This is primarily
    // because these events do not consistently bubble in the DOM.
    var nonDelegatedEvents = new Set([
        "cancel",
        "close",
        "invalid",
        "load",
        "scroll",
        "toggle"
    ].concat(mediaEventTypes));
    function executeDispatch(event, listener, currentTarget) {
        var type = event.type || "unknown-event";
        event.currentTarget = currentTarget;
        invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
        event.currentTarget = null;
    }
    function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
        var previousInstance;
        if (inCapturePhase) for(var i = dispatchListeners.length - 1; i >= 0; i--){
            var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
            if (instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, listener, currentTarget);
            previousInstance = instance;
        }
        else for(var _i = 0; _i < dispatchListeners.length; _i++){
            var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
            if (_instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, _listener, _currentTarget);
            previousInstance = _instance;
        }
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
        } // This would be a good time to rethrow if any of the event handlers threw.
        rethrowCaughtError();
    }
    function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var nativeEventTarget = getEventTarget(nativeEvent);
        var dispatchQueue = [];
        extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        processDispatchQueue(dispatchQueue, eventSystemFlags);
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        if (!nonDelegatedEvents.has(domEventName)) error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var isCapturePhaseListener = false;
        var listenerSet = getEventListenerSet(targetElement);
        var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
        if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
        }
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        if (isCapturePhaseListener) eventSystemFlags |= IS_CAPTURE_PHASE;
        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    } // This is only used by createEventHandle when the
    var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
    function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
                // We handle selectionchange separately because it
                // doesn't bubble and needs to be on the document.
                if (domEventName !== "selectionchange") {
                    if (!nonDelegatedEvents.has(domEventName)) listenToNativeEvent(domEventName, false, rootContainerElement);
                    listenToNativeEvent(domEventName, true, rootContainerElement);
                }
            });
            var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
            if (ownerDocument !== null) // The selectionchange event also needs deduplication
            // but it is attached to the document.
            {
                if (!ownerDocument[listeningMarker]) {
                    ownerDocument[listeningMarker] = true;
                    listenToNativeEvent("selectionchange", false, ownerDocument);
                }
            }
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
        var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
        // active and not passive.
        var isPassiveListener = undefined;
        if (passiveBrowserEventsSupported) // Browsers introduced an intervention, making these events
        // passive by default on document. React doesn't bind them
        // to document anymore, but changing this now would undo
        // the performance wins from the change. So we emulate
        // the existing behavior manually on the roots now.
        // https://github.com/facebook/react/issues/19651
        {
            if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") isPassiveListener = true;
        }
        targetContainer;
        var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we
        if (isCapturePhaseListener) {
            if (isPassiveListener !== undefined) unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            else unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
        } else if (isPassiveListener !== undefined) unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
        else unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
    function isMatchingRootContainer(grandContainer, targetContainer) {
        return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var ancestorInst = targetInst;
        if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we
            if (targetInst !== null) {
                // The below logic attempts to work out if we need to change
                // the target fiber to a different ancestor. We had similar logic
                // in the legacy event system, except the big difference between
                // systems is that the modern event system now has an event listener
                // attached to each React Root and React Portal Root. Together,
                // the DOM nodes representing these roots are the "rootContainer".
                // To figure out which ancestor instance we should use, we traverse
                // up the fiber tree from the target instance and attempt to find
                // root boundaries that match that of our current "rootContainer".
                // If we find that "rootContainer", we find the parent fiber
                // sub-tree for that root and make that our ancestor instance.
                var node = targetInst;
                mainLoop: while(true){
                    if (node === null) return;
                    var nodeTag = node.tag;
                    if (nodeTag === HostRoot || nodeTag === HostPortal) {
                        var container = node.stateNode.containerInfo;
                        if (isMatchingRootContainer(container, targetContainerNode)) break;
                        if (nodeTag === HostPortal) {
                            // The target is a portal, but it's not the rootContainer we're looking for.
                            // Normally portals handle their own events all the way down to the root.
                            // So we should be able to stop now. However, we don't know if this portal
                            // was part of *our* root.
                            var grandNode = node.return;
                            while(grandNode !== null){
                                var grandTag = grandNode.tag;
                                if (grandTag === HostRoot || grandTag === HostPortal) {
                                    var grandContainer = grandNode.stateNode.containerInfo;
                                    if (isMatchingRootContainer(grandContainer, targetContainerNode)) // This is the rootContainer we're looking for and we found it as
                                    // a parent of the Portal. That means we can ignore it because the
                                    // Portal will bubble through to us.
                                    return;
                                }
                                grandNode = grandNode.return;
                            }
                        } // Now we need to find it's corresponding host fiber in the other
                        // tree. To do this we can use getClosestInstanceFromNode, but we
                        // need to validate that the fiber is a host instance, otherwise
                        // we need to traverse up through the DOM till we find the correct
                        // node that is from the other tree.
                        while(container !== null){
                            var parentNode = getClosestInstanceFromNode(container);
                            if (parentNode === null) return;
                            var parentTag = parentNode.tag;
                            if (parentTag === HostComponent || parentTag === HostText) {
                                node = ancestorInst = parentNode;
                                continue mainLoop;
                            }
                            container = container.parentNode;
                        }
                    }
                    node = node.return;
                }
            }
        }
        batchedUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
        var captureName = reactName !== null ? reactName + "Capture" : null;
        var reactEventName = inCapturePhase ? captureName : reactName;
        var listeners = [];
        var instance = targetFiber;
        var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                lastHostComponent = stateNode; // createEventHandle listeners
                if (reactEventName !== null) {
                    var listener = getListener(instance, reactEventName);
                    if (listener != null) listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
            } // If we are only accumulating events for the target, then we don't
            // continue to propagate through the React fiber tree to find other
            // listeners.
            if (accumulateTargetOnly) break;
             // If we are processing the onBeforeBlur event, then we need to take
            instance = instance.return;
        }
        return listeners;
    } // We should only use this function for:
    // - BeforeInputEventPlugin
    // - ChangeEventPlugin
    // - SelectEventPlugin
    // This is because we only process these plugins
    // in the bubble phase, so we need to accumulate two
    // phase event listeners (via emulation).
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        var captureName = reactName + "Capture";
        var listeners = [];
        var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                var captureListener = getListener(instance, captureName);
                if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                var bubbleListener = getListener(instance, reactName);
                if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
            }
            instance = instance.return;
        }
        return listeners;
    }
    function getParent(inst) {
        if (inst === null) return null;
        do inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        while (inst && inst.tag !== HostComponent);
        if (inst) return inst;
        return null;
    }
    /**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */ function getLowestCommonAncestor(instA, instB) {
        var nodeA = instA;
        var nodeB = instB;
        var depthA = 0;
        for(var tempA = nodeA; tempA; tempA = getParent(tempA))depthA++;
        var depthB = 0;
        for(var tempB = nodeB; tempB; tempB = getParent(tempB))depthB++;
         // If A is deeper, crawl up.
        while(depthA - depthB > 0){
            nodeA = getParent(nodeA);
            depthA--;
        } // If B is deeper, crawl up.
        while(depthB - depthA > 0){
            nodeB = getParent(nodeB);
            depthB--;
        } // Walk in lockstep until we find a match.
        var depth = depthA;
        while(depth--){
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) return nodeA;
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
        }
        return null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        var registrationName = event._reactName;
        var listeners = [];
        var instance = target;
        while(instance !== null){
            if (instance === common) break;
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) break;
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                if (inCapturePhase) {
                    var captureListener = getListener(instance, registrationName);
                    if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                } else if (!inCapturePhase) {
                    var bubbleListener = getListener(instance, registrationName);
                    if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
            }
            instance = instance.return;
        }
        if (listeners.length !== 0) dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    } // We should only use this function for:
    // - EnterLeaveEventPlugin
    // This is because we only process this plugin
    // in the bubble phase, so we need to accumulate two
    // phase event listeners.
    function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
        var common = from && to ? getLowestCommonAncestor(from, to) : null;
        if (from !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
        if (to !== null && enterEvent !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
    }
    function getListenerSetKey(domEventName, capture) {
        return domEventName + "__" + (capture ? "capture" : "bubble");
    }
    var didWarnInvalidHydration = false;
    var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
    var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
    var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
    var AUTOFOCUS = "autoFocus";
    var CHILDREN = "children";
    var STYLE = "style";
    var HTML$1 = "__html";
    var warnedUnknownTags;
    var validatePropertiesInDevelopment;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeHTML;
    warnedUnknownTags = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
    };
    validatePropertiesInDevelopment = function(type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props, {
            registrationNameDependencies: registrationNameDependencies,
            possibleRegistrationNames: possibleRegistrationNames
        });
    }; // IE 11 parses & normalizes the style attribute as opposed to other
    // browsers. It adds spaces and sorts the properties in some
    // non-alphabetical order. Handling that would require sorting CSS
    // properties in the client & server versions or applying
    // `expectedStyle` to a temporary DOM node to read its `style` attribute
    // normalized. Since it only affects IE, we're skipping style warnings
    // in that browser completely in favor of doing all that work.
    // See https://github.com/facebook/react/issues/11807
    canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
    warnForPropDifference = function(propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) return;
        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
        if (normalizedServerValue === normalizedClientValue) return;
        didWarnInvalidHydration = true;
        error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
    };
    warnForExtraAttributes = function(attributeNames) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function(name) {
            names.push(name);
        });
        error("Extra attributes from the server: %s", names);
    };
    warnForInvalidEventListener = function(registrationName, listener) {
        if (listener === false) error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
        else error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
    }; // Parse the HTML and read it back to normalize the HTML string so that it
    // can be used for comparison.
    normalizeHTML = function(parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
    };
    // It also can turn \u0000 into \uFFFD inside attributes.
    // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
    // If we have a mismatch, it might be caused by that.
    // We will still patch up in this case but not fire the warning.
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
    var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
    function normalizeMarkupForTextOrAttribute(markup) {
        checkHtmlStringCoercion(markup);
        var markupString = typeof markup === "string" ? markup : "" + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
    }
    function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
        if (normalizedServerText === normalizedClientText) return;
        if (shouldWarnDev) {
            if (!didWarnInvalidHydration) {
                didWarnInvalidHydration = true;
                error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
            }
        }
        if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) // In concurrent roots, we throw when there's a text mismatch and revert to
        // client rendering, up to the nearest Suspense boundary.
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function noop() {}
    function trapClickOnNonInteractiveElement(node) {
        // Mobile Safari does not fire properly bubble click events on
        // non-interactive elements, which means delegated click listeners do not
        // fire. The workaround for this bug involves attaching an empty click
        // listener on the target node.
        // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
        // Just set it using the onclick property so that we don't have to manage any
        // bookkeeping for it. Not sure if we need to clear it when the listener is
        // removed.
        // TODO: Only do this for the relevant Safaris maybe?
        node.onclick = noop;
    }
    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
        for(var propKey in nextProps){
            if (!nextProps.hasOwnProperty(propKey)) continue;
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                if (nextHtml != null) setInnerHTML(domElement, nextHtml);
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string") {
                    // Avoid setting initial textContent when the text is empty. In IE11 setting
                    // textContent on a <textarea> will cause the placeholder to not
                    // show within the <textarea> until it has been focused and blurred again.
                    // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                    var canSetTextContent = tag !== "textarea" || nextProp !== "";
                    if (canSetTextContent) setTextContent(domElement, nextProp);
                } else if (typeof nextProp === "number") setTextContent(domElement, "" + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== "function") warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === "onScroll") listenToNonDelegatedEvent("scroll", domElement);
                }
            } else if (nextProp != null) setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
    }
    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
        // TODO: Handle wasCustomComponentTag
        for(var i = 0; i < updatePayload.length; i += 2){
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) setValueForStyles(domElement, propValue);
            else if (propKey === DANGEROUSLY_SET_INNER_HTML) setInnerHTML(domElement, propValue);
            else if (propKey === CHILDREN) setTextContent(domElement, propValue);
            else setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
    }
    function createElement(type, props, rootContainerElement, parentNamespace) {
        var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
        // tags get no namespace.
        var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
        var domElement;
        var namespaceURI = parentNamespace;
        if (namespaceURI === HTML_NAMESPACE) namespaceURI = getIntrinsicNamespace(type);
        if (namespaceURI === HTML_NAMESPACE) {
            isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
            // allow <SVG> or <mATH>.
            if (!isCustomComponentTag && type !== type.toLowerCase()) error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
            if (type === "script") {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement("div");
                div.innerHTML = "<script></script>"; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
            } else if (typeof props.is === "string") // $FlowIssue `createElement` should be updated for Web Components
            domElement = ownerDocument.createElement(type, {
                is: props.is
            });
            else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
                // attributes on `select`s needs to be added before `option`s are inserted.
                // This prevents:
                // - a bug where the `select` does not scroll to the correct option because singular
                //  `select` elements automatically pick the first item #13222
                // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
                // See https://github.com/facebook/react/issues/13222
                // and https://github.com/facebook/react/issues/14239
                if (type === "select") {
                    var node = domElement;
                    if (props.multiple) node.multiple = true;
                    else if (props.size) // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
                    // it is possible that no option is selected.
                    //
                    // This is only necessary when a select in "single selection mode".
                    node.size = props.size;
                }
            }
        } else domElement = ownerDocument.createElementNS(namespaceURI, type);
        if (namespaceURI === HTML_NAMESPACE) {
            if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
            }
        }
        return domElement;
    }
    function createTextNode(text, rootContainerElement) {
        return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }
    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
        var isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        var props;
        switch(tag){
            case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                props = rawProps;
                break;
            case "iframe":
            case "object":
            case "embed":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent("load", domElement);
                props = rawProps;
                break;
            case "video":
            case "audio":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                props = rawProps;
                break;
            case "source":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent("error", domElement);
                props = rawProps;
                break;
            case "img":
            case "image":
            case "link":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                props = rawProps;
                break;
            case "details":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent("toggle", domElement);
                props = rawProps;
                break;
            case "input":
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "option":
                validateProps(domElement, rawProps);
                props = rawProps;
                break;
            case "select":
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "textarea":
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            default:
                props = rawProps;
        }
        assertValidProps(tag, props);
        setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
        switch(tag){
            case "input":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
            case "textarea":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case "option":
                postMountWrapper$1(domElement, rawProps);
                break;
            case "select":
                postMountWrapper$2(domElement, rawProps);
                break;
            default:
                if (typeof props.onClick === "function") // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
    } // Calculate the diff between the two objects.
    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
        validatePropertiesInDevelopment(tag, nextRawProps);
        var updatePayload = null;
        var lastProps;
        var nextProps;
        switch(tag){
            case "input":
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
            case "select":
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
            case "textarea":
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
            default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        assertValidProps(tag, nextProps);
        var propKey;
        var styleName;
        var styleUpdates = null;
        for(propKey in lastProps){
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) continue;
            if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for(styleName in lastStyle)if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) styleUpdates = {};
                    styleUpdates[styleName] = "";
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) // This is a special case. If any listener updates we need to ensure
            // that the "current" fiber pointer gets updated so we need a commit
            // to update this element.
            {
                if (!updatePayload) updatePayload = [];
            } else // For all other deleted properties we add it to the queue. We use
            // the allowed property list in the commit phase instead.
            (updatePayload = updatePayload || []).push(propKey, null);
        }
        for(propKey in nextProps){
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : undefined;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) continue;
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                if (lastProp) {
                    // Unset styles on `lastProp` but not on `nextProp`.
                    for(styleName in lastProp)if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = "";
                    }
                     // Update styles that changed since `lastProp`.
                    for(styleName in nextProp)if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = nextProp[styleName];
                    }
                } else {
                    // Relies on `updateStylesByID` not mutating `styleUpdates`.
                    if (!styleUpdates) {
                        if (!updatePayload) updatePayload = [];
                        updatePayload.push(propKey, styleUpdates);
                    }
                    styleUpdates = nextProp;
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                var lastHtml = lastProp ? lastProp[HTML$1] : undefined;
                if (nextHtml != null) {
                    if (lastHtml !== nextHtml) (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string" || typeof nextProp === "number") (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    // We eagerly listen to this even though we haven't committed yet.
                    if (typeof nextProp !== "function") warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === "onScroll") listenToNonDelegatedEvent("scroll", domElement);
                }
                if (!updatePayload && lastProp !== nextProp) // This is a special case. If any listener updates we need to ensure
                // that the "current" props pointer gets updated so we need a commit
                // to update this element.
                updatePayload = [];
            } else // For any other property we always add it to the queue and then we
            // filter it out using the allowed property list during the commit.
            (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
        if (styleUpdates) {
            validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
        }
        return updatePayload;
    } // Apply the diff.
    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
        // Update checked *before* name.
        // In the middle of an update, it is possible to have multiple checked.
        // When a checked radio tries to change name, browser makes another radio's checked false.
        if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) updateChecked(domElement, nextRawProps);
        var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
        var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.
        updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
        // changed.
        switch(tag){
            case "input":
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                updateWrapper(domElement, nextRawProps);
                break;
            case "textarea":
                updateWrapper$1(domElement, nextRawProps);
                break;
            case "select":
                // <select> value update needs to occur after <option> children
                // reconciliation
                postUpdateWrapper(domElement, nextRawProps);
                break;
        }
    }
    function getPossibleStandardName(propName) {
        var lowerCasedName = propName.toLowerCase();
        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) return null;
        return possibleStandardNames[lowerCasedName] || null;
    }
    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
        var isCustomComponentTag;
        var extraAttributeNames;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        switch(tag){
            case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                break;
            case "iframe":
            case "object":
            case "embed":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "video":
            case "audio":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                break;
            case "source":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent("error", domElement);
                break;
            case "img":
            case "image":
            case "link":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "details":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent("toggle", domElement);
                break;
            case "input":
                initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "option":
                validateProps(domElement, rawProps);
                break;
            case "select":
                initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "textarea":
                initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
        }
        assertValidProps(tag, rawProps);
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;
        for(var _i = 0; _i < attributes.length; _i++){
            var name = attributes[_i].name.toLowerCase();
            switch(name){
                // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                case "value":
                    break;
                case "checked":
                    break;
                case "selected":
                    break;
                default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[_i].name);
            }
        }
        var updatePayload = null;
        for(var propKey in rawProps){
            if (!rawProps.hasOwnProperty(propKey)) continue;
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === "string") {
                    if (domElement.textContent !== nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            nextProp
                        ];
                    }
                } else if (typeof nextProp === "number") {
                    if (domElement.textContent !== "" + nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            "" + nextProp
                        ];
                    }
                }
            } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== "function") warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === "onScroll") listenToNonDelegatedEvent("scroll", domElement);
                }
            } else if (shouldWarnDev && true && // Convince Flow we've calculated it (it's DEV-only in this method.)
            typeof isCustomComponentTag === "boolean") {
                // Validate that the properties correspond to their expected values.
                var serverValue = void 0;
                var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
                if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) ;
                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                propKey === "value" || propKey === "checked" || propKey === "selected") ;
                else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                    var serverHTML = domElement.innerHTML;
                    var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                    if (nextHtml != null) {
                        var expectedHTML = normalizeHTML(domElement, nextHtml);
                        if (expectedHTML !== serverHTML) warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                } else if (propKey === STYLE) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey);
                    if (canDiffStyleForHydrationWarning) {
                        var expectedStyle = createDangerousStringForStyles(nextProp);
                        serverValue = domElement.getAttribute("style");
                        if (expectedStyle !== serverValue) warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey.toLowerCase());
                    serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    if (nextProp !== serverValue) warnForPropDifference(propKey, serverValue, nextProp);
                } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                    var isMismatchDueToBadCasing = false;
                    if (propertyInfo !== null) {
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propertyInfo.attributeName);
                        serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                    } else {
                        var ownNamespace = parentNamespace;
                        if (ownNamespace === HTML_NAMESPACE) ownNamespace = getIntrinsicNamespace(tag);
                        if (ownNamespace === HTML_NAMESPACE) // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propKey.toLowerCase());
                        else {
                            var standardName = getPossibleStandardName(propKey);
                            if (standardName !== null && standardName !== propKey) {
                                // If an SVG prop is supplied with bad casing, it will
                                // be successfully parsed from HTML, but will produce a mismatch
                                // (and would be incorrectly rendered on the client).
                                // However, we already warn about bad casing elsewhere.
                                // So we'll skip the misleading extra mismatch warning in this case.
                                isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.
                                extraAttributeNames.delete(standardName);
                            } // $FlowFixMe - Should be inferred as not undefined.
                            extraAttributeNames.delete(propKey);
                        }
                        serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    }
                    var dontWarnCustomElement = enableCustomElementPropertySupport;
                    if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) warnForPropDifference(propKey, serverValue, nextProp);
                }
            }
        }
        if (shouldWarnDev) {
            if (extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) // $FlowFixMe - Should be inferred as not undefined.
            warnForExtraAttributes(extraAttributeNames);
        }
        switch(tag){
            case "input":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
            case "textarea":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case "select":
            case "option":
                break;
            default:
                if (typeof rawProps.onClick === "function") // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        return updatePayload;
    }
    function diffHydratedText(textNode, text, isConcurrentMode) {
        var isDifferent = textNode.nodeValue !== text;
        return isDifferent;
    }
    function warnForDeletedHydratableElement(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
    }
    function warnForDeletedHydratableText(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedElement(parentNode, tag, props) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedText(parentNode, text) {
        if (text === "") // We expect to insert empty text nodes since they're not represented in
        // the HTML.
        // TODO: Remove this special case if we can just avoid inserting empty
        // text nodes.
        return;
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
    }
    function restoreControlledState$3(domElement, tag, props) {
        switch(tag){
            case "input":
                restoreControlledState(domElement, props);
                return;
            case "textarea":
                restoreControlledState$2(domElement, props);
                return;
            case "select":
                restoreControlledState$1(domElement, props);
                return;
        }
    }
    var validateDOMNesting = function() {};
    var updatedAncestorInfo = function() {};
    // This validation code was written based on the HTML5 parsing spec:
    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    //
    // Note: this does not catch all invalid nesting, nor does it try to (as it's
    // not clear what practical benefit doing so provides); instead, we warn only
    // for cases where the parser will give a parse tree differing from what React
    // intended. For example, <b><div></div></b> is invalid but we don't warn
    // because it still parses correctly; we do warn for other cases like nested
    // <p> tags where the beginning of the second element implicitly closes the
    // first, causing a confusing mess.
    // https://html.spec.whatwg.org/multipage/syntax.html#special
    var specialTags = [
        "address",
        "applet",
        "area",
        "article",
        "aside",
        "base",
        "basefont",
        "bgsound",
        "blockquote",
        "body",
        "br",
        "button",
        "caption",
        "center",
        "col",
        "colgroup",
        "dd",
        "details",
        "dir",
        "div",
        "dl",
        "dt",
        "embed",
        "fieldset",
        "figcaption",
        "figure",
        "footer",
        "form",
        "frame",
        "frameset",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "head",
        "header",
        "hgroup",
        "hr",
        "html",
        "iframe",
        "img",
        "input",
        "isindex",
        "li",
        "link",
        "listing",
        "main",
        "marquee",
        "menu",
        "menuitem",
        "meta",
        "nav",
        "noembed",
        "noframes",
        "noscript",
        "object",
        "ol",
        "p",
        "param",
        "plaintext",
        "pre",
        "script",
        "section",
        "select",
        "source",
        "style",
        "summary",
        "table",
        "tbody",
        "td",
        "template",
        "textarea",
        "tfoot",
        "th",
        "thead",
        "title",
        "tr",
        "track",
        "ul",
        "wbr",
        "xmp"
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    var inScopeTags = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
    var buttonScopeTags = inScopeTags.concat([
        "button"
    ]); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
    var impliedEndTags = [
        "dd",
        "dt",
        "li",
        "option",
        "optgroup",
        "p",
        "rp",
        "rt"
    ];
    var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
    };
    updatedAncestorInfo = function(oldInfo, tag) {
        var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
        var info = {
            tag: tag
        };
        if (inScopeTags.indexOf(tag) !== -1) {
            ancestorInfo.aTagInScope = null;
            ancestorInfo.buttonTagInScope = null;
            ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) ancestorInfo.pTagInButtonScope = null;
         // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
            ancestorInfo.listItemTagAutoclosing = null;
            ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === "form") ancestorInfo.formTag = info;
        if (tag === "a") ancestorInfo.aTagInScope = info;
        if (tag === "button") ancestorInfo.buttonTagInScope = info;
        if (tag === "nobr") ancestorInfo.nobrTagInScope = info;
        if (tag === "p") ancestorInfo.pTagInButtonScope = info;
        if (tag === "li") ancestorInfo.listItemTagAutoclosing = info;
        if (tag === "dd" || tag === "dt") ancestorInfo.dlItemTagAutoclosing = info;
        return ancestorInfo;
    };
    /**
   * Returns whether
   */ var isTagValidWithParent = function(tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch(parentTag){
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
            case "select":
                return tag === "option" || tag === "optgroup" || tag === "#text";
            case "optgroup":
                return tag === "option" || tag === "#text";
            // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
            // but
            case "option":
                return tag === "#text";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
            // No special behavior since these rules fall back to "in body" mode for
            // all except special table nodes which cause bad parsing behavior anyway.
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
            case "tr":
                return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
            case "tbody":
            case "thead":
            case "tfoot":
                return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
            case "colgroup":
                return tag === "col" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
            case "table":
                return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
            case "head":
                return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
            case "html":
                return tag === "head" || tag === "body" || tag === "frameset";
            case "frameset":
                return tag === "frame";
            case "#document":
                return tag === "html";
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        switch(tag){
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
            case "rp":
            case "rt":
                return impliedEndTags.indexOf(parentTag) === -1;
            case "body":
            case "caption":
            case "col":
            case "colgroup":
            case "frameset":
            case "frame":
            case "head":
            case "html":
            case "tbody":
            case "td":
            case "tfoot":
            case "th":
            case "thead":
            case "tr":
                // These tags are only valid with a few parents that have special child
                // parsing rules -- if we're down here, then none of those matched and
                // so we allow it only if we don't know what the parent is, as all other
                // cases are invalid.
                return parentTag == null;
        }
        return true;
    };
    /**
   * Returns whether
   */ var findInvalidAncestorForTag = function(tag, ancestorInfo) {
        switch(tag){
            case "address":
            case "article":
            case "aside":
            case "blockquote":
            case "center":
            case "details":
            case "dialog":
            case "dir":
            case "div":
            case "dl":
            case "fieldset":
            case "figcaption":
            case "figure":
            case "footer":
            case "header":
            case "hgroup":
            case "main":
            case "menu":
            case "nav":
            case "ol":
            case "p":
            case "section":
            case "summary":
            case "ul":
            case "pre":
            case "listing":
            case "table":
            case "hr":
            case "xmp":
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return ancestorInfo.pTagInButtonScope;
            case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case "li":
                return ancestorInfo.listItemTagAutoclosing;
            case "dd":
            case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
            case "button":
                return ancestorInfo.buttonTagInScope;
            case "a":
                // Spec says something about storing a list of markers, but it sounds
                // equivalent to this check.
                return ancestorInfo.aTagInScope;
            case "nobr":
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    };
    var didWarn$1 = {};
    validateDOMNesting = function(childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        if (childText != null) {
            if (childTag != null) error("validateDOMNesting: when childText is passed, childTag should be null");
            childTag = "#text";
        }
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;
        if (!invalidParentOrAncestor) return;
        var ancestorTag = invalidParentOrAncestor.tag;
        var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
        if (didWarn$1[warnKey]) return;
        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = "";
        if (childTag === "#text") {
            if (/\S/.test(childText)) tagDisplayName = "Text nodes";
            else {
                tagDisplayName = "Whitespace text nodes";
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
            }
        } else tagDisplayName = "<" + childTag + ">";
        if (invalidParent) {
            var info = "";
            if (ancestorTag === "table" && childTag === "tr") info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
            error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
        } else error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
    };
    var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
    var SUSPENSE_START_DATA = "$";
    var SUSPENSE_END_DATA = "/$";
    var SUSPENSE_PENDING_START_DATA = "$?";
    var SUSPENSE_FALLBACK_START_DATA = "$!";
    var STYLE$1 = "style";
    var eventsEnabled = null;
    var selectionInformation = null;
    function getRootHostContext(rootContainerInstance) {
        var type;
        var namespace;
        var nodeType = rootContainerInstance.nodeType;
        switch(nodeType){
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE:
                type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
                var root = rootContainerInstance.documentElement;
                namespace = root ? root.namespaceURI : getChildNamespace(null, "");
                break;
            default:
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
        }
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getPublicInstance(instance) {
        return instance;
    }
    function prepareForCommit(containerInfo) {
        eventsEnabled = isEnabled();
        selectionInformation = getSelectionInformation();
        var activeInstance = null;
        setEnabled(false);
        return activeInstance;
    }
    function resetAfterCommit(containerInfo) {
        restoreSelection(selectionInformation);
        setEnabled(eventsEnabled);
        eventsEnabled = null;
        selectionInformation = null;
    }
    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var parentNamespace;
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);
        if (typeof props.children === "string" || typeof props.children === "number") {
            var string = "" + props.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        parentNamespace = hostContextDev.namespace;
        var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
        precacheFiberNode(internalInstanceHandle, domElement);
        updateFiberProps(domElement, props);
        return domElement;
    }
    function appendInitialChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
        setInitialProperties(domElement, type, props, rootContainerInstance);
        switch(type){
            case "button":
            case "input":
            case "select":
            case "textarea":
                return !!props.autoFocus;
            case "img":
                return true;
            default:
                return false;
        }
    }
    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
        var hostContextDev = hostContext;
        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
            var string = "" + newProps.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        return diffProperties(domElement, type, oldProps, newProps);
    }
    function shouldSetTextContent(type, props) {
        return type === "textarea" || type === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }
    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
        var textNode = createTextNode(text, rootContainerInstance);
        precacheFiberNode(internalInstanceHandle, textNode);
        return textNode;
    }
    function getCurrentEventPriority() {
        var currentEvent = window.event;
        if (currentEvent === undefined) return DefaultEventPriority;
        return getEventPriority(currentEvent.type);
    }
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.
    var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : undefined;
    var noTimeout = -1;
    var localPromise = typeof Promise === "function" ? Promise : undefined; // -------------------
    var scheduleMicrotask = typeof queueMicrotask === "function" ? queueMicrotask : typeof localPromise !== "undefined" ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    } : scheduleTimeout; // TODO: Determine the best fallback here.
    function handleErrorInNextTick(error) {
        setTimeout(function() {
            throw error;
        });
    } // -------------------
    function commitMount(domElement, type, newProps, internalInstanceHandle) {
        // Despite the naming that might imply otherwise, this method only
        // fires if there is an `Update` effect scheduled during mounting.
        // This happens if `finalizeInitialChildren` returns `true` (which it
        // does to implement the `autoFocus` attribute on the client). But
        // there are also other cases when this might happen (such as patching
        // up text content during hydration mismatch). So we'll check this again.
        switch(type){
            case "button":
            case "input":
            case "select":
            case "textarea":
                if (newProps.autoFocus) domElement.focus();
                return;
            case "img":
                if (newProps.src) domElement.src = newProps.src;
                return;
        }
    }
    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
        // Apply the diff to the DOM node.
        updateProperties(domElement, updatePayload, type, oldProps, newProps); // Update the props handle so that we know which props are the ones with
        // with current event handlers.
        updateFiberProps(domElement, newProps);
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, "");
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function appendChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function appendChildToContainer(container, child) {
        var parentNode;
        if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
        } else {
            parentNode = container;
            parentNode.appendChild(child);
        } // This container might be used for a portal.
        // If something inside a portal is clicked, that click should bubble
        // through the React tree. However, on Mobile Safari the click would
        // never bubble through the *DOM* tree unless an ancestor with onclick
        // event exists. So we wouldn't see it and dispatch it.
        // This is why we ensure that non React root containers have inline onclick
        // defined.
        // https://github.com/facebook/react/issues/11918
        var reactRootContainer = container._reactRootContainer;
        if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
    }
    function insertBefore(parentInstance, child, beforeChild) {
        parentInstance.insertBefore(child, beforeChild);
    }
    function insertInContainerBefore(container, child, beforeChild) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.insertBefore(child, beforeChild);
        else container.insertBefore(child, beforeChild);
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.removeChild(child);
        else container.removeChild(child);
    }
    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance; // Delete all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && nextNode.nodeType === COMMENT_NODE) {
                var data = nextNode.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) {
                        parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.
                        retryIfBlockedOn(suspenseInstance);
                        return;
                    } else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) depth++;
            }
            node = nextNode;
        }while (node); // TODO: Warn, we didn't find the end comment boundary.
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
        if (container.nodeType === COMMENT_NODE) clearSuspenseBoundary(container.parentNode, suspenseInstance);
        else if (container.nodeType === ELEMENT_NODE) clearSuspenseBoundary(container, suspenseInstance);
         // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function hideInstance(instance) {
        // TODO: Does this work for all element types? What about MathML? Should we
        // pass host context to this method?
        instance;
        var style = instance.style;
        if (typeof style.setProperty === "function") style.setProperty("display", "none", "important");
        else style.display = "none";
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = "";
    }
    function unhideInstance(instance, props) {
        instance;
        var styleProp = props[STYLE$1];
        var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
        instance.style.display = dangerousStyleValue("display", display);
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainer(container) {
        if (container.nodeType === ELEMENT_NODE) container.textContent = "";
        else if (container.nodeType === DOCUMENT_NODE) {
            if (container.documentElement) container.removeChild(container.documentElement);
        }
    } // -------------------
    function canHydrateInstance(instance, type, props) {
        if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) return null;
         // This has now been refined to an element node.
        return instance;
    }
    function canHydrateTextInstance(instance, text) {
        if (text === "" || instance.nodeType !== TEXT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a text node.
        return instance;
    }
    function canHydrateSuspenseInstance(instance) {
        if (instance.nodeType !== COMMENT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a suspense node.
        return instance;
    }
    function isSuspenseInstancePending(instance) {
        return instance.data === SUSPENSE_PENDING_START_DATA;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }
    function getSuspenseInstanceFallbackErrorDetails(instance) {
        var dataset = instance.nextSibling && instance.nextSibling.dataset;
        var digest, message, stack;
        if (dataset) {
            digest = dataset.dgst;
            message = dataset.msg;
            stack = dataset.stck;
        }
        return {
            message: message,
            digest: digest,
            stack: stack
        };
    // const nextSibling = instance.nextSibling;
    // if (nextSibling) {
    //   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;
    //   value.message = dataset.msg;
    //   value.hash = dataset.hash;
    //   if (true) {
    //     value.stack = dataset.stack;
    //   }
    // }
    // return value;
    }
    function registerSuspenseInstanceRetry(instance, callback) {
        instance._reactRetry = callback;
    }
    function getNextHydratable(node) {
        // Skip non-hydratable nodes.
        for(; node != null; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) break;
            if (nodeType === COMMENT_NODE) {
                var nodeData = node.data;
                if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) break;
                if (nodeData === SUSPENSE_END_DATA) return null;
            }
        }
        return node;
    }
    function getNextHydratableSibling(instance) {
        return getNextHydratable(instance.nextSibling);
    }
    function getFirstHydratableChild(parentInstance) {
        return getNextHydratable(parentInstance.firstChild);
    }
    function getFirstHydratableChildWithinContainer(parentContainer) {
        return getNextHydratable(parentContainer.firstChild);
    }
    function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
        return getNextHydratable(parentInstance.nextSibling);
    }
    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
        // get attached.
        updateFiberProps(instance, props);
        var parentNamespace;
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
    }
    function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, textInstance); // TODO: Temporary hack to check if we're in a concurrent root. We can delete
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedText(textInstance, text);
    }
    function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, suspenseInstance);
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) return getNextHydratableSibling(node);
                    else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) depth++;
            }
            node = node.nextSibling;
        } // TODO: Warn, we didn't find the end comment boundary.
        return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.
    function getParentSuspenseInstance(targetInstance) {
        var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (depth === 0) return node;
                    else depth--;
                } else if (data === SUSPENSE_END_DATA) depth++;
            }
            node = node.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function shouldDeleteUnhydratedTailInstances(parentType) {
        return parentType !== "head" && parentType !== "body";
    }
    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
        var shouldWarnDev = true;
        checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
    }
    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            var shouldWarnDev = true;
            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
        }
    }
    function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
        if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentContainer, instance);
        else if (instance.nodeType === COMMENT_NODE) ;
        else warnForDeletedHydratableText(parentContainer, instance);
    }
    function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentNode, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentNode, instance);
        }
    }
    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentInstance, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentInstance, instance);
        }
    }
    function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
        warnForInsertedHydratedElement(parentContainer, type);
    }
    function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
        warnForInsertedHydratedText(parentContainer, text);
    }
    function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedElement(parentNode, type);
    }
    function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedText(parentNode, text);
    }
    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedElement(parentInstance, type);
    }
    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedText(parentInstance, text);
    }
    function errorHydratingContainer(parentContainer) {
        // TODO: This gets logged by onRecoverableError, too, so we should be
        // able to remove it.
        error("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", parentContainer.nodeName.toLowerCase());
    }
    function preparePortalMount(portalInstance) {
        listenToAllSupportedEvents(portalInstance);
    }
    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = "__reactFiber$" + randomKey;
    var internalPropsKey = "__reactProps$" + randomKey;
    var internalContainerInstanceKey = "__reactContainer$" + randomKey;
    var internalEventHandlersKey = "__reactEvents$" + randomKey;
    var internalEventHandlerListenersKey = "__reactListeners$" + randomKey;
    var internalEventHandlesSetKey = "__reactHandles$" + randomKey;
    function detachDeletedInstance(node) {
        // TODO: This function is only called on host components. I don't think all of
        // these fields are relevant.
        delete node[internalInstanceKey];
        delete node[internalPropsKey];
        delete node[internalEventHandlersKey];
        delete node[internalEventHandlerListenersKey];
        delete node[internalEventHandlesSetKey];
    }
    function precacheFiberNode(hostInst, node) {
        node[internalInstanceKey] = hostInst;
    }
    function markContainerAsRoot(hostRoot, node) {
        node[internalContainerInstanceKey] = hostRoot;
    }
    function unmarkContainerAsRoot(node) {
        node[internalContainerInstanceKey] = null;
    }
    function isContainerMarkedAsRoot(node) {
        return !!node[internalContainerInstanceKey];
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you will not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
         // If the direct event target isn't a React owned DOM node, we need to look
        // to see if one of its parents is a React owned DOM node.
        var parentNode = targetNode.parentNode;
        while(parentNode){
            // We'll check if this is a container root that could include
            // React nodes in the future. We need to check this first because
            // if we're a child of a dehydrated container, we need to first
            // find that inner container before moving on to finding the parent
            // instance. Note that we don't check this field on  the targetNode
            // itself because the fibers are conceptually between the container
            // node and the first child. It isn't surrounding the container node.
            // If it's not a container, we check if it's an instance.
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
                // Since this wasn't the direct target of the event, we might have
                // stepped past dehydrated DOM nodes to get here. However they could
                // also have been non-React nodes. We need to answer which one.
                // If we the instance doesn't have any children, then there can't be
                // a nested suspense boundary within it. So we can use this as a fast
                // bailout. Most of the time, when people add non-React children to
                // the tree, it is using a ref to a child-less DOM node.
                // Normally we'd only need to check one of the fibers because if it
                // has ever gone from having children to deleting them or vice versa
                // it would have deleted the dehydrated boundary nested inside already.
                // However, since the HostRoot starts out with an alternate it might
                // have one on the alternate so we need to check in case this was a
                // root.
                var alternate = targetInst.alternate;
                if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                    // Next we need to figure out if the node that skipped past is
                    // nested within a dehydrated boundary and if so, which one.
                    var suspenseInstance = getParentSuspenseInstance(targetNode);
                    while(suspenseInstance !== null){
                        // We found a suspense instance. That means that we haven't
                        // hydrated it yet. Even though we leave the comments in the
                        // DOM after hydrating, and there are boundaries in the DOM
                        // that could already be hydrated, we wouldn't have found them
                        // through this pass since if the target is hydrated it would
                        // have had an internalInstanceKey on it.
                        // Let's get the fiber associated with the SuspenseComponent
                        // as the deepest instance.
                        var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                        if (targetSuspenseInst) return targetSuspenseInst;
                         // If we don't find a Fiber on the comment, it might be because
                        // we haven't gotten to hydrate it yet. There might still be a
                        // parent boundary that hasn't above this one so we need to find
                        // the outer most that is known.
                        suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
                    // host component also hasn't hydrated yet. We can return it
                    // below since it will bail out on the isMounted check later.
                    }
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    /**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */ function getInstanceFromNode(node) {
        var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
        if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) return inst;
            else return null;
        }
        return null;
    }
    /**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */ function getNodeFromInstance(inst) {
        if (inst.tag === HostComponent || inst.tag === HostText) // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
         // Without this first invariant, passing a non-DOM-component triggers the next
        // invariant for a missing parent, which is super confusing.
        throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function getFiberCurrentPropsFromNode(node) {
        return node[internalPropsKey] || null;
    }
    function updateFiberProps(node, props) {
        node[internalPropsKey] = props;
    }
    function getEventListenerSet(node) {
        var elementListenerSet = node[internalEventHandlersKey];
        if (elementListenerSet === undefined) elementListenerSet = node[internalEventHandlersKey] = new Set();
        return elementListenerSet;
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== "function") {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error("Failed %s type: %s", location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var valueStack = [];
    var fiberStack;
    fiberStack = [];
    var index = -1;
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        if (index < 0) {
            error("Unexpected pop.");
            return;
        }
        if (fiber !== fiberStack[index]) error("Unexpected Fiber popped.");
        cursor.current = valueStack[index];
        valueStack[index] = null;
        fiberStack[index] = null;
        index--;
    }
    function push(cursor, value, fiber) {
        index++;
        valueStack[index] = cursor.current;
        fiberStack[index] = fiber;
        cursor.current = value;
    }
    var warnedAboutMissingGetChildContext;
    warnedAboutMissingGetChildContext = {};
    var emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.
    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.
    var previousContext = emptyContextObject;
    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) // If the fiber is a context provider itself, when we read its context
        // we may have already pushed its own child context on the stack. A context
        // provider should not "see" its own child context. Therefore we read the
        // previous (parent) context instead for a context provider.
        return previousContext;
        return contextStackCursor.current;
    }
    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }
    function getMaskedContext(workInProgress, unmaskedContext) {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;
        if (!contextTypes) return emptyContextObject;
         // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {};
        for(var key in contextTypes)context[key] = unmaskedContext[key];
        var name = getComponentNameFromFiber(workInProgress) || "Unknown";
        checkPropTypes(contextTypes, context, "context", name);
        // Context is created before the class component is instantiated so check for instance.
        if (instance) cacheContext(workInProgress, unmaskedContext, context);
        return context;
    }
    function hasContextChanged() {
        return didPerformWorkStackCursor.current;
    }
    function isContextProvider(type) {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
    }
    function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function pushTopLevelContextObject(fiber, context, didChange) {
        if (contextStackCursor.current !== emptyContextObject) throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
    }
    function processChildContext(fiber, type, parentContext) {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.
        if (typeof instance.getChildContext !== "function") {
            var componentName = getComponentNameFromFiber(fiber) || "Unknown";
            if (!warnedAboutMissingGetChildContext[componentName]) {
                warnedAboutMissingGetChildContext[componentName] = true;
                error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
            }
            return parentContext;
        }
        var childContext = instance.getChildContext();
        for(var contextKey in childContext){
            if (!(contextKey in childContextTypes)) throw new Error((getComponentNameFromFiber(fiber) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
        }
        var name = getComponentNameFromFiber(fiber) || "Unknown";
        checkPropTypes(childContextTypes, childContext, "child context", name);
        return assign({}, parentContext, childContext);
    }
    function pushContextProvider(workInProgress) {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.
        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
    }
    function invalidateContextProvider(workInProgress, type, didChange) {
        var instance = workInProgress.stateNode;
        if (!instance) throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (didChange) {
            // Merge parent and own context.
            // Skip this if we're not updating due to sCU.
            // This avoids unnecessarily recomputing memoized values.
            var mergedContext = processChildContext(workInProgress, type, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
            // It is important to unwind the context in the reverse order.
            pop(didPerformWorkStackCursor, workInProgress);
            pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.
            push(contextStackCursor, mergedContext, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
            pop(didPerformWorkStackCursor, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        }
    }
    function findCurrentUnmaskedContext(fiber) {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var node = fiber;
        do {
            switch(node.tag){
                case HostRoot:
                    return node.stateNode.context;
                case ClassComponent:
                    var Component = node.type;
                    if (isContextProvider(Component)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    break;
            }
            node = node.return;
        }while (node !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    var LegacyRoot = 0;
    var ConcurrentRoot = 1;
    var syncQueue = null;
    var includesLegacySyncCallbacks = false;
    var isFlushingSyncQueue = false;
    function scheduleSyncCallback(callback) {
        // Push this callback into an internal queue. We'll flush these either in
        // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
        if (syncQueue === null) syncQueue = [
            callback
        ];
        else // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
    }
    function scheduleLegacySyncCallback(callback) {
        includesLegacySyncCallbacks = true;
        scheduleSyncCallback(callback);
    }
    function flushSyncCallbacksOnlyInLegacyMode() {
        // Only flushes the queue if there's a legacy sync callback scheduled.
        // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So
        // it might make more sense for the queue to be a list of roots instead of a
        // list of generic callbacks. Then we can have two: one for legacy roots, one
        // for concurrent roots. And this method would only flush the legacy ones.
        if (includesLegacySyncCallbacks) flushSyncCallbacks();
    }
    function flushSyncCallbacks() {
        if (!isFlushingSyncQueue && syncQueue !== null) {
            // Prevent re-entrance.
            isFlushingSyncQueue = true;
            var i = 0;
            var previousUpdatePriority = getCurrentUpdatePriority();
            try {
                var isSync = true;
                var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this
                // queue is in the render or commit phases.
                setCurrentUpdatePriority(DiscreteEventPriority);
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(isSync);
                    while (callback !== null);
                }
                syncQueue = null;
                includesLegacySyncCallbacks = false;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                if (syncQueue !== null) syncQueue = syncQueue.slice(i + 1);
                 // Resume flushing in the next tick
                scheduleCallback(ImmediatePriority, flushSyncCallbacks);
                throw error;
            } finally{
                setCurrentUpdatePriority(previousUpdatePriority);
                isFlushingSyncQueue = false;
            }
        }
        return null;
    }
    // TODO: Use the unified fiber stack module instead of this local one?
    // Intentionally not using it yet to derisk the initial implementation, because
    // the way we push/pop these values is a bit unusual. If there's a mistake, I'd
    // rather the ids be wrong than crash the whole reconciler.
    var forkStack = [];
    var forkStackIndex = 0;
    var treeForkProvider = null;
    var treeForkCount = 0;
    var idStack = [];
    var idStackIndex = 0;
    var treeContextProvider = null;
    var treeContextId = 1;
    var treeContextOverflow = "";
    function isForkedChild(workInProgress) {
        warnIfNotHydrating();
        return (workInProgress.flags & Forked) !== NoFlags;
    }
    function getForksAtLevel(workInProgress) {
        warnIfNotHydrating();
        return treeForkCount;
    }
    function getTreeId() {
        var overflow = treeContextOverflow;
        var idWithLeadingBit = treeContextId;
        var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
    }
    function pushTreeFork(workInProgress, totalChildren) {
        // This is called right after we reconcile an array (or iterator) of child
        // fibers, because that's the only place where we know how many children in
        // the whole set without doing extra work later, or storing addtional
        // information on the fiber.
        //
        // That's why this function is separate from pushTreeId — it's called during
        // the render phase of the fork parent, not the child, which is where we push
        // the other context values.
        //
        // In the Fizz implementation this is much simpler because the child is
        // rendered in the same callstack as the parent.
        //
        // It might be better to just add a `forks` field to the Fiber type. It would
        // make this module simpler.
        warnIfNotHydrating();
        forkStack[forkStackIndex++] = treeForkCount;
        forkStack[forkStackIndex++] = treeForkProvider;
        treeForkProvider = workInProgress;
        treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextProvider = workInProgress;
        var baseIdWithLeadingBit = treeContextId;
        var baseOverflow = treeContextOverflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part
        // of the id; we use it to account for leading 0s.
        var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
        var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
        var slot = index + 1;
        var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into
        // consideration the leading 1 we use to mark the end of the sequence.
        if (length > 30) {
            // We overflowed the bitwise-safe range. Fall back to slower algorithm.
            // This branch assumes the length of the base id is greater than 5; it won't
            // work for smaller ids, because you need 5 bits per character.
            //
            // We encode the id in multiple steps: first the base id, then the
            // remaining digits.
            //
            // Each 5 bit sequence corresponds to a single base 32 character. So for
            // example, if the current id is 23 bits long, we can convert 20 of those
            // bits into a string of 4 characters, with 3 bits left over.
            //
            // First calculate how many bits in the base id represent a complete
            // sequence of characters.
            var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.
            var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.
            var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because
            // we made more room, this time it won't overflow.
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            treeContextId = 1 << restOfLength | id;
            treeContextOverflow = overflow;
        } else {
            // Normal path
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            treeContextId = 1 << length | _id;
            treeContextOverflow = _overflow;
        }
    }
    function pushMaterializedTreeId(workInProgress) {
        warnIfNotHydrating(); // This component materialized an id. This will affect any ids that appear
        // in its children.
        var returnFiber = workInProgress.return;
        if (returnFiber !== null) {
            var numberOfForks = 1;
            var slotIndex = 0;
            pushTreeFork(workInProgress, numberOfForks);
            pushTreeId(workInProgress, numberOfForks, slotIndex);
        }
    }
    function getBitLength(number) {
        return 32 - clz32(number);
    }
    function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
    }
    function popTreeContext(workInProgress) {
        // Restore the previous values.
        // This is a bit more complicated than other context-like modules in Fiber
        // because the same Fiber may appear on the stack multiple times and for
        // different reasons. We have to keep popping until the work-in-progress is
        // no longer at the top of the stack.
        while(workInProgress === treeForkProvider){
            treeForkProvider = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
            treeForkCount = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
        }
        while(workInProgress === treeContextProvider){
            treeContextProvider = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextOverflow = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextId = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
        }
    }
    function getSuspendedTreeContext() {
        warnIfNotHydrating();
        if (treeContextProvider !== null) return {
            id: treeContextId,
            overflow: treeContextOverflow
        };
        else return null;
    }
    function restoreSuspendedTreeContext(workInProgress, suspendedContext) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextId = suspendedContext.id;
        treeContextOverflow = suspendedContext.overflow;
        treeContextProvider = workInProgress;
    }
    function warnIfNotHydrating() {
        if (!getIsHydrating()) error("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    // This may have been an insertion or a hydration.
    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches
    // due to earlier mismatches or a suspended fiber.
    var didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary
    var hydrationErrors = null;
    function warnIfHydrating() {
        if (isHydrating) error("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function markDidThrowWhileHydratingDEV() {
        didSuspendOrErrorDEV = true;
    }
    function didSuspendOrErrorWhileHydratingDEV() {
        return didSuspendOrErrorDEV;
    }
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
        hydrationParentFiber = fiber;
        isHydrating = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        return true;
    }
    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
        nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
        hydrationParentFiber = fiber;
        isHydrating = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        if (treeContext !== null) restoreSuspendedTreeContext(fiber, treeContext);
        return true;
    }
    function warnUnhydratedInstance(returnFiber, instance) {
        switch(returnFiber.tag){
            case HostRoot:
                didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
                break;
            case HostComponent:
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, isConcurrentMode);
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                if (suspenseState.dehydrated !== null) didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
                break;
        }
    }
    function deleteHydratableInstance(returnFiber, instance) {
        warnUnhydratedInstance(returnFiber, instance);
        var childToDelete = createFiberFromHostInstanceForDeletion();
        childToDelete.stateNode = instance;
        childToDelete.return = returnFiber;
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                childToDelete
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(childToDelete);
    }
    function warnNonhydratedInstance(returnFiber, fiber) {
        if (didSuspendOrErrorDEV) // Inside a boundary that already suspended. We're currently rendering the
        // siblings of a suspended node. The mismatch may be due to the missing
        // data, so it's probably a false positive.
        return;
        switch(returnFiber.tag){
            case HostRoot:
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch(fiber.tag){
                    case HostComponent:
                        var type = fiber.type;
                        var props = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                        break;
                    case HostText:
                        var text = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                        break;
                }
                break;
            case HostComponent:
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch(fiber.tag){
                    case HostComponent:
                        var _type = fiber.type;
                        var _props = fiber.pendingProps;
                        var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, isConcurrentMode);
                        break;
                    case HostText:
                        var _text = fiber.pendingProps;
                        var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, _isConcurrentMode);
                        break;
                }
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                var _parentInstance = suspenseState.dehydrated;
                if (_parentInstance !== null) switch(fiber.tag){
                    case HostComponent:
                        var _type2 = fiber.type;
                        var _props2 = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                        break;
                    case HostText:
                        var _text2 = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                        break;
                }
                break;
            default:
                return;
        }
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.flags = fiber.flags & ~Hydrating | Placement;
        warnNonhydratedInstance(returnFiber, fiber);
    }
    function tryHydrate(fiber, nextInstance) {
        switch(fiber.tag){
            case HostComponent:
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type);
                if (instance !== null) {
                    fiber.stateNode = instance;
                    hydrationParentFiber = fiber;
                    nextHydratableInstance = getFirstHydratableChild(instance);
                    return true;
                }
                return false;
            case HostText:
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                    fiber.stateNode = textInstance;
                    hydrationParentFiber = fiber; // Text Instances don't have children so there's nothing to hydrate.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            case SuspenseComponent:
                var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
                if (suspenseInstance !== null) {
                    var suspenseState = {
                        dehydrated: suspenseInstance,
                        treeContext: getSuspendedTreeContext(),
                        retryLane: OffscreenLane
                    };
                    fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
                    // This simplifies the code for getHostSibling and deleting nodes,
                    // since it doesn't have to consider all Suspense boundaries and
                    // check if they're dehydrated ones or not.
                    var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                    dehydratedFragment.return = fiber;
                    fiber.child = dehydratedFragment;
                    hydrationParentFiber = fiber; // While a Suspense Instance does have children, we won't step into
                    // it during the first pass. Instead, we'll reenter it later.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            default:
                return false;
        }
    }
    function shouldClientRenderOnMismatch(fiber) {
        return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
    }
    function throwOnHydrationMismatch(fiber) {
        throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (!isHydrating) return;
        var nextInstance = nextHydratableInstance;
        if (!nextInstance) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // Nothing to hydrate. Make it an insertion.
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
        }
        var firstAttemptedInstance = nextInstance;
        if (!tryHydrate(fiber, nextInstance)) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // If we can't hydrate this instance let's try the next one.
            // We use this as a heuristic. It's based on intuition and not data so it
            // might be flawed or unnecessary.
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            var prevHydrationParentFiber = hydrationParentFiber;
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
            } // We matched the next one, we'll now assume that the first one was
            // superfluous and we'll delete it. Since we can't eagerly delete it
            // we'll have to schedule a deletion. To do that, this node needs a dummy
            // fiber associated with it.
            deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
        }
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode;
        var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
        var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev); // TODO: Type this specific to this type of component.
        fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update.
        if (updatePayload !== null) return true;
        return false;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        var textContent = fiber.memoizedProps;
        var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
        if (shouldUpdate) {
            // We assume that prepareToHydrateHostTextInstance is called in a context where the
            // hydration parent is the parent host component of this host text.
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) switch(returnFiber.tag){
                case HostRoot:
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, isConcurrentMode);
                    break;
                case HostComponent:
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, _isConcurrentMode2);
                    break;
            }
        }
        return shouldUpdate;
    }
    function prepareToHydrateHostSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        hydrateSuspenseInstance(suspenseInstance, fiber);
    }
    function skipPastDehydratedSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }
    function popToNextHostParent(fiber) {
        var parent = fiber.return;
        while(parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent)parent = parent.return;
        hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
        if (!isHydrating) {
            // If we're not currently hydrating but we're in a hydration context, then
            // we were an insertion and now need to pop up reenter hydration of our
            // siblings.
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
        } // If we have any remaining hydratable nodes, we need to delete them now.
        // We only do this deeper than head and body since they tend to have random
        // other nodes in them. We also ignore components with pure text content in
        // side of them. We also don't delete anything inside the root container.
        if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
            var nextInstance = nextHydratableInstance;
            if (nextInstance) {
                if (shouldClientRenderOnMismatch(fiber)) {
                    warnIfUnhydratedTailNodes(fiber);
                    throwOnHydrationMismatch();
                } else while(nextInstance){
                    deleteHydratableInstance(fiber, nextInstance);
                    nextInstance = getNextHydratableSibling(nextInstance);
                }
            }
        }
        popToNextHostParent(fiber);
        if (fiber.tag === SuspenseComponent) nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
        else nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
        return true;
    }
    function hasUnhydratedTailNodes() {
        return isHydrating && nextHydratableInstance !== null;
    }
    function warnIfUnhydratedTailNodes(fiber) {
        var nextInstance = nextHydratableInstance;
        while(nextInstance){
            warnUnhydratedInstance(fiber, nextInstance);
            nextInstance = getNextHydratableSibling(nextInstance);
        }
    }
    function resetHydrationState() {
        hydrationParentFiber = null;
        nextHydratableInstance = null;
        isHydrating = false;
        didSuspendOrErrorDEV = false;
    }
    function upgradeHydrationErrorsToRecoverable() {
        if (hydrationErrors !== null) {
            // Successfully completed a forced client render. The errors that occurred
            // during the hydration attempt are now recovered. We will log them in
            // commit phase, once the entire tree has finished.
            queueRecoverableErrors(hydrationErrors);
            hydrationErrors = null;
        }
    }
    function getIsHydrating() {
        return isHydrating;
    }
    function queueHydrationError(error) {
        if (hydrationErrors === null) hydrationErrors = [
            error
        ];
        else hydrationErrors.push(error);
    }
    var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
    var NoTransition = null;
    function requestCurrentTransition() {
        return ReactCurrentBatchConfig$1.transition;
    }
    var ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function(fiber, instance) {},
        flushPendingUnsafeLifecycleWarnings: function() {},
        recordLegacyContextWarning: function(fiber, instance) {},
        flushLegacyContextWarning: function() {},
        discardPendingWarnings: function() {}
    };
    var findStrictRoot = function(fiber) {
        var maybeStrictRoot = null;
        var node = fiber;
        while(node !== null){
            if (node.mode & StrictLegacyMode) maybeStrictRoot = node;
            node = node.return;
        }
        return maybeStrictRoot;
    };
    var setToSortedString = function(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(", ");
    };
    var pendingComponentWillMountWarnings = [];
    var pendingUNSAFE_ComponentWillMountWarnings = [];
    var pendingComponentWillReceivePropsWarnings = [];
    var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    var pendingComponentWillUpdateWarnings = [];
    var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.
    var didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        // Dedupe strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) return;
        if (typeof instance.componentWillMount === "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        instance.componentWillMount.__suppressDeprecationWarning !== true) pendingComponentWillMountWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === "function") pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) pendingComponentWillReceivePropsWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === "function") pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) pendingComponentWillUpdateWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === "function") pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();
        if (pendingComponentWillMountWarnings.length > 0) {
            pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillMountWarnings = [];
        }
        var UNSAFE_componentWillMountUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
            pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillMountWarnings = [];
        }
        var componentWillReceivePropsUniqueNames = new Set();
        if (pendingComponentWillReceivePropsWarnings.length > 0) {
            pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillReceivePropsWarnings = [];
        }
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
            pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }
        var componentWillUpdateUniqueNames = new Set();
        if (pendingComponentWillUpdateWarnings.length > 0) {
            pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillUpdateWarnings = [];
        }
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
            pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
            error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
        }
        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
            error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
        }
        if (componentWillMountUniqueNames.size > 0) {
            var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
            warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
        }
        if (componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
            warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
        }
        if (componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
            warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
        }
    };
    var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.
    var didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = findStrictRoot(fiber);
        if (strictRoot === null) {
            error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
            return;
        } // Dedup strategy: Warn once per component.
        if (didWarnAboutLegacyContext.has(fiber.type)) return;
        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === "function") {
            if (warningsForRoot === undefined) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
            }
            warningsForRoot.push(fiber);
        }
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
            if (fiberArray.length === 0) return;
            var firstFiber = fiberArray[0];
            var uniqueNames = new Set();
            fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutLegacyContext.add(fiber.type);
            });
            var sortedNames = setToSortedString(uniqueNames);
            try {
                setCurrentFiber(firstFiber);
                error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
            } finally{
                resetCurrentFiber();
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;
    var warnForMissingKey = function(child, returnFiber) {};
    didWarnAboutMaps = false;
    didWarnAboutGenerators = false;
    didWarnAboutStringRefs = {};
    /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */ ownerHasKeyUseWarning = {};
    ownerHasFunctionTypeWarning = {};
    warnForMissingKey = function(child, returnFiber) {
        if (child === null || typeof child !== "object") return;
        if (!child._store || child._store.validated || child.key != null) return;
        if (typeof child._store !== "object") throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        child._store.validated = true;
        var componentName = getComponentNameFromFiber(returnFiber) || "Component";
        if (ownerHasKeyUseWarning[componentName]) return;
        ownerHasKeyUseWarning[componentName] = true;
        error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
    };
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function coerceRef(returnFiber, current, element) {
        var mixedRef = element.ref;
        if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
            // TODO: Clean this up once we turn on the string ref warning for
            // everyone, because the strict mode case will no longer be relevant
            if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
            // because these cannot be automatically converted to an arrow function
            // using a codemod. Therefore, we don't have to warn about string refs again.
            !(element._owner && element._self && element._owner.stateNode !== element._self) && // Will already throw with "Function components cannot have string refs"
            !(element._owner && element._owner.tag !== ClassComponent) && // Will already warn with "Function components cannot be given refs"
            !(typeof element.type === "function" && !isReactClass(element.type)) && // Will already throw with "Element ref was specified as a string (someStringRef) but no owner was set"
            element._owner) {
                var componentName = getComponentNameFromFiber(returnFiber) || "Component";
                if (!didWarnAboutStringRefs[componentName]) {
                    error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, mixedRef);
                    didWarnAboutStringRefs[componentName] = true;
                }
            }
            if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                    var ownerFiber = owner;
                    if (ownerFiber.tag !== ClassComponent) throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                    inst = ownerFiber.stateNode;
                }
                if (!inst) throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a " + "bug in React. Please file an issue.");
                 // Assigning this to a const so Flow knows it won't change in the closure
                var resolvedInst = inst;
                checkPropStringCoercion(mixedRef, "ref");
                var stringRef = "" + mixedRef; // Check if previous string ref matches new string ref
                if (current !== null && current.ref !== null && typeof current.ref === "function" && current.ref._stringRef === stringRef) return current.ref;
                var ref = function(value) {
                    var refs = resolvedInst.refs;
                    if (value === null) delete refs[stringRef];
                    else refs[stringRef] = value;
                };
                ref._stringRef = stringRef;
                return ref;
            } else {
                if (typeof mixedRef !== "string") throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                if (!element._owner) throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of" + " the following reasons:\n" + "1. You may be adding a ref to a function component\n" + "2. You may be adding a ref to a component that was not created inside a component's render method\n" + "3. You have multiple copies of React loaded\n" + "See https://reactjs.org/link/refs-must-have-owner for more information.");
            }
        }
        return mixedRef;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        var childString = Object.prototype.toString.call(newChild);
        throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : childString) + "). " + "If you meant to render a collection of children, use an array " + "instead.");
    }
    function warnOnFunctionType(returnFiber) {
        var componentName = getComponentNameFromFiber(returnFiber) || "Component";
        if (ownerHasFunctionTypeWarning[componentName]) return;
        ownerHasFunctionTypeWarning[componentName] = true;
        error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
    }
    function resolveLazy(lazyType) {
        var payload = lazyType._payload;
        var init = lazyType._init;
        return init(payload);
    } // This wrapper function exists because I expect to clone the code in each path
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.
    function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) // Noop.
            return;
            var deletions = returnFiber.deletions;
            if (deletions === null) {
                returnFiber.deletions = [
                    childToDelete
                ];
                returnFiber.flags |= ChildDeletion;
            } else deletions.push(childToDelete);
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) // Noop.
            return null;
             // TODO: For the shouldClone case, this could be micro-optimized a bit by
            // assuming that after the first child we've already added everything.
            var childToDelete = currentFirstChild;
            while(childToDelete !== null){
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
            }
            return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
            // Add the remaining children to a temporary map so that we can find them by
            // keys quickly. Implicit (null) keys get added to this set with their index
            // instead.
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while(existingChild !== null){
                if (existingChild.key !== null) existingChildren.set(existingChild.key, existingChild);
                else existingChildren.set(existingChild.index, existingChild);
                existingChild = existingChild.sibling;
            }
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            // We currently set sibling to null and index to 0 here because it is easy
            // to forget to do before returning it. E.g. for the single child case.
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
                // During hydration, the useId algorithm needs to know which fibers are
                // part of a list of children (arrays, iterators).
                newFiber.flags |= Forked;
                return lastPlacedIndex;
            }
            var current = newFiber.alternate;
            if (current !== null) {
                var oldIndex = current.index;
                if (oldIndex < lastPlacedIndex) {
                    // This is a move.
                    newFiber.flags |= Placement;
                    return lastPlacedIndex;
                } else // This item can stay in place.
                return oldIndex;
            } else {
                // This is an insertion.
                newFiber.flags |= Placement;
                return lastPlacedIndex;
            }
        }
        function placeSingleChild(newFiber) {
            // This is simpler for the single child case. We only need to do a
            // placement for inserting new children.
            if (shouldTrackSideEffects && newFiber.alternate === null) newFiber.flags |= Placement;
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (current === null || current.tag !== HostText) {
                // Insert
                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, textContent);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateElement(returnFiber, current, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, current, element.props.children, lanes, element.key);
            if (current !== null) {
                if (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || // Lazy types should reconcile their resolved type.
                // We need to do this after the Hot Reloading check above,
                // because hot reloading has different semantics than prod because
                // it doesn't resuspend. So we can't let the call below suspend.
                typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {
                    // Move based on index
                    var existing = useFiber(current, element.props);
                    existing.ref = coerceRef(returnFiber, current, element);
                    existing.return = returnFiber;
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                    return existing;
                }
            } // Insert
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current, element);
            created.return = returnFiber;
            return created;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
                // Insert
                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, portal.children || []);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (current === null || current.tag !== Fragment) {
                // Insert
                var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, fragment);
                existing.return = returnFiber;
                return existing;
            }
        }
        function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            }
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                        _created.ref = coerceRef(returnFiber, null, newChild);
                        _created.return = returnFiber;
                        return _created;
                    case REACT_PORTAL_TYPE:
                        var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                        _created2.return = returnFiber;
                        return _created2;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return createChild(returnFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                    _created3.return = returnFiber;
                    return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            // Update the fiber if the keys match, otherwise return null.
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                if (key !== null) return null;
                return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        if (newChild.key === key) return updateElement(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_PORTAL_TYPE:
                        if (newChild.key === key) return updatePortal(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    if (key !== null) return null;
                    return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                // Text nodes don't have keys, so we neither have to check the old nor
                // new node for the key. If both are text nodes, they match.
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                    case REACT_PORTAL_TYPE:
                        var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _matchedFiber3 = existingChildren.get(newIdx) || null;
                    return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return null;
        }
        /**
   * Warns if there is a duplicate or missing key
   */ function warnOnInvalidKey(child, knownKeys, returnFiber) {
            if (typeof child !== "object" || child === null) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(child, returnFiber);
                    var key = child.key;
                    if (typeof key !== "string") break;
                    if (knownKeys === null) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    break;
                case REACT_LAZY_TYPE:
                    var payload = child._payload;
                    var init = child._init;
                    warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                    break;
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            // First, validate keys.
            var knownKeys = null;
            for(var i = 0; i < newChildren.length; i++){
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for(; oldFiber !== null && newIdx < newChildren.length; newIdx++){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; newIdx < newChildren.length; newIdx++){
                    var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                    if (_newFiber === null) continue;
                    lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber;
                    else previousNewFiber.sibling = _newFiber;
                    previousNewFiber = _newFiber;
                }
                if (getIsHydrating()) {
                    var _numberOfForks = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; newIdx < newChildren.length; newIdx++){
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                if (_newFiber2 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber2.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber2;
                    else previousNewFiber.sibling = _newFiber2;
                    previousNewFiber = _newFiber2;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks2 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks2);
            }
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            // This is the same implementation as reconcileChildrenArray(),
            // but using the iterator instead.
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (typeof iteratorFn !== "function") throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            // We don't support rendering Generators because it's a mutation.
            // See https://github.com/facebook/react/issues/12995
            if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
            newChildrenIterable[Symbol.toStringTag] === "Generator") {
                if (!didWarnAboutGenerators) error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                didWarnAboutGenerators = true;
            } // Warn about using Maps as children
            if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                didWarnAboutMaps = true;
            } // First, validate keys.
            // We'll get a different iterator later for the main pass.
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for(; !_step.done; _step = _newChildren.next()){
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (newChildren == null) throw new Error("An iterable object provided no iterator.");
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for(; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; !step.done; newIdx++, step = newChildren.next()){
                    var _newFiber3 = createChild(returnFiber, step.value, lanes);
                    if (_newFiber3 === null) continue;
                    lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber3;
                    else previousNewFiber.sibling = _newFiber3;
                    previousNewFiber = _newFiber3;
                }
                if (getIsHydrating()) {
                    var _numberOfForks3 = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks3);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; !step.done; newIdx++, step = newChildren.next()){
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                if (_newFiber4 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber4.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber4;
                    else previousNewFiber.sibling = _newFiber4;
                    previousNewFiber = _newFiber4;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks4 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks4);
            }
            return resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            // There's no need to check for keys on text nodes since we don't have a
            // way to define them.
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                // We already have an existing node so let's just update it and delete
                // the rest.
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent);
                existing.return = returnFiber;
                return existing;
            } // The existing first child is not a text node so we need to create one
            // and delete the existing ones.
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    var elementType = element.type;
                    if (elementType === REACT_FRAGMENT_TYPE) {
                        if (child.tag === Fragment) {
                            deleteRemainingChildren(returnFiber, child.sibling);
                            var existing = useFiber(child, element.props.children);
                            existing.return = returnFiber;
                            existing._debugSource = element._source;
                            existing._debugOwner = element._owner;
                            return existing;
                        }
                    } else if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.
                    // We need to do this after the Hot Reloading check above,
                    // because hot reloading has different semantics than prod because
                    // it doesn't resuspend. So we can't let the call below suspend.
                    typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var _existing = useFiber(child, element.props);
                        _existing.ref = coerceRef(returnFiber, child, element);
                        _existing.return = returnFiber;
                        _existing._debugSource = element._source;
                        _existing._debugOwner = element._owner;
                        return _existing;
                    }
                     // Didn't match.
                    deleteRemainingChildren(returnFiber, child);
                    break;
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                created.return = returnFiber;
                return created;
            } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
            }
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, portal.children || []);
                        existing.return = returnFiber;
                        return existing;
                    } else {
                        deleteRemainingChildren(returnFiber, child);
                        break;
                    }
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        } // This API will tag the children with the side-effect of the reconciliation
        // itself. They will be added to the side-effect list as we pass through the
        // children and the parent.
        function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
            // This function is not recursive.
            // If the top level item is an array, we treat it as a set of children,
            // not as a fragment. Nested arrays on the other hand will be treated as
            // fragment nodes. Recursion happens at the normal flow.
            // Handle top level unkeyed fragments as if they were arrays.
            // This leads to an ambiguity between <>{[...]}</> and <>...</>.
            // We treat the ambiguous cases above the same.
            var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) newChild = newChild.props.children;
             // Handle object types
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_PORTAL_TYPE:
                        return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init; // TODO: This function is supposed to be non-recursive.
                        return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);
                }
                if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
                if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return reconcileChildFibers;
    }
    var reconcileChildFibers = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);
    function cloneChildFibers(current, workInProgress) {
        if (current !== null && workInProgress.child !== current.child) throw new Error("Resuming work not yet implemented.");
        if (workInProgress.child === null) return;
        var currentChild = workInProgress.child;
        var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
        workInProgress.child = newChild;
        newChild.return = workInProgress;
        while(currentChild.sibling !== null){
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress;
        }
        newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.
    function resetChildFibers(workInProgress, lanes) {
        var child = workInProgress.child;
        while(child !== null){
            resetWorkInProgress(child, lanes);
            child = child.sibling;
        }
    }
    var valueCursor = createCursor(null);
    var rendererSigil;
    // Use this to detect multiple renderers using the same context
    rendererSigil = {};
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastFullyObservedContext = null;
    var isDisallowedContextReadInDEV = false;
    function resetContextDependencies() {
        // This is called right before React yields execution, to ensure `readContext`
        // cannot be called outside the render phase.
        currentlyRenderingFiber = null;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        isDisallowedContextReadInDEV = false;
    }
    function enterDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = true;
    }
    function exitDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = false;
    }
    function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber);
        context._currentValue = currentValue;
    }
    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
        // Update the child lanes of all the ancestors, including the alternates.
        var node = parent;
        while(node !== null){
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
                node.childLanes = mergeLanes(node.childLanes, renderLanes);
                if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            if (node === propagationRoot) break;
            node = node.return;
        }
        if (node !== propagationRoot) error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function propagateContextChange(workInProgress, context, renderLanes) {
        propagateContextChange_eager(workInProgress, context, renderLanes);
    }
    function propagateContextChange_eager(workInProgress, context, renderLanes) {
        var fiber = workInProgress.child;
        if (fiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
        while(fiber !== null){
            var nextFiber = void 0; // Visit this fiber.
            var list = fiber.dependencies;
            if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while(dependency !== null){
                    // Check if the context matches.
                    if (dependency.context === context) {
                        // Match! Schedule an update on this fiber.
                        if (fiber.tag === ClassComponent) {
                            // Schedule a force update on the work-in-progress.
                            var lane = pickArbitraryLane(renderLanes);
                            var update = createUpdate(NoTimestamp, lane);
                            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                            // update to the current fiber, too, which means it will persist even if
                            // this render is thrown away. Since it's a race condition, not sure it's
                            // worth fixing.
                            // Inlined `enqueueUpdate` to remove interleaved update check
                            var updateQueue = fiber.updateQueue;
                            if (updateQueue === null) ;
                            else {
                                var sharedQueue = updateQueue.shared;
                                var pending = sharedQueue.pending;
                                if (pending === null) // This is the first update. Create a circular list.
                                update.next = update;
                                else {
                                    update.next = pending.next;
                                    pending.next = update;
                                }
                                sharedQueue.pending = update;
                            }
                        }
                        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
                        var alternate = fiber.alternate;
                        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
                        scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.
                        list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
                        break;
                    }
                    dependency = dependency.next;
                }
            } else if (fiber.tag === ContextProvider) // Don't scan deeper if this is a matching provider
            nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
            else if (fiber.tag === DehydratedFragment) {
                // If a dehydrated suspense boundary is in this subtree, we don't know
                // if it will have any context consumers in it. The best we can do is
                // mark it as having updates.
                var parentSuspense = fiber.return;
                if (parentSuspense === null) throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
                parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);
                var _alternate = parentSuspense.alternate;
                if (_alternate !== null) _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);
                 // This is intentionally passing this fiber as the parent
                // because we want to schedule this fiber as having work
                // on its children. We'll use the childLanes on
                // this fiber to indicate that a context has changed.
                scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);
                nextFiber = fiber.sibling;
            } else // Traverse down.
            nextFiber = fiber.child;
            if (nextFiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
            nextFiber.return = fiber;
            else {
                // No child. Traverse to next sibling.
                nextFiber = fiber;
                while(nextFiber !== null){
                    if (nextFiber === workInProgress) {
                        // We're back to the root of this subtree. Exit.
                        nextFiber = null;
                        break;
                    }
                    var sibling = nextFiber.sibling;
                    if (sibling !== null) {
                        // Set the return pointer of the sibling to the work-in-progress fiber.
                        sibling.return = nextFiber.return;
                        nextFiber = sibling;
                        break;
                    } // No more siblings. Traverse up.
                    nextFiber = nextFiber.return;
                }
            }
            fiber = nextFiber;
        }
    }
    function prepareToReadContext(workInProgress, renderLanes) {
        currentlyRenderingFiber = workInProgress;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        var dependencies = workInProgress.dependencies;
        if (dependencies !== null) {
            var firstContext = dependencies.firstContext;
            if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes)) // Context list has a pending update. Mark that this fiber performed work.
                markWorkInProgressReceivedUpdate();
                 // Reset the work-in-progress list
                dependencies.firstContext = null;
            }
        }
    }
    function readContext(context) {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        if (isDisallowedContextReadInDEV) error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        var value = context._currentValue;
        if (lastFullyObservedContext === context) ;
        else {
            var contextItem = {
                context: context,
                memoizedValue: value,
                next: null
            };
            if (lastContextDependency === null) {
                if (currentlyRenderingFiber === null) throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                 // This is the first dependency for this component. Create a new list.
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                    lanes: NoLanes,
                    firstContext: contextItem
                };
            } else // Append a new context item.
            lastContextDependency = lastContextDependency.next = contextItem;
        }
        return value;
    }
    // render. When this render exits, either because it finishes or because it is
    // interrupted, the interleaved updates will be transferred onto the main part
    // of the queue.
    var concurrentQueues = null;
    function pushConcurrentUpdateQueue(queue) {
        if (concurrentQueues === null) concurrentQueues = [
            queue
        ];
        else concurrentQueues.push(queue);
    }
    function finishQueueingConcurrentUpdates() {
        // Transfer the interleaved updates onto the main queue. Each queue has a
        // `pending` field and an `interleaved` field. When they are not null, they
        // point to the last node in a circular linked list. We need to append the
        // interleaved list to the end of the pending list by joining them into a
        // single, circular list.
        if (concurrentQueues !== null) {
            for(var i = 0; i < concurrentQueues.length; i++){
                var queue = concurrentQueues[i];
                var lastInterleavedUpdate = queue.interleaved;
                if (lastInterleavedUpdate !== null) {
                    queue.interleaved = null;
                    var firstInterleavedUpdate = lastInterleavedUpdate.next;
                    var lastPendingUpdate = queue.pending;
                    if (lastPendingUpdate !== null) {
                        var firstPendingUpdate = lastPendingUpdate.next;
                        lastPendingUpdate.next = firstInterleavedUpdate;
                        lastInterleavedUpdate.next = firstPendingUpdate;
                    }
                    queue.pending = lastInterleavedUpdate;
                }
            }
            concurrentQueues = null;
        }
    }
    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    }
    function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
    }
    function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    }
    function enqueueConcurrentRenderForLane(fiber, lane) {
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    } // Calling this function outside this module should only be done for backwards
    // compatibility and should always be accompanied by a warning.
    var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
        // Update the source fiber's lanes
        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
        var alternate = sourceFiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, lane);
        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        var node = sourceFiber;
        var parent = sourceFiber.return;
        while(parent !== null){
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            else if ((parent.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            node = parent;
            parent = parent.return;
        }
        if (node.tag === HostRoot) {
            var root = node.stateNode;
            return root;
        } else return null;
    }
    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.
    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    didWarnUpdateInsideUpdate = false;
    currentlyProcessingQueue = null;
    function initializeUpdateQueue(fiber) {
        var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null,
                interleaved: null,
                lanes: NoLanes
            },
            effects: null
        };
        fiber.updateQueue = queue;
    }
    function cloneUpdateQueue(current, workInProgress) {
        // Clone the update queue from current. Unless it's already a clone.
        var queue = workInProgress.updateQueue;
        var currentQueue = current.updateQueue;
        if (queue === currentQueue) {
            var clone = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: currentQueue.firstBaseUpdate,
                lastBaseUpdate: currentQueue.lastBaseUpdate,
                shared: currentQueue.shared,
                effects: currentQueue.effects
            };
            workInProgress.updateQueue = clone;
        }
    }
    function createUpdate(eventTime, lane) {
        var update = {
            eventTime: eventTime,
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
        return update;
    }
    function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return null;
        var sharedQueue = updateQueue.shared;
        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
            error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
            didWarnUpdateInsideUpdate = true;
        }
        if (isUnsafeClassRenderPhaseUpdate()) {
            // This is an unsafe render phase update. Add directly to the update
            // queue so we can process it immediately during the current render.
            var pending = sharedQueue.pending;
            if (pending === null) // This is the first update. Create a circular list.
            update.next = update;
            else {
                update.next = pending.next;
                pending.next = update;
            }
            sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering
            // this fiber. This is for backwards compatibility in the case where you
            // update a different component during render phase than the one that is
            // currently renderings (a pattern that is accompanied by a warning).
            return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
        } else return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
    }
    function entangleTransitions(root, fiber, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return;
        var sharedQueue = updateQueue.shared;
        if (isTransitionLane(lane)) {
            var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must
            // have finished. We can remove them from the shared queue, which represents
            // a superset of the actually pending lanes. In some cases we may entangle
            // more than we need to, but that's OK. In fact it's worse if we *don't*
            // entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        // Captured updates are updates that are thrown by a child during the render
        // phase. They should be discarded if the render is aborted. Therefore,
        // we should only put them on the work-in-progress queue, not the current one.
        var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.
        var current = workInProgress.alternate;
        if (current !== null) {
            var currentQueue = current.updateQueue;
            if (queue === currentQueue) {
                // The work-in-progress queue is the same as current. This happens when
                // we bail out on a parent fiber that then captures an error thrown by
                // a child. Since we want to append the update only to the work-in
                // -progress queue, we need to clone the updates. We usually clone during
                // processUpdateQueue, but that didn't happen in this case because we
                // skipped over the parent when we bailed out.
                var newFirst = null;
                var newLast = null;
                var firstBaseUpdate = queue.firstBaseUpdate;
                if (firstBaseUpdate !== null) {
                    // Loop through the updates and clone them.
                    var update = firstBaseUpdate;
                    do {
                        var clone = {
                            eventTime: update.eventTime,
                            lane: update.lane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        if (newLast === null) newFirst = newLast = clone;
                        else {
                            newLast.next = clone;
                            newLast = clone;
                        }
                        update = update.next;
                    }while (update !== null); // Append the captured update the end of the cloned list.
                    if (newLast === null) newFirst = newLast = capturedUpdate;
                    else {
                        newLast.next = capturedUpdate;
                        newLast = capturedUpdate;
                    }
                } else // There are no base updates.
                newFirst = newLast = capturedUpdate;
                queue = {
                    baseState: currentQueue.baseState,
                    firstBaseUpdate: newFirst,
                    lastBaseUpdate: newLast,
                    shared: currentQueue.shared,
                    effects: currentQueue.effects
                };
                workInProgress.updateQueue = queue;
                return;
            }
        } // Append the update to the end of the list.
        var lastBaseUpdate = queue.lastBaseUpdate;
        if (lastBaseUpdate === null) queue.firstBaseUpdate = capturedUpdate;
        else lastBaseUpdate.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
        switch(update.tag){
            case ReplaceState:
                var payload = update.payload;
                if (typeof payload === "function") {
                    enterDisallowedContextReadInDEV();
                    var nextState = payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                    return nextState;
                } // State object
                return payload;
            case CaptureUpdate:
                workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
            // Intentional fallthrough
            case UpdateState:
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === "function") {
                    enterDisallowedContextReadInDEV();
                    partialState = _payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            _payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                } else // Partial state object
                partialState = _payload;
                if (partialState === null || partialState === undefined) // Null and undefined are treated as no-ops.
                return prevState;
                 // Merge the partial state and the previous state.
                return assign({}, prevState, partialState);
            case ForceUpdate:
                hasForceUpdate = true;
                return prevState;
        }
        return prevState;
    }
    function processUpdateQueue(workInProgress, props, instance, renderLanes) {
        // This is always non-null on a ClassComponent or HostRoot
        var queue = workInProgress.updateQueue;
        hasForceUpdate = false;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate;
        var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.
        var pendingQueue = queue.shared.pending;
        if (pendingQueue !== null) {
            queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
            // and last so that it's non-circular.
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null; // Append pending updates to base queue
            if (lastBaseUpdate === null) firstBaseUpdate = firstPendingUpdate;
            else lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
            // we need to transfer the updates to that queue, too. Because the base
            // queue is a singly-linked list with no cycles, we can append to both
            // lists and take advantage of structural sharing.
            // TODO: Pass `current` as argument
            var current = workInProgress.alternate;
            if (current !== null) {
                // This is always non-null on a ClassComponent or HostRoot
                var currentQueue = current.updateQueue;
                var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                if (currentLastBaseUpdate !== lastBaseUpdate) {
                    if (currentLastBaseUpdate === null) currentQueue.firstBaseUpdate = firstPendingUpdate;
                    else currentLastBaseUpdate.next = firstPendingUpdate;
                    currentQueue.lastBaseUpdate = lastPendingUpdate;
                }
            }
        } // These values may change as we process the queue.
        if (firstBaseUpdate !== null) {
            // Iterate through the list of updates to compute the result.
            var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
            // from the original lanes.
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
                var updateLane = update.lane;
                var updateEventTime = update.eventTime;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        eventTime: updateEventTime,
                        lane: updateLane,
                        tag: update.tag,
                        payload: update.payload,
                        callback: update.callback,
                        next: null
                    };
                    if (newLastBaseUpdate === null) {
                        newFirstBaseUpdate = newLastBaseUpdate = clone;
                        newBaseState = newState;
                    } else newLastBaseUpdate = newLastBaseUpdate.next = clone;
                     // Update the remaining priority in the queue.
                    newLanes = mergeLanes(newLanes, updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newLastBaseUpdate !== null) {
                        var _clone = {
                            eventTime: updateEventTime,
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                    } // Process this update.
                    newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
                    var callback = update.callback;
                    if (callback !== null && // If the update was already committed, we should not queue its
                    // callback again.
                    update.lane !== NoLane) {
                        workInProgress.flags |= Callback;
                        var effects = queue.effects;
                        if (effects === null) queue.effects = [
                            update
                        ];
                        else effects.push(update);
                    }
                }
                update = update.next;
                if (update === null) {
                    pendingQueue = queue.shared.pending;
                    if (pendingQueue === null) break;
                    else {
                        // An update was scheduled from inside a reducer. Add the new
                        // pending updates to the end of the list and keep processing.
                        var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
                        // unravel them when transferring them to the base queue.
                        var _firstPendingUpdate = _lastPendingUpdate.next;
                        _lastPendingUpdate.next = null;
                        update = _firstPendingUpdate;
                        queue.lastBaseUpdate = _lastPendingUpdate;
                        queue.shared.pending = null;
                    }
                }
            }while (true);
            if (newLastBaseUpdate === null) newBaseState = newState;
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to
            // process them during this render, but we do need to track which lanes
            // are remaining.
            var lastInterleaved = queue.shared.interleaved;
            if (lastInterleaved !== null) {
                var interleaved = lastInterleaved;
                do {
                    newLanes = mergeLanes(newLanes, interleaved.lane);
                    interleaved = interleaved.next;
                }while (interleaved !== lastInterleaved);
            } else if (firstBaseUpdate === null) // `queue.lanes` is used for entangling transitions. We can set it back to
            // zero once the queue is empty.
            queue.shared.lanes = NoLanes;
             // Set the remaining expiration time to be whatever is remaining in the queue.
            // This should be fine because the only two other things that contribute to
            // expiration time are props and context. We're already in the middle of the
            // begin phase by the time we start processing the queue, so we've already
            // dealt with the props. Context in components that specify
            // shouldComponentUpdate is tricky; but we'll have to account for
            // that regardless.
            markSkippedUpdateLanes(newLanes);
            workInProgress.lanes = newLanes;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback(callback, context) {
        if (typeof callback !== "function") throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + callback));
        callback.call(context);
    }
    function resetHasForceUpdateBeforeProcessing() {
        hasForceUpdate = false;
    }
    function checkHasForceUpdateAfterProcessing() {
        return hasForceUpdate;
    }
    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        // Commit the effects
        var effects = finishedQueue.effects;
        finishedQueue.effects = null;
        if (effects !== null) for(var i = 0; i < effects.length; i++){
            var effect = effects[i];
            var callback = effect.callback;
            if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance);
            }
        }
    }
    var NO_CONTEXT = {};
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);
    function requiredContext(c) {
        if (c === NO_CONTEXT) throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function getRootHostContainer() {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        return rootInstance;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        // Push current root instance onto the stack;
        // This allows us to reset root when portals are popped.
        push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
        // However, we can't just call getRootHostContext() and push it because
        // we'd have a different number of entries on the stack depending on
        // whether getRootHostContext() throws somewhere in renderer code or not.
        // So we push an empty value first. This lets us safely unwind on errors.
        push(contextStackCursor$1, NO_CONTEXT, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.
        pop(contextStackCursor$1, fiber);
        push(contextStackCursor$1, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        var context = requiredContext(contextStackCursor$1.current);
        return context;
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        var context = requiredContext(contextStackCursor$1.current);
        var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.
        if (context === nextContext) return;
         // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor$1, nextContext, fiber);
    }
    function popHostContext(fiber) {
        // Do not pop unless this Fiber provided the current context.
        // pushHostContext() only pushes Fibers that provide unique contexts.
        if (contextFiberStackCursor.current !== fiber) return;
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
    }
    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.
    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.
    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.
    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);
    function hasSuspenseContext(parentContext, flag) {
        return (parentContext & flag) !== 0;
    }
    function setDefaultShallowSuspenseContext(parentContext) {
        return parentContext & SubtreeSuspenseContextMask;
    }
    function setShallowSuspenseContext(parentContext, shallowContext) {
        return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }
    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
        return parentContext | subtreeContext;
    }
    function pushSuspenseContext(fiber, newContext) {
        push(suspenseStackCursor, newContext, fiber);
    }
    function popSuspenseContext(fiber) {
        pop(suspenseStackCursor, fiber);
    }
    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
        // If it was the primary children that just suspended, capture and render the
        // fallback. Otherwise, don't capture and bubble to the next boundary.
        var nextState = workInProgress.memoizedState;
        if (nextState !== null) {
            if (nextState.dehydrated !== null) // A dehydrated boundary always captures.
            return true;
            return false;
        }
        var props = workInProgress.memoizedProps; // Regular boundaries always capture.
        return true;
    }
    function findFirstSuspended(row) {
        var node = row;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                    var dehydrated = state.dehydrated;
                    if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) return node;
                }
            } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
            // keep track of whether it suspended or not.
            node.memoizedProps.revealOrder !== undefined) {
                var didSuspend = (node.flags & DidCapture) !== NoFlags;
                if (didSuspend) return node;
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) return null;
            while(node.sibling === null){
                if (node.return === null || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    var NoFlags$1 = /*   */ 0; // Represents whether effect should fire.
    var HasEffect = /* */ 1; // Represents the phase in which the effect (not the clean-up) fires.
    var Insertion = /*  */ 2;
    var Layout = /*    */ 4;
    var Passive$1 = /*   */ 8;
    // and should be reset before starting a new render.
    // This tracks which mutable sources need to be reset after a render.
    var workInProgressSources = [];
    function resetWorkInProgressVersions() {
        for(var i = 0; i < workInProgressSources.length; i++){
            var mutableSource = workInProgressSources[i];
            mutableSource._workInProgressVersionPrimary = null;
        }
        workInProgressSources.length = 0;
    }
    // This ensures that the version used for server rendering matches the one
    // that is eventually read during hydration.
    // If they don't match there's a potential tear and a full deopt render is required.
    function registerMutableSourceForHydration(root, mutableSource) {
        var getVersion = mutableSource._getVersion;
        var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
        // Retaining it forever may interfere with GC.
        if (root.mutableSourceEagerHydrationData == null) root.mutableSourceEagerHydrationData = [
            mutableSource,
            version
        ];
        else root.mutableSourceEagerHydrationData.push(mutableSource, version);
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
    var didWarnAboutMismatchedHooksForComponent;
    var didWarnUncachedGetSnapshot;
    didWarnAboutMismatchedHooksForComponent = new Set();
    // These are set right before calling the component.
    var renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.
    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.
    var currentHook = null;
    var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
    // does not get reset if we do another render pass; only when we're completely
    // finished evaluating this component. This is an optimization so we know
    // whether we need to clear render phase updates after a throw.
    var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
    // gets reset after each attempt.
    // TODO: Maybe there's some way to consolidate this with
    // `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.
    var didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.
    var localIdCounter = 0; // Used for ids that are generated completely client-side (i.e. not during
    // hydration). This counter is global, so client ids are not stable across
    // render attempts.
    var globalClientIdCounter = 0;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook
    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.
    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.
    var ignorePreviousDependencies = false;
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev === null) hookTypesDev = [
            hookName
        ];
        else hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev !== null) {
            hookTypesUpdateIndexDev++;
            if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) warnOnHookMismatchInDev(hookName);
        }
    }
    function checkDepsAreArrayDev(deps) {
        if (deps !== undefined && deps !== null && !isArray(deps)) // Verify deps, but only on mount to avoid extra checks.
        // It's unlikely their type would change as usually you define them inline.
        error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnHookMismatchInDev(currentHookName) {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
            didWarnAboutMismatchedHooksForComponent.add(componentName);
            if (hookTypesDev !== null) {
                var table = "";
                var secondColumnStart = 30;
                for(var i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i];
                    var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
                    // lol @ IE not supporting String#repeat
                    while(row.length < secondColumnStart)row += " ";
                    row += newHookName + "\n";
                    table += row;
                }
                error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function throwInvalidHookError() {
        throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) // Only true when this component is being hot reloaded.
        return false;
        if (prevDeps === null) {
            error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            return false;
        }
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++){
            if (objectIs(nextDeps[i], prevDeps[i])) continue;
            return false;
        }
        return true;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes = nextRenderLanes;
        currentlyRenderingFiber$1 = workInProgress;
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:
        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = NoLanes; // The following should have already been reset
        if (current !== null && current.memoizedState !== null) ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        else if (hookTypesDev !== null) // This dispatcher handles an edge case where a component is updating,
        // but no stateful hooks have been used.
        // We want to match the production code behavior (which will use HooksDispatcherOnMount),
        // but with the extra DEV validation to ensure hooks ordering hasn't changed.
        // This dispatcher does that.
        ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        else ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        var children = Component(props, secondArg); // Check if there was a render phase update
        if (didScheduleRenderPhaseUpdateDuringThisPass) {
            // Keep rendering in a loop for as long as render phase updates continue to
            // be scheduled. Use a counter to prevent infinite loops.
            var numberOfReRenders = 0;
            do {
                didScheduleRenderPhaseUpdateDuringThisPass = false;
                localIdCounter = 0;
                if (numberOfReRenders >= RE_RENDER_LIMIT) throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                numberOfReRenders += 1;
                // Even when hot reloading, allow dependencies to stabilize
                // after first render to prevent infinite render phase updates.
                ignorePreviousDependencies = false;
                currentHook = null;
                workInProgressHook = null;
                workInProgress.updateQueue = null;
                // Also validate hook order for cascading updates.
                hookTypesUpdateIndexDev = -1;
                ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                children = Component(props, secondArg);
            }while (didScheduleRenderPhaseUpdateDuringThisPass);
        } // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        workInProgress._debugHookTypes = hookTypesDev;
        // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
        var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
        renderLanes = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook = null;
        workInProgressHook = null;
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last
        // render. If this fires, it suggests that we incorrectly reset the static
        // flags in some other part of the codebase. This has happened before, for
        // example, in the SuspenseList implementation.
        if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
        // and creates false positives. To make this work in legacy mode, we'd
        // need to mark fibers that commit in an incomplete state, somehow. For
        // now I'll disable the warning that most of the bugs that would trigger
        // it are either exclusive to concurrent mode or exist in both.
        (current.mode & ConcurrentMode) !== NoMode) error("Internal React error: Expected static flag was missing. Please notify the React team.");
        didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook
        // localIdCounter = 0;
        if (didRenderTooFewHooks) throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        return children;
    }
    function checkDidRenderIdHook() {
        // This should be called immediately after every renderWithHooks call.
        // Conceptually, it's part of the return value of renderWithHooks; it's only a
        // separate function to avoid using an array tuple.
        var didRenderIdHook = localIdCounter !== 0;
        localIdCounter = 0;
        return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the
        // complete phase (bubbleProperties).
        if ((workInProgress.mode & StrictEffectsMode) !== NoMode) workInProgress.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
        else workInProgress.flags &= ~(Passive | Update);
        current.lanes = removeLanes(current.lanes, lanes);
    }
    function resetHooksAfterThrow() {
        // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        if (didScheduleRenderPhaseUpdate) {
            // There were render phase updates. These are only valid for this render
            // phase, which we are now aborting. Remove the updates from the queues so
            // they do not persist to the next render. Do not remove updates from hooks
            // that weren't processed.
            //
            // Only reset the updates from the queue if it has a clone. If it does
            // not have a clone, that means it wasn't processed, and the updates were
            // scheduled before we entered the render phase.
            var hook = currentlyRenderingFiber$1.memoizedState;
            while(hook !== null){
                var queue = hook.queue;
                if (queue !== null) queue.pending = null;
                hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
        }
        renderLanes = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook = null;
        workInProgressHook = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        isUpdatingOpaqueValueInRenderPhase = false;
        didScheduleRenderPhaseUpdateDuringThisPass = false;
        localIdCounter = 0;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        if (workInProgressHook === null) // This is the first hook in the list
        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
        else // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        // This function is used both for updates and for re-renders triggered by a
        // render phase update. It assumes there is either a current hook we can
        // clone, or a work-in-progress hook from a previous render pass that we can
        // use as a base. When we reach the end of the base list, we must switch to
        // the dispatcher used for mounts.
        var nextCurrentHook;
        if (currentHook === null) {
            var current = currentlyRenderingFiber$1.alternate;
            if (current !== null) nextCurrentHook = current.memoizedState;
            else nextCurrentHook = null;
        } else nextCurrentHook = currentHook.next;
        var nextWorkInProgressHook;
        if (workInProgressHook === null) nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
        else nextWorkInProgressHook = workInProgressHook.next;
        if (nextWorkInProgressHook !== null) {
            // There's already a work-in-progress. Reuse it.
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook = nextCurrentHook;
        } else {
            // Clone from the current hook.
            if (nextCurrentHook === null) throw new Error("Rendered more hooks than during the previous render.");
            currentHook = nextCurrentHook;
            var newHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
            };
            if (workInProgressHook === null) // This is the first hook in the list.
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            else // Append to the end of the list.
            workInProgressHook = workInProgressHook.next = newHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null,
            stores: null
        };
    }
    function basicStateReducer(state, action) {
        // $FlowFixMe: Flow doesn't like mixed types
        return typeof action === "function" ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        var initialState;
        if (init !== undefined) initialState = init(initialArg);
        else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer;
        var current = currentHook; // The last rebase update that is NOT part of the base state.
        var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.
        var pendingQueue = queue.pending;
        if (pendingQueue !== null) {
            // We have new updates that haven't been processed yet.
            // We'll add them to the base queue.
            if (baseQueue !== null) {
                // Merge the pending queue and the base queue.
                var baseFirst = baseQueue.next;
                var pendingFirst = pendingQueue.next;
                baseQueue.next = pendingFirst;
                pendingQueue.next = baseFirst;
            }
            if (current.baseQueue !== baseQueue) // Internal invariant that should never happen, but feasibly could in
            // the future if we implement resuming, or some form of that.
            error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        if (baseQueue !== null) {
            // We have a queue to process.
            var first = baseQueue.next;
            var newState = current.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
                var updateLane = update.lane;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        lane: updateLane,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    };
                    if (newBaseQueueLast === null) {
                        newBaseQueueFirst = newBaseQueueLast = clone;
                        newBaseState = newState;
                    } else newBaseQueueLast = newBaseQueueLast.next = clone;
                     // Update the remaining priority in the queue.
                    // TODO: Don't need to accumulate this. Instead, we can remove
                    // renderLanes from the original lanes.
                    currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                    markSkippedUpdateLanes(updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newBaseQueueLast !== null) {
                        var _clone = {
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            action: update.action,
                            hasEagerState: update.hasEagerState,
                            eagerState: update.eagerState,
                            next: null
                        };
                        newBaseQueueLast = newBaseQueueLast.next = _clone;
                    } // Process this update.
                    if (update.hasEagerState) // If this update is a state update (not a reducer) and was processed eagerly,
                    // we can use the eagerly computed state
                    newState = update.eagerState;
                    else {
                        var action = update.action;
                        newState = reducer(newState, action);
                    }
                }
                update = update.next;
            }while (update !== null && update !== first);
            if (newBaseQueueLast === null) newBaseState = newState;
            else newBaseQueueLast.next = newBaseQueueFirst;
             // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
        } // Interleaved updates are stored on a separate queue. We aren't going to
        // process them during this render, but we do need to track which lanes
        // are remaining.
        var lastInterleaved = queue.interleaved;
        if (lastInterleaved !== null) {
            var interleaved = lastInterleaved;
            do {
                var interleavedLane = interleaved.lane;
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
                markSkippedUpdateLanes(interleavedLane);
                interleaved = interleaved.next;
            }while (interleaved !== lastInterleaved);
        } else if (baseQueue === null) // `queue.lanes` is used for entangling transitions. We can set it back to
        // zero once the queue is empty.
        queue.lanes = NoLanes;
        var dispatch = queue.dispatch;
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function rerenderReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
        // work-in-progress hook.
        var dispatch = queue.dispatch;
        var lastRenderPhaseUpdate = queue.pending;
        var newState = hook.memoizedState;
        if (lastRenderPhaseUpdate !== null) {
            // The queue doesn't persist past this render pass.
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
                // Process this render phase update. We don't have to check the
                // priority because it will always be the same as the current
                // render's.
                var action = update.action;
                newState = reducer(newState, action);
                update = update.next;
            }while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.
            if (hook.baseQueue === null) hook.baseState = newState;
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function mountMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function updateMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = mountWorkInProgressHook();
        var nextSnapshot;
        var isHydrating = getIsHydrating();
        if (isHydrating) {
            if (getServerSnapshot === undefined) throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            nextSnapshot = getServerSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                if (nextSnapshot !== getServerSnapshot()) {
                    error("The result of getServerSnapshot should be cached to avoid an infinite loop");
                    didWarnUncachedGetSnapshot = true;
                }
            }
        } else {
            nextSnapshot = getSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                var cachedSnapshot = getSnapshot();
                if (!objectIs(nextSnapshot, cachedSnapshot)) {
                    error("The result of getSnapshot should be cached to avoid an infinite loop");
                    didWarnUncachedGetSnapshot = true;
                }
            }
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            //
            // We won't do this if we're hydrating server-rendered content, because if
            // the content is stale, it's already visible anyway. Instead we'll patch
            // it up in a passive effect.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            if (!includesBlockingLane(root, renderLanes)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        } // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        hook.memoizedState = nextSnapshot;
        var inst = {
            value: nextSnapshot,
            getSnapshot: getSnapshot
        };
        hook.queue = inst; // Schedule an effect to subscribe to the store.
        mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Schedule an effect to update the mutable instance fields. We will update
        // this whenever subscribe, getSnapshot, or value changes. Because there's no
        // clean-up function, and we track the deps correctly, we can call pushEffect
        // directly, without storing any additional state. For the same reason, we
        // don't need to set a static flag, either.
        // TODO: We can move this to the passive phase once we add a pre-commit
        // consistency check. See the next comment.
        fiber.flags |= Passive;
        pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);
        return nextSnapshot;
    }
    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        var nextSnapshot = getSnapshot();
        if (!didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            if (!objectIs(nextSnapshot, cachedSnapshot)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
            }
        }
        var prevSnapshot = hook.memoizedState;
        var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
        if (snapshotChanged) {
            hook.memoizedState = nextSnapshot;
            markWorkInProgressReceivedUpdate();
        }
        var inst = hook.queue;
        updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Whenever getSnapshot or subscribe changes, we need to check in the
        // commit phase if there was an interleaved mutation. In concurrent mode
        // this can happen all the time, but even in synchronous mode, an earlier
        // effect may have mutated the store.
        if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by
        // checking whether we scheduled a subscription effect above.
        workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= Passive;
            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            if (!includesBlockingLane(root, renderLanes)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        return nextSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= StoreConsistency;
        var check = {
            getSnapshot: getSnapshot,
            value: renderedSnapshot
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.stores = [
                check
            ];
        } else {
            var stores = componentUpdateQueue.stores;
            if (stores === null) componentUpdateQueue.stores = [
                check
            ];
            else stores.push(check);
        }
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        // These are updated in the passive phase
        inst.value = nextSnapshot;
        inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could
        // have been in an event that fired before the passive effects, or it could
        // have been in a layout effect. In that case, we would have used the old
        // snapsho and getSnapshot values to bail out. We need to check one more time.
        if (checkIfSnapshotChanged(inst)) // Force a re-render.
        forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
        var handleStoreChange = function() {
            // The store changed. Check if the snapshot changed since the last time we
            // read from the store.
            if (checkIfSnapshotChanged(inst)) // Force a re-render.
            forceStoreRerender(fiber);
        }; // Subscribe to the store and return a clean-up function.
        return subscribe(handleStoreChange);
    }
    function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        var prevValue = inst.value;
        try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
        } catch (error) {
            return true;
        }
    }
    function forceStoreRerender(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
    function mountState(initialState) {
        var hook = mountWorkInProgressHook();
        if (typeof initialState === "function") // $FlowFixMe: Flow doesn't like mixed types
        initialState = initialState();
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateState(initialState) {
        return updateReducer(basicStateReducer);
    }
    function rerenderState(initialState) {
        return rerenderReducer(basicStateReducer);
    }
    function pushEffect(tag, create, destroy, deps) {
        var effect = {
            tag: tag,
            create: create,
            destroy: destroy,
            deps: deps,
            // Circular
            next: null
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) componentUpdateQueue.lastEffect = effect.next = effect;
            else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
            }
        }
        return effect;
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        var _ref2 = {
            current: initialValue
        };
        hook.memoizedState = _ref2;
        return _ref2;
    }
    function updateRef(initialValue) {
        var hook = updateWorkInProgressHook();
        return hook.memoizedState;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var destroy = undefined;
        if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                    hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
                    return;
                }
            }
        }
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
    }
    function mountEffect(create, deps) {
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
        else return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
    }
    function updateEffect(create, deps) {
        return updateEffectImpl(Passive, Passive$1, create, deps);
    }
    function mountInsertionEffect(create, deps) {
        return mountEffectImpl(Update, Insertion, create, deps);
    }
    function updateInsertionEffect(create, deps) {
        return updateEffectImpl(Update, Insertion, create, deps);
    }
    function mountLayoutEffect(create, deps) {
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function updateLayoutEffect(create, deps) {
        return updateEffectImpl(Update, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if (typeof ref === "function") {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
                refCallback(null);
            };
        } else if (ref !== null && ref !== undefined) {
            var refObject = ref;
            if (!refObject.hasOwnProperty("current")) error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
                refObject.current = null;
            };
        }
    }
    function mountImperativeHandle(ref, create, deps) {
        if (typeof create !== "function") error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function updateImperativeHandle(ref, create, deps) {
        if (typeof create !== "function") error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function mountDebugValue(value, formatterFn) {
    // The react-debug-hooks package injects its own implementation
    // so that e.g. DevTools can display custom hook values.
    }
    var updateDebugValue = mountDebugValue;
    function mountCallback(callback, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) // Assume these are defined. If they're not, areHookInputsEqual will warn.
        {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function mountDeferredValue(value) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = value;
        return value;
    }
    function updateDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        var resolvedCurrentHook = currentHook;
        var prevValue = resolvedCurrentHook.memoizedState;
        return updateDeferredValueImpl(hook, prevValue, value);
    }
    function rerenderDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        if (currentHook === null) {
            // This is a rerender during a mount.
            hook.memoizedState = value;
            return value;
        } else {
            // This is a rerender during an update.
            var prevValue = currentHook.memoizedState;
            return updateDeferredValueImpl(hook, prevValue, value);
        }
    }
    function updateDeferredValueImpl(hook, prevValue, value) {
        var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
        if (shouldDeferValue) {
            // This is an urgent update. If the value has changed, keep using the
            // previous value and spawn a deferred render to update it later.
            if (!objectIs(value, prevValue)) {
                // Schedule a deferred render
                var deferredLane = claimNextTransitionLane();
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
                markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent
                // from the latest value. The name "baseState" doesn't really match how we
                // use it because we're reusing a state hook field instead of creating a
                // new one.
                hook.baseState = true;
            } // Reuse the previous value
            return prevValue;
        } else {
            // This is not an urgent update, so we can use the latest value regardless
            // of what it is. No need to defer it.
            // However, if we're currently inside a spawned render, then we need to mark
            // this as an update to prevent the fiber from bailing out.
            //
            // `baseState` is true when the current value is different from the rendered
            // value. The name doesn't really match how we use it because we're reusing
            // a state hook field instead of creating a new one.
            if (hook.baseState) {
                // Flip this back to false.
                hook.baseState = false;
                markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = value;
            return value;
        }
    }
    function startTransition(setPending, callback, options) {
        var previousPriority = getCurrentUpdatePriority();
        setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
        setPending(true);
        var prevTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition = {};
        var currentTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition._updatedFibers = new Set();
        try {
            setPending(false);
            callback();
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$2.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    function mountTransition() {
        var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1]; // The `start` method never changes.
        var start = startTransition.bind(null, setPending);
        var hook = mountWorkInProgressHook();
        hook.memoizedState = start;
        return [
            isPending,
            start
        ];
    }
    function updateTransition() {
        var _updateState = updateState(), isPending = _updateState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    function rerenderTransition() {
        var _rerenderState = rerenderState(), isPending = _rerenderState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    var isUpdatingOpaqueValueInRenderPhase = false;
    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
        return isUpdatingOpaqueValueInRenderPhase;
    }
    function mountId() {
        var hook = mountWorkInProgressHook();
        var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we
        // should do this in Fiber, too? Deferring this decision for now because
        // there's no other place to store the prefix except for an internal field on
        // the public createRoot object, which the fiber tree does not currently have
        // a reference to.
        var identifierPrefix = root.identifierPrefix;
        var id;
        if (getIsHydrating()) {
            var treeId = getTreeId(); // Use a captial R prefix for server-generated ids.
            id = ":" + identifierPrefix + "R" + treeId; // Unless this is the first id at this level, append a number at the end
            // that represents the position of this useId hook among all the useId
            // hooks for this fiber.
            var localId = localIdCounter++;
            if (localId > 0) id += "H" + localId.toString(32);
            id += ":";
        } else {
            // Use a lowercase r prefix for client-generated ids.
            var globalClientId = globalClientIdCounter++;
            id = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
        }
        hook.memoizedState = id;
        return id;
    }
    function updateId() {
        var hook = updateWorkInProgressHook();
        var id = hook.memoizedState;
        return id;
    }
    function dispatchReducerAction(fiber, queue, action) {
        if (typeof arguments[3] === "function") error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitionUpdate(root, queue, lane);
            }
        }
        markUpdateInDevTools(fiber, lane);
    }
    function dispatchSetState(fiber, queue, action) {
        if (typeof arguments[3] === "function") error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var alternate = fiber.alternate;
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                // The queue is currently empty, which means we can eagerly compute the
                // next state before entering the render phase. If the new state is the
                // same as the current state, we may be able to bail out entirely.
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                    var prevDispatcher;
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                    try {
                        var currentState = queue.lastRenderedState;
                        var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
                        // it, on the update object. If the reducer hasn't changed by the
                        // time we enter the render phase, then the eager state can be used
                        // without calling the reducer again.
                        update.hasEagerState = true;
                        update.eagerState = eagerState;
                        if (objectIs(eagerState, currentState)) {
                            // Fast path. We can bail out without scheduling React to re-render.
                            // It's still possible that we'll need to rebase this update later,
                            // if the component re-renders for a different reason and by that
                            // time the reducer has changed.
                            // TODO: Do we still need to entangle transitions in this case?
                            enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
                            return;
                        }
                    } catch (error) {} finally{
                        ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                }
            }
            var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitionUpdate(root, queue, lane);
            }
        }
        markUpdateInDevTools(fiber, lane);
    }
    function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
    }
    function enqueueRenderPhaseUpdate(queue, update) {
        // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
        var pending = queue.pending;
        if (pending === null) // This is the first update. Create a circular list.
        update.next = update;
        else {
            update.next = pending.next;
            pending.next = update;
        }
        queue.pending = update;
    } // TODO: Move to ReactFiberConcurrentUpdates?
    function entangleTransitionUpdate(root, queue, lane) {
        if (isTransitionLane(lane)) {
            var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they
            // must have finished. We can remove them from the shared queue, which
            // represents a superset of the actually pending lanes. In some cases we
            // may entangle more than we need to, but that's OK. In fact it's worse if
            // we *don't* entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function markUpdateInDevTools(fiber, lane, action) {
        markStateUpdateScheduled(fiber, lane);
    }
    var ContextOnlyDispatcher = {
        readContext: readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useMutableSource: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        unstable_isNewReconciler: enableNewReconciler
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var HooksDispatcherOnRerenderInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    var warnInvalidContextAccess = function() {
        error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    };
    var warnInvalidHookAccess = function() {
        error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
    };
    HooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            updateHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    var now$1 = Scheduler.unstable_now;
    var commitTime = 0;
    var layoutEffectStartTime = -1;
    var profilerStartTime = -1;
    var passiveEffectStartTime = -1;
    /**
 * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).
 *
 * The overall sequence is:
 *   1. render
 *   2. commit (and call `onRender`, `onCommit`)
 *   3. check for nested updates
 *   4. flush passive effects (and call `onPostCommit`)
 *
 * Nested updates are identified in step 3 above,
 * but step 4 still applies to the work that was just committed.
 * We use two flags to track nested updates then:
 * one tracks whether the upcoming update is a nested update,
 * and the other tracks whether the current update was a nested update.
 * The first value gets synced to the second at the start of the render phase.
 */ var currentUpdateIsNested = false;
    var nestedUpdateScheduled = false;
    function isCurrentUpdateNested() {
        return currentUpdateIsNested;
    }
    function markNestedUpdateScheduled() {
        nestedUpdateScheduled = true;
    }
    function resetNestedUpdateFlag() {
        currentUpdateIsNested = false;
        nestedUpdateScheduled = false;
    }
    function syncNestedUpdateFlag() {
        currentUpdateIsNested = nestedUpdateScheduled;
        nestedUpdateScheduled = false;
    }
    function getCommitTime() {
        return commitTime;
    }
    function recordCommitTime() {
        commitTime = now$1();
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now$1();
        if (fiber.actualStartTime < 0) fiber.actualStartTime = now$1();
    }
    function stopProfilerTimerIfRunning(fiber) {
        profilerStartTime = -1;
    }
    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
        if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function recordLayoutEffectDuration(fiber) {
        if (layoutEffectStartTime >= 0) {
            var elapsedTime = now$1() - layoutEffectStartTime;
            layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        root.effectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        parentStateNode.effectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function recordPassiveEffectDuration(fiber) {
        if (passiveEffectStartTime >= 0) {
            var elapsedTime = now$1() - passiveEffectStartTime;
            passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        if (root !== null) root.passiveEffectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        if (parentStateNode !== null) // Detached fibers have their state node cleared out.
                        // In this case, the return pointer is also cleared out,
                        // so we won't be able to report the time spent in this Profiler's subtree.
                        parentStateNode.passiveEffectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function startLayoutEffectTimer() {
        layoutEffectStartTime = now$1();
    }
    function startPassiveEffectTimer() {
        passiveEffectStartTime = now$1();
    }
    function transferActualDuration(fiber) {
        // Transfer time spent rendering these children so we don't lose it
        // after we rerender. This is used as a helper in special cases
        // where we should count the work of multiple passes.
        var child = fiber.child;
        while(child){
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
        }
    }
    function resolveDefaultProps(Component, baseProps) {
        if (Component && Component.defaultProps) {
            // Resolve default props. Taken from ReactElement
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for(var propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
            return props;
        }
        return baseProps;
    }
    var fakeInternalInstance = {};
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    var didWarnAboutLegacyContext$1;
    didWarnAboutStateAssignmentForComponent = new Set();
    didWarnAboutUninitializedState = new Set();
    didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    didWarnAboutDirectlyAssigningPropsToState = new Set();
    didWarnAboutUndefinedDerivedState = new Set();
    didWarnAboutContextTypeAndContextTypes = new Set();
    didWarnAboutInvalidateContextType = new Set();
    didWarnAboutLegacyContext$1 = new Set();
    var didWarnOnInvalidCallback = new Set();
    warnOnInvalidCallback = function(callback, callerName) {
        if (callback === null || typeof callback === "function") return;
        var key = callerName + "_" + callback;
        if (!didWarnOnInvalidCallback.has(key)) {
            didWarnOnInvalidCallback.add(key);
            error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
        }
    };
    warnOnUndefinedDerivedState = function(type, partialState) {
        if (partialState === undefined) {
            var componentName = getComponentNameFromType(type) || "Component";
            if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
            }
        }
    }; // This is so gross but it's at least non-critical and can be removed if
    // it causes problems. This is meant to give a nicer error message for
    // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
    // ...)) which otherwise throws a "_processChildContext is not a function"
    // exception.
    Object.defineProperty(fakeInternalInstance, "_processChildContext", {
        enumerable: false,
        value: function() {
            throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
    });
    Object.freeze(fakeInternalInstance);
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState;
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                // Invoke the function an extra time to help detect side-effects.
                partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        warnOnUndefinedDerivedState(ctor, partialState);
        var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);
        workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
        // base state.
        if (workInProgress.lanes === NoLanes) {
            // Queue is always non-null for classes
            var updateQueue = workInProgress.updateQueue;
            updateQueue.baseState = memoizedState;
        }
    }
    var classComponentUpdater = {
        isMounted: isMounted,
        enqueueSetState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, "setState");
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, "replaceState");
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, "forceUpdate");
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markForceUpdateScheduled(fiber, lane);
        }
    };
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if (typeof instance.shouldComponentUpdate === "function") {
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    // Invoke the function an extra time to help detect side-effects.
                    shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (shouldUpdate === undefined) error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
            return shouldUpdate;
        }
        if (ctor.prototype && ctor.prototype.isPureReactComponent) return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
        return true;
    }
    function checkClassInstance(workInProgress, ctor, newProps) {
        var instance = workInProgress.stateNode;
        var name = getComponentNameFromType(ctor) || "Component";
        var renderPresent = instance.render;
        if (!renderPresent) {
            if (ctor.prototype && typeof ctor.prototype.render === "function") error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
            else error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
        }
        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
        if (instance.propTypes) error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
        if (instance.contextType) error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
        if (ctor.childContextTypes && !didWarnAboutLegacyContext$1.has(ctor) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (workInProgress.mode & StrictLegacyMode) === NoMode) {
            didWarnAboutLegacyContext$1.add(ctor);
            error("%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() instead\n\n.Learn more about this warning here: https://reactjs.org/link/legacy-context", name);
        }
        if (ctor.contextTypes && !didWarnAboutLegacyContext$1.has(ctor) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (workInProgress.mode & StrictLegacyMode) === NoMode) {
            didWarnAboutLegacyContext$1.add(ctor);
            error("%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() with static contextType instead.\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", name);
        }
        if (instance.contextTypes) error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
        if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
        }
        if (typeof instance.componentShouldUpdate === "function") error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
        if (typeof instance.componentDidUnmount === "function") error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
        if (typeof instance.componentDidReceiveProps === "function") error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
        if (typeof instance.componentWillRecieveProps === "function") error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
        if (typeof instance.UNSAFE_componentWillRecieveProps === "function") error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
        var hasMutatedProps = instance.props !== newProps;
        if (instance.props !== undefined && hasMutatedProps) error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
        if (instance.defaultProps) error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
        if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
            error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
        }
        if (typeof instance.getDerivedStateFromProps === "function") error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof instance.getDerivedStateFromError === "function") error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof ctor.getSnapshotBeforeUpdate === "function") error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
        var _state = instance.state;
        if (_state && (typeof _state !== "object" || isArray(_state))) error("%s.state: must be set to an object or null", name);
        if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = classComponentUpdater;
        workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates
        set(instance, workInProgress);
        instance._reactInternalInstance = fakeInternalInstance;
    }
    function constructClassInstance(workInProgress, ctor, props) {
        var isLegacyContextConsumer = false;
        var unmaskedContext = emptyContextObject;
        var context = emptyContextObject;
        var contextType = ctor.contextType;
        if ("contextType" in ctor) {
            var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>
            if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === undefined) addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                else if (typeof contextType !== "object") addendum = " However, it is set to a " + typeof contextType + ".";
                else if (contextType.$$typeof === REACT_PROVIDER_TYPE) addendum = " Did you accidentally pass the Context.Provider instead?";
                else if (contextType._context !== undefined) // <Context.Consumer>
                addendum = " Did you accidentally pass the Context.Consumer instead?";
                else addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
            }
        }
        if (typeof contextType === "object" && contextType !== null) context = readContext(contextType);
        else {
            unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
        }
        var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                instance = new ctor(props, context); // eslint-disable-line no-new
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
        adoptClassInstance(workInProgress, instance);
        if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
            }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.
        if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
            var foundWillMountName = null;
            var foundWillReceivePropsName = null;
            var foundWillUpdateName = null;
            if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) foundWillMountName = "componentWillMount";
            else if (typeof instance.UNSAFE_componentWillMount === "function") foundWillMountName = "UNSAFE_componentWillMount";
            if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) foundWillReceivePropsName = "componentWillReceiveProps";
            else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
            if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) foundWillUpdateName = "componentWillUpdate";
            else if (typeof instance.UNSAFE_componentWillUpdate === "function") foundWillUpdateName = "UNSAFE_componentWillUpdate";
            if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
            }
        }
        // ReactFiberContext usually updates this cache but can't for newly-created instances.
        if (isLegacyContextConsumer) cacheContext(workInProgress, unmaskedContext, context);
        return instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount === "function") instance.componentWillMount();
        if (typeof instance.UNSAFE_componentWillMount === "function") instance.UNSAFE_componentWillMount();
        if (oldState !== instance.state) {
            error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress) || "Component");
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        if (typeof instance.componentWillReceiveProps === "function") instance.componentWillReceiveProps(newProps, nextContext);
        if (typeof instance.UNSAFE_componentWillReceiveProps === "function") instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        if (instance.state !== oldState) {
            var componentName = getComponentNameFromFiber(workInProgress) || "Component";
            if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    } // Invokes the mount life-cycles on a previously never rendered instance.
    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        checkClassInstance(workInProgress, ctor, newProps);
        var instance = workInProgress.stateNode;
        instance.props = newProps;
        instance.state = workInProgress.memoizedState;
        instance.refs = {};
        initializeUpdateQueue(workInProgress);
        var contextType = ctor.contextType;
        if (typeof contextType === "object" && contextType !== null) instance.context = readContext(contextType);
        else {
            var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            instance.context = getMaskedContext(workInProgress, unmaskedContext);
        }
        if (instance.state === newProps) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        instance.state = workInProgress.memoizedState;
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress.memoizedState;
        } // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
            // process them now.
            processUpdateQueue(workInProgress, newProps, instance, renderLanes);
            instance.state = workInProgress.memoizedState;
        }
        if (typeof instance.componentDidMount === "function") {
            var fiberFlags = Update;
            fiberFlags |= LayoutStatic;
            if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
            workInProgress.flags |= fiberFlags;
        }
    }
    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        var oldProps = workInProgress.memoizedProps;
        instance.props = oldProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === "object" && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function"; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (oldProps !== newProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === "function") {
                var fiberFlags = Update;
                fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
                workInProgress.flags |= fiberFlags;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
                if (typeof instance.componentWillMount === "function") instance.componentWillMount();
                if (typeof instance.UNSAFE_componentWillMount === "function") instance.UNSAFE_componentWillMount();
            }
            if (typeof instance.componentDidMount === "function") {
                var _fiberFlags = Update;
                _fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags;
            }
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === "function") {
                var _fiberFlags2 = Update;
                _fiberFlags2 |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags2 |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags2;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.
    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        cloneUpdateQueue(current, workInProgress);
        var unresolvedOldProps = workInProgress.memoizedProps;
        var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
        instance.props = oldProps;
        var unresolvedNewProps = workInProgress.pendingProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === "object" && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function"; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,
        // both before and after `shouldComponentUpdate` has been called. Not ideal,
        // but I'm loath to refactor this function. This only happens for memoized
        // components so it's not that common.
        enableLazyContextPropagation;
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === "function" || typeof instance.componentWillUpdate === "function")) {
                if (typeof instance.componentWillUpdate === "function") instance.componentWillUpdate(newProps, newState, nextContext);
                if (typeof instance.UNSAFE_componentWillUpdate === "function") instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
            }
            if (typeof instance.componentDidUpdate === "function") workInProgress.flags |= Update;
            if (typeof instance.getSnapshotBeforeUpdate === "function") workInProgress.flags |= Snapshot;
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized props/state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    }
    function createCapturedValueAtFiber(value, source) {
        // If the value is an error, call this function immediately after it is thrown
        // so the stack is accurate.
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source),
            digest: null
        };
    }
    function createCapturedValue(value, digest, stack) {
        return {
            value: value,
            source: null,
            stack: stack != null ? stack : null,
            digest: digest != null ? digest : null
        };
    }
    // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.
    function showErrorDialog(boundary, errorInfo) {
        return true;
    }
    function logCapturedError(boundary, errorInfo) {
        try {
            var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
            // This enables renderers like ReactNative to better manage redbox behavior.
            if (logError === false) return;
            var error = errorInfo.value;
            var source = errorInfo.source;
            var stack = errorInfo.stack;
            var componentStack = stack !== null ? stack : ""; // Browsers support silencing uncaught errors by calling
            // `preventDefault()` in window `error` handler.
            // We record this information as an expando on the error.
            if (error != null && error._suppressLogging) {
                if (boundary.tag === ClassComponent) // The error is recoverable and was silenced.
                // Ignore it and don't print the stack addendum.
                // This is handy for testing error boundaries without noise.
                return;
                 // The error is fatal. Since the silencing might have
                // been accidental, we'll surface it anyway.
                // However, the browser would have silenced the original error
                // so we'll print it first, and then print the stack addendum.
                console["error"](error); // Don't transform to our wrapper
            // For a more detailed description of this block, see:
            // https://github.com/facebook/react/pull/13384
            }
            var componentName = source ? getComponentNameFromFiber(source) : null;
            var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
            var errorBoundaryMessage;
            if (boundary.tag === HostRoot) errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
            else {
                var errorBoundaryName = getComponentNameFromFiber(boundary) || "Anonymous";
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
            }
            var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
            // We don't include the original error message and JS stack because the browser
            // has already printed it. Even if the application swallows the error, it is still
            // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
            console["error"](combinedMessage); // Don't transform to our wrapper
        } catch (e) {
            // This method must not throw, or React internal state will get messed up.
            // If console.error is overridden, or logCapturedError() shows a dialog that throws,
            // we want to report this error outside of the normal stack as a last resort.
            // https://github.com/facebook/react/issues/13188
            setTimeout(function() {
                throw e;
            });
        }
    }
    var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
    function createRootErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.
        update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: null
        };
        var error = errorInfo.value;
        update.callback = function() {
            onUncaughtError(error);
            logCapturedError(fiber, errorInfo);
        };
        return update;
    }
    function createClassErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane);
        update.tag = CaptureUpdate;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if (typeof getDerivedStateFromError === "function") {
            var error$1 = errorInfo.value;
            update.payload = function() {
                return getDerivedStateFromError(error$1);
            };
            update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
                logCapturedError(fiber, errorInfo);
            };
        }
        var inst = fiber.stateNode;
        if (inst !== null && typeof inst.componentDidCatch === "function") update.callback = function callback() {
            markFailedErrorBoundaryForHotReloading(fiber);
            logCapturedError(fiber, errorInfo);
            if (typeof getDerivedStateFromError !== "function") // To preserve the preexisting retry behavior of error boundaries,
            // we keep track of which ones already failed during this batch.
            // This gets reset before we yield back to the browser.
            // TODO: Warn in strict mode if getDerivedStateFromError is
            // not defined.
            markLegacyErrorBoundaryAsFailed(this);
            var error$1 = errorInfo.value;
            var stack = errorInfo.stack;
            this.componentDidCatch(error$1, {
                componentStack: stack !== null ? stack : ""
            });
            if (typeof getDerivedStateFromError !== "function") // If componentDidCatch is the only error boundary method defined,
            // then it needs to call setState to recover from errors.
            // If no state update is scheduled then the boundary will swallow the error.
            {
                if (!includesSomeLane(fiber.lanes, SyncLane)) error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
            }
        };
        return update;
    }
    function attachPingListener(root, wakeable, lanes) {
        // Attach a ping listener
        //
        // The data might resolve before we have a chance to commit the fallback. Or,
        // in the case of a refresh, we'll never commit a fallback. So we need to
        // attach a listener now. When it resolves ("pings"), we can decide whether to
        // try rendering the tree again.
        //
        // Only attach a listener if one does not already exist for the lanes
        // we're currently rendering (which acts like a "thread ID" here).
        //
        // We only need to do this in concurrent mode. Legacy Suspense always
        // commits fallbacks synchronously, so there are no pings.
        var pingCache = root.pingCache;
        var threadIDs;
        if (pingCache === null) {
            pingCache = root.pingCache = new PossiblyWeakMap$1();
            threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === undefined) {
                threadIDs = new Set();
                pingCache.set(wakeable, threadIDs);
            }
        }
        if (!threadIDs.has(lanes)) {
            // Memoize using the thread ID to prevent redundant listeners.
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
            if (isDevToolsPresent) // If we have pending work still, restore the original updaters
            restorePendingUpdaters(root, lanes);
            wakeable.then(ping, ping);
        }
    }
    function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {
        // Retry listener
        //
        // If the fallback does commit, we need to attach a different type of
        // listener. This one schedules an update on the Suspense boundary to turn
        // the fallback state off.
        //
        // Stash the wakeable on the boundary fiber so we can access it in the
        // commit phase.
        //
        // When the wakeable resolves, we'll attempt to render the boundary
        // again ("retry").
        var wakeables = suspenseBoundary.updateQueue;
        if (wakeables === null) {
            var updateQueue = new Set();
            updateQueue.add(wakeable);
            suspenseBoundary.updateQueue = updateQueue;
        } else wakeables.add(wakeable);
    }
    function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
        // A legacy mode Suspense quirk, only relevant to hook components.
        var tag = sourceFiber.tag;
        if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
            var currentSource = sourceFiber.alternate;
            if (currentSource) {
                sourceFiber.updateQueue = currentSource.updateQueue;
                sourceFiber.memoizedState = currentSource.memoizedState;
                sourceFiber.lanes = currentSource.lanes;
            } else {
                sourceFiber.updateQueue = null;
                sourceFiber.memoizedState = null;
            }
        }
    }
    function getNearestSuspenseBoundaryToCapture(returnFiber) {
        var node = returnFiber;
        do {
            if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) return node;
             // This boundary already captured during this render. Continue to the next
            // boundary.
            node = node.return;
        }while (node !== null);
        return null;
    }
    function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {
        // This marks a Suspense boundary so that when we're unwinding the stack,
        // it captures the suspended "exception" and does a second (fallback) pass.
        if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
            // Legacy Mode Suspense
            //
            // If the boundary is in legacy mode, we should *not*
            // suspend the commit. Pretend as if the suspended component rendered
            // null and keep rendering. When the Suspense boundary completes,
            // we'll do a second pass to render the fallback.
            if (suspenseBoundary === returnFiber) // Special case where we suspended while reconciling the children of
            // a Suspense boundary's inner Offscreen wrapper fiber. This happens
            // when a React.lazy component is a direct child of a
            // Suspense boundary.
            //
            // Suspense boundaries are implemented as multiple fibers, but they
            // are a single conceptual unit. The legacy mode behavior where we
            // pretend the suspended fiber committed as `null` won't work,
            // because in this case the "suspended" fiber is the inner
            // Offscreen wrapper.
            //
            // Because the contents of the boundary haven't started rendering
            // yet (i.e. nothing in the tree has partially rendered) we can
            // switch to the regular, concurrent mode behavior: mark the
            // boundary with ShouldCapture and enter the unwind phase.
            suspenseBoundary.flags |= ShouldCapture;
            else {
                suspenseBoundary.flags |= DidCapture;
                sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
                // But we shouldn't call any lifecycle methods or callbacks. Remove
                // all lifecycle effect tags.
                sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                if (sourceFiber.tag === ClassComponent) {
                    var currentSourceFiber = sourceFiber.alternate;
                    if (currentSourceFiber === null) // This is a new mount. Change the tag so it's not mistaken for a
                    // completed class component. For example, we should not call
                    // componentWillUnmount if it is deleted.
                    sourceFiber.tag = IncompleteClassComponent;
                    else {
                        // When we try rendering again, we should not reuse the current fiber,
                        // since it's known to be in an inconsistent state. Use a force update to
                        // prevent a bail out.
                        var update = createUpdate(NoTimestamp, SyncLane);
                        update.tag = ForceUpdate;
                        enqueueUpdate(sourceFiber, update, SyncLane);
                    }
                } // The source fiber did not complete. Mark it with Sync priority to
                // indicate that it still has pending work.
                sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
            }
            return suspenseBoundary;
        } // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.
        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. Transitions apply
        // to this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.
        suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in
        // the begin phase to prevent an early bailout.
        suspenseBoundary.lanes = rootRenderLanes;
        return suspenseBoundary;
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        // The source fiber did not complete.
        sourceFiber.flags |= Incomplete;
        if (isDevToolsPresent) // If we have pending work still, restore the original updaters
        restorePendingUpdaters(root, rootRenderLanes);
        if (value !== null && typeof value === "object" && typeof value.then === "function") {
            // This is a wakeable. The component suspended.
            var wakeable = value;
            resetSuspendedComponent(sourceFiber);
            if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) markDidThrowWhileHydratingDEV();
            var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
            if (suspenseBoundary !== null) {
                suspenseBoundary.flags &= ~ForceClientRender;
                markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always
                // commits fallbacks synchronously, so there are no pings.
                if (suspenseBoundary.mode & ConcurrentMode) attachPingListener(root, wakeable, rootRenderLanes);
                attachRetryListener(suspenseBoundary, root, wakeable);
                return;
            } else {
                // No boundary was found. Unless this is a sync update, this is OK.
                // We can suspend and wait for more data to arrive.
                if (!includesSyncLane(rootRenderLanes)) {
                    // This is not a sync update. Suspend. Since we're not activating a
                    // Suspense boundary, this will unwind all the way to the root without
                    // performing a second pass to render a fallback. (This is arguably how
                    // refresh transitions should work, too, since we're not going to commit
                    // the fallbacks anyway.)
                    //
                    // This case also applies to initial hydration.
                    attachPingListener(root, wakeable, rootRenderLanes);
                    renderDidSuspendDelayIfPossible();
                    return;
                } // This is a sync/discrete update. We treat this case like an error
                // because discrete renders are expected to produce a complete tree
                // synchronously to maintain consistency with external state.
                var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition."); // If we're outside a transition, fall through to the regular error path.
                // The error will be caught by the nearest suspense boundary.
                value = uncaughtSuspenseError;
            }
        } else // This is a regular error, not a Suspense wakeable.
        if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
            markDidThrowWhileHydratingDEV();
            var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber); // If the error was thrown during hydration, we may be able to recover by
            // discarding the dehydrated content and switching to a client render.
            // Instead of surfacing the error, find the nearest Suspense boundary
            // and render it again without hydration.
            if (_suspenseBoundary !== null) {
                if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) // Set a flag to indicate that we should try rendering the normal
                // children again, not the fallback.
                _suspenseBoundary.flags |= ForceClientRender;
                markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // Even though the user may not be affected by this error, we should
                // still log it so it can be fixed.
                queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
                return;
            }
        }
        value = createCapturedValueAtFiber(value, sourceFiber);
        renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start
        // over and traverse parent path again, this time treating the exception
        // as an error.
        var workInProgress = returnFiber;
        do {
            switch(workInProgress.tag){
                case HostRoot:
                    var _errorInfo = value;
                    workInProgress.flags |= ShouldCapture;
                    var lane = pickArbitraryLane(rootRenderLanes);
                    workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);
                    var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);
                    enqueueCapturedUpdate(workInProgress, update);
                    return;
                case ClassComponent:
                    // Capture and retry
                    var errorInfo = value;
                    var ctor = workInProgress.type;
                    var instance = workInProgress.stateNode;
                    if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                        workInProgress.flags |= ShouldCapture;
                        var _lane = pickArbitraryLane(rootRenderLanes);
                        workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state
                        var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);
                        enqueueCapturedUpdate(workInProgress, _update);
                        return;
                    }
                    break;
            }
            workInProgress = workInProgress.return;
        }while (workInProgress !== null);
    }
    function getSuspendedCache() {
        return null;
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    var didWarnAboutDefaultPropsOnFunctionComponent;
    didWarnAboutBadClass = {};
    didWarnAboutModulePatternComponent = {};
    didWarnAboutContextTypeOnFunctionComponent = {};
    didWarnAboutGetDerivedStateOnFunctionComponent = {};
    didWarnAboutFunctionRefs = {};
    didWarnAboutReassigningProps = false;
    didWarnAboutRevealOrder = {};
    didWarnAboutTailOptions = {};
    didWarnAboutDefaultPropsOnFunctionComponent = {};
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        if (current === null) // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
        else // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
    }
    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
        // This function is fork of reconcileChildren. It's used in cases where we
        // want to reconcile without matching against the existing set. This has the
        // effect of all current children being unmounted; even if the type and key
        // are the same, the old child is unmounted and a new child is created.
        //
        // To do this, we're going to go through the reconcile algorithm twice. In
        // the first pass, we schedule a deletion for all the current children by
        // passing null.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
        // pass null in place of where we usually pass the current child set. This has
        // the effect of remounting all children regardless of whether their
        // identities match.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
        }
        var render = Component.render;
        var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (current === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
            Component.defaultProps === undefined) {
                var resolvedType = type;
                resolvedType = resolveFunctionForHotReloading(type);
                // and with only the default shallow comparison, we upgrade it
                // to a SimpleMemoComponent to allow fast path updates.
                workInProgress.tag = SimpleMemoComponent;
                workInProgress.type = resolvedType;
                validateFunctionComponentInDev(workInProgress, type);
                return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);
            }
            var innerPropTypes = type.propTypes;
            if (innerPropTypes) // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(type));
            if (Component.defaultProps !== undefined) {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
                    error("%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.", componentName);
                    didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
                }
            }
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            child.ref = workInProgress.ref;
            child.return = workInProgress;
            workInProgress.child = child;
            return child;
        }
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;
        if (_innerPropTypes) // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(_innerPropTypes, nextProps, "prop", getComponentNameFromType(_type));
        var currentChild = current.child; // This is always exactly one child
        var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
        if (!hasScheduledUpdateOrContext) {
            // This will be the props with resolved defaultProps,
            // unlike current.memoizedProps which will be the unresolved ones.
            var prevProps = currentChild.memoizedProps; // Default to shallow comparison
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        var newChild = createWorkInProgress(currentChild, nextProps);
        newChild.ref = workInProgress.ref;
        newChild.return = workInProgress;
        workInProgress.child = newChild;
        return newChild;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var outerMemoType = workInProgress.elementType;
            if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                // We warn when you define propTypes on lazy()
                // so let's just skip over it to find memo() outer wrapper.
                // Inner props for memo are validated later.
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    outerMemoType = init(payload);
                } catch (x) {
                    outerMemoType = null;
                } // Inner propTypes will be validated in the function component path.
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) checkPropTypes(outerPropTypes, nextProps, "prop", getComponentNameFromType(outerMemoType));
            }
        }
        if (current !== null) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we
                // would during a normal fiber bailout.
                //
                // We don't have strong guarantees that the props object is referentially
                // equal during updates where we can't bail out anyway — like if the props
                // are shallowly equal, but there's a local state or context update in the
                // same batch.
                //
                // However, as a principle, we should aim to make the behavior consistent
                // across different ways of memoizing a component. For example, React.memo
                // has a different internal Fiber layout if you pass a normal function
                // component (SimpleMemoComponent) versus if you pass a different type
                // like forwardRef (MemoComponent). But this is an implementation detail.
                // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't
                // affect whether the props object is reused during a bailout.
                workInProgress.pendingProps = nextProps = prevProps;
                if (!checkScheduledUpdateOrContext(current, renderLanes)) {
                    // The pending lanes were cleared at the beginning of beginWork. We're
                    // about to bail out, but there might be other lanes that weren't
                    // included in the current render. Usually, the priority level of the
                    // remaining updates is accumulated during the evaluation of the
                    // component (i.e. when processing the update queue). But since since
                    // we're bailing out early *without* evaluating the component, we need
                    // to account for it here, too. Reset to the value of the current fiber.
                    // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
                    // because a MemoComponent fiber does not have hooks or an update queue;
                    // rather, it wraps around an inner component, which may or may not
                    // contains hooks.
                    // TODO: Move the reset at in beginWork out of the common path so that
                    // this is no longer necessary.
                    workInProgress.lanes = current.lanes;
                    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        var prevState = current !== null ? current.memoizedState : null;
        if (nextProps.mode === "hidden" || enableLegacyHidden) {
            // Rendering a hidden tree.
            if ((workInProgress.mode & ConcurrentMode) === NoMode) {
                // In legacy sync mode, don't defer the subtree. Render it now.
                // TODO: Consider how Offscreen should work with transitions in the future
                var nextState = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = nextState;
                pushRenderLanes(workInProgress, renderLanes);
            } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
                var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out
                // and resume this tree later.
                var nextBaseLanes;
                if (prevState !== null) {
                    var prevBaseLanes = prevState.baseLanes;
                    nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
                } else nextBaseLanes = renderLanes;
                 // Schedule this fiber to re-render at offscreen priority. Then bailout.
                workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
                var _nextState = {
                    baseLanes: nextBaseLanes,
                    cachePool: spawnedCachePool,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState;
                workInProgress.updateQueue = null;
                // to avoid a push/pop misalignment.
                pushRenderLanes(workInProgress, nextBaseLanes);
                return null;
            } else {
                // This is the second render. The surrounding visible content has already
                // committed. Now we resume rendering the hidden tree.
                // Rendering at offscreen, so we can clear the base lanes.
                var _nextState2 = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.
                var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
                pushRenderLanes(workInProgress, subtreeRenderLanes);
            }
        } else {
            // Rendering a visible tree.
            var _subtreeRenderLanes;
            if (prevState !== null) {
                // We're going from hidden -> visible.
                _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);
                workInProgress.memoizedState = null;
            } else // We weren't previously hidden, and we still aren't, so there's nothing
            // special to do. Need to push to the stack regardless, though, to avoid
            // a push/pop misalignment.
            _subtreeRenderLanes = renderLanes;
            pushRenderLanes(workInProgress, _subtreeRenderLanes);
        }
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    } // Note: These happen to have identical begin phases, for now. We shouldn't hold
    function updateFragment(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMode(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateProfiler(current, workInProgress, renderLanes) {
        workInProgress.flags |= Update;
        // Reset effect durations for the next eventual effect phase.
        // These are reset during render to allow the DevTools commit hook a chance to read them,
        var stateNode = workInProgress.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (current === null && ref !== null || current !== null && current.ref !== ref) {
            // Schedule a Ref effect
            workInProgress.flags |= Ref;
            workInProgress.flags |= RefStatic;
        }
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
        }
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        // This is used by DevTools to force a boundary to error.
        switch(shouldError(workInProgress)){
            case false:
                var _instance = workInProgress.stateNode;
                var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.
                // Is there a better way to do this?
                var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);
                var state = tempInstance.state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
            case true:
                workInProgress.flags |= DidCapture;
                workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes
                var error$1 = new Error("Simulated error coming from DevTools");
                var lane = pickArbitraryLane(renderLanes);
                workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state
                var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);
                enqueueCapturedUpdate(workInProgress, update);
                break;
        }
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
        }
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        var instance = workInProgress.stateNode;
        var shouldUpdate;
        if (instance === null) {
            resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.
            constructClassInstance(workInProgress, Component, nextProps);
            mountClassInstance(workInProgress, Component, nextProps, renderLanes);
            shouldUpdate = true;
        } else if (current === null) // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
        else shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
        var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);
        var inst = workInProgress.stateNode;
        if (shouldUpdate && inst.props !== nextProps) {
            if (!didWarnAboutReassigningProps) error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress) || "a component");
            didWarnAboutReassigningProps = true;
        }
        return nextUnitOfWork;
    }
    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
        // Refs should update even if shouldComponentUpdate returns false
        markRef(current, workInProgress);
        var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;
        if (!shouldUpdate && !didCaptureError) {
            // Context providers should defer to sCU for rendering
            if (hasContext) invalidateContextProvider(workInProgress, Component, false);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        var instance = workInProgress.stateNode; // Rerender
        ReactCurrentOwner$1.current = workInProgress;
        var nextChildren;
        if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
            // If we captured an error, but getDerivedStateFromError is not defined,
            // unmount all the children. componentDidCatch will schedule an update to
            // re-render a fallback. This is temporary until we migrate everyone to
            // the new API.
            // TODO: Warn in a future release.
            nextChildren = null;
            stopProfilerTimerIfRunning();
        } else {
            markComponentRenderStarted(workInProgress);
            setIsRendering(true);
            nextChildren = instance.render();
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    instance.render();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            setIsRendering(false);
            markComponentRenderStopped();
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        if (current !== null && didCaptureError) // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
         // Memoize state using the values we just used to render.
        // TODO: Restructure so we never read values from the instance.
        workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.
        if (hasContext) invalidateContextProvider(workInProgress, Component, true);
        return workInProgress.child;
    }
    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        if (root.pendingContext) pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
        else if (root.context) // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
        pushHostContainer(workInProgress, root.containerInfo);
    }
    function updateHostRoot(current, workInProgress, renderLanes) {
        pushHostRootContext(workInProgress);
        if (current === null) throw new Error("Should have a current fiber. This is a bug in React.");
        var nextProps = workInProgress.pendingProps;
        var prevState = workInProgress.memoizedState;
        var prevChildren = prevState.element;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        var nextState = workInProgress.memoizedState;
        var root = workInProgress.stateNode;
        // being called "element".
        var nextChildren = nextState.element;
        if (prevState.isDehydrated) {
            // This is a hydration root whose shell has not yet hydrated. We should
            // attempt to hydrate.
            // Flip isDehydrated to false to indicate that when this render
            // finishes, the root will no longer be dehydrated.
            var overrideState = {
                element: nextChildren,
                isDehydrated: false,
                cache: nextState.cache,
                pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
                transitions: nextState.transitions
            };
            var updateQueue = workInProgress.updateQueue; // `baseState` can always be the last state because the root doesn't
            // have reducer functions so it doesn't need rebasing.
            updateQueue.baseState = overrideState;
            workInProgress.memoizedState = overrideState;
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during a previous attempt to hydrate the shell, so we
                // forced a client render.
                var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress);
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError);
            } else if (nextChildren !== prevChildren) {
                var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress);
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, _recoverableError);
            } else {
                // The outermost shell has not hydrated yet. Start hydrating.
                enterHydrationState(workInProgress);
                var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
                workInProgress.child = child;
                var node = child;
                while(node){
                    // Mark each child as hydrating. This is a fast path to know whether this
                    // tree is part of a hydrating tree. This is used to determine if a child
                    // node has fully mounted yet, and for scheduling event replaying.
                    // Conceptually this is similar to Placement in that a new subtree is
                    // inserted into the React tree here. It just happens to not need DOM
                    // mutations because it already exists.
                    node.flags = node.flags & ~Placement | Hydrating;
                    node = node.sibling;
                }
            }
        } else {
            // Root is not dehydrated. Either this is a client-only root, or it
            // already hydrated.
            resetHydrationState();
            if (nextChildren === prevChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        }
        return workInProgress.child;
    }
    function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError) {
        // Revert to client rendering.
        resetHydrationState();
        queueHydrationError(recoverableError);
        workInProgress.flags |= ForceClientRender;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostComponent(current, workInProgress, renderLanes) {
        pushHostContext(workInProgress);
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type;
        var nextProps = workInProgress.pendingProps;
        var prevProps = current !== null ? current.memoizedProps : null;
        var nextChildren = nextProps.children;
        var isDirectTextChild = shouldSetTextContent(type, nextProps);
        if (isDirectTextChild) // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also has access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
        else if (prevProps !== null && shouldSetTextContent(type, prevProps)) // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.flags |= ContentReset;
        markRef(current, workInProgress);
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostText(current, workInProgress) {
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
         // Nothing to do here. This is terminal. We'll do the completion step
        // immediately after.
        return null;
    }
    function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
        var props = workInProgress.pendingProps;
        var lazyComponent = elementType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;
        var Component = init(payload); // Store the unwrapped component in the type.
        workInProgress.type = Component;
        var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
        var resolvedProps = resolveDefaultProps(Component, props);
        var child;
        switch(resolvedTag){
            case FunctionComponent:
                validateFunctionComponentInDev(workInProgress, Component);
                workInProgress.type = Component = resolveFunctionForHotReloading(Component);
                child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ClassComponent:
                workInProgress.type = Component = resolveClassForHotReloading(Component);
                child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ForwardRef:
                workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
                child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case MemoComponent:
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, resolvedProps, "prop", getComponentNameFromType(Component));
                }
                child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes);
                return child;
        }
        var hint = "";
        if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) hint = " Did you wrap a component in React.lazy() more than once?";
        // because the fact that it's a separate type of work is an
        // implementation detail.
        throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
    }
    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.
        workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
        // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        constructClassInstance(workInProgress, Component, nextProps);
        mountClassInstance(workInProgress, Component, nextProps, renderLanes);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
    }
    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
        var props = workInProgress.pendingProps;
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
        prepareToReadContext(workInProgress, renderLanes);
        var value;
        var hasId;
        markComponentRenderStarted(workInProgress);
        if (Component.prototype && typeof Component.prototype.render === "function") {
            var componentName = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutBadClass[componentName]) {
                error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        setIsRendering(true);
        ReactCurrentOwner$1.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        hasId = checkDidRenderIdHook();
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        // Support for module components is deprecated and is removed behind a flag.
        // Whether or not it would crash later, we want to show a good message in DEV first.
        if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === undefined) {
            var _componentName = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutModulePatternComponent[_componentName]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
            }
        }
        if (// Eventually we'll delete this branch altogether.
        typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === undefined) {
            var _componentName2 = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
            }
            workInProgress.tag = ClassComponent; // Throw out any hooks that were used.
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
            // During mounting we don't know the child context yet as the instance doesn't exist.
            // We will invalidate the child context in finishClassComponent() right after rendering.
            var hasContext = false;
            if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress);
            } else hasContext = false;
            workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
            initializeUpdateQueue(workInProgress);
            adoptClassInstance(workInProgress, value);
            mountClassInstance(workInProgress, Component, props, renderLanes);
            return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
        } else {
            // Proceed under the assumption that this is a function component
            workInProgress.tag = FunctionComponent;
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
                    hasId = checkDidRenderIdHook();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
            reconcileChildren(null, workInProgress, value, renderLanes);
            validateFunctionComponentInDev(workInProgress, Component);
            return workInProgress.child;
        }
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        if (Component) {
            if (Component.childContextTypes) error("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
        }
        if (workInProgress.ref !== null) {
            var info = "";
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) info += "\n\nCheck the render method of `" + ownerName + "`.";
            var warningKey = ownerName || "";
            var debugSource = workInProgress._debugSource;
            if (debugSource) warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
            if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
            }
        }
        if (Component.defaultProps !== undefined) {
            var componentName = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
                error("%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.", componentName);
                didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
            }
        }
        if (typeof Component.getDerivedStateFromProps === "function") {
            var _componentName3 = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
            }
        }
        if (typeof Component.contextType === "object" && Component.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
            }
        }
    }
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: NoLane
    };
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes,
            cachePool: getSuspendedCache(),
            transitions: null
        };
    }
    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
        var cachePool = null;
        return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),
            cachePool: cachePool,
            transitions: prevOffscreenState.transitions
        };
    } // TODO: Probably should inline this back
    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
        // If we're already showing a fallback, there are cases where we need to
        // remain on that fallback regardless of whether the content has resolved.
        // For example, SuspenseList coordinates when nested content appears.
        if (current !== null) {
            var suspenseState = current.memoizedState;
            if (suspenseState === null) // Currently showing content. Don't hide it, even if ForceSuspenseFallback
            // is true. More precise name might be "ForceRemainSuspenseFallback".
            // Note: This is a factoring smell. Can't remain on a fallback if there's
            // no fallback to remain on.
            return false;
        } // Not currently showing content. Consult the Suspense context.
        return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
    }
    function getRemainingWorkInPrimaryTree(current, renderLanes) {
        // TODO: Should not remove render lanes that were pinged during this render
        return removeLanes(current.childLanes, renderLanes);
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.
        if (shouldSuspend(workInProgress)) workInProgress.flags |= DidCapture;
        var suspenseContext = suspenseStackCursor.current;
        var showFallback = false;
        var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;
        if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
            // Something in this boundary's subtree already suspended. Switch to
            // rendering the fallback children.
            showFallback = true;
            workInProgress.flags &= ~DidCapture;
        } else // Attempting the main content
        if (current === null || current.memoizedState !== null) suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
        // boundary's children. This involves some custom reconciliation logic. Two
        // main reasons this is so complicated.
        //
        // First, Legacy Mode has different semantics for backwards compatibility. The
        // primary tree will commit in an inconsistent state, so when we do the
        // second pass to render the fallback, we do some exceedingly, uh, clever
        // hacks to make that not totally break. Like transferring effects and
        // deletions from hidden tree. In Concurrent Mode, it's much simpler,
        // because we bailout on the primary tree completely and leave it in its old
        // state, no effects. Same as what we do for Offscreen (except that
        // Offscreen doesn't have the first render pass).
        //
        // Second is hydration. During hydration, the Suspense fiber has a slightly
        // different layout, where the child points to a dehydrated fragment, which
        // contains the DOM rendered by the server.
        //
        // Third, even if you set all that aside, Suspense is like error boundaries in
        // that we first we try to render one tree, and if that fails, we render again
        // and switch to a different tree. Like a try/catch block. So we have to track
        // which branch we're currently rendering. Ideally we would model this using
        // a stack.
        if (current === null) {
            // Initial mount
            // Special path for hydration
            // If we're currently hydrating, try to hydrate this boundary.
            tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
            var suspenseState = workInProgress.memoizedState;
            if (suspenseState !== null) {
                var dehydrated = suspenseState.dehydrated;
                if (dehydrated !== null) return mountDehydratedSuspenseComponent(workInProgress, dehydrated);
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
                var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var primaryChildFragment = workInProgress.child;
                primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackFragment;
            } else return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);
        } else {
            // This is an update.
            // Special path for hydration
            var prevState = current.memoizedState;
            if (prevState !== null) {
                var _dehydrated = prevState.dehydrated;
                if (_dehydrated !== null) return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);
            }
            if (showFallback) {
                var _nextFallbackChildren = nextProps.fallback;
                var _nextPrimaryChildren = nextProps.children;
                var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);
                var _primaryChildFragment2 = workInProgress.child;
                var prevOffscreenState = current.child.memoizedState;
                _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
                _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
            } else {
                var _nextPrimaryChildren2 = nextProps.children;
                var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);
                workInProgress.memoizedState = null;
                return _primaryChildFragment3;
            }
        }
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
        var mode = workInProgress.mode;
        var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
        primaryChildFragment.return = workInProgress;
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var progressedPrimaryFragment = workInProgress.child;
        var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
        };
        var primaryChildFragment;
        var fallbackChildFragment;
        if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
            // In legacy mode, we commit the primary tree as if it successfully
            // completed, even though it's in an inconsistent state.
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = 0;
                primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        } else {
            primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        }
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {
        // The props argument to `createFiberFromOffscreen` is `any` typed, so we use
        // this wrapper function to constrain it.
        return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
    }
    function updateWorkInProgressOffscreenFiber(current, offscreenProps) {
        // The props argument to `createWorkInProgress` is `any` typed, so we use this
        // wrapper function to constrain it.
        return createWorkInProgress(current, offscreenProps);
    }
    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: "visible",
            children: primaryChildren
        });
        if ((workInProgress.mode & ConcurrentMode) === NoMode) primaryChildFragment.lanes = renderLanes;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = null;
        if (currentFallbackChildFragment !== null) {
            // Delete the fallback child fragment
            var deletions = workInProgress.deletions;
            if (deletions === null) {
                workInProgress.deletions = [
                    currentFallbackChildFragment
                ];
                workInProgress.flags |= ChildDeletion;
            } else deletions.push(currentFallbackChildFragment);
        }
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
        };
        var primaryChildFragment;
        if (// completed, even though it's in an inconsistent state.
        (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        workInProgress.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            } // The fallback fiber was added as a deletion during the first pass.
            // However, since we're going to remain on the fallback, we no longer want
            // to delete it.
            workInProgress.deletions = null;
        } else {
            primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps); // Since we're reusing a current tree, we need to reuse the flags, too.
            // (We don't do this in legacy mode, because in legacy mode we don't re-use
            // the current tree; see previous branch.)
            primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
        }
        var fallbackChildFragment;
        if (currentFallbackChildFragment !== null) fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
        else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
            // mounted but this is a new fiber.
            fallbackChildFragment.flags |= Placement;
        }
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {
        // Falling back to client rendering. Because this has performance
        // implications, it's considered a recoverable error, even though the user
        // likely won't observe anything wrong with the UI.
        //
        // The error is passed in as an argument to enforce that every caller provide
        // a custom message, or explicitly opt out (currently the only path that opts
        // out is legacy mode; every concurrent path provides an error).
        if (recoverableError !== null) queueHydrationError(recoverableError);
         // This will add the old fiber to the deletion list
        reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.
        var nextProps = workInProgress.pendingProps;
        var primaryChildren = nextProps.children;
        var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already
        // mounted but this is a new fiber.
        primaryChildFragment.flags |= Placement;
        workInProgress.memoizedState = null;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var fiberMode = workInProgress.mode;
        var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
        var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense
        // boundary) already mounted but this is a new fiber.
        fallbackChildFragment.flags |= Placement;
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        if ((workInProgress.mode & ConcurrentMode) !== NoMode) // We will have dropped the effect list which contains the
        // deletion. We need to reconcile to delete the current child.
        reconcileChildFibers(workInProgress, current.child, null, renderLanes);
        return fallbackChildFragment;
    }
    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {
        // During the first pass, we'll bail out and not drill into the children.
        // Instead, we'll leave the content in place and try to hydrate it later.
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            error("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
            workInProgress.lanes = laneToLanes(SyncLane);
        } else if (isSuspenseInstanceFallback(suspenseInstance)) // This is a client-only boundary. Since we won't get any content from the server
        // for this, we need to schedule that at a higher priority based on when it would
        // have timed out. In theory we could render it in this pass but it would have the
        // wrong priority associated with it and will prevent hydration of parent path.
        // Instead, we'll leave work left on it to render it in a separate commit.
        // TODO This time should be the time at which the server rendered response that is
        // a parent to this boundary was displayed. However, since we currently don't have
        // a protocol to transfer that time, we'll just estimate it by using the current
        // time. This will mean that Suspense timeouts are slightly shifted to later than
        // they should be.
        // Schedule a normal pri update to render this content.
        workInProgress.lanes = laneToLanes(DefaultHydrationLane);
        else // We'll continue hydrating the rest at offscreen priority since we'll already
        // be showing the right content coming from the server, it is no rush.
        workInProgress.lanes = laneToLanes(OffscreenLane);
        return null;
    }
    function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {
        if (!didSuspend) {
            // This is the first render pass. Attempt to hydrate.
            // We should never be hydrating at this point because it is the first pass,
            // but after we've already committed once.
            warnIfHydrating();
            if ((workInProgress.mode & ConcurrentMode) === NoMode) return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null);
            if (isSuspenseInstanceFallback(suspenseInstance)) {
                // This boundary is in a permanent fallback state. In this case, we'll never
                // get an update and we'll never be able to hydrate the final content. Let's just try the
                // client side render instead.
                var digest, message, stack;
                var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
                digest = _getSuspenseInstanceF.digest;
                message = _getSuspenseInstanceF.message;
                stack = _getSuspenseInstanceF.stack;
                var error;
                if (message) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error(message);
                else error = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                var capturedValue = createCapturedValue(error, digest, stack);
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);
            }
            // any context has changed, we need to treat is as if the input might have changed.
            var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);
            if (didReceiveUpdate || hasContextChanged) {
                // This boundary has changed since the first render. This means that we are now unable to
                // hydrate it. We might still be able to hydrate it using a higher priority lane.
                var root = getWorkInProgressRoot();
                if (root !== null) {
                    var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);
                    if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                        // Intentionally mutating since this render will get interrupted. This
                        // is one of the very rare times where we mutate the current tree
                        // during the render phase.
                        suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render
                        var eventTime = NoTimestamp;
                        enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);
                        scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);
                    }
                } // If we have scheduled higher pri work above, this will probably just abort the render
                // since we now have higher priority work, but in case it doesn't, we need to prepare to
                // render something, if we time out. Even if that requires us to delete everything and
                // skip hydration.
                // Delay having to do this as long as the suspense timeout allows us.
                renderDidSuspendDelayIfPossible();
                var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);
            } else if (isSuspenseInstancePending(suspenseInstance)) {
                // This component is still pending more data from the server, so we can't hydrate its
                // content. We treat it as if this component suspended itself. It might seem as if
                // we could just try to render it client-side instead. However, this will perform a
                // lot of unnecessary work and is unlikely to complete since it often will suspend
                // on missing data anyway. Additionally, the server might be able to render more
                // than we can on the client yet. In that case we'd end up with more fallback states
                // on the client than if we just leave it alone. If the server times out or errors
                // these should update this boundary to the permanent Fallback state instead.
                // Mark it as having captured (i.e. suspended).
                workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.
                workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.
                var retry = retryDehydratedSuspenseBoundary.bind(null, current);
                registerSuspenseInstanceRetry(suspenseInstance, retry);
                return null;
            } else {
                // This is the first attempt.
                reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);
                var primaryChildren = nextProps.children;
                var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this
                // tree is part of a hydrating tree. This is used to determine if a child
                // node has fully mounted yet, and for scheduling event replaying.
                // Conceptually this is similar to Placement in that a new subtree is
                // inserted into the React tree here. It just happens to not need DOM
                // mutations because it already exists.
                primaryChildFragment.flags |= Hydrating;
                return primaryChildFragment;
            }
        } else {
            // This is the second render pass. We already attempted to hydrated, but
            // something either suspended or errored.
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during hydration. Try again without hydrating.
                workInProgress.flags &= ~ForceClientRender;
                var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);
            } else if (workInProgress.memoizedState !== null) {
                // Something suspended and we should still be in dehydrated mode.
                // Leave the existing child in place.
                workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there
                // but the normal suspense pass doesn't.
                workInProgress.flags |= DidCapture;
                return null;
            } else {
                // Suspended but we should no longer be in dehydrated mode.
                // Therefore we now have to render the fallback.
                var nextPrimaryChildren = nextProps.children;
                var nextFallbackChildren = nextProps.fallback;
                var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var _primaryChildFragment4 = workInProgress.child;
                _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
            }
        }
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
        scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
    }
    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
        // Mark any Suspense boundaries with fallbacks as having work to do.
        // If they were previously forced into fallbacks, they may now be able
        // to unblock.
        var node = firstChild;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            } else if (node.tag === SuspenseListComponent) // If the tail is hidden there might not be an Suspense boundaries
            // to schedule work on. In this case we have to schedule it on the
            // list itself.
            // We don't have to traverse to the children of the list since
            // the list will propagate the change when it rerenders.
            scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function findLastContentRow(firstChild) {
        // This is going to find the last row among these children that is already
        // showing content on the screen, as opposed to being in fallback state or
        // new. If a row has multiple Suspense boundaries, any of them being in the
        // fallback state, counts as the whole row being in a fallback state.
        // Note that the "rows" will be workInProgress, but any nested children
        // will still be current since we haven't rendered them yet. The mounted
        // order may not be the same as the new order. We use the new order.
        var row = firstChild;
        var lastContentRow = null;
        while(row !== null){
            var currentRow = row.alternate; // New rows can't be content rows.
            if (currentRow !== null && findFirstSuspended(currentRow) === null) lastContentRow = row;
            row = row.sibling;
        }
        return lastContentRow;
    }
    function validateRevealOrder(revealOrder) {
        if (revealOrder !== undefined && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
            didWarnAboutRevealOrder[revealOrder] = true;
            if (typeof revealOrder === "string") switch(revealOrder.toLowerCase()){
                case "together":
                case "forwards":
                case "backwards":
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                case "forward":
                case "backward":
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
            }
            else error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
        }
    }
    function validateTailOptions(tailMode, revealOrder) {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
            if (tailMode !== "collapsed" && tailMode !== "hidden") {
                didWarnAboutTailOptions[tailMode] = true;
                error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
            } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                didWarnAboutTailOptions[tailMode] = true;
                error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
            }
        }
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isAnArray = isArray(childSlot);
        var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === "function";
        if (isAnArray || isIterable) {
            var type = isAnArray ? "array" : "iterable";
            error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index, type);
            return false;
        }
        return true;
    }
    function validateSuspenseListChildren(children, revealOrder) {
        if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== undefined && children !== null && children !== false) {
            if (isArray(children)) for(var i = 0; i < children.length; i++){
                if (!validateSuspenseListNestedChild(children[i], i)) return;
            }
            else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === "function") {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                        var step = childrenIterator.next();
                        var _i = 0;
                        for(; !step.done; step = childrenIterator.next()){
                            if (!validateSuspenseListNestedChild(step.value, _i)) return;
                            _i++;
                        }
                    }
                } else error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
            }
        }
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        if (renderState === null) workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode
        };
        else {
            // We can reuse the existing object from previous renders.
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
        }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var revealOrder = nextProps.revealOrder;
        var tailMode = nextProps.tail;
        var newChildren = nextProps.children;
        validateRevealOrder(revealOrder);
        validateTailOptions(tailMode, revealOrder);
        validateSuspenseListChildren(newChildren, revealOrder);
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        var suspenseContext = suspenseStackCursor.current;
        var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress.flags |= DidCapture;
        } else {
            var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) // If we previously forced a fallback, we need to schedule work
            // on any nested boundaries to let them know to try to render
            // again. This is the same as context updating.
            propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        }
        pushSuspenseContext(workInProgress, suspenseContext);
        if ((workInProgress.mode & ConcurrentMode) === NoMode) // In legacy mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
        else switch(revealOrder){
            case "forwards":
                var lastContentRow = findLastContentRow(workInProgress.child);
                var tail;
                if (lastContentRow === null) {
                    // The whole list is part of the tail.
                    // TODO: We could fast path by just rendering the tail now.
                    tail = workInProgress.child;
                    workInProgress.child = null;
                } else {
                    // Disconnect the tail rows after the content row.
                    // We're going to render them separately later.
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode);
                break;
            case "backwards":
                // We're going to find the first row that has existing content.
                // At the same time we're going to reverse the list of everything
                // we pass in the meantime. That's going to be our tail in reverse
                // order.
                var _tail = null;
                var row = workInProgress.child;
                workInProgress.child = null;
                while(row !== null){
                    var currentRow = row.alternate; // New rows can't be content rows.
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                        // This is the beginning of the main content.
                        workInProgress.child = row;
                        break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                } // TODO: If workInProgress.child is null, we can continue on the tail immediately.
                initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode);
                break;
            case "together":
                initSuspenseListRenderState(workInProgress, false, null, null, undefined);
                break;
            default:
                // The default reveal order is the same as not having
                // a boundary.
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function updatePortalComponent(current, workInProgress, renderLanes) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var nextChildren = workInProgress.pendingProps;
        if (current === null) // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
    function updateContextProvider(current, workInProgress, renderLanes) {
        var providerType = workInProgress.type;
        var context = providerType._context;
        var newProps = workInProgress.pendingProps;
        var oldProps = workInProgress.memoizedProps;
        var newValue = newProps.value;
        if (!("value" in newProps)) {
            if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
            }
        }
        var providerPropTypes = workInProgress.type.propTypes;
        if (providerPropTypes) checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
        pushProvider(workInProgress, context, newValue);
        if (oldProps !== null) {
            var oldValue = oldProps.value;
            if (objectIs(oldValue, newValue)) {
                // No change. Bailout early if children are the same.
                if (oldProps.children === newProps.children && !hasContextChanged()) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            } else // The context value changed. Search for matching consumers and schedule
            // them to update.
            propagateContextChange(workInProgress, context, renderLanes);
        }
        var newChildren = newProps.children;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingContextAsConsumer = false;
    function updateContextConsumer(current, workInProgress, renderLanes) {
        var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
        if (context._context === undefined) {
            // This may be because it's a Context (rather than a Consumer).
            // Or it may be because it's older React where they're the same thing.
            // We only want to warn if we're sure it's a new React.
            if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
            }
        } else context = context._context;
        var newProps = workInProgress.pendingProps;
        var render = newProps.children;
        if (typeof render !== "function") error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        prepareToReadContext(workInProgress, renderLanes);
        var newValue = readContext(context);
        markComponentRenderStarted(workInProgress);
        var newChildren;
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        newChildren = render(newValue);
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    function markWorkInProgressReceivedUpdate() {
        didReceiveUpdate = true;
    }
    function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            if (current !== null) {
                // A lazy component only mounts if it suspended inside a non-
                // concurrent tree, in an inconsistent state. We want to treat it like
                // a new mount, even though an empty version of it already committed.
                // Disconnect the alternate pointers.
                current.alternate = null;
                workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
                workInProgress.flags |= Placement;
            }
        }
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        if (current !== null) // Reuse previous dependencies
        workInProgress.dependencies = current.dependencies;
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning();
        markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.
        if (!includesSomeLane(renderLanes, workInProgress.childLanes)) return null;
         // This fiber doesn't have work, but its subtree does. Clone the child
        // fibers and continue.
        cloneChildFibers(current, workInProgress);
        return workInProgress.child;
    }
    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
        var returnFiber = oldWorkInProgress.return;
        if (returnFiber === null) // eslint-disable-next-line react-internal/prod-error-codes
        throw new Error("Cannot swap the root fiber.");
         // Disconnect from the old current.
        // It will get deleted.
        current.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.
        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.
        if (oldWorkInProgress === returnFiber.child) returnFiber.child = newWorkInProgress;
        else {
            var prevSibling = returnFiber.child;
            if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
            throw new Error("Expected parent to have a child.");
            while(prevSibling.sibling !== oldWorkInProgress){
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
                throw new Error("Expected to find the previous sibling.");
            }
            prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                current
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(current);
        newWorkInProgress.flags |= Placement; // Restart work from the new fiber.
        return newWorkInProgress;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
        // Before performing an early bailout, we must check if there are pending
        // updates or context.
        var updateLanes = current.lanes;
        if (includesSomeLane(updateLanes, renderLanes)) return true;
         // No pending update, but because context is propagated lazily, we need
        return false;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
        // This fiber does not have any pending work. Bailout without entering
        // the begin phase. There's still some bookkeeping we that needs to be done
        // in this optimized path, mostly pushing stuff onto the stack.
        switch(workInProgress.tag){
            case HostRoot:
                pushHostRootContext(workInProgress);
                var root = workInProgress.stateNode;
                resetHydrationState();
                break;
            case HostComponent:
                pushHostContext(workInProgress);
                break;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) pushContextProvider(workInProgress);
                break;
            case HostPortal:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            case ContextProvider:
                var newValue = workInProgress.memoizedProps.value;
                var context = workInProgress.type._context;
                pushProvider(workInProgress, context, newValue);
                break;
            case Profiler:
                // Profiler should only call onRender when one of its descendants actually rendered.
                var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (hasChildWork) workInProgress.flags |= Update;
                // Reset effect durations for the next eventual effect phase.
                // These are reset during render to allow the DevTools commit hook a chance to read them,
                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = 0;
                stateNode.passiveEffectDuration = 0;
                break;
            case SuspenseComponent:
                var state = workInProgress.memoizedState;
                if (state !== null) {
                    if (state.dehydrated !== null) {
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
                        // been unsuspended it has committed as a resolved Suspense component.
                        // If it needs to be retried, it should have work scheduled on it.
                        workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we
                        // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.
                        return null;
                    } // If this boundary is currently timed out, we need to decide
                    // whether to retry the primary children, or to skip over it and
                    // go straight to the fallback. Check the priority of the primary
                    // child fragment.
                    var primaryChildFragment = workInProgress.child;
                    var primaryChildLanes = primaryChildFragment.childLanes;
                    if (includesSomeLane(renderLanes, primaryChildLanes)) // The primary children have pending work. Use the normal path
                    // to attempt to render the primary children again.
                    return updateSuspenseComponent(current, workInProgress, renderLanes);
                    else {
                        // The primary child fragment does not have pending work marked
                        // on it
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                        // priority. Bailout.
                        var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                        if (child !== null) // The fallback children have pending work. Skip over the
                        // primary children and work on the fallback.
                        return child.sibling;
                        else // Note: We can return `null` here because we already checked
                        // whether there were nested context consumers, via the call to
                        // `bailoutOnAlreadyFinishedWork` above.
                        return null;
                    }
                } else pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                break;
            case SuspenseListComponent:
                var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;
                var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (didSuspendBefore) {
                    if (_hasChildWork) // If something was in fallback state last time, and we have all the
                    // same children then we're still in progressive loading state.
                    // Something might get unblocked by state updates or retries in the
                    // tree which will affect the tail. So we need to use the normal
                    // path to compute the correct tail.
                    return updateSuspenseListComponent(current, workInProgress, renderLanes);
                     // If none of the children had any work, that means that none of
                    // them got retried so they'll still be blocked in the same way
                    // as before. We can fast bail out.
                    workInProgress.flags |= DidCapture;
                } // If nothing suspended before and we're rendering the same children,
                // then the tail doesn't matter. Anything new that suspends will work
                // in the "together" mode, so we can continue from the state we had.
                var renderState = workInProgress.memoizedState;
                if (renderState !== null) {
                    // Reset to the "together" mode in case we've started a different
                    // update in the past but didn't complete it.
                    renderState.rendering = null;
                    renderState.tail = null;
                    renderState.lastEffect = null;
                }
                pushSuspenseContext(workInProgress, suspenseStackCursor.current);
                if (_hasChildWork) break;
                else // If none of the children had any work, that means that none of
                // them got retried so they'll still be blocked in the same way
                // as before. We can fast bail out.
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                // Need to check if the tree still needs to be deferred. This is
                // almost identical to the logic used in the normal update path,
                // so we'll just enter that. The only difference is we'll bail out
                // at the next level instead of this one, because the child props
                // have not changed. Which is fine.
                // TODO: Probably should refactor `beginWork` to split the bailout
                // path from the normal path. I'm tempted to do a labeled break here
                // but I won't :)
                workInProgress.lanes = NoLanes;
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
        if (workInProgress._debugNeedsRemount && current !== null) // This will restart the begin phase with a new fiber.
        return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
        if (current !== null) {
            var oldProps = current.memoizedProps;
            var newProps = workInProgress.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) // If props or context changed, mark the fiber as having performed work.
            // This may be unset if the props are determined to be equal later (memo).
            didReceiveUpdate = true;
            else {
                // Neither props nor legacy context changes. Check if there's a pending
                // update or context change.
                var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
                if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there
                // may not be work scheduled on `current`, so we check for this flag.
                (workInProgress.flags & DidCapture) === NoFlags) {
                    // No pending updates or context. Bail out now.
                    didReceiveUpdate = false;
                    return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
                }
                if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
                else // An update was scheduled on this fiber, but there are no new props
                // nor legacy context. Set this to false. If an update queue or context
                // consumer produces a changed value, it will set this to true. Otherwise,
                // the component will assume the children have not changed and bail out.
                didReceiveUpdate = false;
            }
        } else {
            didReceiveUpdate = false;
            if (getIsHydrating() && isForkedChild(workInProgress)) {
                // Check if this child belongs to a list of muliple children in
                // its parent.
                //
                // In a true multi-threaded implementation, we would render children on
                // parallel threads. This would represent the beginning of a new render
                // thread for this subtree.
                //
                // We only use this for id generation during hydration, which is why the
                // logic is located in this special branch.
                var slotIndex = workInProgress.index;
                var numberOfForks = getForksAtLevel();
                pushTreeId(workInProgress, numberOfForks, slotIndex);
            }
        } // Before entering the begin phase, clear pending update priority.
        // TODO: This assumes that we're about to evaluate the component and process
        // the update queue. However, there's an exception: SimpleMemoComponent
        // sometimes bails out later in the begin phase. This indicates that we should
        // move this assignment out of the common path and into each branch.
        workInProgress.lanes = NoLanes;
        switch(workInProgress.tag){
            case IndeterminateComponent:
                return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
            case LazyComponent:
                var elementType = workInProgress.elementType;
                return mountLazyComponent(current, workInProgress, elementType, renderLanes);
            case FunctionComponent:
                var Component = workInProgress.type;
                var unresolvedProps = workInProgress.pendingProps;
                var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
                return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);
            case ClassComponent:
                var _Component = workInProgress.type;
                var _unresolvedProps = workInProgress.pendingProps;
                var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
                return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);
            case HostRoot:
                return updateHostRoot(current, workInProgress, renderLanes);
            case HostComponent:
                return updateHostComponent(current, workInProgress, renderLanes);
            case HostText:
                return updateHostText(current, workInProgress);
            case SuspenseComponent:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case HostPortal:
                return updatePortalComponent(current, workInProgress, renderLanes);
            case ForwardRef:
                var type = workInProgress.type;
                var _unresolvedProps2 = workInProgress.pendingProps;
                var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
            case Fragment:
                return updateFragment(current, workInProgress, renderLanes);
            case Mode:
                return updateMode(current, workInProgress, renderLanes);
            case Profiler:
                return updateProfiler(current, workInProgress, renderLanes);
            case ContextProvider:
                return updateContextProvider(current, workInProgress, renderLanes);
            case ContextConsumer:
                return updateContextConsumer(current, workInProgress, renderLanes);
            case MemoComponent:
                var _type2 = workInProgress.type;
                var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, _resolvedProps3, "prop", getComponentNameFromType(_type2));
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);
            case SimpleMemoComponent:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case IncompleteClassComponent:
                var _Component2 = workInProgress.type;
                var _unresolvedProps4 = workInProgress.pendingProps;
                var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
                return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);
            case SuspenseListComponent:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case ScopeComponent:
                break;
            case OffscreenComponent:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + "React. Please file an issue.");
    }
    function markUpdate(workInProgress) {
        // Tag the fiber with an update effect. This turns a Placement into
        // a PlacementAndUpdate.
        workInProgress.flags |= Update;
    }
    function markRef$1(workInProgress) {
        workInProgress.flags |= Ref;
        workInProgress.flags |= RefStatic;
    }
    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent$1;
    var updateHostText$1;
    // Mutation mode
    appendAllChildren = function(parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;
        while(node !== null){
            if (node.tag === HostComponent || node.tag === HostText) appendInitialChild(parent, node.stateNode);
            else if (node.tag === HostPortal) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    };
    updateHostContainer = function(current, workInProgress) {};
    updateHostComponent$1 = function(current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;
        if (oldProps === newProps) // In mutation mode, this is sufficient for a bailout because
        // we won't touch this node even if children changed.
        return;
         // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.
        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.
        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.
        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.
        if (updatePayload) markUpdate(workInProgress);
    };
    updateHostText$1 = function(current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) markUpdate(workInProgress);
    };
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (getIsHydrating()) // If we're hydrating, we should consume as many items as we can
        // so we don't leave any behind.
        return;
        switch(renderState.tailMode){
            case "hidden":
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while(tailNode !== null){
                    if (tailNode.alternate !== null) lastTailNode = tailNode;
                    tailNode = tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (lastTailNode === null) // All remaining items in the tail are insertions.
                renderState.tail = null;
                else // Detach the insertion after the last node that was already
                // inserted.
                lastTailNode.sibling = null;
                break;
            case "collapsed":
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while(_tailNode !== null){
                    if (_tailNode.alternate !== null) _lastTailNode = _tailNode;
                    _tailNode = _tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (_lastTailNode === null) {
                    // All remaining items in the tail are insertions.
                    if (!hasRenderedATailFallback && renderState.tail !== null) // We suspended during the head. We want to show at least one
                    // row at the tail. So we'll keep on and cut off the rest.
                    renderState.tail.sibling = null;
                    else renderState.tail = null;
                } else // Detach the insertion after the last node that was already
                // inserted.
                _lastTailNode.sibling = null;
                break;
        }
    }
    function bubbleProperties(completedWork) {
        var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
        var newChildLanes = NoLanes;
        var subtreeFlags = NoFlags;
        if (!didBailout) {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var actualDuration = completedWork.actualDuration;
                var treeBaseDuration = completedWork.selfBaseDuration;
                var child = completedWork.child;
                while(child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                    subtreeFlags |= child.subtreeFlags;
                    subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will
                    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
                    // When work is done, it should bubble to the parent's actualDuration. If
                    // the fiber has not been cloned though, (meaning no work was done), then
                    // this value will reflect the amount of time spent working on a previous
                    // render. In that case it should not bubble. We determine whether it was
                    // cloned by comparing the child pointer.
                    actualDuration += child.actualDuration;
                    treeBaseDuration += child.treeBaseDuration;
                    child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
                completedWork.treeBaseDuration = treeBaseDuration;
            } else {
                var _child = completedWork.child;
                while(_child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                    subtreeFlags |= _child.subtreeFlags;
                    subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child.return = completedWork;
                    _child = _child.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        } else {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var _treeBaseDuration = completedWork.selfBaseDuration;
                var _child2 = completedWork.child;
                while(_child2 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child2.subtreeFlags & StaticMask;
                    subtreeFlags |= _child2.flags & StaticMask;
                    _treeBaseDuration += _child2.treeBaseDuration;
                    _child2 = _child2.sibling;
                }
                completedWork.treeBaseDuration = _treeBaseDuration;
            } else {
                var _child3 = completedWork.child;
                while(_child3 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child3.subtreeFlags & StaticMask;
                    subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child3.return = completedWork;
                    _child3 = _child3.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        }
        completedWork.childLanes = newChildLanes;
        return didBailout;
    }
    function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {
        if (hasUnhydratedTailNodes() && (workInProgress.mode & ConcurrentMode) !== NoMode && (workInProgress.flags & DidCapture) === NoFlags) {
            warnIfUnhydratedTailNodes(workInProgress);
            resetHydrationState();
            workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;
            return false;
        }
        var wasHydrated = popHydrationState(workInProgress);
        if (nextState !== null && nextState.dehydrated !== null) {
            // We might be inside a hydration state the first time we're picking up this
            // Suspense boundary, and also after we've reentered it for further hydration.
            if (current === null) {
                if (!wasHydrated) throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                prepareToHydrateHostSuspenseInstance(workInProgress);
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    var isTimedOutSuspense = nextState !== null;
                    if (isTimedOutSuspense) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var primaryChildFragment = workInProgress.child;
                        if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                }
                return false;
            } else {
                // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration
                // state since we're now exiting out of it. popHydrationState doesn't do that for us.
                resetHydrationState();
                if ((workInProgress.flags & DidCapture) === NoFlags) // This boundary did not suspend so it's now hydrated and unsuspended.
                workInProgress.memoizedState = null;
                 // If nothing suspended, we need to schedule an effect to mark this boundary
                // as having hydrated so events know that they're free to be invoked.
                // It's also a signal to replay events and the suspense callback.
                // If something suspended, schedule an effect to attach retry listeners.
                // So we might as well always mark this.
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    var _isTimedOutSuspense = nextState !== null;
                    if (_isTimedOutSuspense) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var _primaryChildFragment = workInProgress.child;
                        if (_primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                    }
                }
                return false;
            }
        } else {
            // Successfully completed this tree. If this was a forced client render,
            // there may have been recoverable errors during first hydration
            // attempt. If so, add them to a queue so we can log them in the
            // commit phase.
            upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path
            return true;
        }
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
                bubbleProperties(workInProgress);
                return null;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostRoot:
                var fiberRoot = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                if (fiberRoot.pendingContext) {
                    fiberRoot.context = fiberRoot.pendingContext;
                    fiberRoot.pendingContext = null;
                }
                if (current === null || current.child === null) {
                    // If we hydrated, pop so that we can delete any remaining children
                    // that weren't hydrated.
                    var wasHydrated = popHydrationState(workInProgress);
                    if (wasHydrated) // If we hydrated, then we'll need to schedule an update for
                    // the commit side-effects on the root.
                    markUpdate(workInProgress);
                    else if (current !== null) {
                        var prevState = current.memoizedState;
                        if (!prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
                        (workInProgress.flags & ForceClientRender) !== NoFlags) {
                            // Schedule an effect to clear this container at the start of the
                            // next commit. This handles the case of React rendering into a
                            // container with previous children. It's also safe to do for
                            // updates too, because current.child would only be null if the
                            // previous render was null (so the container would already
                            // be empty).
                            workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been
                            // recoverable errors during first hydration attempt. If so, add
                            // them to a queue so we can log them in the commit phase.
                            upgradeHydrationErrorsToRecoverable();
                        }
                    }
                }
                updateHostContainer(current, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostComponent:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress.type;
                if (current !== null && workInProgress.stateNode != null) {
                    updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);
                    if (current.ref !== workInProgress.ref) markRef$1(workInProgress);
                } else {
                    if (!newProps) {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
                    // "stack" as the parent. Then append children as we go in beginWork
                    // or completeWork depending on whether we want to add them top->down or
                    // bottom->up. Top->down is faster in IE11.
                    var _wasHydrated = popHydrationState(workInProgress);
                    if (_wasHydrated) // TODO: Move this and createInstance step into the beginPhase
                    // to consolidate.
                    {
                        if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) // If changes to the hydrated node need to be applied at the
                        // commit-phase we mark this as such.
                        markUpdate(workInProgress);
                    } else {
                        var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                        appendAllChildren(instance, workInProgress, false, false);
                        workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
                        // (eg DOM renderer supports auto-focus for certain elements).
                        // Make sure such renderers get scheduled for later work.
                        if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) markUpdate(workInProgress);
                    }
                    if (workInProgress.ref !== null) // If there is a ref on a host node we need to schedule a callback
                    markRef$1(workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case HostText:
                var newText = newProps;
                if (current && workInProgress.stateNode != null) {
                    var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
                    // to schedule a side-effect to do the updates.
                    updateHostText$1(current, workInProgress, oldText, newText);
                } else {
                    if (typeof newText !== "string") {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                    }
                    var _rootContainerInstance = getRootHostContainer();
                    var _currentHostContext = getHostContext();
                    var _wasHydrated2 = popHydrationState(workInProgress);
                    if (_wasHydrated2) {
                        if (prepareToHydrateHostTextInstance(workInProgress)) markUpdate(workInProgress);
                    } else workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this
                // to its own fiber type so that we can add other kinds of hydration
                // boundaries that aren't associated with a Suspense tree. In anticipation
                // of such a refactor, all the hydration logic is contained in
                // this branch.
                if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {
                    var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);
                    if (!fallthroughToNormalSuspensePath) {
                        if (workInProgress.flags & ShouldCapture) // Special case. There were remaining unhydrated nodes. We treat
                        // this as a mismatch. Revert to client rendering.
                        return workInProgress;
                        else // Did not finish hydrating, either because this is the initial
                        // render or because something suspended.
                        return null;
                    } // Continue with the normal Suspense path.
                }
                if ((workInProgress.flags & DidCapture) !== NoFlags) {
                    // Something suspended. Re-render with the fallback children.
                    workInProgress.lanes = renderLanes; // Do not reset the effect list.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                     // Don't bubble properties in this case.
                    return workInProgress;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = current !== null && current.memoizedState !== null;
                // a passive effect, which is when we process the transitions
                if (nextDidTimeout !== prevDidTimeout) // an effect to toggle the subtree's visibility. When we switch from
                // fallback -> primary, the inner Offscreen fiber schedules this effect
                // as part of its normal complete phase. But when we switch from
                // primary -> fallback, the inner Offscreen fiber does not have a complete
                // phase. So we need to schedule its effect here.
                //
                // We also use this flag to connect/disconnect the effects, but the same
                // logic applies: when re-connecting, the Offscreen fiber's complete
                // phase will handle scheduling the effect. It's only when the fallback
                // is active that we have to do anything special.
                {
                    if (nextDidTimeout) {
                        var _offscreenFiber2 = workInProgress.child;
                        _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything
                        // in the concurrent tree already suspended during this render.
                        // This is a known bug.
                        if ((workInProgress.mode & ConcurrentMode) !== NoMode) {
                            // TODO: Move this back to throwException because this is too late
                            // if this is a large tree which is common for initial loads. We
                            // don't know if we should restart a render or not until we get
                            // this marker, and this is too late.
                            // If this render already had a ping or lower pri updates,
                            // and this is the first time we know we're going to suspend we
                            // should be able to immediately restart from within throwException.
                            var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) // If this was in an invisible tree or a new render, then showing
                            // this boundary is ok.
                            renderDidSuspend();
                            else // Otherwise, we're going to have to hide content so we should
                            // suspend for longer if possible.
                            renderDidSuspendDelayIfPossible();
                        }
                    }
                }
                var wakeables = workInProgress.updateQueue;
                if (wakeables !== null) // Schedule an effect to attach a retry listener to the promise.
                // TODO: Move to passive phase
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    if (nextDidTimeout) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var primaryChildFragment = workInProgress.child;
                        if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                }
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                updateHostContainer(current, workInProgress);
                if (current === null) preparePortalMount(workInProgress.stateNode.containerInfo);
                bubbleProperties(workInProgress);
                return null;
            case ContextProvider:
                // Pop provider fiber
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case IncompleteClassComponent:
                // Same as class component case. I put it down here so that the tags are
                // sequential to ensure this switch is compiled to a jump table.
                var _Component = workInProgress.type;
                if (isContextProvider(_Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress);
                var renderState = workInProgress.memoizedState;
                if (renderState === null) {
                    // We're running in the default, "independent" mode.
                    // We don't do anything in this mode.
                    bubbleProperties(workInProgress);
                    return null;
                }
                var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                    // We just rendered the head.
                    if (!didSuspendAlready) {
                        // This is the first pass. We need to figure out if anything is still
                        // suspended in the rendered set.
                        // If new content unsuspended, but there's still some content that
                        // didn't. Then we need to do a second pass that forces everything
                        // to keep showing their fallbacks.
                        // We might be suspended if something in this render pass suspended, or
                        // something in the previous committed pass suspended. Otherwise,
                        // there's no chance so we can skip the expensive call to
                        // findFirstSuspended.
                        var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);
                        if (!cannotBeSuspended) {
                            var row = workInProgress.child;
                            while(row !== null){
                                var suspended = findFirstSuspended(row);
                                if (suspended !== null) {
                                    didSuspendAlready = true;
                                    workInProgress.flags |= DidCapture;
                                    cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                                    // part of the second pass. In that case nothing will subscribe to
                                    // its thenables. Instead, we'll transfer its thenables to the
                                    // SuspenseList so that it can retry if they resolve.
                                    // There might be multiple of these in the list but since we're
                                    // going to wait for all of them anyway, it doesn't really matter
                                    // which ones gets to ping. In theory we could get clever and keep
                                    // track of how many dependencies remain but it gets tricky because
                                    // in the meantime, we can add/remove/change items and dependencies.
                                    // We might bail out of the loop before finding any but that
                                    // doesn't matter since that means that the other boundaries that
                                    // we did find already has their listeners attached.
                                    var newThenables = suspended.updateQueue;
                                    if (newThenables !== null) {
                                        workInProgress.updateQueue = newThenables;
                                        workInProgress.flags |= Update;
                                    } // Rerender the whole list, but this time, we'll force fallbacks
                                    // to stay in place.
                                    // Reset the effect flags before doing the second pass since that's now invalid.
                                    // Reset the child fibers to their original state.
                                    workInProgress.subtreeFlags = NoFlags;
                                    resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                                    // rerender the children.
                                    pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.
                                    return workInProgress.child;
                                }
                                row = row.sibling;
                            }
                        }
                        if (renderState.tail !== null && now() > getRenderTargetTime()) {
                            // We have already passed our CPU deadline but we still have rows
                            // left in the tail. We'll just give up further attempts to render
                            // the main content and only render fallbacks.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    } else cutOffTailIfNeeded(renderState, false);
                     // Next we're going to render the tail.
                } else {
                    // Append the rendered row to the child list.
                    if (!didSuspendAlready) {
                        var _suspended = findFirstSuspended(renderedTail);
                        if (_suspended !== null) {
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
                            // get lost if this row ends up dropped during a second pass.
                            var _newThenables = _suspended.updateQueue;
                            if (_newThenables !== null) {
                                workInProgress.updateQueue = _newThenables;
                                workInProgress.flags |= Update;
                            }
                            cutOffTailIfNeeded(renderState, true); // This might have been modified.
                            if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
                            ) {
                                // We're done.
                                bubbleProperties(workInProgress);
                                return null;
                            }
                        } else if (// time we have to render. So rendering one more row would likely
                        // exceed it.
                        now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
                            // We have now passed our CPU deadline and we'll just give up further
                            // attempts to render the main content and only render fallbacks.
                            // The assumption is that this is usually faster.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    }
                    if (renderState.isBackwards) {
                        // The effect list of the backwards tail will have been added
                        // to the end. This breaks the guarantee that life-cycles fire in
                        // sibling order but that isn't a strong guarantee promised by React.
                        // Especially since these might also just pop in during future commits.
                        // Append to the beginning of the list.
                        renderedTail.sibling = workInProgress.child;
                        workInProgress.child = renderedTail;
                    } else {
                        var previousSibling = renderState.last;
                        if (previousSibling !== null) previousSibling.sibling = renderedTail;
                        else workInProgress.child = renderedTail;
                        renderState.last = renderedTail;
                    }
                }
                if (renderState.tail !== null) {
                    // We still have tail rows to render.
                    // Pop a row.
                    var next = renderState.tail;
                    renderState.rendering = next;
                    renderState.tail = next.sibling;
                    renderState.renderingStartTime = now();
                    next.sibling = null; // Restore the context.
                    // TODO: We can probably just avoid popping it instead and only
                    // setting it the first time we go from not suspended to suspended.
                    var suspenseContext = suspenseStackCursor.current;
                    if (didSuspendAlready) suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                    else suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                    pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.
                    // Don't bubble properties in this case.
                    return next;
                }
                bubbleProperties(workInProgress);
                return null;
            case ScopeComponent:
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                var _nextState = workInProgress.memoizedState;
                var nextIsHidden = _nextState !== null;
                if (current !== null) {
                    var _prevState = current.memoizedState;
                    var prevIsHidden = _prevState !== null;
                    if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) workInProgress.flags |= Visibility;
                }
                if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) bubbleProperties(workInProgress);
                else // Don't bubble properties for hidden children unless we're rendering
                // at offscreen priority.
                if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
                    bubbleProperties(workInProgress);
                    // Check if there was an insertion or update in the hidden subtree.
                    // If so, we need to hide those nodes in the commit phase, so
                    // schedule a visibility effect.
                    if (workInProgress.subtreeFlags & (Placement | Update)) workInProgress.flags |= Visibility;
                }
                return null;
            case CacheComponent:
                return null;
            case TracingMarkerComponent:
                return null;
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + "React. Please file an issue.");
    }
    function unwindWork(current, workInProgress, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                var flags = workInProgress.flags;
                if (flags & ShouldCapture) {
                    workInProgress.flags = flags & ~ShouldCapture | DidCapture;
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case HostRoot:
                var root = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                var _flags = workInProgress.flags;
                if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                    // There was an error during render that wasn't captured by a suspense
                    // boundary. Do a second pass on the root to unmount the children.
                    workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
                    return workInProgress;
                } // We unwound to the root without completing it. Exit.
                return null;
            case HostComponent:
                // TODO: popHydrationState
                popHostContext(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var suspenseState = workInProgress.memoizedState;
                if (suspenseState !== null && suspenseState.dehydrated !== null) {
                    if (workInProgress.alternate === null) throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                    resetHydrationState();
                }
                var _flags2 = workInProgress.flags;
                if (_flags2 & ShouldCapture) {
                    workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
                // caught by a nested boundary. If not, it should bubble through.
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                return null;
            case ContextProvider:
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                return null;
            case CacheComponent:
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(current, interruptedWork, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(interruptedWork);
        switch(interruptedWork.tag){
            case ClassComponent:
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== undefined) popContext(interruptedWork);
                break;
            case HostRoot:
                var root = interruptedWork.stateNode;
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                resetWorkInProgressVersions();
                break;
            case HostComponent:
                popHostContext(interruptedWork);
                break;
            case HostPortal:
                popHostContainer(interruptedWork);
                break;
            case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
            case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
            case ContextProvider:
                var context = interruptedWork.type._context;
                popProvider(context, interruptedWork);
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(interruptedWork);
                break;
        }
    }
    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    // Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.
    // Only used when enableSuspenseLayoutEffectSemantics is enabled.
    var offscreenSubtreeIsHidden = false;
    var offscreenSubtreeWasHidden = false;
    var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
    var nextEffect = null; // Used for Profiling builds to track updaters.
    var inProgressLanes = null;
    var inProgressRoot = null;
    function reportUncaughtErrorInDEV(error) {
        invokeGuardedCallback(null, function() {
            throw error;
        });
        clearCaughtError();
    }
    var callComponentWillUnmountWithTimer = function(current, instance) {
        instance.props = current.memoizedProps;
        instance.state = current.memoizedState;
        if (current.mode & ProfileMode) try {
            startLayoutEffectTimer();
            instance.componentWillUnmount();
        } finally{
            recordLayoutEffectDuration(current);
        }
        else instance.componentWillUnmount();
    }; // Capture errors so they don't interrupt mounting.
    function safelyCallCommitHookLayoutEffectListMount(current, nearestMountedAncestor) {
        try {
            commitHookEffectListMount(Layout, current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt unmounting.
    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
        try {
            callComponentWillUnmountWithTimer(current, instance);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyCallComponentDidMount(current, nearestMountedAncestor, instance) {
        try {
            instance.componentDidMount();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyAttachRef(current, nearestMountedAncestor) {
        try {
            commitAttachRef(current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
        var ref = current.ref;
        if (ref !== null) {
            if (typeof ref === "function") {
                var retVal;
                try {
                    if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        retVal = ref(null);
                    } finally{
                        recordLayoutEffectDuration(current);
                    }
                    else retVal = ref(null);
                } catch (error) {
                    captureCommitPhaseError(current, nearestMountedAncestor, error);
                }
                if (typeof retVal === "function") error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current));
            } else ref.current = null;
        }
    }
    function safelyCallDestroy(current, nearestMountedAncestor, destroy) {
        try {
            destroy();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    var focusedInstanceHandle = null;
    var shouldFireAfterActiveInstanceBlur = false;
    function commitBeforeMutationEffects(root, firstChild) {
        focusedInstanceHandle = prepareForCommit(root.containerInfo);
        nextEffect = firstChild;
        commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber
        var shouldFire = shouldFireAfterActiveInstanceBlur;
        shouldFireAfterActiveInstanceBlur = false;
        focusedInstanceHandle = null;
        return shouldFire;
    }
    function commitBeforeMutationEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.
            var child = fiber.child;
            if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitBeforeMutationEffects_complete();
        }
    }
    function commitBeforeMutationEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
                commitBeforeMutationEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitBeforeMutationEffectsOnFiber(finishedWork) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags;
        if ((flags & Snapshot) !== NoFlags) {
            setCurrentFiber(finishedWork);
            switch(finishedWork.tag){
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent:
                    break;
                case ClassComponent:
                    if (current !== null) {
                        var prevProps = current.memoizedProps;
                        var prevState = current.memoizedState;
                        var instance = finishedWork.stateNode; // We could update instance props and state here,
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                        }
                        var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                        var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                        if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                            didWarnSet.add(finishedWork.type);
                            error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                        }
                        instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    }
                    break;
                case HostRoot:
                    var root = finishedWork.stateNode;
                    clearContainer(root.containerInfo);
                    break;
                case HostComponent:
                case HostText:
                case HostPortal:
                case IncompleteClassComponent:
                    break;
                default:
                    throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
            resetCurrentFiber();
        }
    }
    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    // Unmount
                    var destroy = effect.destroy;
                    effect.destroy = undefined;
                    if (destroy !== undefined) {
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStarted(finishedWork);
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStarted(finishedWork);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                        safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStopped();
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStopped();
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect);
        }
    }
    function commitHookEffectListMount(flags, finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStarted(finishedWork);
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStarted(finishedWork);
                    var create = effect.create;
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                    effect.destroy = create();
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStopped();
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStopped();
                    var destroy = effect.destroy;
                    if (destroy !== undefined && typeof destroy !== "function") {
                        var hookName = void 0;
                        if ((effect.tag & Layout) !== NoFlags) hookName = "useLayoutEffect";
                        else if ((effect.tag & Insertion) !== NoFlags) hookName = "useInsertionEffect";
                        else hookName = "useEffect";
                        var addendum = void 0;
                        if (destroy === null) addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                        else if (typeof destroy.then === "function") addendum = "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. " + "Instead, write the async function inside your effect " + "and call it immediately:\n\n" + hookName + "(() => {\n" + "  async function fetchData() {\n" + "    // You can await here\n" + "    const response = await MyAPI.getData(someId);\n" + "    // ...\n" + "  }\n" + "  fetchData();\n" + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + "Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                        else addendum = " You returned: " + destroy;
                        error("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect);
        }
    }
    function commitPassiveEffectDurations(finishedRoot, finishedWork) {
        // Only Profilers with work in their subtree will have an Update effect scheduled.
        if ((finishedWork.flags & Update) !== NoFlags) switch(finishedWork.tag){
            case Profiler:
                var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.
                // It does not get reset until the start of the next commit phase.
                var commitTime = getCommitTime();
                var phase = finishedWork.alternate === null ? "mount" : "update";
                if (isCurrentUpdateNested()) phase = "nested-update";
                if (typeof onPostCommit === "function") onPostCommit(id, phase, passiveEffectDuration, commitTime);
                 // Bubble times to the next nearest ancestor Profiler.
                // After we process that Profiler, we'll bubble further up.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
        }
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {
        if ((finishedWork.flags & LayoutMask) !== NoFlags) switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    // At this point layout effects have already been destroyed (during mutation phase).
                    // This is done to prevent sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListMount(Layout | HasEffect, finishedWork);
                    } finally{
                        recordLayoutEffectDuration(finishedWork);
                    }
                    else commitHookEffectListMount(Layout | HasEffect, finishedWork);
                }
                break;
            case ClassComponent:
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                    if (!offscreenSubtreeWasHidden) {
                        if (current === null) {
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidMount();
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidMount();
                        } else {
                            var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                            var prevState = current.memoizedState; // We could update instance props and state here,
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                        }
                    }
                } // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                        if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                    }
                    // but instead we rely on them being set during last render.
                    // TODO: revisit this when we implement resuming.
                    commitUpdateQueue(finishedWork, updateQueue, instance);
                }
                break;
            case HostRoot:
                // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                    var _instance = null;
                    if (finishedWork.child !== null) switch(finishedWork.child.tag){
                        case HostComponent:
                            _instance = getPublicInstance(finishedWork.child.stateNode);
                            break;
                        case ClassComponent:
                            _instance = finishedWork.child.stateNode;
                            break;
                    }
                    commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                break;
            case HostComponent:
                var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
                // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                // These effects should only be committed when components are first mounted,
                // aka when there is no current/alternate.
                if (current === null && finishedWork.flags & Update) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props);
                }
                break;
            case HostText:
                break;
            case HostPortal:
                break;
            case Profiler:
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                var effectDuration = finishedWork.stateNode.effectDuration;
                var commitTime = getCommitTime();
                var phase = current === null ? "mount" : "update";
                if (isCurrentUpdateNested()) phase = "nested-update";
                if (typeof onRender === "function") onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);
                if (typeof onCommit === "function") onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);
                 // Schedule a passive effect for this Profiler to call onPostCommit hooks.
                // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,
                // because the effect is also where times bubble to parent Profilers.
                enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.
                // Do not reset these values until the next render so DevTools has a chance to read them first.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.effectDuration += effectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.effectDuration += effectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
            case SuspenseComponent:
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
            case TracingMarkerComponent:
                break;
            default:
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (!offscreenSubtreeWasHidden) {
            if (finishedWork.flags & Ref) commitAttachRef(finishedWork);
        }
    }
    function reappearLayoutEffectsOnFiber(node) {
        // Turn on layout effects in a tree that previously disappeared.
        // TODO (Offscreen) Check: flags & LayoutStatic
        switch(node.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (node.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    safelyCallCommitHookLayoutEffectListMount(node, node.return);
                } finally{
                    recordLayoutEffectDuration(node);
                }
                else safelyCallCommitHookLayoutEffectListMount(node, node.return);
                break;
            case ClassComponent:
                var instance = node.stateNode;
                if (typeof instance.componentDidMount === "function") safelyCallComponentDidMount(node, node.return, instance);
                safelyAttachRef(node, node.return);
                break;
            case HostComponent:
                safelyAttachRef(node, node.return);
                break;
        }
    }
    function hideOrUnhideAllChildren(finishedWork, isHidden) {
        // Only hide or unhide the top-most host nodes.
        var hostSubtreeRoot = null;
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;
        while(true){
            if (node.tag === HostComponent) {
                if (hostSubtreeRoot === null) {
                    hostSubtreeRoot = node;
                    try {
                        var instance = node.stateNode;
                        if (isHidden) hideInstance(instance);
                        else unhideInstance(node.stateNode, node.memoizedProps);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
            } else if (node.tag === HostText) {
                if (hostSubtreeRoot === null) try {
                    var _instance3 = node.stateNode;
                    if (isHidden) hideTextInstance(_instance3);
                    else unhideTextInstance(_instance3, node.memoizedProps);
                } catch (error) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
            } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return;
                if (hostSubtreeRoot === node) hostSubtreeRoot = null;
                node = node.return;
            }
            if (hostSubtreeRoot === node) hostSubtreeRoot = null;
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch(finishedWork.tag){
                case HostComponent:
                    instanceToUse = getPublicInstance(instance);
                    break;
                default:
                    instanceToUse = instance;
            } // Moved outside to ensure DCE works with this flag
            if (typeof ref === "function") {
                var retVal;
                if (finishedWork.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    retVal = ref(instanceToUse);
                } finally{
                    recordLayoutEffectDuration(finishedWork);
                }
                else retVal = ref(instanceToUse);
                if (typeof retVal === "function") error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
            } else {
                if (!ref.hasOwnProperty("current")) error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                ref.current = instanceToUse;
            }
        }
    }
    function detachFiberMutation(fiber) {
        // Cut off the return pointer to disconnect it from the tree.
        // This enables us to detect and warn against state updates on an unmounted component.
        // It also prevents events from bubbling from within disconnected components.
        //
        // Ideally, we should also clear the child pointer of the parent alternate to let this
        // get GC:ed but we don't know which for sure which parent is the current
        // one so we'll settle for GC:ing the subtree of this child.
        // This child itself will be GC:ed when the parent updates the next time.
        //
        // Note that we can't clear child or sibling pointers yet.
        // They're needed for passive effects and for findDOMNode.
        // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).
        //
        // Don't reset the alternate yet, either. We need that so we can detach the
        // alternate's fields in the passive phase. Clearing the return pointer is
        // sufficient for findDOMNode semantics.
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.return = null;
        fiber.return = null;
    }
    function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        if (alternate !== null) {
            fiber.alternate = null;
            detachFiberAfterEffects(alternate);
        } // Note: Defensively using negation instead of < in case
        // Clear cyclical Fiber fields. This level alone is designed to roughly
        // approximate the planned Fiber refactor. In that world, `setState` will be
        // bound to a special "instance" object instead of a Fiber. The Instance
        // object will not have any of these fields. It will only be connected to
        // the fiber tree via a single link at the root. So if this level alone is
        // sufficient to fix memory issues, that bodes well for our plans.
        fiber.child = null;
        fiber.deletions = null;
        fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host
        // tree, which has its own pointers to children, parents, and siblings.
        // The other host nodes also point back to fibers, so we should detach that
        // one, too.
        if (fiber.tag === HostComponent) {
            var hostInstance = fiber.stateNode;
            if (hostInstance !== null) detachDeletedInstance(hostInstance);
        }
        fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We
        fiber._debugOwner = null;
        // Theoretically, nothing in here should be necessary, because we already
        // disconnected the fiber from the tree. So even if something leaks this
        // particular fiber, it won't leak anything else
        //
        // The purpose of this branch is to be super aggressive so we can measure
        // if there's any difference in memory impact. If there is, that could
        // indicate a React leak we don't know about.
        fiber.return = null;
        fiber.dependencies = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.
        fiber.updateQueue = null;
    }
    function getHostParentFiber(fiber) {
        var parent = fiber.return;
        while(parent !== null){
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }
    function getHostSibling(fiber) {
        // We're going to search forward into the tree until we find a sibling host
        // node. Unfortunately, if multiple insertions are done in a row we have to
        // search past them. This leads to exponential search for the next sibling.
        // TODO: Find a more efficient way to do this.
        var node = fiber;
        siblings: while(true){
            // If we didn't find anything, let's try the next sibling.
            while(node.sibling === null){
                if (node.return === null || isHostParent(node.return)) // If we pop out of the root or hit the parent the fiber we are the
                // last sibling.
                return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
            while(node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment){
                // If it is not host node and, we might have a host node inside it.
                // Try to search down until we find one.
                if (node.flags & Placement) continue siblings;
                 // If we don't have a child, try the siblings instead.
                // We also skip portals because they are not part of this host tree.
                if (node.child === null || node.tag === HostPortal) continue siblings;
                else {
                    node.child.return = node;
                    node = node.child;
                }
            } // Check if this host node is stable or about to be placed.
            if (!(node.flags & Placement)) // Found it!
            return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.
        switch(parentFiber.tag){
            case HostComponent:
                var parent = parentFiber.stateNode;
                if (parentFiber.flags & ContentReset) {
                    // Reset the text content of the parent before doing any insertions
                    resetTextContent(parent); // Clear ContentReset from the effect tag
                    parentFiber.flags &= ~ContentReset;
                }
                var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
                // children to find all the terminal nodes.
                insertOrAppendPlacementNode(finishedWork, before, parent);
                break;
            case HostRoot:
            case HostPortal:
                var _parent = parentFiber.stateNode.containerInfo;
                var _before = getHostSibling(finishedWork);
                insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
                break;
            // eslint-disable-next-line-no-fallthrough
            default:
                throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertInContainerBefore(parent, stateNode, before);
            else appendChildToContainer(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertBefore(parent, stateNode, before);
            else appendChild(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNode(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNode(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    } // These are tracked on the stack as we recursively traverse a
    // deleted subtree.
    // TODO: Update these during the whole mutation phase, not just during
    // a deletion.
    var hostParent = null;
    var hostParentIsContainer = false;
    function commitDeletionEffects(root, returnFiber, deletedFiber) {
        // We only have the top Fiber that was deleted but we need to recurse down its
        // children to find all the terminal nodes.
        // Recursively delete all host nodes from the parent, detach refs, clean
        // up mounted layout effects, and call componentWillUnmount.
        // We only need to remove the topmost host child in each branch. But then we
        // still need to keep traversing to unmount effects, refs, and cWU. TODO: We
        // could split this into two separate traversals functions, where the second
        // one doesn't include any removeChild logic. This is maybe the same
        // function as "disappearLayoutEffects" (or whatever that turns into after
        // the layout phase is refactored to use recursion).
        // Before starting, find the nearest host parent on the stack so we know
        // which instance/container to remove the children from.
        // TODO: Instead of searching up the fiber return path on every deletion, we
        // can track the nearest host component on the JS stack as we traverse the
        // tree during the commit phase. This would make insertions faster, too.
        var parent = returnFiber;
        findParent: while(parent !== null){
            switch(parent.tag){
                case HostComponent:
                    hostParent = parent.stateNode;
                    hostParentIsContainer = false;
                    break findParent;
                case HostRoot:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                case HostPortal:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
            }
            parent = parent.return;
        }
        if (hostParent === null) throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
        hostParent = null;
        hostParentIsContainer = false;
        detachFiberMutation(deletedFiber);
    }
    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        // TODO: Use a static flag to skip trees that don't have unmount effects
        var child = parent.child;
        while(child !== null){
            commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
            child = child.sibling;
        }
    }
    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse
        // into their subtree. There are simpler cases in the inner switch
        // that don't modify the stack.
        switch(deletedFiber.tag){
            case HostComponent:
                if (!offscreenSubtreeWasHidden) safelyDetachRef(deletedFiber, nearestMountedAncestor);
                 // Intentional fallthrough to next branch
            // eslint-disable-next-line-no-fallthrough
            case HostText:
                var prevHostParent = hostParent;
                var prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (hostParent !== null) {
                    // Now that all the child effects have unmounted, we can remove the
                    // node from the tree.
                    if (hostParentIsContainer) removeChildFromContainer(hostParent, deletedFiber.stateNode);
                    else removeChild(hostParent, deletedFiber.stateNode);
                }
                return;
            case DehydratedFragment:
                if (hostParent !== null) {
                    if (hostParentIsContainer) clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                    else clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                }
                return;
            case HostPortal:
                // When we go into a portal, it becomes the parent to remove from.
                var _prevHostParent = hostParent;
                var _prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = true;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = _prevHostParent;
                hostParentIsContainer = _prevHostParentIsContainer;
                return;
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    var updateQueue = deletedFiber.updateQueue;
                    if (updateQueue !== null) {
                        var lastEffect = updateQueue.lastEffect;
                        if (lastEffect !== null) {
                            var firstEffect = lastEffect.next;
                            var effect = firstEffect;
                            do {
                                var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                                if (destroy !== undefined) {
                                    if ((tag & Insertion) !== NoFlags$1) safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                    else if ((tag & Layout) !== NoFlags$1) {
                                        markComponentLayoutEffectUnmountStarted(deletedFiber);
                                        if (deletedFiber.mode & ProfileMode) {
                                            startLayoutEffectTimer();
                                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                            recordLayoutEffectDuration(deletedFiber);
                                        } else safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                        markComponentLayoutEffectUnmountStopped();
                                    }
                                }
                                effect = effect.next;
                            }while (effect !== firstEffect);
                        }
                    }
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ClassComponent:
                if (!offscreenSubtreeWasHidden) {
                    safelyDetachRef(deletedFiber, nearestMountedAncestor);
                    var instance = deletedFiber.stateNode;
                    if (typeof instance.componentWillUnmount === "function") safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ScopeComponent:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case OffscreenComponent:
                if (deletedFiber.mode & ConcurrentMode) {
                    // If this offscreen component is hidden, we already unmounted it. Before
                    // deleting the children, track that it's already unmounted so that we
                    // don't attempt to unmount the effects again.
                    // TODO: If the tree is hidden, in most cases we should be able to skip
                    // over the nested children entirely. An exception is we haven't yet found
                    // the topmost host node to delete, which we already track on the stack.
                    // But the other case is portals, which need to be detached no matter how
                    // deeply they are nested. We should use a subtree flag to track whether a
                    // subtree includes a nested portal.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                    recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            default:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
        }
    }
    function commitSuspenseCallback(finishedWork) {
        // TODO: Move this to passive phase
        var newState = finishedWork.memoizedState;
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState === null) {
            var current = finishedWork.alternate;
            if (current !== null) {
                var prevState = current.memoizedState;
                if (prevState !== null) {
                    var suspenseInstance = prevState.dehydrated;
                    if (suspenseInstance !== null) commitHydratedSuspenseInstance(suspenseInstance);
                }
            }
        }
    }
    function attachSuspenseRetryListeners(finishedWork) {
        // If this boundary just timed out, then it will have a set of wakeables.
        // For each wakeable, attach a listener so that when it resolves, React
        // attempts to re-render the boundary in the primary (pre-timeout) state.
        var wakeables = finishedWork.updateQueue;
        if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            wakeables.forEach(function(wakeable) {
                // Memoize using the boundary fiber to prevent redundant listeners.
                var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                if (!retryCache.has(wakeable)) {
                    retryCache.add(wakeable);
                    if (isDevToolsPresent) {
                        if (inProgressLanes !== null && inProgressRoot !== null) // If we have pending work still, associate the original updaters with it.
                        restorePendingUpdaters(inProgressRoot, inProgressLanes);
                        else throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                    }
                    wakeable.then(retry, retry);
                }
            });
        }
    } // This function detects when a Suspense boundary goes from visible to hidden.
    function commitMutationEffects(root, finishedWork, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        setCurrentFiber(finishedWork);
        commitMutationEffectsOnFiber(finishedWork, root);
        setCurrentFiber(finishedWork);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {
        // Deletions effects can be scheduled on any fiber type. They need to happen
        // before the children effects hae fired.
        var deletions = parentFiber.deletions;
        if (deletions !== null) for(var i = 0; i < deletions.length; i++){
            var childToDelete = deletions[i];
            try {
                commitDeletionEffects(root, parentFiber, childToDelete);
            } catch (error) {
                captureCommitPhaseError(childToDelete, parentFiber, error);
            }
        }
        var prevDebugFiber = getCurrentFiber();
        if (parentFiber.subtreeFlags & MutationMask) {
            var child = parentFiber.child;
            while(child !== null){
                setCurrentFiber(child);
                commitMutationEffectsOnFiber(child, root);
                child = child.sibling;
            }
        }
        setCurrentFiber(prevDebugFiber);
    }
    function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,
        // because the fiber tag is more specific. An exception is any flag related
        // to reconcilation, because those can be set on all fiber types.
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    try {
                        commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                        commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    } // Layout effects are destroyed during the mutation phase so that all
                    // destroy functions for all fibers are called before any create functions.
                    // This prevents sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) {
                        try {
                            startLayoutEffectTimer();
                            commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                        recordLayoutEffectDuration(finishedWork);
                    } else try {
                        commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case ClassComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                return;
            case HostComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                // TODO: ContentReset gets cleared by the children during the commit
                // phase. This is a refactor hazard because it means we must read
                // flags the flags after `commitReconciliationEffects` has already run;
                // the order matters. We should refactor so that ContentReset does not
                // rely on mutating the flag during commit. Like by setting a flag
                // during the render phase instead.
                if (finishedWork.flags & ContentReset) {
                    var instance = finishedWork.stateNode;
                    try {
                        resetTextContent(instance);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                if (flags & Update) {
                    var _instance4 = finishedWork.stateNode;
                    if (_instance4 != null) {
                        // Commit the work prepared earlier.
                        var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                        // as the newProps. The updatePayload will contain the real change in
                        // this case.
                        var oldProps = current !== null ? current.memoizedProps : newProps;
                        var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.
                        var updatePayload = finishedWork.updateQueue;
                        finishedWork.updateQueue = null;
                        if (updatePayload !== null) try {
                            commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostText:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (finishedWork.stateNode === null) throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    var textInstance = finishedWork.stateNode;
                    var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldText = current !== null ? current.memoizedProps : newText;
                    try {
                        commitTextUpdate(textInstance, oldText, newText);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case HostRoot:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (current !== null) {
                        var prevRootState = current.memoizedState;
                        if (prevRootState.isDehydrated) try {
                            commitHydratedContainer(root.containerInfo);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostPortal:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
            case SuspenseComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                var offscreenFiber = finishedWork.child;
                if (offscreenFiber.flags & Visibility) {
                    var offscreenInstance = offscreenFiber.stateNode;
                    var newState = offscreenFiber.memoizedState;
                    var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can
                    // read it during an event
                    offscreenInstance.isHidden = isHidden;
                    if (isHidden) {
                        var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                        if (!wasHidden) // TODO: Move to passive phase
                        markCommitTimeOfFallback();
                    }
                }
                if (flags & Update) {
                    try {
                        commitSuspenseCallback(finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                    attachSuspenseRetryListeners(finishedWork);
                }
                return;
            case OffscreenComponent:
                var _wasHidden = current !== null && current.memoizedState !== null;
                if (finishedWork.mode & ConcurrentMode) {
                    // Before committing the children, track on the stack whether this
                    // offscreen subtree was already hidden, so that we don't unmount the
                    // effects again.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                    recursivelyTraverseMutationEffects(root, finishedWork);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Visibility) {
                    var _offscreenInstance = finishedWork.stateNode;
                    var _newState = finishedWork.memoizedState;
                    var _isHidden = _newState !== null;
                    var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can
                    // read it during an event
                    _offscreenInstance.isHidden = _isHidden;
                    if (_isHidden) {
                        if (!_wasHidden) {
                            if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                                nextEffect = offscreenBoundary;
                                var offscreenChild = offscreenBoundary.child;
                                while(offscreenChild !== null){
                                    nextEffect = offscreenChild;
                                    disappearLayoutEffects_begin(offscreenChild);
                                    offscreenChild = offscreenChild.sibling;
                                }
                            }
                        }
                    }
                    // TODO: This needs to run whenever there's an insertion or update
                    // inside a hidden Offscreen tree.
                    hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                }
                return;
            case SuspenseListComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) attachSuspenseRetryListeners(finishedWork);
                return;
            case ScopeComponent:
                return;
            default:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
        }
    }
    function commitReconciliationEffects(finishedWork) {
        // Placement effects (insertions, reorders) can be scheduled on any fiber
        // type. They needs to happen after the children effects have fired, but
        // before the effects on this fiber have fired.
        var flags = finishedWork.flags;
        if (flags & Placement) {
            try {
                commitPlacement(finishedWork);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            } // Clear the "placement" from effect tag so that we know that this is
            // inserted, before any life-cycles like componentDidMount gets called.
            // TODO: findDOMNode doesn't rely on this any more but isMounted does
            // and isMounted is deprecated anyway so we should be able to kill this.
            finishedWork.flags &= ~Placement;
        }
        if (flags & Hydrating) finishedWork.flags &= ~Hydrating;
    }
    function commitLayoutEffects(finishedWork, root, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        nextEffect = finishedWork;
        commitLayoutEffects_begin(finishedWork, root, committedLanes);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {
        // Suspense layout effects semantics don't change for legacy roots.
        var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent && isModernRoot) {
                // Keep track of the current Offscreen stack's state.
                var isHidden = fiber.memoizedState !== null;
                var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
                if (newOffscreenSubtreeIsHidden) {
                    // The Offscreen tree is hidden. Skip over its layout effects.
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                } else {
                    // TODO (Offscreen) Also check: subtreeFlags & LayoutMask
                    var current = fiber.alternate;
                    var wasHidden = current !== null && current.memoizedState !== null;
                    var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                    var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden; // Traverse the Offscreen subtree with the current Offscreen as the root.
                    offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                    if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                        // This is the root of a reappearing boundary. Turn its layout effects
                        // back on.
                        nextEffect = fiber;
                        reappearLayoutEffects_begin(fiber);
                    }
                    var child = firstChild;
                    while(child !== null){
                        nextEffect = child;
                        commitLayoutEffects_begin(child, root, committedLanes);
                        child = child.sibling;
                    } // Restore Offscreen state and resume in our-progress traversal.
                    nextEffect = fiber;
                    offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                }
            }
            if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
        }
    }
    function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & LayoutMask) !== NoFlags) {
                var current = fiber.alternate;
                setCurrentFiber(fiber);
                try {
                    commitLayoutEffectOnFiber(root, current, fiber, committedLanes);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function disappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child; // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)
            switch(fiber.tag){
                case FunctionComponent:
                case ForwardRef:
                case MemoComponent:
                case SimpleMemoComponent:
                    if (fiber.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    } finally{
                        recordLayoutEffectDuration(fiber);
                    }
                    else commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    break;
                case ClassComponent:
                    // TODO (Offscreen) Check: flags & RefStatic
                    safelyDetachRef(fiber, fiber.return);
                    var instance = fiber.stateNode;
                    if (typeof instance.componentWillUnmount === "function") safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                    break;
                case HostComponent:
                    safelyDetachRef(fiber, fiber.return);
                    break;
                case OffscreenComponent:
                    // Check if this is a
                    var isHidden = fiber.memoizedState !== null;
                    if (isHidden) {
                        // Nested Offscreen tree is already hidden. Don't disappear
                        // its effects.
                        disappearLayoutEffects_complete(subtreeRoot);
                        continue;
                    }
                    break;
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else disappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function disappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function reappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent) {
                var isHidden = fiber.memoizedState !== null;
                if (isHidden) {
                    // Nested Offscreen tree is still hidden. Don't re-appear its effects.
                    reappearLayoutEffects_complete(subtreeRoot);
                    continue;
                }
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else reappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function reappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect; // TODO (Offscreen) Check: flags & LayoutStatic
            setCurrentFiber(fiber);
            try {
                reappearLayoutEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {
        nextEffect = finishedWork;
        commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);
    }
    function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);
        }
    }
    function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                try {
                    commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    try {
                        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                    } finally{
                        recordPassiveEffectDuration(finishedWork);
                    }
                } else commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                break;
        }
    }
    function commitPassiveUnmountEffects(firstChild) {
        nextEffect = firstChild;
        commitPassiveUnmountEffects_begin();
    }
    function commitPassiveUnmountEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var child = fiber.child;
            if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
                var deletions = fiber.deletions;
                if (deletions !== null) {
                    for(var i = 0; i < deletions.length; i++){
                        var fiberToDelete = deletions[i];
                        nextEffect = fiberToDelete;
                        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                    }
                    // A fiber was deleted from this parent fiber, but it's still part of
                    // the previous (alternate) parent fiber's list of children. Because
                    // children are a linked list, an earlier sibling that's still alive
                    // will be connected to the deleted fiber via its `alternate`:
                    //
                    //   live fiber
                    //   --alternate--> previous live fiber
                    //   --sibling--> deleted fiber
                    //
                    // We can't disconnect `alternate` on nodes that haven't been deleted
                    // yet, but we can disconnect the `sibling` and `child` pointers.
                    var previousFiber = fiber.alternate;
                    if (previousFiber !== null) {
                        var detachedChild = previousFiber.child;
                        if (detachedChild !== null) {
                            previousFiber.child = null;
                            do {
                                var detachedSibling = detachedChild.sibling;
                                detachedChild.sibling = null;
                                detachedChild = detachedSibling;
                            }while (detachedChild !== null);
                        }
                    }
                    nextEffect = fiber;
                }
            }
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffects_complete();
        }
    }
    function commitPassiveUnmountEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                commitPassiveUnmountOnFiber(fiber);
                resetCurrentFiber();
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                    recordPassiveEffectDuration(finishedWork);
                } else commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                break;
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        while(nextEffect !== null){
            var fiber = nextEffect; // Deletion effects fire in parent -> child order
            // TODO: Check if fiber has a PassiveStatic flag
            setCurrentFiber(fiber);
            commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
            resetCurrentFiber();
            var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we
            // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)
            if (child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var sibling = fiber.sibling;
            var returnFiber = fiber.return;
            // Recursively traverse the entire deleted tree and clean up fiber fields.
            // This is more aggressive than ideal, and the long term goal is to only
            // have to detach the deleted tree at the root.
            detachFiberAfterEffects(fiber);
            if (fiber === deletedSubtreeRoot) {
                nextEffect = null;
                return;
            }
            if (sibling !== null) {
                sibling.return = returnFiber;
                nextEffect = sibling;
                return;
            }
            nextEffect = returnFiber;
        }
    }
    function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {
        switch(current.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (current.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                    recordPassiveEffectDuration(current);
                } else commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                break;
        }
    } // TODO: Reuse reappearLayoutEffects traversal here?
    function invokeLayoutEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Layout | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                try {
                    instance.componentDidMount();
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokePassiveEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokeLayoutEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                if (typeof instance.componentWillUnmount === "function") safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                break;
        }
    }
    function invokePassiveEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
        }
    }
    var COMPONENT_TYPE = 0;
    var HAS_PSEUDO_CLASS_TYPE = 1;
    var ROLE_TYPE = 2;
    var TEST_NAME_TYPE = 3;
    var TEXT_TYPE = 4;
    if (typeof Symbol === "function" && Symbol.for) {
        var symbolFor = Symbol.for;
        COMPONENT_TYPE = symbolFor("selector.component");
        HAS_PSEUDO_CLASS_TYPE = symbolFor("selector.has_pseudo_class");
        ROLE_TYPE = symbolFor("selector.role");
        TEST_NAME_TYPE = symbolFor("selector.test_id");
        TEXT_TYPE = symbolFor("selector.text");
    }
    var commitHooks = [];
    function onCommitRoot$1() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
    function isLegacyActEnvironment(fiber) {
        // Legacy mode. We preserve the behavior of React 17's act. It assumes an
        // act environment whenever `jest` is defined, but you can still turn off
        // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly
        // to false.
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest
        var jestIsDefined = typeof jest !== "undefined";
        return jestIsDefined && isReactActEnvironmentGlobal !== false;
    }
    function isConcurrentActEnvironment() {
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : undefined;
        if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) // TODO: Include link to relevant documentation page.
        error("The current testing environment is not configured to support act(...)");
        return isReactActEnvironmentGlobal;
    }
    var ceil = Math.ceil;
    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
    var NoContext = /*             */ 0;
    var BatchedContext = /*               */ 1;
    var RenderContext = /*                */ 2;
    var CommitContext = /*                */ 4;
    var RootInProgress = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5;
    var RootDidNotComplete = 6; // Describes where we are in the React execution stack
    var executionContext = NoContext; // The root we're working on
    var workInProgressRoot = null; // The fiber we're working on
    var workInProgress = null; // The lanes we're rendering
    var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
    // This is a superset of the lanes we started working on at the root. The only
    // case where it's different from `workInProgressRootRenderLanes` is when we
    // enter a subtree that is hidden and needs to be unhidden: Suspense and
    // Offscreen component.
    //
    // Most things in the work loop should deal with workInProgressRootRenderLanes.
    // Most things in begin/complete phases should deal with subtreeRenderLanes.
    var subtreeRenderLanes = NoLanes;
    var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.
    var workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown
    var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
    // slightly different than `renderLanes` because `renderLanes` can change as you
    // enter and exit an Offscreen tree. This value is the combination of all render
    // lanes for the entire render phase.
    var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.
    var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.
    var workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).
    var workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.
    var workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.
    // We will log them once the tree commits.
    var workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.
    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
    // more and prefer CPU suspense heuristics instead.
    var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
    // suspense heuristics and opt out of rendering more content.
    var RENDER_TIMEOUT_MS = 500;
    var workInProgressTransitions = null;
    function resetRenderTimer() {
        workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
    }
    function getRenderTargetTime() {
        return workInProgressRootRenderTargetTime;
    }
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsLanes = NoLanes;
    var pendingPassiveProfilerEffects = [];
    var pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates
    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var isFlushingPassiveEffects = false;
    var didScheduleUpdateDuringPassiveEffects = false;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0;
    var rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their
    // event times as simultaneous, even if the actual clock time has advanced
    // between the first and second call.
    var currentEventTime = NoTimestamp;
    var currentEventTransitionLane = NoLanes;
    var isRunningInsertionEffect = false;
    function getWorkInProgressRoot() {
        return workInProgressRoot;
    }
    function requestEventTime() {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) // We're inside React, so it's fine to read the actual time.
        return now();
         // We're not inside React, so we may be in the middle of a browser event.
        if (currentEventTime !== NoTimestamp) // Use the same start time for all updates until we enter React again.
        return currentEventTime;
         // This is the first update since React yielded. Compute a new start time.
        currentEventTime = now();
        return currentEventTime;
    }
    function requestUpdateLane(fiber) {
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) // This is a render phase update. These are not officially supported. The
        // old behavior is to give this the same "thread" (lanes) as
        // whatever is currently rendering. So if you call `setState` on a component
        // that happens later in the same render, it will flush. Ideally, we want to
        // remove the special case and treat them as if they came from an
        // interleaved event. Regardless, this pattern is not officially supported.
        // This behavior is only a fallback. The flag only exists until we can roll
        // out the setState warning, since existing code might accidentally rely on
        // the current behavior.
        return pickArbitraryLane(workInProgressRootRenderLanes);
        var isTransition = requestCurrentTransition() !== NoTransition;
        if (isTransition) {
            if (ReactCurrentBatchConfig$3.transition !== null) {
                var transition = ReactCurrentBatchConfig$3.transition;
                if (!transition._updatedFibers) transition._updatedFibers = new Set();
                transition._updatedFibers.add(fiber);
            } // The algorithm for assigning an update to a lane should be stable for all
            // updates at the same priority within the same event. To do this, the
            // inputs to the algorithm must be the same.
            //
            // The trick we use is to cache the first of each of these inputs within an
            // event. Then reset the cached values once we can be sure the event is
            // over. Our heuristic for that is whenever we enter a concurrent work loop.
            if (currentEventTransitionLane === NoLane) // All transitions within the same event are assigned the same lane.
            currentEventTransitionLane = claimNextTransitionLane();
            return currentEventTransitionLane;
        } // Updates originating inside certain React methods, like flushSync, have
        // their priority set by tracking it with a context variable.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var updateLane = getCurrentUpdatePriority();
        if (updateLane !== NoLane) return updateLane;
         // This update originated outside React. Ask the host environment for an
        // appropriate priority, based on the type of event.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var eventLane = getCurrentEventPriority();
        return eventLane;
    }
    function requestRetryLane(fiber) {
        // This is a fork of `requestUpdateLane` designed specifically for Suspense
        // "retries" — a special update that attempts to flip a Suspense boundary
        // from its placeholder state to its primary/resolved state.
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        return claimNextRetryLane();
    }
    function scheduleUpdateOnFiber(root, fiber, lane, eventTime) {
        checkForNestedUpdates();
        if (isRunningInsertionEffect) error("useInsertionEffect must not schedule updates.");
        if (isFlushingPassiveEffects) didScheduleUpdateDuringPassiveEffects = true;
        markRootUpdated(root, lane, eventTime);
        if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) // This update was dispatched during the render phase. This is a mistake
        // if the update originates from user space (with the exception of local
        // hook updates, which are handled differently and don't reach this
        // function), but there are some internal React features that use this as
        // an implementation detail, like selective hydration.
        warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase
        else {
            if (isDevToolsPresent) addFiberToLanesMap(root, fiber, lane);
            warnIfUpdatesNotWrappedWithActDEV(fiber);
            if (root === workInProgressRoot) {
                // Received an update to a tree that's in the middle of rendering. Mark
                // that there was an interleaved update work on this root. Unless the
                // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
                // phase update. In that case, we don't treat render phase updates as if
                // they were interleaved, for backwards compat reasons.
                if ((executionContext & RenderContext) === NoContext) workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
                if (workInProgressRootExitStatus === RootSuspendedWithDelay) // The root already suspended with a delay, which means this render
                // definitely won't finish. Since we have a new update, let's mark it as
                // suspended now, right before marking the incoming update. This has the
                // effect of interrupting the current render and switching to the update.
                // TODO: Make sure this doesn't override pings that happen while we've
                // already started rendering.
                markRootSuspended$1(root, workInProgressRootRenderLanes);
            }
            ensureRootIsScheduled(root, eventTime);
            if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
                // Flush the synchronous work now, unless we're already working or inside
                // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
                // scheduleCallbackForFiber to preserve the ability to schedule a callback
                // without immediately flushing it. We only do this for user-initiated
                // updates, to preserve historical behavior of legacy mode.
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function scheduleInitialHydrationOnRoot(root, lane, eventTime) {
        // This is a special fork of scheduleUpdateOnFiber that is only used to
        // schedule the initial hydration of a root that has just been created. Most
        // of the stuff in scheduleUpdateOnFiber can be skipped.
        //
        // The main reason for this separate path, though, is to distinguish the
        // initial children from subsequent updates. In fully client-rendered roots
        // (createRoot instead of hydrateRoot), all top-level renders are modeled as
        // updates, but hydration roots are special because the initial render must
        // match what was rendered on the server.
        var current = root.current;
        current.lanes = lane;
        markRootUpdated(root, lane, eventTime);
        ensureRootIsScheduled(root, eventTime);
    }
    function isUnsafeClassRenderPhaseUpdate(fiber) {
        // Check if this is a render phase update. Only called by class components,
        // which special (deprecated) behavior for UNSAFE_componentWillReceive props.
        return(// decided not to enable it.
        (executionContext & RenderContext) !== NoContext);
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the priority
    // of the existing task is the same as the priority of the next level that the
    // root has work on. This function is called on every update, and right before
    // exiting a task.
    function ensureRootIsScheduled(root, currentTime) {
        var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
        // expired so we know to work on those next.
        markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.
        var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (nextLanes === NoLanes) {
            // Special case: There's nothing to work on.
            if (existingCallbackNode !== null) cancelCallback$1(existingCallbackNode);
            root.callbackNode = null;
            root.callbackPriority = NoLane;
            return;
        } // We use the highest priority lane to represent the priority of the callback.
        var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.
        var existingCallbackPriority = root.callbackPriority;
        if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a
        // Scheduler task, rather than an `act` task, cancel it and re-scheduled
        // on the `act` queue.
        !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
            // If we're going to re-use an existing task, it needs to exist.
            // Assume that discrete update microtasks are non-cancellable and null.
            // TODO: Temporary until we confirm this warning is not fired.
            if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) error("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
            return;
        }
        if (existingCallbackNode != null) // Cancel the existing callback. We'll schedule a new one below.
        cancelCallback$1(existingCallbackNode);
         // Schedule a new callback.
        var newCallbackNode;
        if (newCallbackPriority === SyncLane) {
            // Special case: Sync React callbacks are scheduled on a special
            // internal queue
            if (root.tag === LegacyRoot) {
                if (ReactCurrentActQueue$1.isBatchingLegacy !== null) ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
                scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));
            } else scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
            // Flush the queue in a microtask.
            if (ReactCurrentActQueue$1.current !== null) // Inside `act`, use our internal `act` queue so that these get flushed
            // at the end of the current scope even when using the sync version
            // of `act`.
            ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
            else scheduleMicrotask(function() {
                // In Safari, appending an iframe forces microtasks to run.
                // https://github.com/facebook/react/issues/22459
                // We don't support running callbacks in the middle of render
                // or commit so we need to check against that.
                if ((executionContext & (RenderContext | CommitContext)) === NoContext) // Note that this would still prematurely flush the callbacks
                // if this happens outside render or commit phase (e.g. in an event).
                flushSyncCallbacks();
            });
            newCallbackNode = null;
        } else {
            var schedulerPriorityLevel;
            switch(lanesToEventPriority(nextLanes)){
                case DiscreteEventPriority:
                    schedulerPriorityLevel = ImmediatePriority;
                    break;
                case ContinuousEventPriority:
                    schedulerPriorityLevel = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    schedulerPriorityLevel = NormalPriority;
                    break;
                case IdleEventPriority:
                    schedulerPriorityLevel = IdlePriority;
                    break;
                default:
                    schedulerPriorityLevel = NormalPriority;
                    break;
            }
            newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
        }
        root.callbackPriority = newCallbackPriority;
        root.callbackNode = newCallbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.
    function performConcurrentWorkOnRoot(root, didTimeout) {
        resetNestedUpdateFlag();
        // event time. The next update will compute a new event time.
        currentEventTime = NoTimestamp;
        currentEventTransitionLane = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Should not already be working.");
         // Flush any pending passive effects before deciding which lanes to work on,
        // in case they schedule additional work.
        var originalCallbackNode = root.callbackNode;
        var didFlushPassiveEffects = flushPassiveEffects();
        if (didFlushPassiveEffects) {
            // Something in the passive effect phase may have canceled the current task.
            // Check if the task node for this root was changed.
            if (root.callbackNode !== originalCallbackNode) // The current task was canceled. Exit. We don't need to call
            // `ensureRootIsScheduled` because the check above implies either that
            // there's a new task, or that there's no remaining work on this root.
            return null;
        } // Determine the next lanes to work on, using the fields stored
        // on the root.
        var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (lanes === NoLanes) // Defensive coding. This is never expected to happen.
        return null;
         // We disable time-slicing in some cases: if the work has been CPU-bound
        // for too long ("expired" work, to prevent starvation), or we're in
        // sync-updates-by-default mode.
        // TODO: We only check `didTimeout` defensively, to account for a Scheduler
        // bug we're still investigating. Once the bug in Scheduler is fixed,
        // we can remove this, since we track expiration ourselves.
        var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && !didTimeout;
        var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);
        if (exitStatus !== RootInProgress) {
            if (exitStatus === RootErrored) {
                // If something threw an error, try rendering one more time. We'll
                // render synchronously to block concurrent data mutations, and we'll
                // includes all pending updates are included. If it still fails after
                // the second attempt, we'll give up and commit the resulting tree.
                var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                if (errorRetryLanes !== NoLanes) {
                    lanes = errorRetryLanes;
                    exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
                }
            }
            if (exitStatus === RootFatalErrored) {
                var fatalError = workInProgressRootFatalError;
                prepareFreshStack(root, NoLanes);
                markRootSuspended$1(root, lanes);
                ensureRootIsScheduled(root, now());
                throw fatalError;
            }
            if (exitStatus === RootDidNotComplete) // The render unwound without completing the tree. This happens in special
            // cases where need to exit the current render without producing a
            // consistent tree or committing.
            //
            // This should only happen during a concurrent render, not a discrete or
            // synchronous update. We should have already checked for this when we
            // unwound the stack.
            markRootSuspended$1(root, lanes);
            else {
                // The render completed.
                // Check if this render may have yielded to a concurrent event, and if so,
                // confirm that any newly rendered stores are consistent.
                // TODO: It's possible that even a concurrent render may never have yielded
                // to the main thread, if it was fast enough, or if it expired. We could
                // skip the consistency check in that case, too.
                var renderWasConcurrent = !includesBlockingLane(root, lanes);
                var finishedWork = root.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                    // A store was mutated in an interleaved event. Render again,
                    // synchronously, to block further mutations.
                    exitStatus = renderRootSync(root, lanes); // We need to check again if something threw
                    if (exitStatus === RootErrored) {
                        var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                        if (_errorRetryLanes !== NoLanes) {
                            lanes = _errorRetryLanes;
                            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any
                        // concurrent events.
                        }
                    }
                    if (exitStatus === RootFatalErrored) {
                        var _fatalError = workInProgressRootFatalError;
                        prepareFreshStack(root, NoLanes);
                        markRootSuspended$1(root, lanes);
                        ensureRootIsScheduled(root, now());
                        throw _fatalError;
                    }
                } // We now have a consistent tree. The next step is either to commit it,
                // or, if something suspended, wait to commit it after a timeout.
                root.finishedWork = finishedWork;
                root.finishedLanes = lanes;
                finishConcurrentRender(root, exitStatus, lanes);
            }
        }
        ensureRootIsScheduled(root, now());
        if (root.callbackNode === originalCallbackNode) // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
        return null;
    }
    function recoverFromConcurrentError(root, errorRetryLanes) {
        // If an error occurred during hydration, discard server response and fall
        // back to client side render.
        // Before rendering again, save the errors from the previous attempt.
        var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
        if (isRootDehydrated(root)) {
            // The shell failed to hydrate. Set a flag to force a client rendering
            // during the next attempt. To do this, we call prepareFreshStack now
            // to create the root work-in-progress fiber. This is a bit weird in terms
            // of factoring, because it relies on renderRootSync not calling
            // prepareFreshStack again in the call below, which happens because the
            // root and lanes haven't changed.
            //
            // TODO: I think what we should do is set ForceClientRender inside
            // throwException, like we do for nested Suspense boundaries. The reason
            // it's here instead is so we can switch to the synchronous work loop, too.
            // Something to consider for a future refactor.
            var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);
            rootWorkInProgress.flags |= ForceClientRender;
            errorHydratingContainer(root.containerInfo);
        }
        var exitStatus = renderRootSync(root, errorRetryLanes);
        if (exitStatus !== RootErrored) {
            // Successfully finished rendering on retry
            // The errors from the failed first attempt have been recovered. Add
            // them to the collection of recoverable errors. We'll log them in the
            // commit phase.
            var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
            workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors
            // from the first attempt, to preserve the causal sequence.
            if (errorsFromSecondAttempt !== null) queueRecoverableErrors(errorsFromSecondAttempt);
        }
        return exitStatus;
    }
    function queueRecoverableErrors(errors) {
        if (workInProgressRootRecoverableErrors === null) workInProgressRootRecoverableErrors = errors;
        else workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
    }
    function finishConcurrentRender(root, exitStatus, lanes) {
        switch(exitStatus){
            case RootInProgress:
            case RootFatalErrored:
                throw new Error("Root did not complete. This is a bug in React.");
            // Flow knows about invariant, so it complains if I add a break
            // statement, but eslint doesn't know about invariant, so it complains
            // if I do. eslint-disable-next-line no-fallthrough
            case RootErrored:
                // We should have already attempted to retry this tree. If we reached
                // this point, it errored again. Commit it.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspended:
                markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
                // should immediately commit it or wait a bit.
                if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
                !shouldForceFlushFallbacksInDEV()) {
                    // This render only included retries, no updates. Throttle committing
                    // retries so that we don't show too many loading states too quickly.
                    var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.
                    if (msUntilTimeout > 10) {
                        var nextLanes = getNextLanes(root, NoLanes);
                        if (nextLanes !== NoLanes) break;
                        var suspendedLanes = root.suspendedLanes;
                        if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                            // We should prefer to render the fallback of at the last
                            // suspended level. Ping the last suspended level to try
                            // rendering it again.
                            // FIXME: What if the suspended lanes are Idle? Should not restart.
                            var eventTime = requestEventTime();
                            markRootPinged(root, suspendedLanes);
                            break;
                        } // The render is suspended, it hasn't timed out, and there's no
                        // lower priority work to do. Instead of committing the fallback
                        // immediately, wait for more data to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                        break;
                    }
                } // The work expired. Commit immediately.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspendedWithDelay:
                markRootSuspended$1(root, lanes);
                if (includesOnlyTransitions(lanes)) break;
                if (!shouldForceFlushFallbacksInDEV()) {
                    // This is not a transition, but we did trigger an avoided state.
                    // Schedule a placeholder to display after a short delay, using the Just
                    // Noticeable Difference.
                    // TODO: Is the JND optimization worth the added complexity? If this is
                    // the only reason we track the event time, then probably not.
                    // Consider removing.
                    var mostRecentEventTime = getMostRecentEventTime(root, lanes);
                    var eventTimeMs = mostRecentEventTime;
                    var timeElapsedMs = now() - eventTimeMs;
                    var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.
                    if (_msUntilTimeout > 10) {
                        // Instead of committing the fallback immediately, wait for more data
                        // to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                        break;
                    }
                } // Commit the placeholder.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootCompleted:
                // The work completed. Ready to commit.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            default:
                throw new Error("Unknown root exit status.");
        }
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
        // Search the rendered tree for external store reads, and check whether the
        // stores were mutated in a concurrent event. Intentionally using an iterative
        // loop instead of recursion so we can exit early.
        var node = finishedWork;
        while(true){
            if (node.flags & StoreConsistency) {
                var updateQueue = node.updateQueue;
                if (updateQueue !== null) {
                    var checks = updateQueue.stores;
                    if (checks !== null) for(var i = 0; i < checks.length; i++){
                        var check = checks[i];
                        var getSnapshot = check.getSnapshot;
                        var renderedValue = check.value;
                        try {
                            if (!objectIs(getSnapshot(), renderedValue)) // Found an inconsistent store.
                            return false;
                        } catch (error) {
                            // If `getSnapshot` throws, return `false`. This will schedule
                            // a re-render, and the error will be rethrown during render.
                            return false;
                        }
                    }
                }
            }
            var child = node.child;
            if (node.subtreeFlags & StoreConsistency && child !== null) {
                child.return = node;
                node = child;
                continue;
            }
            if (node === finishedWork) return true;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return true;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        } // Flow doesn't know this is unreachable, but eslint does
        // eslint-disable-next-line no-unreachable
        return true;
    }
    function markRootSuspended$1(root, suspendedLanes) {
        // When suspending, we should always exclude lanes that were pinged or (more
        // rarely, since we try to avoid it) updated during the render phase.
        // TODO: Lol maybe there's a better way to factor this besides this
        // obnoxiously named function :)
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
        markRootSuspended(root, suspendedLanes);
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler
    function performSyncWorkOnRoot(root) {
        syncNestedUpdateFlag();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Should not already be working.");
        flushPassiveEffects();
        var lanes = getNextLanes(root, NoLanes);
        if (!includesSomeLane(lanes, SyncLane)) {
            // There's no remaining sync work left.
            ensureRootIsScheduled(root, now());
            return null;
        }
        var exitStatus = renderRootSync(root, lanes);
        if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
            // If something threw an error, try rendering one more time. We'll render
            // synchronously to block concurrent data mutations, and we'll includes
            // all pending updates are included. If it still fails after the second
            // attempt, we'll give up and commit the resulting tree.
            var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
            if (errorRetryLanes !== NoLanes) {
                lanes = errorRetryLanes;
                exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
            }
        }
        if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root, NoLanes);
            markRootSuspended$1(root, lanes);
            ensureRootIsScheduled(root, now());
            throw fatalError;
        }
        if (exitStatus === RootDidNotComplete) throw new Error("Root did not complete. This is a bug in React.");
         // We now have a consistent tree. Because this is a sync render, we
        // will commit it even if something suspended.
        var finishedWork = root.current.alternate;
        root.finishedWork = finishedWork;
        root.finishedLanes = lanes;
        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next
        // pending level.
        ensureRootIsScheduled(root, now());
        return null;
    }
    function flushRoot(root, lanes) {
        if (lanes !== NoLanes) {
            markRootEntangled(root, mergeLanes(lanes, SyncLane));
            ensureRootIsScheduled(root, now());
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                resetRenderTimer();
                flushSyncCallbacks();
            }
        }
    }
    function batchedUpdates$1(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer
            // most batchedUpdates-like method.
            if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function discreteUpdates(fn, a, b, c, d) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            return fn(a, b, c, d);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            if (executionContext === NoContext) resetRenderTimer();
        }
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync(fn) {
        // In legacy mode, we flush pending passive effects at the beginning of the
        // next event, not at the end of the previous one.
        if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) flushPassiveEffects();
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        var previousPriority = getCurrentUpdatePriority();
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            if (fn) return fn();
            else return undefined;
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
            // Note that this will happen even if batchedUpdates is higher up
            // the stack.
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) flushSyncCallbacks();
        }
    }
    function isAlreadyRendering() {
        // Used by the renderer to print a warning if certain APIs are called from
        // the wrong context.
        return (executionContext & (RenderContext | CommitContext)) !== NoContext;
    }
    function pushRenderLanes(fiber, lanes) {
        push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
        subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
        workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
    }
    function popRenderLanes(fiber) {
        subtreeRenderLanes = subtreeRenderLanesCursor.current;
        pop(subtreeRenderLanesCursor, fiber);
    }
    function prepareFreshStack(root, lanes) {
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        var timeoutHandle = root.timeoutHandle;
        if (timeoutHandle !== noTimeout) {
            // The root previous suspended and scheduled a timeout to commit a fallback
            // state. Now that we have additional work, cancel the timeout.
            root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
            cancelTimeout(timeoutHandle);
        }
        if (workInProgress !== null) {
            var interruptedWork = workInProgress.return;
            while(interruptedWork !== null){
                var current = interruptedWork.alternate;
                unwindInterruptedWork(current, interruptedWork);
                interruptedWork = interruptedWork.return;
            }
        }
        workInProgressRoot = root;
        var rootWorkInProgress = createWorkInProgress(root.current, null);
        workInProgress = rootWorkInProgress;
        workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
        workInProgressRootExitStatus = RootInProgress;
        workInProgressRootFatalError = null;
        workInProgressRootSkippedLanes = NoLanes;
        workInProgressRootInterleavedUpdatedLanes = NoLanes;
        workInProgressRootPingedLanes = NoLanes;
        workInProgressRootConcurrentErrors = null;
        workInProgressRootRecoverableErrors = null;
        finishQueueingConcurrentUpdates();
        ReactStrictModeWarnings.discardPendingWarnings();
        return rootWorkInProgress;
    }
    function handleError(root, thrownValue) {
        do {
            var erroredWork = workInProgress;
            try {
                // Reset module-level state that was set during the render phase.
                resetContextDependencies();
                resetHooksAfterThrow();
                resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
                // separate issue. Write a regression test using string refs.
                ReactCurrentOwner$2.current = null;
                if (erroredWork === null || erroredWork.return === null) {
                    // Expected to be working on a non-root fiber. This is a fatal error
                    // because there's no ancestor that can handle it; the root is
                    // supposed to capture all errors that weren't caught by an error
                    // boundary.
                    workInProgressRootExitStatus = RootFatalErrored;
                    workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
                    // sibling, or the parent if there are no siblings. But since the root
                    // has no siblings nor a parent, we set it to null. Usually this is
                    // handled by `completeUnitOfWork` or `unwindWork`, but since we're
                    // intentionally not calling those, we need set it here.
                    // TODO: Consider calling `unwindWork` to pop the contexts.
                    workInProgress = null;
                    return;
                }
                if (enableProfilerTimer && erroredWork.mode & ProfileMode) // Record the time spent rendering before an error was thrown. This
                // avoids inaccurate Profiler durations in the case of a
                // suspended render.
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                if (enableSchedulingProfiler) {
                    markComponentRenderStopped();
                    if (thrownValue !== null && typeof thrownValue === "object" && typeof thrownValue.then === "function") {
                        var wakeable = thrownValue;
                        markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                    } else markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                }
                throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
                // Something in the return path also threw.
                thrownValue = yetAnotherThrownValue;
                if (workInProgress === erroredWork && erroredWork !== null) {
                    // If this boundary has already errored, then we had trouble processing
                    // the error. Bubble it to the next boundary.
                    erroredWork = erroredWork.return;
                    workInProgress = erroredWork;
                } else erroredWork = workInProgress;
                continue;
            } // Return to the normal work loop.
            return;
        }while (true);
    }
    function pushDispatcher() {
        var prevDispatcher = ReactCurrentDispatcher$2.current;
        ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
        if (prevDispatcher === null) // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
        else return prevDispatcher;
    }
    function popDispatcher(prevDispatcher) {
        ReactCurrentDispatcher$2.current = prevDispatcher;
    }
    function markCommitTimeOfFallback() {
        globalMostRecentFallbackTime = now();
    }
    function markSkippedUpdateLanes(lane) {
        workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
    }
    function renderDidSuspend() {
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootSuspended;
    }
    function renderDidSuspendDelayIfPossible() {
        if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) workInProgressRootExitStatus = RootSuspendedWithDelay;
         // Check if there are updates that we skipped tree that might have unblocked
        // this render.
        if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) // Mark the current render as suspended so that we switch to working on
        // the updates that were skipped. Usually we only suspend at the end of
        // the render phase.
        // TODO: We should probably always mark the root as suspended immediately
        // (inside this function), since by suspending at the end of the render
        // phase introduces a potential mistake where we suspend lanes that were
        // pinged or updated while we were rendering.
        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
    }
    function renderDidError(error) {
        if (workInProgressRootExitStatus !== RootSuspendedWithDelay) workInProgressRootExitStatus = RootErrored;
        if (workInProgressRootConcurrentErrors === null) workInProgressRootConcurrentErrors = [
            error
        ];
        else workInProgressRootConcurrentErrors.push(error);
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.
    function renderHasNotSuspendedYet() {
        // If something errored or completed, we can't really be sure,
        // so those are false.
        return workInProgressRootExitStatus === RootInProgress;
    }
    function renderRootSync(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopSync();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        executionContext = prevExecutionContext;
        popDispatcher(prevDispatcher);
        if (workInProgress !== null) // This is a sync render, so we should have finished the whole tree.
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
        markRenderStopped();
        workInProgressRoot = null;
        workInProgressRootRenderLanes = NoLanes;
        return workInProgressRootExitStatus;
    } // The work loop is an extremely hot path. Tell Closure not to inline it.
    /** @noinline */ function workLoopSync() {
        // Already timed out, so perform work without checking if we need to yield.
        while(workInProgress !== null)performUnitOfWork(workInProgress);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            resetRenderTimer();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopConcurrent();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        popDispatcher(prevDispatcher);
        executionContext = prevExecutionContext;
        if (workInProgress !== null) {
            markRenderYielded();
            return RootInProgress;
        } else {
            markRenderStopped();
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes; // Return the final exit status.
            return workInProgressRootExitStatus;
        }
    }
    /** @noinline */ function workLoopConcurrent() {
        // Perform work until Scheduler asks us to yield
        while(workInProgress !== null && !shouldYield())performUnitOfWork(workInProgress);
    }
    function performUnitOfWork(unitOfWork) {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current = unitOfWork.alternate;
        setCurrentFiber(unitOfWork);
        var next;
        if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
        } else next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
        resetCurrentFiber();
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        if (next === null) // If this doesn't spawn new work, complete the current work.
        completeUnitOfWork(unitOfWork);
        else workInProgress = next;
        ReactCurrentOwner$2.current = null;
    }
    function completeUnitOfWork(unitOfWork) {
        // Attempt to complete the current unit of work, then move to the next
        // sibling. If there are no more siblings, return to the parent fiber.
        var completedWork = unitOfWork;
        do {
            // The current, flushed, state of this fiber is the alternate. Ideally
            // nothing should rely on this, but relying on it here means that we don't
            // need an additional field on the work in progress.
            var current = completedWork.alternate;
            var returnFiber = completedWork.return; // Check if the work completed or if something threw.
            if ((completedWork.flags & Incomplete) === NoFlags) {
                setCurrentFiber(completedWork);
                var next = void 0;
                if ((completedWork.mode & ProfileMode) === NoMode) next = completeWork(current, completedWork, subtreeRenderLanes);
                else {
                    startProfilerTimer(completedWork);
                    next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                }
                resetCurrentFiber();
                if (next !== null) {
                    // Completing this fiber spawned new work. Work on that next.
                    workInProgress = next;
                    return;
                }
            } else {
                // This fiber did not complete because something threw. Pop values off
                // the stack without entering the complete phase. If this is a boundary,
                // capture values if possible.
                var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.
                if (_next !== null) {
                    // If completing this work spawned new work, do that next. We'll come
                    // back here again.
                    // Since we're restarting, remove anything that is not a host effect
                    // from the effect tag.
                    _next.flags &= HostEffectMask;
                    workInProgress = _next;
                    return;
                }
                if ((completedWork.mode & ProfileMode) !== NoMode) {
                    // Record the render duration for the fiber that errored.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.
                    var actualDuration = completedWork.actualDuration;
                    var child = completedWork.child;
                    while(child !== null){
                        actualDuration += child.actualDuration;
                        child = child.sibling;
                    }
                    completedWork.actualDuration = actualDuration;
                }
                if (returnFiber !== null) {
                    // Mark the parent fiber as incomplete and clear its subtree flags.
                    returnFiber.flags |= Incomplete;
                    returnFiber.subtreeFlags = NoFlags;
                    returnFiber.deletions = null;
                } else {
                    // We've unwound all the way to the root.
                    workInProgressRootExitStatus = RootDidNotComplete;
                    workInProgress = null;
                    return;
                }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
                // If there is more work to do in this returnFiber, do that next.
                workInProgress = siblingFiber;
                return;
            } // Otherwise, return to the parent
            completedWork = returnFiber; // Update the next thing we're working on in case something throws.
            workInProgress = completedWork;
        }while (completedWork !== null); // We've reached the root.
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootCompleted;
    }
    function commitRoot(root, recoverableErrors, transitions) {
        // TODO: This no longer makes any sense. We already wrap the mutation and
        // layout phases. Should be able to remove.
        var previousUpdateLanePriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);
        } finally{
            ReactCurrentBatchConfig$3.transition = prevTransition;
            setCurrentUpdatePriority(previousUpdateLanePriority);
        }
        return null;
    }
    function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {
        do // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
        // means `flushPassiveEffects` will sometimes result in additional
        // passive effects. So we need to keep flushing in a loop until there are
        // no more pending effects.
        // TODO: Might be better if `flushPassiveEffects` did not automatically
        // flush synchronous work at the end, to avoid factoring hazards like this.
        flushPassiveEffects();
        while (rootWithPendingPassiveEffects !== null);
        flushRenderPhaseStrictModeWarningsInDEV();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Should not already be working.");
        var finishedWork = root.finishedWork;
        var lanes = root.finishedLanes;
        markCommitStarted(lanes);
        if (finishedWork === null) {
            markCommitStopped();
            return null;
        } else if (lanes === NoLanes) error("root.finishedLanes should not be empty during a commit. This is a bug in React.");
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        if (finishedWork === root.current) throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
         // commitRoot never returns a continuation; it always finishes synchronously.
        // So we can clear these now to allow a new callback to be scheduled.
        root.callbackNode = null;
        root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first
        // pending time is whatever is left on the root fiber.
        var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
        markRootFinished(root, remainingLanes);
        if (root === workInProgressRoot) {
            // We can reset these now that they are finished.
            workInProgressRoot = null;
            workInProgress = null;
            workInProgressRootRenderLanes = NoLanes;
        } // If there are pending passive effects, schedule a callback to process them.
        // Do this as early as possible, so it is queued before anything else that
        // might get scheduled in the commit phase. (See #16714.)
        // TODO: Delete all other places that schedule the passive effect callback
        // They're redundant.
        if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
            if (!rootDoesHavePassiveEffects) {
                rootDoesHavePassiveEffects = true;
                // to store it in pendingPassiveTransitions until they get processed
                // We need to pass this through as an argument to commitRoot
                // because workInProgressTransitions might have changed between
                // the previous render and commit if we throttle the commit
                // with setTimeout
                pendingPassiveTransitions = transitions;
                scheduleCallback$1(NormalPriority, function() {
                    flushPassiveEffects(); // This render triggered passive effects: release the root cache pool
                    // *after* passive effects fire to avoid freeing a cache pool that may
                    // be referenced by a node in the tree (HostRoot, Cache boundary etc)
                    return null;
                });
            }
        } // Check if there are any effects in the whole tree.
        // TODO: This is left over from the effect list implementation, where we had
        // to check for the existence of `firstEffect` to satisfy Flow. I think the
        // only other reason this optimization exists is because it affects profiling.
        // Reconsider whether this is necessary.
        var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        if (subtreeHasEffects || rootHasEffect) {
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            ReactCurrentBatchConfig$3.transition = null;
            var previousPriority = getCurrentUpdatePriority();
            setCurrentUpdatePriority(DiscreteEventPriority);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext; // Reset this to null before calling lifecycles
            ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
            // of the effect list for each phase: all mutation effects come before all
            // layout effects, and so on.
            // The first phase a "before mutation" phase. We use this phase to read the
            // state of the host tree right before we mutate it. This is where
            // getSnapshotBeforeUpdate is called.
            var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);
            // Mark the current commit time to be shared by all Profilers in this
            // batch. This enables them to be grouped later.
            recordCommitTime();
            commitMutationEffects(root, finishedWork, lanes);
            resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
            // the mutation phase, so that the previous tree is still current during
            // componentWillUnmount, but before the layout phase, so that the finished
            // work is current during componentDidMount/Update.
            root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
            markLayoutEffectsStarted(lanes);
            commitLayoutEffects(finishedWork, root, lanes);
            markLayoutEffectsStopped();
            // opportunity to paint.
            requestPaint();
            executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
        } else {
            // No effects.
            root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
            recordCommitTime();
        }
        var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
        if (rootDoesHavePassiveEffects) {
            // This commit has passive effects. Stash a reference to them. But don't
            // schedule a callback until after flushing layout work.
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root;
            pendingPassiveEffectsLanes = lanes;
        } else {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
        } // Read this again, since an effect might have updated it
        remainingLanes = root.pendingLanes; // Check if there's remaining work on this root
        // TODO: This is part of the `componentDidCatch` implementation. Its purpose
        // is to detect whether something might have called setState inside
        // `componentDidCatch`. The mechanism is known to be flawed because `setState`
        // inside `componentDidCatch` is itself flawed — that's why we recommend
        // `getDerivedStateFromError` instead. However, it could be improved by
        // checking if remainingLanes includes Sync work, instead of whether there's
        // any work remaining at all (which would also include stuff like Suspense
        // retries or transitions). It's been like this for a while, though, so fixing
        // it probably isn't that urgent.
        if (remainingLanes === NoLanes) // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
        if (!rootDidHavePassiveEffects) commitDoubleInvokeEffectsInDEV(root.current, false);
        onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
        if (isDevToolsPresent) root.memoizedUpdaters.clear();
        onCommitRoot$1();
        // additional work on this root is scheduled.
        ensureRootIsScheduled(root, now());
        if (recoverableErrors !== null) {
            // There were errors during this render, but recovered from them without
            // needing to surface it to the UI. We log them here.
            var onRecoverableError = root.onRecoverableError;
            for(var i = 0; i < recoverableErrors.length; i++){
                var recoverableError = recoverableErrors[i];
                var componentStack = recoverableError.stack;
                var digest = recoverableError.digest;
                onRecoverableError(recoverableError.value, {
                    componentStack: componentStack,
                    digest: digest
                });
            }
        }
        if (hasUncaughtError) {
            hasUncaughtError = false;
            var error$1 = firstUncaughtError;
            firstUncaughtError = null;
            throw error$1;
        } // If the passive effects are the result of a discrete render, flush them
        // synchronously at the end of the current task so that the result is
        // immediately observable. Otherwise, we assume that they are not
        // order-dependent and do not need to be observed by external systems, so we
        // can wait until after paint.
        // TODO: We can optimize this by not scheduling the callback earlier. Since we
        // currently schedule the callback in multiple places, will wait until those
        // are consolidated.
        if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) flushPassiveEffects();
         // Read this again, since a passive effect might have updated it
        remainingLanes = root.pendingLanes;
        if (includesSomeLane(remainingLanes, SyncLane)) {
            markNestedUpdateScheduled();
            // finishing. If there are too many, it indicates an infinite update loop.
            if (root === rootWithNestedUpdates) nestedUpdateCount++;
            else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root;
            }
        } else nestedUpdateCount = 0;
         // If layout work was scheduled, flush it now.
        flushSyncCallbacks();
        markCommitStopped();
        return null;
    }
    function flushPassiveEffects() {
        // Returns whether passive effects were flushed.
        // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should
        // probably just combine the two functions. I believe they were only separate
        // in the first place because we used to wrap it with
        // `Scheduler.runWithPriority`, which accepts a function. But now we track the
        // priority within React itself, so we can mutate the variable directly.
        if (rootWithPendingPassiveEffects !== null) {
            var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
            var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            var previousPriority = getCurrentUpdatePriority();
            try {
                ReactCurrentBatchConfig$3.transition = null;
                setCurrentUpdatePriority(priority);
                return flushPassiveEffectsImpl();
            } finally{
                setCurrentUpdatePriority(previousPriority);
                ReactCurrentBatchConfig$3.transition = prevTransition; // Once passive effects have run for the tree - giving components a
            }
        }
        return false;
    }
    function enqueuePendingPassiveProfilerEffect(fiber) {
        pendingPassiveProfilerEffects.push(fiber);
        if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
            });
        }
    }
    function flushPassiveEffectsImpl() {
        if (rootWithPendingPassiveEffects === null) return false;
         // Cache and clear the transitions flag
        var transitions = pendingPassiveTransitions;
        pendingPassiveTransitions = null;
        var root = rootWithPendingPassiveEffects;
        var lanes = pendingPassiveEffectsLanes;
        rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.
        // Figure out why and fix it. It's not causing any known issues (probably
        // because it's only used for profiling), but it's a refactor hazard.
        pendingPassiveEffectsLanes = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Cannot flush passive effects while already rendering.");
        isFlushingPassiveEffects = true;
        didScheduleUpdateDuringPassiveEffects = false;
        markPassiveEffectsStarted(lanes);
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        commitPassiveUnmountEffects(root.current);
        commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects
        var profilerEffects = pendingPassiveProfilerEffects;
        pendingPassiveProfilerEffects = [];
        for(var i = 0; i < profilerEffects.length; i++){
            var _fiber = profilerEffects[i];
            commitPassiveEffectDurations(root, _fiber);
        }
        markPassiveEffectsStopped();
        commitDoubleInvokeEffectsInDEV(root.current, true);
        executionContext = prevExecutionContext;
        flushSyncCallbacks();
        // If additional passive effects were scheduled, increment a counter. If this
        // exceeds the limit, we'll fire a warning.
        if (didScheduleUpdateDuringPassiveEffects) {
            if (root === rootWithPassiveNestedUpdates) nestedPassiveUpdateCount++;
            else {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = root;
            }
        } else nestedPassiveUpdateCount = 0;
        isFlushingPassiveEffects = false;
        didScheduleUpdateDuringPassiveEffects = false;
        onPostCommitRoot(root);
        var stateNode = root.current.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        return true;
    }
    function isAlreadyFailedLegacyErrorBoundary(instance) {
        return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }
    function markLegacyErrorBoundaryAsFailed(instance) {
        if (legacyErrorBoundariesThatAlreadyFailed === null) legacyErrorBoundariesThatAlreadyFailed = new Set([
            instance
        ]);
        else legacyErrorBoundariesThatAlreadyFailed.add(instance);
    }
    function prepareToThrowUncaughtError(error) {
        if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error;
        }
    }
    var onUncaughtError = prepareToThrowUncaughtError;
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        var errorInfo = createCapturedValueAtFiber(error, sourceFiber);
        var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
        var root = enqueueUpdate(rootFiber, update, SyncLane);
        var eventTime = requestEventTime();
        if (root !== null) {
            markRootUpdated(root, SyncLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
        reportUncaughtErrorInDEV(error$1);
        setIsRunningInsertionEffect(false);
        if (sourceFiber.tag === HostRoot) {
            // Error was thrown at the root. There is no parent, so the root
            // itself should capture it.
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
            return;
        }
        var fiber = null;
        fiber = nearestMountedAncestor;
        while(fiber !== null){
            if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
                return;
            } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === "function" || typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                    var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
                    var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                    var root = enqueueUpdate(fiber, update, SyncLane);
                    var eventTime = requestEventTime();
                    if (root !== null) {
                        markRootUpdated(root, SyncLane, eventTime);
                        ensureRootIsScheduled(root, eventTime);
                    }
                    return;
                }
            }
            fiber = fiber.return;
        }
        // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning
        // will fire for errors that are thrown by destroy functions inside deleted
        // trees. What it should instead do is propagate the error to the parent of
        // the deleted tree. In the meantime, do not add this warning to the
        // allowlist; this is only for our internal use.
        error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        if (pingCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(wakeable);
        var eventTime = requestEventTime();
        markRootPinged(root, pingedLanes);
        warnIfSuspenseResolutionNotWrappedWithActDEV(root);
        if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            // Received a ping at the same priority level at which we're currently
            // rendering. We might want to restart this render. This should mirror
            // the logic of whether or not a root suspends once it completes.
            // TODO: If we're rendering sync either due to Sync, Batched or expired,
            // we should probably never restart.
            // If we're suspended with delay, or if it's a retry, we'll always suspend
            // so we can always restart.
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) // Restart from the root.
            prepareFreshStack(root, NoLanes);
            else // Even though we can't restart right now, we might get an
            // opportunity later. So we mark this render as having a ping.
            workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
        }
        ensureRootIsScheduled(root, eventTime);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        // The boundary fiber (a Suspense component or SuspenseList component)
        // previously was rendered in its fallback state. One of the promises that
        // suspended it has resolved, which means at least part of the tree was
        // likely unblocked. Try rendering again, at a new lanes.
        if (retryLane === NoLane) // TODO: Assign this to `suspenseState.retryLane`? to avoid
        // unnecessary entanglement?
        retryLane = requestRetryLane(boundaryFiber);
         // TODO: Special case idle priority?
        var eventTime = requestEventTime();
        var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
        if (root !== null) {
            markRootUpdated(root, retryLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState;
        var retryLane = NoLane;
        if (suspenseState !== null) retryLane = suspenseState.retryLane;
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = NoLane; // Default
        var retryCache;
        switch(boundaryFiber.tag){
            case SuspenseComponent:
                retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                if (suspenseState !== null) retryLane = suspenseState.retryLane;
                break;
            case SuspenseListComponent:
                retryCache = boundaryFiber.stateNode;
                break;
            default:
                throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        if (retryCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.
    function jnd(timeElapsed) {
        return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }
    function checkForNestedUpdates() {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        }
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
            error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
        }
    }
    function flushRenderPhaseStrictModeWarningsInDEV() {
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
    function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
        // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects
        // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.
        // Maybe not a big deal since this is DEV only behavior.
        setCurrentFiber(fiber);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
        resetCurrentFiber();
    }
    function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        var current = firstChild;
        var subtreeRoot = null;
        while(current !== null){
            var primarySubtreeFlag = current.subtreeFlags & fiberFlags;
            if (current !== subtreeRoot && current.child !== null && primarySubtreeFlag !== NoFlags) current = current.child;
            else {
                if ((current.flags & fiberFlags) !== NoFlags) invokeEffectFn(current);
                if (current.sibling !== null) current = current.sibling;
                else current = subtreeRoot = current.return;
            }
        }
    }
    var didWarnStateUpdateForNotYetMountedComponent = null;
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) !== NoContext) // We let the other warning about render phase updates deal with this one.
        return;
        if (!(fiber.mode & ConcurrentMode)) return;
        var tag = fiber.tag;
        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) // Only warn for user-defined components, not internal ones like Suspense.
        return;
         // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentNameFromFiber(fiber) || "ReactComponent";
        if (didWarnStateUpdateForNotYetMountedComponent !== null) {
            if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) return;
            didWarnStateUpdateForNotYetMountedComponent.add(componentName);
        } else didWarnStateUpdateForNotYetMountedComponent = new Set([
            componentName
        ]);
        var previousFiber = current;
        try {
            setCurrentFiber(fiber);
            error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally{
            if (previousFiber) setCurrentFiber(fiber);
            else resetCurrentFiber();
        }
    }
    var beginWork$1;
    var dummyFiber = null;
    beginWork$1 = function(current, unitOfWork, lanes) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
        try {
            return beginWork(current, unitOfWork, lanes);
        } catch (originalError) {
            if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") // Don't replay promises.
            // Don't replay errors if we are hydrating and have already suspended or handled an error
            throw originalError;
             // Keep this code in sync with handleError; any changes here must have
            // corresponding changes there.
            resetContextDependencies();
            resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
            // same fiber again.
            // Unwind the failed stack frame
            unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.
            assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
            if (unitOfWork.mode & ProfileMode) // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
             // Run beginWork again.
            invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);
            if (hasCaughtError()) {
                var replayError = clearCaughtError();
                if (typeof replayError === "object" && replayError !== null && replayError._suppressLogging && typeof originalError === "object" && originalError !== null && !originalError._suppressLogging) // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.
                originalError._suppressLogging = true;
            } // We always throw the original error in case the second render pass is not idempotent.
            // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.
            throw originalError;
        }
    };
    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInRenderForAnotherComponent;
    didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    function warnAboutRenderPhaseUpdatesInDEV(fiber) {
        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown"; // Dedupe by the rendering component because it's the one that needs to be fixed.
                var dedupeKey = renderingComponentName;
                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentNameFromFiber(fiber) || "Unknown";
                    error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                }
                break;
            case ClassComponent:
                if (!didWarnAboutUpdateInRender) {
                    error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                }
                break;
        }
    }
    function restorePendingUpdaters(root, lanes) {
        if (isDevToolsPresent) {
            var memoizedUpdaters = root.memoizedUpdaters;
            memoizedUpdaters.forEach(function(schedulingFiber) {
                addFiberToLanesMap(root, schedulingFiber, lanes);
            }); // This function intentionally does not clear memoized updaters.
        // Those may still be relevant to the current commit
        // and a future one (e.g. Suspense).
        }
    }
    var fakeActCallbackNode = {};
    function scheduleCallback$1(priorityLevel, callback) {
        // If we're currently inside an `act` scope, bypass Scheduler and push to
        // the `act` queue instead.
        var actQueue = ReactCurrentActQueue$1.current;
        if (actQueue !== null) {
            actQueue.push(callback);
            return fakeActCallbackNode;
        } else return scheduleCallback(priorityLevel, callback);
    }
    function cancelCallback$1(callbackNode) {
        if (callbackNode === fakeActCallbackNode) return;
         // In production, always call Scheduler. This function will be stripped out.
        return cancelCallback(callbackNode);
    }
    function shouldForceFlushFallbacksInDEV() {
        // Never force flush in production. This function should get stripped out.
        return ReactCurrentActQueue$1.current !== null;
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        if (fiber.mode & ConcurrentMode) {
            if (!isConcurrentActEnvironment()) // Not in an act environment. No need to warn.
            return;
        } else {
            // Legacy mode has additional cases where we suppress a warning.
            if (!isLegacyActEnvironment()) // Not in an act environment. No need to warn.
            return;
            if (executionContext !== NoContext) // Legacy mode doesn't warn if the update is batched, i.e.
            // batchedUpdates or flushSync.
            return;
            if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) // For backwards compatibility with pre-hooks code, legacy mode only
            // warns for updates that originate from a hook.
            return;
        }
        if (ReactCurrentActQueue$1.current === null) {
            var previousFiber = current;
            try {
                setCurrentFiber(fiber);
                error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {
        if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
    }
    function setIsRunningInsertionEffect(isRunning) {
        isRunningInsertionEffect = isRunning;
    }
    /* eslint-disable react-internal/prod-error-codes */ var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.
    var failedBoundaries = null;
    var setRefreshHandler = function(handler) {
        resolveFamily = handler;
    };
    function resolveFunctionForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) return type;
         // Use the latest known implementation.
        return family.current;
    }
    function resolveClassForHotReloading(type) {
        // No implementation differences.
        return resolveFunctionForHotReloading(type);
    }
    function resolveForwardRefForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) {
            // Check if we're dealing with a real forwardRef. Don't want to crash early.
            if (type !== null && type !== undefined && typeof type.render === "function") {
                // ForwardRef is special because its resolved .type is an object,
                // but it's possible that we only have its inner render function in the map.
                // If that inner render function is different, we'll build a new forwardRef type.
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                    var syntheticType = {
                        $$typeof: REACT_FORWARD_REF_TYPE,
                        render: currentRender
                    };
                    if (type.displayName !== undefined) syntheticType.displayName = type.displayName;
                    return syntheticType;
                }
            }
            return type;
        } // Use the latest known implementation.
        return family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return false;
        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.
        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
        switch(fiber.tag){
            case ClassComponent:
                if (typeof nextType === "function") needsCompareFamilies = true;
                break;
            case FunctionComponent:
                if (typeof nextType === "function") needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
                break;
            case ForwardRef:
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            case MemoComponent:
            case SimpleMemoComponent:
                if ($$typeofNextType === REACT_MEMO_TYPE) // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            default:
                return false;
        } // Check if both types have a family and it's the same one.
        if (needsCompareFamilies) {
            // Note: memo() and forwardRef() we'll compare outer rather than inner type.
            // This means both of them need to be registered to preserve state.
            // If we unwrapped and compared the inner types for wrappers instead,
            // then we would risk falsely saying two separate memo(Foo)
            // calls are equivalent because they wrap the same Foo function.
            var prevFamily = resolveFamily(prevType);
            if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) return true;
        }
        return false;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        if (typeof WeakSet !== "function") return;
        if (failedBoundaries === null) failedBoundaries = new WeakSet();
        failedBoundaries.add(fiber);
    }
    var scheduleRefresh = function(root, update) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function() {
            scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
    };
    var scheduleRoot = function(root, element) {
        if (root.context !== emptyContextObject) // Super edge case: root has a legacy _renderSubtree context
        // but we don't know the parentComponent so we can't pass it.
        // Just ignore. We'll delete this with _renderSubtree code path later.
        return;
        flushPassiveEffects();
        flushSync(function() {
            updateContainer(element, root, null, null);
        });
    };
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        if (resolveFamily === null) throw new Error("Expected resolveFamily to be set during hot reload.");
        var needsRender = false;
        var needsRemount = false;
        if (candidateType !== null) {
            var family = resolveFamily(candidateType);
            if (family !== undefined) {
                if (staleFamilies.has(family)) needsRemount = true;
                else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) needsRemount = true;
                    else needsRender = true;
                }
            }
        }
        if (failedBoundaries !== null) {
            if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) needsRemount = true;
        }
        if (needsRemount) fiber._debugNeedsRemount = true;
        if (needsRemount || needsRender) {
            var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (_root !== null) scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
        }
        if (child !== null && !needsRemount) scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        if (sibling !== null) scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    var findHostInstancesForRefresh = function(root, families) {
        var hostInstances = new Set();
        var types = new Set(families.map(function(family) {
            return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
    };
    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
        var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        var didMatch = false;
        if (candidateType !== null) {
            if (types.has(candidateType)) didMatch = true;
        }
        if (didMatch) // We have a match. This only drills down to the closest host components.
        // There's no need to search deeper because for the purpose of giving
        // visual feedback, "flashing" outermost parent rectangles is sufficient.
        findHostInstancesForFiberShallowly(fiber, hostInstances);
        else // If there's no match, maybe there will be one further down in the child tree.
        if (child !== null) findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
        if (sibling !== null) findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
        if (foundHostInstances) return;
         // If we didn't find any host children, fallback to closest host parent.
        var node = fiber;
        while(true){
            switch(node.tag){
                case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
            }
            if (node.return === null) throw new Error("Expected to reach root first.");
            node = node.return;
        }
    }
    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
        var node = fiber;
        var foundHostInstances = false;
        while(true){
            if (node.tag === HostComponent) {
                // We got a match.
                foundHostInstances = true;
                hostInstances.add(node.stateNode); // There may still be more, so keep searching.
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === fiber) return foundHostInstances;
            while(node.sibling === null){
                if (node.return === null || node.return === fiber) return foundHostInstances;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return false;
    }
    var hasBadMapPolyfill;
    hasBadMapPolyfill = false;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        /* eslint-disable no-new */ new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    /* eslint-enable no-new */ } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
    }
    function FiberNode(tag, pendingProps, key, mode) {
        // Instance
        this.tag = tag;
        this.key = key;
        this.elementType = null;
        this.type = null;
        this.stateNode = null; // Fiber
        this.return = null;
        this.child = null;
        this.sibling = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = pendingProps;
        this.memoizedProps = null;
        this.updateQueue = null;
        this.memoizedState = null;
        this.dependencies = null;
        this.mode = mode; // Effects
        this.flags = NoFlags;
        this.subtreeFlags = NoFlags;
        this.deletions = null;
        this.lanes = NoLanes;
        this.childLanes = NoLanes;
        this.alternate = null;
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).
        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
        // This isn't directly used but is handy for debugging internals:
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;
        if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") Object.preventExtensions(this);
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.
    var createFiber = function(tag, pendingProps, key, mode) {
        // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
        return new FiberNode(tag, pendingProps, key, mode);
    };
    function shouldConstruct$1(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function isSimpleFunctionComponent(type) {
        return typeof type === "function" && !shouldConstruct$1(type) && type.defaultProps === undefined;
    }
    function resolveLazyComponentTag(Component) {
        if (typeof Component === "function") return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
        else if (Component !== undefined && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) return ForwardRef;
            if ($$typeof === REACT_MEMO_TYPE) return MemoComponent;
        }
        return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        if (workInProgress === null) {
            // We use a double buffering pooling technique because we know that we'll
            // only ever need at most two versions of a tree. We pool the "other" unused
            // node that we're free to reuse. This is lazily created to avoid allocating
            // extra objects for things that are never updated. It also allow us to
            // reclaim the extra memory if needed.
            workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
            workInProgress.elementType = current.elementType;
            workInProgress.type = current.type;
            workInProgress.stateNode = current.stateNode;
            // DEV-only fields
            workInProgress._debugSource = current._debugSource;
            workInProgress._debugOwner = current._debugOwner;
            workInProgress._debugHookTypes = current._debugHookTypes;
            workInProgress.alternate = current;
            current.alternate = workInProgress;
        } else {
            workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // We already have an alternate.
            // Reset the effect tag.
            workInProgress.flags = NoFlags; // The effects are no longer valid.
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            // We intentionally reset, rather than copy, actualDuration & actualStartTime.
            // This prevents time from endlessly accumulating in new commits.
            // This has the downside of resetting values for different priority renders,
            // But works for yielding (the common case) and should support resuming.
            workInProgress.actualDuration = 0;
            workInProgress.actualStartTime = -1;
        } // Reset all effects except static ones.
        // Static effects are not specific to a render.
        workInProgress.flags = current.flags & StaticMask;
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.
        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
        }; // These will be overridden during the parent's reconciliation
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case FunctionComponent:
            case SimpleMemoComponent:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case ClassComponent:
                workInProgress.type = resolveClassForHotReloading(current.type);
                break;
            case ForwardRef:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
                break;
        }
        return workInProgress;
    } // Used to reuse a Fiber for a second pass.
    function resetWorkInProgress(workInProgress, renderLanes) {
        // This resets the Fiber to what createFiber or createWorkInProgress would
        // have set the values to before during the first pass. Ideally this wouldn't
        // be necessary but unfortunately many code paths reads from the workInProgress
        // when they should be reading from current and writing to workInProgress.
        // We assume pendingProps, index, key, ref, return are still untouched to
        // avoid doing another reconciliation.
        // Reset the effect flags but keep any Placement tags, since that's something
        // that child fiber is setting, not the reconciliation.
        workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.
        var current = workInProgress.alternate;
        if (current === null) {
            // Reset to createFiber's initial values.
            workInProgress.childLanes = NoLanes;
            workInProgress.lanes = renderLanes;
            workInProgress.child = null;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.memoizedProps = null;
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null;
            workInProgress.dependencies = null;
            workInProgress.stateNode = null;
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = 0;
            workInProgress.treeBaseDuration = 0;
        } else {
            // Reset to the cloned values that createWorkInProgress would've.
            workInProgress.childLanes = current.childLanes;
            workInProgress.lanes = current.lanes;
            workInProgress.child = current.child;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            workInProgress.memoizedProps = current.memoizedProps;
            workInProgress.memoizedState = current.memoizedState;
            workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
            // it cannot be shared with the current fiber.
            var currentDependencies = current.dependencies;
            workInProgress.dependencies = currentDependencies === null ? null : {
                lanes: currentDependencies.lanes,
                firstContext: currentDependencies.firstContext
            };
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = current.selfBaseDuration;
            workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
        return workInProgress;
    }
    function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
        var mode;
        if (tag === ConcurrentRoot) {
            mode = ConcurrentMode;
            if (isStrictMode === true) {
                mode |= StrictLegacyMode;
                mode |= StrictEffectsMode;
            }
        } else mode = NoMode;
        if (isDevToolsPresent) // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
        return createFiber(HostRoot, null, null, mode);
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
        var resolvedType = type;
        if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
                fiberTag = ClassComponent;
                resolvedType = resolveClassForHotReloading(resolvedType);
            } else resolvedType = resolveFunctionForHotReloading(resolvedType);
        } else if (typeof type === "string") fiberTag = HostComponent;
        else getTag: switch(type){
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_STRICT_MODE_TYPE:
                fiberTag = Mode;
                mode |= StrictLegacyMode;
                if ((mode & ConcurrentMode) !== NoMode) // Strict effects should never run on legacy roots
                mode |= StrictEffectsMode;
                break;
            case REACT_PROFILER_TYPE:
                return createFiberFromProfiler(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_TYPE:
                return createFiberFromSuspense(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_LIST_TYPE:
                return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
            case REACT_OFFSCREEN_TYPE:
                return createFiberFromOffscreen(pendingProps, mode, lanes, key);
            case REACT_LEGACY_HIDDEN_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_SCOPE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_CACHE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_TRACING_MARKER_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_DEBUG_TRACING_MODE_TYPE:
            // eslint-disable-next-line no-fallthrough
            default:
                if (typeof type === "object" && type !== null) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                    case REACT_CONTEXT_TYPE:
                        // This is a consumer
                        fiberTag = ContextConsumer;
                        break getTag;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break getTag;
                    case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                    case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                }
                var info = "";
                if (type === undefined || typeof type === "object" && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                if (ownerName) info += "\n\nCheck the render method of `" + ownerName + "`.";
                throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
        var fiber = createFiber(fiberTag, pendingProps, key, mode);
        fiber.elementType = type;
        fiber.type = resolvedType;
        fiber.lanes = lanes;
        fiber._debugOwner = owner;
        return fiber;
    }
    function createFiberFromElement(element, mode, lanes) {
        var owner = null;
        owner = element._owner;
        var type = element.type;
        var key = element.key;
        var pendingProps = element.props;
        var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
        return fiber;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        var fiber = createFiber(Fragment, elements, key, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromProfiler(pendingProps, mode, lanes, key) {
        if (typeof pendingProps.id !== "string") error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
        var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
        fiber.elementType = REACT_PROFILER_TYPE;
        fiber.lanes = lanes;
        fiber.stateNode = {
            effectDuration: 0,
            passiveEffectDuration: 0
        };
        return fiber;
    }
    function createFiberFromSuspense(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
        var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
        fiber.elementType = REACT_OFFSCREEN_TYPE;
        fiber.lanes = lanes;
        var primaryChildInstance = {
            isHidden: false
        };
        fiber.stateNode = primaryChildInstance;
        return fiber;
    }
    function createFiberFromText(content, mode, lanes) {
        var fiber = createFiber(HostText, content, null, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent, null, null, NoMode);
        fiber.elementType = "DELETED";
        return fiber;
    }
    function createFiberFromDehydratedFragment(dehydratedNode) {
        var fiber = createFiber(DehydratedFragment, null, null, NoMode);
        fiber.stateNode = dehydratedNode;
        return fiber;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        var pendingProps = portal.children !== null ? portal.children : [];
        var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
        fiber.lanes = lanes;
        fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            // Used by persistent updates
            implementation: portal.implementation
        };
        return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.
    function assignFiberPropertiesInDEV(target, source) {
        if (target === null) // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
         // This is intentionally written as a list of all properties.
        // We tried to use Object.assign() instead but this is called in
        // the hottest path, and Object.assign() was too slow:
        // https://github.com/facebook/react/issues/12502
        // This code is DEV-only so size is not a concern.
        target.tag = source.tag;
        target.key = source.key;
        target.elementType = source.elementType;
        target.type = source.type;
        target.stateNode = source.stateNode;
        target.return = source.return;
        target.child = source.child;
        target.sibling = source.sibling;
        target.index = source.index;
        target.ref = source.ref;
        target.pendingProps = source.pendingProps;
        target.memoizedProps = source.memoizedProps;
        target.updateQueue = source.updateQueue;
        target.memoizedState = source.memoizedState;
        target.dependencies = source.dependencies;
        target.mode = source.mode;
        target.flags = source.flags;
        target.subtreeFlags = source.subtreeFlags;
        target.deletions = source.deletions;
        target.lanes = source.lanes;
        target.childLanes = source.childLanes;
        target.alternate = source.alternate;
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
        target._debugSource = source._debugSource;
        target._debugOwner = source._debugOwner;
        target._debugNeedsRemount = source._debugNeedsRemount;
        target._debugHookTypes = source._debugHookTypes;
        return target;
    }
    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {
        this.tag = tag;
        this.containerInfo = containerInfo;
        this.pendingChildren = null;
        this.current = null;
        this.pingCache = null;
        this.finishedWork = null;
        this.timeoutHandle = noTimeout;
        this.context = null;
        this.pendingContext = null;
        this.callbackNode = null;
        this.callbackPriority = NoLane;
        this.eventTimes = createLaneMap(NoLanes);
        this.expirationTimes = createLaneMap(NoTimestamp);
        this.pendingLanes = NoLanes;
        this.suspendedLanes = NoLanes;
        this.pingedLanes = NoLanes;
        this.expiredLanes = NoLanes;
        this.mutableReadLanes = NoLanes;
        this.finishedLanes = NoLanes;
        this.entangledLanes = NoLanes;
        this.entanglements = createLaneMap(NoLanes);
        this.identifierPrefix = identifierPrefix;
        this.onRecoverableError = onRecoverableError;
        this.mutableSourceEagerHydrationData = null;
        this.effectDuration = 0;
        this.passiveEffectDuration = 0;
        this.memoizedUpdaters = new Set();
        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
        for(var _i = 0; _i < TotalLanes; _i++)pendingUpdatersLaneMap.push(new Set());
        switch(tag){
            case ConcurrentRoot:
                this._debugRootType = hydrate ? "hydrateRoot()" : "createRoot()";
                break;
            case LegacyRoot:
                this._debugRootType = hydrate ? "hydrate()" : "render()";
                break;
        }
    }
    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // host config, but because they are passed in at runtime, we have to thread
    // them through the root constructor. Perhaps we should put them all into a
    // single type, like a DynamicHostConfig that is defined by the renderer.
    identifierPrefix, onRecoverableError, transitionCallbacks) {
        var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);
        // stateNode is any.
        var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        var _initialState = {
            element: initialChildren,
            isDehydrated: hydrate,
            cache: null,
            // not enabled yet
            transitions: null,
            pendingSuspenseBoundaries: null
        };
        uninitializedFiber.memoizedState = _initialState;
        initializeUpdateQueue(uninitializedFiber);
        return root;
    }
    var ReactVersion = "18.3.1";
    function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        checkKeyStringCoercion(key);
        return {
            // This tag allow us to uniquely identify this as a React Portal
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    didWarnAboutNestedUpdates = false;
    didWarnAboutFindNodeInStrictMode = {};
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        var fiber = get(parentComponent);
        var parentContext = findCurrentUnmaskedContext(fiber);
        if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) return processChildContext(fiber, Component, parentContext);
        }
        return parentContext;
    }
    function findHostInstanceWithWarning(component, methodName) {
        var fiber = get(component);
        if (fiber === undefined) {
            if (typeof component.render === "function") throw new Error("Unable to find node on an unmounted component.");
            else {
                var keys = Object.keys(component).join(",");
                throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
            }
        }
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        if (hostFiber.mode & StrictLegacyMode) {
            var componentName = getComponentNameFromFiber(fiber) || "Component";
            if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current;
                try {
                    setCurrentFiber(hostFiber);
                    if (fiber.mode & StrictLegacyMode) error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    else error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                } finally{
                    // Ideally this should reset to previous but this shouldn't be called in
                    // render and there's another warning for that anyway.
                    if (previousFiber) setCurrentFiber(previousFiber);
                    else resetCurrentFiber();
                }
            }
        }
        return hostFiber.stateNode;
    }
    function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = false;
        var initialChildren = null;
        return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
    }
    function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = true;
        var root = createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError); // TODO: Move this to FiberRoot constructor
        root.context = getContextForSubtree(null); // Schedule the initial render. In a hydration root, this is different from
        // a regular update because the initial render must match was was rendered
        // on the server.
        // NOTE: This update intentionally doesn't have a payload. We're only using
        // the update to schedule work on the root fiber (and, for legacy roots, to
        // enqueue the callback if one is provided).
        var current = root.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current);
        var update = createUpdate(eventTime, lane);
        update.callback = callback !== undefined && callback !== null ? callback : null;
        enqueueUpdate(current, update, lane);
        scheduleInitialHydrationOnRoot(root, lane, eventTime);
        return root;
    }
    function updateContainer(element, container, parentComponent, callback) {
        onScheduleRoot(container, element);
        var current$1 = container.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current$1);
        markRenderScheduled(lane);
        var context = getContextForSubtree(parentComponent);
        if (container.context === null) container.context = context;
        else container.pendingContext = context;
        if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
            didWarnAboutNestedUpdates = true;
            error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown");
        }
        var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: element
        };
        callback = callback === undefined ? null : callback;
        if (callback !== null) {
            if (typeof callback !== "function") error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
            update.callback = callback;
        }
        var root = enqueueUpdate(current$1, update, lane);
        if (root !== null) {
            scheduleUpdateOnFiber(root, current$1, lane, eventTime);
            entangleTransitions(root, current$1, lane);
        }
        return lane;
    }
    function getPublicRootInstance(container) {
        var containerFiber = container.current;
        if (!containerFiber.child) return null;
        switch(containerFiber.child.tag){
            case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
            default:
                return containerFiber.child.stateNode;
        }
    }
    function attemptSynchronousHydration$1(fiber) {
        switch(fiber.tag){
            case HostRoot:
                var root = fiber.stateNode;
                if (isRootDehydrated(root)) {
                    // Flush the first scheduled "update".
                    var lanes = getHighestPriorityPendingLanes(root);
                    flushRoot(root, lanes);
                }
                break;
            case SuspenseComponent:
                flushSync(function() {
                    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
                    if (root !== null) {
                        var eventTime = requestEventTime();
                        scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);
                    }
                }); // If we're still blocked after this, we need to increase
                // the priority of any promises resolving within this
                // boundary so that they next attempt also has higher pri.
                var retryLane = SyncLane;
                markRetryLaneIfNotHydrated(fiber, retryLane);
                break;
        }
    }
    function markRetryLaneImpl(fiber, retryLane) {
        var suspenseState = fiber.memoizedState;
        if (suspenseState !== null && suspenseState.dehydrated !== null) suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
    } // Increases the priority of thenables when they resolve within this boundary.
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        var alternate = fiber.alternate;
        if (alternate) markRetryLaneImpl(alternate, retryLane);
    }
    function attemptContinuousHydration$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
        var lane = SelectiveHydrationLane;
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, lane, eventTime);
        }
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function attemptHydrationAtCurrentPriority$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority other than synchronously flush it.
        return;
        var lane = requestUpdateLane(fiber);
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, lane, eventTime);
        }
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function findHostInstanceWithNoPortals(fiber) {
        var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    var shouldErrorImpl = function(fiber) {
        return null;
    };
    function shouldError(fiber) {
        return shouldErrorImpl(fiber);
    }
    var shouldSuspendImpl = function(fiber) {
        return false;
    };
    function shouldSuspend(fiber) {
        return shouldSuspendImpl(fiber);
    }
    var overrideHookState = null;
    var overrideHookStateDeletePath = null;
    var overrideHookStateRenamePath = null;
    var overrideProps = null;
    var overridePropsDeletePath = null;
    var overridePropsRenamePath = null;
    var scheduleUpdate = null;
    var setErrorHandler = null;
    var setSuspenseHandler = null;
    var copyWithDeleteImpl = function(obj, path, index) {
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === path.length) {
            if (isArray(updated)) updated.splice(key, 1);
            else delete updated[key];
            return updated;
        } // $FlowFixMe number or string is fine here
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    };
    var copyWithDelete = function(obj, path) {
        return copyWithDeleteImpl(obj, path, 0);
    };
    var copyWithRenameImpl = function(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === oldPath.length) {
            var newKey = newPath[index]; // $FlowFixMe number or string is fine here
            updated[newKey] = updated[oldKey];
            if (isArray(updated)) updated.splice(oldKey, 1);
            else delete updated[oldKey];
        } else // $FlowFixMe number or string is fine here
        updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    };
    var copyWithRename = function(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) {
            warn("copyWithRename() expects paths of the same length");
            return;
        } else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                warn("copyWithRename() expects paths to be the same except for the deepest key");
                return;
            }
        }
        return copyWithRenameImpl(obj, oldPath, newPath, 0);
    };
    var copyWithSetImpl = function(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    };
    var copyWithSet = function(obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
    };
    var findHook = function(fiber, id) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;
        while(currentHook !== null && id > 0){
            currentHook = currentHook.next;
            id--;
        }
        return currentHook;
    }; // Support DevTools editable values for useState and useReducer.
    overrideHookState = function(fiber, id, path, value) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithSet(hook.memoizedState, path, value);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithDelete(hook.memoizedState, path);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    }; // Support DevTools props for function components, forwardRef, memo, host components, etc.
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    scheduleUpdate = function(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    setErrorHandler = function(newShouldErrorImpl) {
        shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    function findHostInstanceByFiber(fiber) {
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    function emptyFindFiberByHostInstance(instance) {
        return null;
    }
    function getCurrentFiberForDevTools() {
        return current;
    }
    function injectIntoDevTools(devToolsConfig) {
        var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState: overrideHookState,
            overrideHookStateDeletePath: overrideHookStateDeletePath,
            overrideHookStateRenamePath: overrideHookStateRenamePath,
            overrideProps: overrideProps,
            overridePropsDeletePath: overridePropsDeletePath,
            overridePropsRenamePath: overridePropsRenamePath,
            setErrorHandler: setErrorHandler,
            setSuspenseHandler: setSuspenseHandler,
            scheduleUpdate: scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher,
            findHostInstanceByFiber: findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            // React Refresh
            findHostInstancesForRefresh: findHostInstancesForRefresh,
            scheduleRefresh: scheduleRefresh,
            scheduleRoot: scheduleRoot,
            setRefreshHandler: setRefreshHandler,
            // Enables DevTools to append owner stacks to error messages in DEV mode.
            getCurrentFiber: getCurrentFiberForDevTools,
            // Enables DevTools to detect reconciler version rather than renderer version
            // which may not match for third party renderers.
            reconcilerVersion: ReactVersion
        });
    }
    /* global reportError */ var defaultOnRecoverableError = typeof reportError === "function" ? // emulating an uncaught JavaScript error.
    reportError : function(error) {
        // In older browsers and test environments, fallback to console.error.
        // eslint-disable-next-line react-internal/no-production-logging
        console["error"](error);
    };
    function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (root === null) throw new Error("Cannot update an unmounted root.");
        if (typeof arguments[1] === "function") error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        else if (isValidContainer(arguments[1])) error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
        else if (typeof arguments[1] !== "undefined") error("You passed a second argument to root.render(...) but it only accepts one argument.");
        var container = root.containerInfo;
        if (container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(root.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
            }
        }
        updateContainer(children, root, null, null);
    };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
        if (typeof arguments[0] === "function") error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var root = this._internalRoot;
        if (root !== null) {
            this._internalRoot = null;
            var container = root.containerInfo;
            if (isAlreadyRendering()) error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
            flushSync(function() {
                updateContainer(null, root, null, null);
            });
            unmarkContainerAsRoot(container);
        }
    };
    function createRoot(container, options) {
        if (!isValidContainer(container)) throw new Error("createRoot(...): Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = "";
        var onRecoverableError = defaultOnRecoverableError;
        var transitionCallbacks = null;
        if (options !== null && options !== undefined) {
            if (options.hydrate) warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.");
            else if (typeof options === "object" && options !== null && options.$$typeof === REACT_ELEMENT_TYPE) error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
            if (options.transitionCallbacks !== undefined) transitionCallbacks = options.transitionCallbacks;
        }
        var root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container);
        var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
        listenToAllSupportedEvents(rootContainerElement);
        return new ReactDOMRoot(root);
    }
    function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function scheduleHydration(target) {
        if (target) queueExplicitHydrationTarget(target);
    }
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
    function hydrateRoot(container, initialChildren, options) {
        if (!isValidContainer(container)) throw new Error("hydrateRoot(...): Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        if (initialChildren === undefined) error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        // the hydration callbacks.
        var hydrationCallbacks = options != null ? options : null; // TODO: Delete this option
        var mutableSources = options != null && options.hydratedSources || null;
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = "";
        var onRecoverableError = defaultOnRecoverableError;
        if (options !== null && options !== undefined) {
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
        }
        var root = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container); // This can't be a comment node since hydration doesn't work on comment nodes anyway.
        listenToAllSupportedEvents(container);
        if (mutableSources) for(var i = 0; i < mutableSources.length; i++){
            var mutableSource = mutableSources[i];
            registerMutableSourceForHydration(root, mutableSource);
        }
        return new ReactDOMHydrationRoot(root);
    }
    function isValidContainer(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
    } // TODO: Remove this function which also includes comment nodes.
    // We only use it in places that are currently more relaxed.
    function isValidContainerLegacy(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
    }
    function warnIfReactDOMContainerInDEV(container) {
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") error("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
        if (isContainerMarkedAsRoot(container)) {
            if (container._reactRootContainer) error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
            else error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
        }
    }
    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    topLevelUpdateWarnings = function(container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
            }
        }
        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
        if (hasNonRootReactChild && !isRootRenderedBySomeReact) error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function getReactRootElementInContainer(container) {
        if (!container) return null;
        if (container.nodeType === DOCUMENT_NODE) return container.documentElement;
        else return container.firstChild;
    }
    function noopOnRecoverableError() {
    // legacy API.
    }
    function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
        if (isHydrationContainer) {
            if (typeof callback === "function") {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            }
            var root = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, false, false, "", noopOnRecoverableError);
            container._reactRootContainer = root;
            markContainerAsRoot(root.current, container);
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
            flushSync();
            return root;
        } else {
            // First clear any existing content.
            var rootSibling;
            while(rootSibling = container.lastChild)container.removeChild(rootSibling);
            if (typeof callback === "function") {
                var _originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(_root);
                    _originalCallback.call(instance);
                };
            }
            var _root = createContainer(container, LegacyRoot, null, false, false, "", noopOnRecoverableError);
            container._reactRootContainer = _root;
            markContainerAsRoot(_root.current, container);
            var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(_rootContainerElement); // Initial mount should not be batched.
            flushSync(function() {
                updateContainer(initialChildren, _root, parentComponent, callback);
            });
            return _root;
        }
    }
    function warnOnInvalidCallback$1(callback, callerName) {
        if (callback !== null && typeof callback !== "function") error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
    }
    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback$1(callback === undefined ? null : callback, "render");
        var maybeRoot = container._reactRootContainer;
        var root;
        if (!maybeRoot) // Initial mount
        root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
        else {
            root = maybeRoot;
            if (typeof callback === "function") {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            } // Update
            updateContainer(children, root, parentComponent, callback);
        }
        return getPublicRootInstance(root);
    }
    var didWarnAboutFindDOMNode = false;
    function findDOMNode(componentOrElement) {
        if (!didWarnAboutFindDOMNode) {
            didWarnAboutFindDOMNode = true;
            error("findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node");
        }
        var owner = ReactCurrentOwner$3.current;
        if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            if (!warnedAboutRefsInRender) error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || "A component");
            owner.stateNode._warnedAboutRefsInRender = true;
        }
        if (componentOrElement == null) return null;
        if (componentOrElement.nodeType === ELEMENT_NODE) return componentOrElement;
        return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
    }
    function hydrate(element, container, callback) {
        error("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error("Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
    }
    function render(element, container, callback) {
        error("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error("Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
    }
    function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        error("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(containerNode)) throw new Error("Target container is not a DOM element.");
        if (parentComponent == null || !has(parentComponent)) throw new Error("parentComponent must be a valid React Component");
        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
    }
    var didWarnAboutUnmountComponentAtNode = false;
    function unmountComponentAtNode(container) {
        if (!didWarnAboutUnmountComponentAtNode) {
            didWarnAboutUnmountComponentAtNode = true;
            error("unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot");
        }
        if (!isValidContainerLegacy(container)) throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
        if (container._reactRootContainer) {
            var rootEl = getReactRootElementInContainer(container);
            var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
            if (renderedByDifferentReact) error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
            flushSync(function() {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                    // $FlowFixMe This should probably use `delete container._reactRootContainer`
                    container._reactRootContainer = null;
                    unmarkContainerAsRoot(container);
                });
            }); // If you call unmountComponentAtNode twice in quick succession, you'll
            // get `true` twice. That's probably fine?
            return true;
        } else {
            var _rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.
            var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;
            if (hasNonRootReactChild) error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
            return false;
        }
    }
    setAttemptSynchronousHydration(attemptSynchronousHydration$1);
    setAttemptContinuousHydration(attemptContinuousHydration$1);
    setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
    setGetCurrentUpdatePriority(getCurrentUpdatePriority);
    setAttemptHydrationAtPriority(runWithPriority);
    if (typeof Map !== "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    setRestoreImplementation(restoreControlledState$3);
    setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
    function createPortal$1(children, container) {
        var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (!isValidContainer(container)) throw new Error("Target container is not a DOM element.");
         // TODO: pass ReactDOM portal implementation as third argument
        // $FlowFixMe The Flow type is opaque but there's no way to actually create it.
        return createPortal(children, container, null, key);
    }
    function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
    }
    var Internals = {
        usingClientEntryPoint: false,
        // Keep in sync with ReactTestUtils.js.
        // This is an array for better minification.
        Events: [
            getInstanceFromNode,
            getNodeFromInstance,
            getFiberCurrentPropsFromNode,
            enqueueStateRestore,
            restoreStateIfNeeded,
            batchedUpdates$1
        ]
    };
    function createRoot$1(container, options) {
        if (!Internals.usingClientEntryPoint && true) error('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return createRoot(container, options);
    }
    function hydrateRoot$1(container, initialChildren, options) {
        if (!Internals.usingClientEntryPoint && true) error('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return hydrateRoot(container, initialChildren, options);
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync$1(fn) {
        if (isAlreadyRendering()) error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
        return flushSync(fn);
    }
    var foundDevTools = injectIntoDevTools({
        findFiberByHostInstance: getClosestInstanceFromNode,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: "react-dom"
    });
    if (!foundDevTools && canUseDOM && window.top === window.self) // If we're in Chrome or Firefox, provide a download link if not installed.
    {
        if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
            var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.
            if (/^(https?|file):$/.test(protocol)) // eslint-disable-next-line react-internal/no-production-logging
            console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
        }
    }
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
    exports.createPortal = createPortal$1;
    exports.createRoot = createRoot$1;
    exports.findDOMNode = findDOMNode;
    exports.flushSync = flushSync$1;
    exports.hydrate = hydrate;
    exports.hydrateRoot = hydrateRoot$1;
    exports.render = render;
    exports.unmountComponentAtNode = unmountComponentAtNode;
    exports.unstable_batchedUpdates = batchedUpdates$1;
    exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{"6f0162e9ab224cd4":"21dqq","8ad4ca65319d28a7":"juvHo"}],"juvHo":[function(require,module,exports) {
"use strict";
module.exports = require("ef03b89c8fe2794e");

},{"ef03b89c8fe2794e":"RqdIf"}],"RqdIf":[function(require,module,exports) {
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var enableSchedulerDebugging = false;
    var enableProfiling = false;
    var frameYieldMs = 5;
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        siftUp(heap, node, index);
    }
    function peek(heap) {
        return heap.length === 0 ? null : heap[0];
    }
    function pop(heap) {
        if (heap.length === 0) return null;
        var first = heap[0];
        var last = heap.pop();
        if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
        }
        return first;
    }
    function siftUp(heap, node, i) {
        var index = i;
        while(index > 0){
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
                // The parent is larger. Swap positions.
                heap[parentIndex] = node;
                heap[index] = parent;
                index = parentIndex;
            } else // The parent is smaller. Exit.
            return;
        }
    }
    function siftDown(heap, node, i) {
        var index = i;
        var length = heap.length;
        var halfLength = length >>> 1;
        while(index < halfLength){
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
            if (compare(left, node) < 0) {
                if (rightIndex < length && compare(right, left) < 0) {
                    heap[index] = right;
                    heap[rightIndex] = node;
                    index = rightIndex;
                } else {
                    heap[index] = left;
                    heap[leftIndex] = node;
                    index = leftIndex;
                }
            } else if (rightIndex < length && compare(right, node) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
            } else // Neither child is smaller. Exit.
            return;
        }
    }
    function compare(a, b) {
        // Compare sort index first, then task id.
        var diff = a.sortIndex - b.sortIndex;
        return diff !== 0 ? diff : a.id - b.id;
    }
    // TODO: Use symbols?
    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;
    function markTaskErrored(task, ms) {}
    /* eslint-disable no-var */ var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
    if (hasPerformanceNow) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        var initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111
    var maxSigned31BitInt = 1073741823; // Times out immediately
    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.
    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.
    var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
    var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
    var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null; // IE and Node.js + jsdom
    var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
    function advanceTimers(currentTime) {
        // Check for tasks that are no longer delayed and add them to the queue.
        var timer = peek(timerQueue);
        while(timer !== null){
            if (timer.callback === null) // Timer was cancelled.
            pop(timerQueue);
            else if (timer.startTime <= currentTime) {
                // Timer fired. Transfer to the task queue.
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
            } else // Remaining timers are pending.
            return;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = false;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function flushWork(hasTimeRemaining, initialTime) {
        isHostCallbackScheduled = false;
        if (isHostTimeoutScheduled) {
            // We scheduled a timeout but it's no longer needed. Cancel it.
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
        }
        isPerformingWork = true;
        var previousPriorityLevel = currentPriorityLevel;
        try {
            if (enableProfiling) try {
                return workLoop(hasTimeRemaining, initialTime);
            } catch (error) {
                if (currentTask !== null) {
                    var currentTime = exports.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                }
                throw error;
            }
            else // No catch in prod code path.
            return workLoop(hasTimeRemaining, initialTime);
        } finally{
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
        }
    }
    function workLoop(hasTimeRemaining, initialTime) {
        var currentTime = initialTime;
        advanceTimers(currentTime);
        currentTask = peek(taskQueue);
        while(currentTask !== null && !enableSchedulerDebugging){
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) break;
            var callback = currentTask.callback;
            if (typeof callback === "function") {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports.unstable_now();
                if (typeof continuationCallback === "function") currentTask.callback = continuationCallback;
                else if (currentTask === peek(taskQueue)) pop(taskQueue);
                advanceTimers(currentTime);
            } else pop(taskQueue);
            currentTask = peek(taskQueue);
        } // Return whether there's additional work
        if (currentTask !== null) return true;
        else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            return false;
        }
    }
    function unstable_runWithPriority(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
                break;
            default:
                priorityLevel = NormalPriority;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_next(eventHandler) {
        var priorityLevel;
        switch(currentPriorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
                // Shift down to normal priority
                priorityLevel = NormalPriority;
                break;
            default:
                // Anything lower than normal priority should remain at the current level.
                priorityLevel = currentPriorityLevel;
                break;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_wrapCallback(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            // This is a fork of runWithPriority, inlined for performance.
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    }
    function unstable_scheduleCallback(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        var startTime;
        if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) startTime = currentTime + delay;
            else startTime = currentTime;
        } else startTime = currentTime;
        var timeout;
        switch(priorityLevel){
            case ImmediatePriority:
                timeout = IMMEDIATE_PRIORITY_TIMEOUT;
                break;
            case UserBlockingPriority:
                timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
                break;
            case IdlePriority:
                timeout = IDLE_PRIORITY_TIMEOUT;
                break;
            case LowPriority:
                timeout = LOW_PRIORITY_TIMEOUT;
                break;
            case NormalPriority:
            default:
                timeout = NORMAL_PRIORITY_TIMEOUT;
                break;
        }
        var expirationTime = startTime + timeout;
        var newTask = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: startTime,
            expirationTime: expirationTime,
            sortIndex: -1
        };
        if (startTime > currentTime) {
            // This is a delayed task.
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                // All tasks are delayed, and this is the task with the earliest delay.
                if (isHostTimeoutScheduled) // Cancel an existing timeout.
                cancelHostTimeout();
                else isHostTimeoutScheduled = true;
                 // Schedule a timeout.
                requestHostTimeout(handleTimeout, startTime - currentTime);
            }
        } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            // wait until the next time we yield.
            if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            }
        }
        return newTask;
    }
    function unstable_pauseExecution() {}
    function unstable_continueExecution() {
        if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
        }
    }
    function unstable_getFirstCallbackNode() {
        return peek(taskQueue);
    }
    function unstable_cancelCallback(task) {
        // remove from the queue because you can't remove arbitrary nodes from an
        // array based heap, only the first one.)
        task.callback = null;
    }
    function unstable_getCurrentPriorityLevel() {
        return currentPriorityLevel;
    }
    var isMessageLoopRunning = false;
    var scheduledHostCallback = null;
    var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
    // thread, like user events. By default, it yields multiple times per frame.
    // It does not attempt to align with frame boundaries, since most tasks don't
    // need to be frame aligned; for those that do, use requestAnimationFrame.
    var frameInterval = frameYieldMs;
    var startTime = -1;
    function shouldYieldToHost() {
        var timeElapsed = exports.unstable_now() - startTime;
        if (timeElapsed < frameInterval) // The main thread has only been blocked for a really short amount of time;
        // smaller than a single frame. Don't yield yet.
        return false;
         // The main thread has been blocked for a non-negligible amount of time. We
        return true;
    }
    function requestPaint() {}
    function forceFrameRate(fps) {
        if (fps < 0 || fps > 125) {
            // Using console['error'] to evade Babel and ESLint
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
        }
        if (fps > 0) frameInterval = Math.floor(1000 / fps);
        else // reset the framerate
        frameInterval = frameYieldMs;
    }
    var performWorkUntilDeadline = function() {
        if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
            // has been blocked.
            startTime = currentTime;
            var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
            // error can be observed.
            //
            // Intentionally not using a try-catch, since that makes some debugging
            // techniques harder. Instead, if `scheduledHostCallback` errors, then
            // `hasMoreWork` will remain true, and we'll continue the work loop.
            var hasMoreWork = true;
            try {
                hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally{
                if (hasMoreWork) // If there's more work, schedule the next message event at the end
                // of the preceding one.
                schedulePerformWorkUntilDeadline();
                else {
                    isMessageLoopRunning = false;
                    scheduledHostCallback = null;
                }
            }
        } else isMessageLoopRunning = false;
         // Yielding to the browser will give it a chance to paint, so we can
    };
    var schedulePerformWorkUntilDeadline;
    if (typeof localSetImmediate === "function") // Node.js and old IE.
    // There's a few reasons for why we prefer setImmediate.
    //
    // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
    // (Even though this is a DOM fork of the Scheduler, you could get here
    // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
    // https://github.com/facebook/react/issues/20756
    //
    // But also, it runs earlier which is the semantic we want.
    // If other browsers ever implement it, it's better to use it.
    // Although both of these would be inferior to native scheduling.
    schedulePerformWorkUntilDeadline = function() {
        localSetImmediate(performWorkUntilDeadline);
    };
    else if (typeof MessageChannel !== "undefined") {
        // DOM and Worker environments.
        // We prefer MessageChannel because of the 4ms setTimeout clamping.
        var channel = new MessageChannel();
        var port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
        };
    } else // We should only fallback here in non-browser environments.
    schedulePerformWorkUntilDeadline = function() {
        localSetTimeout(performWorkUntilDeadline, 0);
    };
    function requestHostCallback(callback) {
        scheduledHostCallback = callback;
        if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
        }
    }
    function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
        }, ms);
    }
    function cancelHostTimeout() {
        localClearTimeout(taskTimeoutID);
        taskTimeoutID = -1;
    }
    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = null;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_Profiling = unstable_Profiling;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_forceFrameRate = forceFrameRate;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_next = unstable_next;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = unstable_wrapCallback;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"gkKU3":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"km3Ru":[function(require,module,exports) {
"use strict";
var Refresh = require("7422ead32dcc1e6b");
function debounce(func, delay) {
    {
        let timeout = undefined;
        let lastTime = 0;
        return function(args) {
            // Call immediately if last call was more than the delay ago.
            // Otherwise, set a timeout. This means the first call is fast
            // (for the common case of a single update), and subsequent updates
            // are batched.
            let now = Date.now();
            if (now - lastTime > delay) {
                lastTime = now;
                func.call(null, args);
            } else {
                clearTimeout(timeout);
                timeout = setTimeout(function() {
                    timeout = undefined;
                    lastTime = Date.now();
                    func.call(null, args);
                }, delay);
            }
        };
    }
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30);
// Everthing below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module1) {
    window.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module1.id + " " + id);
    };
    window.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module1) {
    if (isReactRefreshBoundary(module1.exports)) {
        registerExportsForReactRefresh(module1);
        if (module1.hot) {
            module1.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module1.exports;
            });
            module1.hot.accept(function(getParents) {
                var prevExports = module1.hot.data.prevExports;
                var nextExports = module1.exports;
                // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports);
                // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== "object") // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = "__esModule" in exports;
    for(var key in exports){
        hasExports = true;
        if (key === "__esModule") continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
}
// When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== "object") // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = "__esModule" in exports;
    for(var key in exports){
        if (key === "__esModule") continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module1) {
    var exports = module1.exports, id = module1.id;
    Refresh.register(exports, id + " %exports%");
    if (exports == null || typeof exports !== "object") // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = "__esModule" in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        var typeID = id + " %exports% " + key;
        Refresh.register(exportValue, typeID);
    }
}

},{"7422ead32dcc1e6b":"786KC"}],"igX3A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Element", ()=>(0, _element.Element));
var _element = require("./Element");

},{"./Element":"2LCZI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2LCZI":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$6bb5 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$6bb5.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Element", ()=>Element);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _breakpoints = require("../../breakpoints");
var _headerTextDefault = require("../../components/HeaderTextDefault");
var _logoToriiiWhite = require("../../components/LogoToriiiWhite");
var _logoAceWhite1 = require("../../icons/LogoAceWhite1");
var _logoAceWhite2 = require("../../icons/LogoAceWhite2");
var _logoAceWhite3 = require("../../icons/LogoAceWhite3");
var _logoAceWhite6 = require("../../icons/LogoAceWhite6");
var _logoAceWhite8 = require("../../icons/LogoAceWhite8");
var _logoBinanceWhite1 = require("../../icons/LogoBinanceWhite1");
var _logoBinanceWhite3 = require("../../icons/LogoBinanceWhite3");
var _logoBinanceWhite4 = require("../../icons/LogoBinanceWhite4");
var _logoBinanceWhite5 = require("../../icons/LogoBinanceWhite5");
var _logoBinanceWhite6 = require("../../icons/LogoBinanceWhite6");
var _logoBinanceWhite7 = require("../../icons/LogoBinanceWhite7");
var _logoBinanceWhite8 = require("../../icons/LogoBinanceWhite8");
var _logoBitmexWhite1 = require("../../icons/LogoBitmexWhite1");
var _logoBitmexWhite3 = require("../../icons/LogoBitmexWhite3");
var _logoBitmexWhite4 = require("../../icons/LogoBitmexWhite4");
var _logoBitmexWhite6 = require("../../icons/LogoBitmexWhite6");
var _logoBitmexWhite7 = require("../../icons/LogoBitmexWhite7");
var _logoBitmexWhite8 = require("../../icons/LogoBitmexWhite8");
var _logoBitoproWhite1 = require("../../icons/LogoBitoproWhite1");
var _logoBitoproWhite2 = require("../../icons/LogoBitoproWhite2");
var _logoBitoproWhite3 = require("../../icons/LogoBitoproWhite3");
var _logoBitoproWhite4 = require("../../icons/LogoBitoproWhite4");
var _logoBitoproWhite5 = require("../../icons/LogoBitoproWhite5");
var _logoBitoproWhite8 = require("../../icons/LogoBitoproWhite8");
var _logoGateioWhite1 = require("../../icons/LogoGateioWhite1");
var _logoGateioWhite2 = require("../../icons/LogoGateioWhite2");
var _logoGateioWhite3 = require("../../icons/LogoGateioWhite3");
var _logoGateioWhite4 = require("../../icons/LogoGateioWhite4");
var _logoGateioWhite5 = require("../../icons/LogoGateioWhite5");
var _logoGateioWhite6 = require("../../icons/LogoGateioWhite6");
var _logoGateioWhite7 = require("../../icons/LogoGateioWhite7");
var _logoGateioWhite8 = require("../../icons/LogoGateioWhite8");
var _logoToriiiWhite31 = require("../../icons/LogoToriiiWhite31");
var _logoToriiiWhite33 = require("../../icons/LogoToriiiWhite33");
var _logoToriiiWhite34 = require("../../icons/LogoToriiiWhite34");
var _logoToriiiWhite41 = require("../../icons/LogoToriiiWhite41");
var _logoToriiiWhite48 = require("../../icons/LogoToriiiWhite48");
var _logoWooxWhite1 = require("../../icons/LogoWooxWhite1");
var _logoWooxWhite7 = require("../../icons/LogoWooxWhite7");
var _styleCss = require("./style.css");
var _s = $RefreshSig$();
const Element = ()=>{
    _s();
    const screenWidth = (0, _breakpoints.useWindowWidth)();
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "element",
        style: {
            alignItems: screenWidth < 375 ? "flex-start" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "center" : undefined,
            gap: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "24px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "48px" : undefined,
            justifyContent: screenWidth >= 1920 ? "center" : undefined,
            minWidth: screenWidth < 375 ? "320px" : screenWidth >= 375 && screenWidth < 414 ? "375px" : screenWidth >= 414 && screenWidth < 500 ? "414px" : screenWidth >= 500 && screenWidth < 768 ? "500px" : screenWidth >= 768 && screenWidth < 992 ? "768px" : screenWidth >= 992 && screenWidth < 1366 ? "992px" : screenWidth >= 1366 && screenWidth < 1920 ? "1366px" : screenWidth >= 1920 ? "1920px" : undefined,
            overflow: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "hidden" : undefined
        },
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "header-placeholder"
            }, void 0, false, {
                fileName: "src/screens/Element/Element.jsx",
                lineNumber: 103,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("header", {
                className: "header",
                style: {
                    gap: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "1389px" : undefined,
                    justifyContent: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "space-between" : undefined,
                    padding: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth < 375 ? "24px" : screenWidth >= 992 && screenWidth < 1366 ? "24px 36px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "24px 48px" : undefined
                },
                children: [
                    (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "logo",
                        style: {
                            backgroundImage: screenWidth >= 375 && screenWidth < 414 ? "url(https://c.animaapp.com/hycCuBbS/img/logo-toriii-white-4-2.svg)" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "url(https://c.animaapp.com/hycCuBbS/img/logo-toriii-white-4-4.svg)" : undefined,
                            backgroundSize: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "100% 100%" : undefined,
                            height: screenWidth < 375 ? "28px" : screenWidth >= 375 && screenWidth < 414 ? "30.69px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "33.31px" : undefined,
                            width: screenWidth < 375 ? "134.93px" : screenWidth >= 375 && screenWidth < 414 ? "147.9px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "160.52px" : undefined
                        },
                        children: screenWidth < 375 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite41.LogoToriiiWhite41), {
                            className: "logo-toriii-white-4-1"
                        }, void 0, false, {
                            fileName: "src/screens/Element/Element.jsx",
                            lineNumber: 177,
                            columnNumber: 15
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/screens/Element/Element.jsx",
                        lineNumber: 140,
                        columnNumber: 11
                    }, undefined),
                    (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "div",
                                style: {
                                    alignItems: screenWidth >= 1920 ? "flex-start" : undefined,
                                    backgroundImage: screenWidth >= 768 && screenWidth < 992 ? "url(https://c.animaapp.com/hycCuBbS/img/logo-toriii-white-4-5.svg)" : screenWidth >= 992 && screenWidth < 1366 ? "url(https://c.animaapp.com/hycCuBbS/img/logo-toriii-white-4-6.svg)" : screenWidth >= 1366 && screenWidth < 1920 ? "url(https://c.animaapp.com/hycCuBbS/img/logo-toriii-white-4-7.svg)" : undefined,
                                    backgroundSize: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "100% 100%" : undefined,
                                    display: screenWidth >= 1920 ? "flex" : undefined,
                                    flexDirection: screenWidth >= 1920 ? "column" : undefined,
                                    gap: screenWidth >= 1920 ? "10px" : undefined,
                                    height: screenWidth >= 768 && screenWidth < 992 ? "40.04px" : screenWidth >= 992 && screenWidth < 1366 ? "45.45px" : screenWidth >= 1366 && screenWidth < 1920 ? "48.97px" : undefined,
                                    width: screenWidth >= 768 && screenWidth < 992 ? "192.95px" : screenWidth >= 992 && screenWidth < 1366 ? "219.05px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "236px" : undefined
                                },
                                children: screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite48.LogoToriiiWhite48), {
                                    className: "logo-toriii-white-4-8"
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 228,
                                    columnNumber: 17
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/screens/Element/Element.jsx",
                                lineNumber: 187,
                                columnNumber: 13
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "menu",
                                style: {
                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "20.57px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366 ? "24px" : undefined,
                                    gap: screenWidth >= 768 && screenWidth < 992 ? "13.71px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366 ? "16px" : undefined,
                                    padding: screenWidth >= 768 && screenWidth < 992 ? "6.86px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366 ? "8px" : undefined
                                },
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _headerTextDefault.HeaderTextDefault), {
                                        targetId: "about-us-section",
                                        className: `${screenWidth >= 768 && screenWidth < 992 && "class"} ${(screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366) && "class-2"}`,
                                        divClassName: `${screenWidth >= 768 && screenWidth < 992 && "class-4"}`,
                                        frameClassName: `${screenWidth >= 768 && screenWidth < 992 && "class-3"}`,
                                        text: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366 ? "About Us" : undefined,
                                        onClick: ()=>scrollToSection("about-us-section")
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 261,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _headerTextDefault.HeaderTextDefault), {
                                        targetId: "service-section",
                                        className: `${screenWidth >= 768 && screenWidth < 992 && "class"} ${(screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366) && "class-2"}`,
                                        divClassName: `${screenWidth >= 768 && screenWidth < 992 && "class-4"}`,
                                        frameClassName: `${screenWidth >= 768 && screenWidth < 992 && "class-3"}`,
                                        text: "Service",
                                        onClick: ()=>scrollToSection("service-section")
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 275,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _headerTextDefault.HeaderTextDefault), {
                                        targetId: "liquidity-section",
                                        className: `${screenWidth >= 768 && screenWidth < 992 && "class"} ${(screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366) && "class-2"}`,
                                        divClassName: `${screenWidth >= 768 && screenWidth < 992 && "class-4"}`,
                                        frameClassName: `${screenWidth >= 768 && screenWidth < 992 && "class-3"}`,
                                        text: "Liquidity",
                                        onClick: ()=>scrollToSection("liquidity-section")
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 283,
                                        columnNumber: 15
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/screens/Element/Element.jsx",
                                lineNumber: 232,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true)
                ]
            }, void 0, true, {
                fileName: "src/screens/Element/Element.jsx",
                lineNumber: 104,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "content",
                style: {
                    alignSelf: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 || screenWidth < 375 ? "stretch" : undefined,
                    display: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 || screenWidth < 375 ? "flex" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "inline-flex" : undefined,
                    gap: screenWidth < 375 ? "54px" : screenWidth >= 375 && screenWidth < 414 ? "64px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "80px" : screenWidth >= 768 && screenWidth < 992 ? "139px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366 ? "209px" : undefined,
                    justifyContent: screenWidth < 375 ? "center" : undefined,
                    width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 || screenWidth < 375 ? "100%" : undefined
                },
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        id: "about-us-section",
                        className: "page-about-us",
                        style: {
                            alignSelf: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "stretch" : undefined,
                            display: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "flex" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "inline-flex" : undefined,
                            flexDirection: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "column" : undefined,
                            justifyContent: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth < 375 ? "center" : undefined,
                            width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "100%" : undefined
                        },
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "frame-2",
                            style: {
                                height: screenWidth < 375 ? "458.23px" : screenWidth >= 375 && screenWidth < 414 ? "528.59px" : screenWidth >= 414 && screenWidth < 500 ? "582.94px" : screenWidth >= 500 && screenWidth < 768 ? "709.09px" : screenWidth >= 768 && screenWidth < 992 ? "421px" : screenWidth >= 992 && screenWidth < 1366 ? "559px" : screenWidth >= 1366 && screenWidth < 1920 ? "771px" : screenWidth >= 1920 ? "839px" : undefined,
                                overflow: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "hidden" : undefined,
                                width: screenWidth < 375 ? "292.74px" : screenWidth >= 375 && screenWidth < 414 ? "337.69px" : screenWidth >= 414 && screenWidth < 500 ? "372.41px" : screenWidth >= 500 && screenWidth < 768 ? "453px" : screenWidth >= 768 && screenWidth < 992 ? "664px" : screenWidth >= 992 && screenWidth < 1366 ? "879px" : screenWidth >= 1366 && screenWidth < 1920 ? "1213px" : screenWidth >= 1920 ? "1325px" : undefined
                            },
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "overlap",
                                    style: {
                                        height: screenWidth >= 768 && screenWidth < 992 ? "148px" : screenWidth >= 992 && screenWidth < 1366 ? "196px" : screenWidth >= 1366 && screenWidth < 1920 ? "271px" : screenWidth >= 1920 ? "295px" : screenWidth < 375 ? "153px" : screenWidth >= 375 && screenWidth < 414 ? "176px" : screenWidth >= 414 && screenWidth < 500 ? "194px" : screenWidth >= 500 && screenWidth < 768 ? "236px" : undefined,
                                        left: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "9px" : screenWidth >= 1366 && screenWidth < 1920 ? "12px" : screenWidth >= 1920 ? "19px" : screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "1px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                        top: screenWidth >= 768 && screenWidth < 992 ? "101px" : screenWidth >= 992 && screenWidth < 1366 ? "134px" : screenWidth >= 1366 && screenWidth < 1920 ? "186px" : screenWidth >= 1920 ? "202px" : screenWidth < 375 ? "53px" : screenWidth >= 375 && screenWidth < 414 ? "61px" : screenWidth >= 414 && screenWidth < 500 ? "67px" : screenWidth >= 500 && screenWidth < 768 ? "82px" : undefined,
                                        width: screenWidth >= 768 && screenWidth < 992 ? "605px" : screenWidth >= 992 && screenWidth < 1366 ? "803px" : screenWidth >= 1366 && screenWidth < 1920 ? "1109px" : screenWidth >= 1920 ? "1207px" : screenWidth < 375 ? "289px" : screenWidth >= 375 && screenWidth < 414 ? "333px" : screenWidth >= 414 && screenWidth < 500 ? "368px" : screenWidth >= 500 && screenWidth < 768 ? "447px" : undefined
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "overlap-group",
                                            style: {
                                                height: screenWidth < 375 ? "149px" : screenWidth >= 375 && screenWidth < 414 ? "171px" : screenWidth >= 414 && screenWidth < 500 ? "189px" : screenWidth >= 500 && screenWidth < 768 ? "230px" : screenWidth >= 768 && screenWidth < 992 ? "146px" : screenWidth >= 992 && screenWidth < 1366 ? "194px" : screenWidth >= 1366 && screenWidth < 1920 ? "267px" : screenWidth >= 1920 ? "291px" : undefined,
                                                left: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "2px" : screenWidth >= 500 && screenWidth < 768 ? "3px" : screenWidth >= 768 && screenWidth < 992 ? "87px" : screenWidth >= 992 && screenWidth < 1366 ? "115px" : screenWidth >= 1366 && screenWidth < 1920 ? "159px" : screenWidth >= 1920 ? "173px" : undefined,
                                                top: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "6px" : screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : undefined,
                                                width: screenWidth < 375 ? "287px" : screenWidth >= 375 && screenWidth < 414 ? "331px" : screenWidth >= 414 && screenWidth < 500 ? "365px" : screenWidth >= 500 && screenWidth < 768 ? "444px" : screenWidth >= 768 && screenWidth < 992 ? "518px" : screenWidth >= 992 && screenWidth < 1366 ? "688px" : screenWidth >= 1366 && screenWidth < 1920 ? "950px" : screenWidth >= 1920 ? "1034px" : undefined
                                            },
                                            children: [
                                                (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "overlap-2",
                                                            style: {
                                                                height: screenWidth < 375 ? "108px" : screenWidth >= 375 && screenWidth < 414 ? "125px" : screenWidth >= 414 && screenWidth < 500 ? "137px" : screenWidth >= 500 && screenWidth < 768 ? "167px" : undefined,
                                                                top: screenWidth < 375 ? "29px" : screenWidth >= 375 && screenWidth < 414 ? "34px" : screenWidth >= 414 && screenWidth < 500 ? "38px" : screenWidth >= 500 && screenWidth < 768 ? "46px" : undefined,
                                                                width: screenWidth < 375 ? "287px" : screenWidth >= 375 && screenWidth < 414 ? "331px" : screenWidth >= 414 && screenWidth < 500 ? "365px" : screenWidth >= 500 && screenWidth < 768 ? "444px" : undefined
                                                            },
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "toriii-name",
                                                                    style: {
                                                                        height: screenWidth < 375 ? "103px" : screenWidth >= 375 && screenWidth < 414 ? "119px" : screenWidth >= 414 && screenWidth < 500 ? "132px" : screenWidth >= 500 && screenWidth < 768 ? "160px" : undefined,
                                                                        top: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "5px" : screenWidth >= 414 && screenWidth < 500 ? "6px" : screenWidth >= 500 && screenWidth < 768 ? "7px" : undefined,
                                                                        width: screenWidth < 375 ? "103px" : screenWidth >= 375 && screenWidth < 414 ? "119px" : screenWidth >= 414 && screenWidth < 500 ? "132px" : screenWidth >= 500 && screenWidth < 768 ? "160px" : undefined
                                                                    },
                                                                    alt: "Toriii name",
                                                                    src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-2.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-4.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-6.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 626,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                    className: "text-wrapper",
                                                                    style: {
                                                                        fontSize: screenWidth < 375 ? "3.1px" : screenWidth >= 375 && screenWidth < 414 ? "3.5px" : screenWidth >= 414 && screenWidth < 500 ? "3.9px" : screenWidth >= 500 && screenWidth < 768 ? "4.8px" : undefined,
                                                                        height: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "25px" : screenWidth >= 414 && screenWidth < 500 ? "30px" : screenWidth >= 500 && screenWidth < 768 ? "35px" : undefined,
                                                                        left: screenWidth < 375 ? "77px" : screenWidth >= 375 && screenWidth < 414 ? "87px" : screenWidth >= 414 && screenWidth < 500 ? "98px" : screenWidth >= 500 && screenWidth < 768 ? "118px" : undefined,
                                                                        lineHeight: screenWidth < 375 ? "4.6px" : screenWidth >= 375 && screenWidth < 414 ? "5.3px" : screenWidth >= 414 && screenWidth < 500 ? "5.9px" : screenWidth >= 500 && screenWidth < 768 ? "7.1px" : undefined,
                                                                        top: screenWidth < 375 ? "40px" : screenWidth >= 375 && screenWidth < 414 ? "48px" : screenWidth >= 414 && screenWidth < 500 ? "52px" : screenWidth >= 500 && screenWidth < 768 ? "64px" : undefined,
                                                                        width: screenWidth < 375 ? "105px" : screenWidth >= 375 && screenWidth < 414 ? "122px" : screenWidth >= 414 && screenWidth < 500 ? "134px" : screenWidth >= 500 && screenWidth < 768 ? "163px" : undefined
                                                                    },
                                                                    children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 673,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "group",
                                                                    style: {
                                                                        height: screenWidth < 375 ? "32px" : screenWidth >= 375 && screenWidth < 414 ? "37px" : screenWidth >= 414 && screenWidth < 500 ? "41px" : screenWidth >= 500 && screenWidth < 768 ? "50px" : undefined,
                                                                        left: screenWidth < 375 ? "156px" : screenWidth >= 375 && screenWidth < 414 ? "180px" : screenWidth >= 414 && screenWidth < 500 ? "199px" : screenWidth >= 500 && screenWidth < 768 ? "242px" : undefined,
                                                                        top: screenWidth < 375 ? "44px" : screenWidth >= 375 && screenWidth < 414 ? "50px" : screenWidth >= 414 && screenWidth < 500 ? "55px" : screenWidth >= 500 && screenWidth < 768 ? "67px" : undefined,
                                                                        width: screenWidth < 375 ? "131px" : screenWidth >= 375 && screenWidth < 414 ? "151px" : screenWidth >= 414 && screenWidth < 500 ? "166px" : screenWidth >= 500 && screenWidth < 768 ? "202px" : undefined
                                                                    },
                                                                    alt: "Group",
                                                                    src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/group-50@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/group-50-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/group-50-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/group-50-3@2x.png" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 747,
                                                                    columnNumber: 23
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 591,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "overlap-group-wrapper",
                                                            style: {
                                                                backgroundImage: screenWidth < 375 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1.svg)" : screenWidth >= 375 && screenWidth < 414 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-2.svg)" : screenWidth >= 414 && screenWidth < 500 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-4.svg)" : screenWidth >= 500 && screenWidth < 768 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-6.svg)" : undefined,
                                                                height: screenWidth < 375 ? "36px" : screenWidth >= 375 && screenWidth < 414 ? "41px" : screenWidth >= 414 && screenWidth < 500 ? "45px" : screenWidth >= 500 && screenWidth < 768 ? "55px" : undefined,
                                                                left: screenWidth < 375 ? "158px" : screenWidth >= 375 && screenWidth < 414 ? "182px" : screenWidth >= 414 && screenWidth < 500 ? "201px" : screenWidth >= 500 && screenWidth < 768 ? "244px" : undefined,
                                                                top: screenWidth < 375 ? "113px" : screenWidth >= 375 && screenWidth < 414 ? "130px" : screenWidth >= 414 && screenWidth < 500 ? "144px" : screenWidth >= 500 && screenWidth < 768 ? "175px" : undefined,
                                                                width: screenWidth < 375 ? "36px" : screenWidth >= 375 && screenWidth < 414 ? "41px" : screenWidth >= 414 && screenWidth < 500 ? "45px" : screenWidth >= 500 && screenWidth < 768 ? "55px" : undefined
                                                            },
                                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "img-wrapper",
                                                                style: {
                                                                    backgroundImage: screenWidth < 375 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-2.svg)" : screenWidth >= 375 && screenWidth < 414 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-2-2.svg)" : screenWidth >= 414 && screenWidth < 500 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-2-4.svg)" : screenWidth >= 500 && screenWidth < 768 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-2-6.svg)" : undefined,
                                                                    height: screenWidth < 375 ? "30px" : screenWidth >= 375 && screenWidth < 414 ? "34px" : screenWidth >= 414 && screenWidth < 500 ? "38px" : screenWidth >= 500 && screenWidth < 768 ? "46px" : undefined,
                                                                    left: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "3px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "4px" : undefined,
                                                                    top: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "3px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "4px" : undefined,
                                                                    width: screenWidth < 375 ? "30px" : screenWidth >= 375 && screenWidth < 414 ? "34px" : screenWidth >= 414 && screenWidth < 500 ? "38px" : screenWidth >= 500 && screenWidth < 768 ? "46px" : undefined
                                                                },
                                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "img",
                                                                    style: {
                                                                        height: screenWidth < 375 ? "13px" : screenWidth >= 375 && screenWidth < 414 ? "16px" : screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "21px" : undefined,
                                                                        left: screenWidth < 375 ? "13px" : screenWidth >= 375 && screenWidth < 414 ? "15px" : screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "21px" : undefined,
                                                                        top: screenWidth < 375 ? "7px" : screenWidth >= 375 && screenWidth < 414 ? "8px" : screenWidth >= 414 && screenWidth < 500 ? "9px" : screenWidth >= 500 && screenWidth < 768 ? "11px" : undefined,
                                                                        width: screenWidth < 375 ? "3px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "4px" : screenWidth >= 500 && screenWidth < 768 ? "5px" : undefined
                                                                    },
                                                                    alt: "Img",
                                                                    src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/-.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/--2.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/--4.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/--6.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 912,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 861,
                                                                columnNumber: 23
                                                            }, undefined)
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 806,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "img-2",
                                                            style: {
                                                                height: screenWidth < 375 ? "14px" : screenWidth >= 375 && screenWidth < 414 ? "16px" : screenWidth >= 414 && screenWidth < 500 ? "18px" : screenWidth >= 500 && screenWidth < 768 ? "22px" : undefined,
                                                                left: screenWidth < 375 ? "204px" : screenWidth >= 375 && screenWidth < 414 ? "236px" : screenWidth >= 414 && screenWidth < 500 ? "260px" : screenWidth >= 500 && screenWidth < 768 ? "316px" : undefined,
                                                                top: screenWidth < 375 ? "121px" : screenWidth >= 375 && screenWidth < 414 ? "139px" : screenWidth >= 414 && screenWidth < 500 ? "154px" : screenWidth >= 500 && screenWidth < 768 ? "187px" : undefined,
                                                                width: screenWidth < 375 ? "81px" : screenWidth >= 375 && screenWidth < 414 ? "94px" : screenWidth >= 414 && screenWidth < 500 ? "103px" : screenWidth >= 500 && screenWidth < 768 ? "126px" : undefined
                                                            },
                                                            alt: "Element",
                                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/99--.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/99---1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/99---2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/99---3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 971,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "group-2",
                                                            style: {
                                                                height: screenWidth < 375 ? "61px" : screenWidth >= 375 && screenWidth < 414 ? "70px" : screenWidth >= 414 && screenWidth < 500 ? "77px" : screenWidth >= 500 && screenWidth < 768 ? "94px" : undefined,
                                                                left: screenWidth < 375 ? "158px" : screenWidth >= 375 && screenWidth < 414 ? "182px" : screenWidth >= 414 && screenWidth < 500 ? "201px" : screenWidth >= 500 && screenWidth < 768 ? "244px" : undefined,
                                                                width: screenWidth < 375 ? "129px" : screenWidth >= 375 && screenWidth < 414 ? "149px" : screenWidth >= 414 && screenWidth < 500 ? "164px" : screenWidth >= 500 && screenWidth < 768 ? "200px" : undefined
                                                            },
                                                            alt: "Group",
                                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/group-39@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/group-39-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/group-39-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/group-39-3@2x.png" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1029,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    ]
                                                }, void 0, true),
                                                (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "overlap-group-2",
                                                    style: {
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "146px" : screenWidth >= 992 && screenWidth < 1366 ? "194px" : screenWidth >= 1366 && screenWidth < 1920 ? "267px" : screenWidth >= 1920 ? "291px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "506px" : screenWidth >= 992 && screenWidth < 1366 ? "672px" : screenWidth >= 1366 && screenWidth < 1920 ? "927px" : screenWidth >= 1920 ? "1009px" : undefined
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "vector",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "107px" : screenWidth >= 992 && screenWidth < 1366 ? "142px" : screenWidth >= 1366 && screenWidth < 1920 ? "196px" : screenWidth >= 1920 ? "214px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "12px" : screenWidth >= 992 && screenWidth < 1366 ? "16px" : screenWidth >= 1366 && screenWidth < 1920 ? "22px" : screenWidth >= 1920 ? "24px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "12px" : screenWidth >= 992 && screenWidth < 1366 ? "16px" : screenWidth >= 1366 && screenWidth < 1920 ? "22px" : screenWidth >= 1920 ? "24px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "107px" : screenWidth >= 992 && screenWidth < 1366 ? "142px" : screenWidth >= 1366 && screenWidth < 1920 ? "196px" : screenWidth >= 1920 ? "214px" : undefined
                                                            },
                                                            alt: "Vector",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/vector-17.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/vector-20.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/vector-23.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/vector-26.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1108,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "group-3",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "146px" : screenWidth >= 992 && screenWidth < 1366 ? "194px" : screenWidth >= 1366 && screenWidth < 1920 ? "267px" : screenWidth >= 1920 ? "291px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "506px" : screenWidth >= 992 && screenWidth < 1366 ? "672px" : screenWidth >= 1366 && screenWidth < 1920 ? "927px" : screenWidth >= 1920 ? "1009px" : undefined
                                                            },
                                                            alt: "Group",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/group.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/group-1.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-2.png" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-3.png" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1166,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "line",
                                                            style: {
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "11px" : screenWidth >= 992 && screenWidth < 1366 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 ? "20px" : screenWidth >= 1920 ? "22px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "69px" : screenWidth >= 992 && screenWidth < 1366 ? "91px" : screenWidth >= 1366 && screenWidth < 1920 ? "126px" : screenWidth >= 1920 ? "137px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "108px" : screenWidth >= 992 && screenWidth < 1366 ? "144px" : screenWidth >= 1366 && screenWidth < 1920 ? "198px" : screenWidth >= 1920 ? "216px" : undefined
                                                            },
                                                            alt: "Line",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "/img/line-2-3.svg" : screenWidth >= 992 && screenWidth < 1366 ? "/img/line-2-2.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "/img/image.svg" : screenWidth >= 1920 ? "/img/line-2.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1204,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "line-2",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "108px" : screenWidth >= 992 && screenWidth < 1366 ? "144px" : screenWidth >= 1366 && screenWidth < 1920 ? "198px" : screenWidth >= 1920 ? "216px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "63px" : screenWidth >= 992 && screenWidth < 1366 ? "84px" : screenWidth >= 1366 && screenWidth < 1920 ? "116px" : screenWidth >= 1920 ? "126px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "11px" : screenWidth >= 992 && screenWidth < 1366 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 ? "20px" : screenWidth >= 1920 ? "22px" : undefined
                                                            },
                                                            alt: "Line",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/line-3.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/line-3-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/line-3-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/line-3-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1252,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "frame-3",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "83px" : screenWidth >= 992 && screenWidth < 1366 ? "110px" : screenWidth >= 1366 && screenWidth < 1920 ? "152px" : screenWidth >= 1920 ? "165px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "23px" : screenWidth >= 992 && screenWidth < 1366 ? "30px" : screenWidth >= 1366 && screenWidth < 1920 ? "42px" : screenWidth >= 1920 ? "46px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "22px" : screenWidth >= 992 && screenWidth < 1366 ? "29px" : screenWidth >= 1366 && screenWidth < 1920 ? "40px" : screenWidth >= 1920 ? "43px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "82px" : screenWidth >= 992 && screenWidth < 1366 ? "108px" : screenWidth >= 1366 && screenWidth < 1920 ? "150px" : screenWidth >= 1920 ? "163px" : undefined
                                                            },
                                                            alt: "Frame",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/frame-39887.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/frame-39887-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/frame-39887-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/frame-39887-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1300,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "frame-4",
                                                            style: {
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "234px" : screenWidth >= 992 && screenWidth < 1366 ? "310px" : screenWidth >= 1366 && screenWidth < 1920 ? "429px" : screenWidth >= 1920 ? "467px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "119px" : screenWidth >= 992 && screenWidth < 1366 ? "158px" : screenWidth >= 1366 && screenWidth < 1920 ? "219px" : screenWidth >= 1920 ? "238px" : undefined
                                                            },
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                    className: "ellipse",
                                                                    style: {
                                                                        borderRadius: screenWidth >= 768 && screenWidth < 992 ? "9.97px" : screenWidth >= 992 && screenWidth < 1366 ? "13.24px" : screenWidth >= 1366 && screenWidth < 1920 ? "18.28px" : screenWidth >= 1920 ? "19.9px" : undefined,
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    }
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1383,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-2",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-6-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-6-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-6-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-6-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1419,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-3",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-7-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-7-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-7-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-7-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1457,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-4",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-8-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-8-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-8-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-8-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1495,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-5",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-9-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-9-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-9-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-9-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1533,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-6",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-10-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-10-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-10-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-10-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1571,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-7",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-11-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-11-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-11-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-11-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1609,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-8",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-13-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-13-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-13-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-13-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1647,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-9",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-14-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-14-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-14-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-14-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1685,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-10",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-15-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-15-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-15-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-15-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1723,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-11",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-12-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-12-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-12-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-12-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 1761,
                                                                    columnNumber: 23
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1358,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                            className: "p",
                                                            style: {
                                                                fontSize: screenWidth >= 768 && screenWidth < 992 ? "18px" : screenWidth >= 992 && screenWidth < 1366 ? "24px" : screenWidth >= 1366 && screenWidth < 1920 ? "33.1px" : screenWidth >= 1920 ? "36px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "54px" : screenWidth >= 992 && screenWidth < 1366 ? "72px" : screenWidth >= 1366 && screenWidth < 1920 ? "100px" : screenWidth >= 1920 ? "108px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "167px" : screenWidth >= 992 && screenWidth < 1366 ? "222px" : screenWidth >= 1366 && screenWidth < 1920 ? "307px" : screenWidth >= 1920 ? "334px" : undefined,
                                                                letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.09px" : screenWidth >= 992 && screenWidth < 1366 ? "0.12px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.17px" : screenWidth >= 1920 ? "0.18px" : undefined,
                                                                lineHeight: screenWidth >= 768 && screenWidth < 992 ? "27.1px" : screenWidth >= 992 && screenWidth < 1366 ? "35.9px" : screenWidth >= 1366 && screenWidth < 1920 ? "49.6px" : screenWidth >= 1920 ? "54px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "37px" : screenWidth >= 992 && screenWidth < 1366 ? "50px" : screenWidth >= 1366 && screenWidth < 1920 ? "69px" : screenWidth >= 1920 ? "75px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "326px" : screenWidth >= 992 && screenWidth < 1366 ? "433px" : screenWidth >= 1366 && screenWidth < 1920 ? "598px" : screenWidth >= 1920 ? "651px" : undefined
                                                            },
                                                            children: "Specializing in high frequency and low latency solutions for digital asset markets."
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1800,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 1083,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 514,
                                            columnNumber: 15
                                        }, undefined),
                                        (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                    className: "text-wrapper-2",
                                                    style: {
                                                        fontSize: screenWidth >= 768 && screenWidth < 992 ? "4.2px" : screenWidth >= 992 && screenWidth < 1366 ? "5.6px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.8px" : screenWidth >= 1920 ? "8.5px" : undefined,
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "30px" : screenWidth >= 992 && screenWidth < 1366 ? "40px" : screenWidth >= 1366 && screenWidth < 1920 ? "60px" : screenWidth >= 1920 ? "65px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 ? "-26px" : screenWidth >= 992 && screenWidth < 1366 ? "-34px" : screenWidth >= 1366 && screenWidth < 1920 ? "-45px" : screenWidth >= 1920 ? "-49px" : undefined,
                                                        letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.02px" : screenWidth >= 992 && screenWidth < 1366 ? "0.03px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "0.04px" : undefined,
                                                        lineHeight: screenWidth >= 768 && screenWidth < 992 ? "6.4px" : screenWidth >= 992 && screenWidth < 1366 ? "8.5px" : screenWidth >= 1366 && screenWidth < 1920 ? "11.7px" : screenWidth >= 1920 ? "12.7px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "59px" : screenWidth >= 992 && screenWidth < 1366 ? "79px" : screenWidth >= 1366 && screenWidth < 1920 ? "106px" : screenWidth >= 1920 ? "116px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "146px" : screenWidth >= 992 && screenWidth < 1366 ? "194px" : screenWidth >= 1366 && screenWidth < 1920 ? "267px" : screenWidth >= 1920 ? "291px" : undefined
                                                    },
                                                    children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 1887,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "battery",
                                                    style: {
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "148px" : screenWidth >= 992 && screenWidth < 1366 ? "196px" : screenWidth >= 1366 && screenWidth < 1920 ? "271px" : screenWidth >= 1920 ? "295px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "25px" : screenWidth >= 992 && screenWidth < 1366 ? "33px" : screenWidth >= 1366 && screenWidth < 1920 ? "45px" : screenWidth >= 1920 ? "49px" : undefined
                                                    },
                                                    alt: "Battery",
                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/battery-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/battery-5@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/battery-6@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/battery-7@2x.png" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 1970,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true),
                                        (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "text-wrapper-3",
                                            style: {
                                                fontSize: screenWidth < 375 ? "17.3px" : screenWidth >= 375 && screenWidth < 414 ? "20px" : screenWidth >= 414 && screenWidth < 500 ? "22px" : screenWidth >= 500 && screenWidth < 768 ? "26.8px" : undefined,
                                                height: screenWidth < 375 ? "17px" : screenWidth >= 375 && screenWidth < 414 ? "20px" : screenWidth >= 414 && screenWidth < 500 ? "22px" : screenWidth >= 500 && screenWidth < 768 ? "27px" : undefined
                                            },
                                            children: "TORIII TECHNOLOGY CORP."
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 2014,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 440,
                                    columnNumber: 13
                                }, undefined),
                                (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "text-wrapper-4",
                                            style: {
                                                fontSize: screenWidth >= 768 && screenWidth < 992 ? "26.8px" : screenWidth >= 992 && screenWidth < 1366 ? "35.6px" : screenWidth >= 1366 && screenWidth < 1920 ? "49.1px" : screenWidth >= 1920 ? "53.5px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "27px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "49px" : screenWidth >= 1920 ? "53px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "3px" : screenWidth >= 992 && screenWidth < 1366 ? "1px" : screenWidth >= 1366 && screenWidth < 1920 ? "0" : screenWidth >= 1920 ? "6px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "393px" : screenWidth >= 992 && screenWidth < 1366 ? "522px" : screenWidth >= 1366 && screenWidth < 1920 ? "721px" : screenWidth >= 1920 ? "785px" : undefined
                                            },
                                            children: "TORIII TECHNOLOGY CORP."
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 2049,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "group-4",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "35px" : screenWidth >= 992 && screenWidth < 1366 ? "47px" : screenWidth >= 1366 && screenWidth < 1920 ? "65px" : screenWidth >= 1920 ? "71px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "12px" : screenWidth >= 992 && screenWidth < 1366 ? "13px" : screenWidth >= 1366 && screenWidth < 1920 ? "17px" : screenWidth >= 1920 ? "25px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "15px" : screenWidth >= 992 && screenWidth < 1366 ? "19px" : screenWidth >= 1366 && screenWidth < 1920 ? "26px" : screenWidth >= 1920 ? "29px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "413px" : screenWidth >= 992 && screenWidth < 1366 ? "548px" : screenWidth >= 1366 && screenWidth < 1920 ? "756px" : screenWidth >= 1920 ? "823px" : undefined
                                            },
                                            alt: "Group",
                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/group-40-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/group-40-5.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-40-6.png" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-40-7.png" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 2097,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "group-5",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "95px" : screenWidth >= 992 && screenWidth < 1366 ? "126px" : screenWidth >= 1366 && screenWidth < 1920 ? "174px" : screenWidth >= 1920 ? "190px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "459px" : screenWidth >= 992 && screenWidth < 1366 ? "606px" : screenWidth >= 1366 && screenWidth < 1920 ? "836px" : screenWidth >= 1920 ? "916px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "202px" : screenWidth >= 992 && screenWidth < 1366 ? "268px" : screenWidth >= 1366 && screenWidth < 1920 ? "370px" : screenWidth >= 1920 ? "403px" : undefined
                                            },
                                            alt: "Group",
                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/group-39-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/group-39-6@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-39-8@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-39-10@2x.png" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 2155,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "toriii-name-2",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "149px" : screenWidth >= 992 && screenWidth < 1366 ? "198px" : screenWidth >= 1366 && screenWidth < 1920 ? "273px" : screenWidth >= 1920 ? "297px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "449px" : screenWidth >= 992 && screenWidth < 1366 ? "594px" : screenWidth >= 1366 && screenWidth < 1920 ? "819px" : screenWidth >= 1920 ? "897px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "269px" : screenWidth >= 992 && screenWidth < 1366 ? "357px" : screenWidth >= 1366 && screenWidth < 1920 ? "493px" : screenWidth >= 1920 ? "537px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "152px" : screenWidth >= 992 && screenWidth < 1366 ? "202px" : screenWidth >= 1366 && screenWidth < 1920 ? "278px" : screenWidth >= 1920 ? "303px" : undefined
                                            },
                                            alt: "Toriii name",
                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-8.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-9.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-10.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-11.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 2203,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "our-technical",
                                    style: {
                                        fontSize: screenWidth < 375 ? "2.7px" : screenWidth >= 375 && screenWidth < 414 ? "3.2px" : screenWidth >= 414 && screenWidth < 500 ? "3.5px" : screenWidth >= 500 && screenWidth < 768 ? "4.2px" : screenWidth >= 768 && screenWidth < 992 ? "4.8px" : screenWidth >= 992 && screenWidth < 1366 ? "6.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "8.7px" : screenWidth >= 1920 ? "9.5px" : undefined,
                                        height: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "20px" : screenWidth >= 500 && screenWidth < 768 ? "24px" : screenWidth >= 768 && screenWidth < 992 ? "28px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "52px" : screenWidth >= 1920 ? "56px" : undefined,
                                        left: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "12px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 768 && screenWidth < 992 ? "7px" : screenWidth >= 992 && screenWidth < 1366 ? "6px" : screenWidth >= 1920 ? "14px" : undefined,
                                        letterSpacing: screenWidth < 375 ? "0.01px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 ? "0.02px" : screenWidth >= 992 && screenWidth < 1366 ? "0.03px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.04px" : screenWidth >= 1920 ? "0.05px" : undefined,
                                        lineHeight: screenWidth < 375 ? "4.1px" : screenWidth >= 375 && screenWidth < 414 ? "4.8px" : screenWidth >= 414 && screenWidth < 500 ? "5.2px" : screenWidth >= 500 && screenWidth < 768 ? "6.4px" : screenWidth >= 768 && screenWidth < 992 ? "7.1px" : screenWidth >= 992 && screenWidth < 1366 ? "9.5px" : screenWidth >= 1366 && screenWidth < 1920 ? "13.1px" : screenWidth >= 1920 ? "14.2px" : undefined,
                                        top: screenWidth < 375 ? "342px" : screenWidth >= 375 && screenWidth < 414 ? "395px" : screenWidth >= 414 && screenWidth < 500 ? "436px" : screenWidth >= 500 && screenWidth < 768 ? "530px" : screenWidth >= 768 && screenWidth < 992 ? "354px" : screenWidth >= 992 && screenWidth < 1366 ? "470px" : screenWidth >= 1366 && screenWidth < 1920 ? "649px" : screenWidth >= 1920 ? "706px" : undefined,
                                        width: screenWidth < 375 ? "118px" : screenWidth >= 375 && screenWidth < 414 ? "136px" : screenWidth >= 414 && screenWidth < 500 ? "150px" : screenWidth >= 500 && screenWidth < 768 ? "183px" : screenWidth >= 768 && screenWidth < 992 ? "204px" : screenWidth >= 992 && screenWidth < 1366 ? "270px" : screenWidth >= 1366 && screenWidth < 1920 ? "373px" : screenWidth >= 1920 ? "406px" : undefined
                                    },
                                    children: [
                                        (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-wrapper-33",
                                            children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 2393,
                                            columnNumber: 17
                                        }, undefined),
                                        (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-wrapper-33",
                                            children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 2408,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 2263,
                                    columnNumber: 13
                                }, undefined),
                                (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-wrapper-5",
                                            style: {
                                                fontSize: screenWidth >= 768 && screenWidth < 992 ? "4.2px" : screenWidth >= 992 && screenWidth < 1366 ? "5.6px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.8px" : screenWidth >= 1920 ? "8.5px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "30px" : screenWidth >= 992 && screenWidth < 1366 ? "40px" : screenWidth >= 1366 && screenWidth < 1920 ? "60px" : screenWidth >= 1920 ? "65px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "240px" : screenWidth >= 992 && screenWidth < 1366 ? "316px" : screenWidth >= 1366 && screenWidth < 1920 ? "436px" : screenWidth >= 1920 ? "480px" : undefined,
                                                letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.02px" : screenWidth >= 992 && screenWidth < 1366 ? "0.03px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "0.04px" : undefined,
                                                lineHeight: screenWidth >= 768 && screenWidth < 992 ? "6.4px" : screenWidth >= 992 && screenWidth < 1366 ? "8.5px" : screenWidth >= 1366 && screenWidth < 1920 ? "11.7px" : screenWidth >= 1920 ? "12.7px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "280px" : screenWidth >= 992 && screenWidth < 1366 ? "371px" : screenWidth >= 1366 && screenWidth < 1920 ? "513px" : screenWidth >= 1920 ? "558px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "127px" : screenWidth >= 992 && screenWidth < 1366 ? "168px" : screenWidth >= 1366 && screenWidth < 1920 ? "232px" : screenWidth >= 1920 ? "253px" : undefined
                                            },
                                            children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 2425,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "overlap-wrapper",
                                            style: {
                                                backgroundImage: screenWidth >= 768 && screenWidth < 992 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-8.svg)" : screenWidth >= 992 && screenWidth < 1366 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-9.svg)" : screenWidth >= 1366 && screenWidth < 1920 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-10.svg)" : screenWidth >= 1920 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-11.svg)" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "72px" : screenWidth >= 992 && screenWidth < 1366 ? "96px" : screenWidth >= 1366 && screenWidth < 1920 ? "132px" : screenWidth >= 1920 ? "144px" : undefined,
                                                left: screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 ? "0" : screenWidth >= 992 && screenWidth < 1366 ? "-3px" : screenWidth >= 1366 && screenWidth < 1920 ? "-5px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "279px" : screenWidth >= 992 && screenWidth < 1366 ? "370px" : screenWidth >= 1366 && screenWidth < 1920 ? "511px" : screenWidth >= 1920 ? "556px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "72px" : screenWidth >= 992 && screenWidth < 1366 ? "96px" : screenWidth >= 1366 && screenWidth < 1920 ? "132px" : screenWidth >= 1920 ? "144px" : undefined
                                            },
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "overlap-3",
                                                style: {
                                                    backgroundImage: screenWidth >= 768 && screenWidth < 992 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-2-8.svg)" : screenWidth >= 992 && screenWidth < 1366 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-2-9.svg)" : screenWidth >= 1366 && screenWidth < 1920 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-2-10.svg)" : screenWidth >= 1920 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-2-11.svg)" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "60px" : screenWidth >= 992 && screenWidth < 1366 ? "80px" : screenWidth >= 1366 && screenWidth < 1920 ? "111px" : screenWidth >= 1920 ? "120px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 ? "6px" : screenWidth >= 992 && screenWidth < 1366 ? "8px" : screenWidth >= 1366 && screenWidth < 1920 ? "11px" : screenWidth >= 1920 ? "12px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "6px" : screenWidth >= 992 && screenWidth < 1366 ? "8px" : screenWidth >= 1366 && screenWidth < 1920 ? "11px" : screenWidth >= 1920 ? "12px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "60px" : screenWidth >= 992 && screenWidth < 1366 ? "80px" : screenWidth >= 1366 && screenWidth < 1920 ? "111px" : screenWidth >= 1920 ? "120px" : undefined
                                                },
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "img-3",
                                                    style: {
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "27px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "50px" : screenWidth >= 1920 ? "55px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 ? "27px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "50px" : screenWidth >= 1920 ? "54px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "14px" : screenWidth >= 992 && screenWidth < 1366 ? "19px" : screenWidth >= 1366 && screenWidth < 1920 ? "26px" : screenWidth >= 1920 ? "28px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "7px" : screenWidth >= 992 && screenWidth < 1366 ? "9px" : screenWidth >= 1366 && screenWidth < 1920 ? "12px" : screenWidth >= 1920 ? "13px" : undefined
                                                    },
                                                    alt: "Img",
                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/--8.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/--9.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/--10.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/--11.svg" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 2616,
                                                    columnNumber: 21
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 2561,
                                                columnNumber: 19
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 2507,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "group-6",
                                            style: {
                                                border: screenWidth >= 768 && screenWidth < 992 ? "0.88px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.62px solid" : screenWidth >= 1920 ? "1.76px solid" : undefined,
                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "8.82px" : screenWidth >= 992 && screenWidth < 1366 ? "11.72px" : screenWidth >= 1366 && screenWidth < 1920 ? "16.18px" : screenWidth >= 1920 ? "17.61px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "97px" : screenWidth >= 992 && screenWidth < 1366 ? "129px" : screenWidth >= 1366 && screenWidth < 1920 ? "178px" : screenWidth >= 1920 ? "194px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "237px" : screenWidth >= 992 && screenWidth < 1366 ? "312px" : screenWidth >= 1366 && screenWidth < 1920 ? "430px" : screenWidth >= 1920 ? "474px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "324px" : screenWidth >= 992 && screenWidth < 1366 ? "430px" : screenWidth >= 1366 && screenWidth < 1920 ? "593px" : screenWidth >= 1920 ? "646px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "132px" : screenWidth >= 992 && screenWidth < 1366 ? "175px" : screenWidth >= 1366 && screenWidth < 1920 ? "242px" : screenWidth >= 1920 ? "263px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "crypto-ASSETS",
                                                    style: {
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "36px" : screenWidth >= 992 && screenWidth < 1366 ? "48px" : screenWidth >= 1366 && screenWidth < 1920 ? "66px" : screenWidth >= 1920 ? "72px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 ? "9px" : screenWidth >= 992 && screenWidth < 1366 ? "11px" : screenWidth >= 1366 && screenWidth < 1920 ? "16px" : screenWidth >= 1920 ? "17px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "14px" : screenWidth >= 992 && screenWidth < 1366 ? "19px" : screenWidth >= 1366 && screenWidth < 1920 ? "26px" : screenWidth >= 1920 ? "28px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "114px" : screenWidth >= 992 && screenWidth < 1366 ? "152px" : screenWidth >= 1366 && screenWidth < 1920 ? "209px" : screenWidth >= 1920 ? "228px" : undefined
                                                    },
                                                    alt: "Crypto ASSETS",
                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/crypto-assets-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/crypto-assets-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/crypto-assets-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/crypto-assets-7.svg" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 2741,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-wrapper",
                                                    style: {
                                                        borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0px 0px 7.06px 7.06px" : screenWidth >= 992 && screenWidth < 1366 ? "0px 0px 9.37px 9.37px" : screenWidth >= 1366 && screenWidth < 1920 ? "0px 0px 12.94px 12.94px" : screenWidth >= 1920 ? "0px 0px 14.09px 14.09px" : undefined,
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "34px" : screenWidth >= 992 && screenWidth < 1366 ? "46px" : screenWidth >= 1366 && screenWidth < 1920 ? "63px" : screenWidth >= 1920 ? "69px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "61px" : screenWidth >= 992 && screenWidth < 1366 ? "81px" : screenWidth >= 1366 && screenWidth < 1920 ? "112px" : screenWidth >= 1920 ? "122px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "128px" : screenWidth >= 992 && screenWidth < 1366 ? "170px" : screenWidth >= 1366 && screenWidth < 1920 ? "235px" : screenWidth >= 1920 ? "255px" : undefined
                                                    },
                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-5",
                                                        style: {
                                                            gap: screenWidth >= 768 && screenWidth < 992 ? "14.53px" : screenWidth >= 992 && screenWidth < 1366 ? "19.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "26.64px" : screenWidth >= 1920 ? "29px" : undefined,
                                                            left: screenWidth >= 768 && screenWidth < 992 ? "16px" : screenWidth >= 992 && screenWidth < 1366 ? "22px" : screenWidth >= 1366 && screenWidth < 1920 ? "30px" : screenWidth >= 1920 ? "32px" : undefined,
                                                            top: screenWidth >= 768 && screenWidth < 992 ? "5px" : screenWidth >= 992 && screenWidth < 1366 ? "7px" : screenWidth >= 1366 && screenWidth < 1920 ? "10px" : screenWidth >= 1920 ? "11px" : undefined
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "frame-6",
                                                                style: {
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "22.59px" : screenWidth >= 992 && screenWidth < 1366 ? "30px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.08px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 ? "22.58px" : screenWidth >= 992 && screenWidth < 1366 ? "29.99px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.07px" : undefined
                                                                },
                                                                alt: "Frame",
                                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/frame-39904-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/frame-39904-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/frame-39904-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/frame-39904-7.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 2888,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "tether-usdt-seeklogo",
                                                                style: {
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "22.58px" : screenWidth >= 992 && screenWidth < 1366 ? "29.99px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.07px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 ? "22.58px" : screenWidth >= 992 && screenWidth < 1366 ? "29.99px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.07px" : undefined
                                                                },
                                                                alt: "Tether usdt seeklogo",
                                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/tether-usdt-seeklogo-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/tether-usdt-seeklogo-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/tether-usdt-seeklogo-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/tether-usdt-seeklogo-7.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 2926,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "group-wrapper",
                                                                style: {
                                                                    border: screenWidth >= 768 && screenWidth < 992 ? "1px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.33px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.84px solid" : screenWidth >= 1920 ? "2px solid" : undefined,
                                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "11.29px" : screenWidth >= 992 && screenWidth < 1366 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 ? "20.7px" : screenWidth >= 1920 ? "22.54px" : undefined,
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "22.58px" : screenWidth >= 992 && screenWidth < 1366 ? "29.99px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.07px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 ? "22.58px" : screenWidth >= 992 && screenWidth < 1366 ? "29.99px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.07px" : undefined
                                                                },
                                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "group-7",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19px" : screenWidth >= 992 && screenWidth < 1366 ? "25px" : screenWidth >= 1366 && screenWidth < 1920 ? "34px" : screenWidth >= 1920 ? "37px" : undefined,
                                                                        left: screenWidth >= 768 && screenWidth < 992 ? "5px" : screenWidth >= 992 && screenWidth < 1366 ? "6px" : screenWidth >= 1366 && screenWidth < 1920 ? "8px" : screenWidth >= 1920 ? "9px" : undefined,
                                                                        top: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "1px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "2px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "11px" : screenWidth >= 992 && screenWidth < 1366 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 ? "21px" : screenWidth >= 1920 ? "23px" : undefined
                                                                    },
                                                                    alt: "Group",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/group-54-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/group-54-5@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-54-6@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-54-7@2x.png" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3009,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 2964,
                                                                columnNumber: 23
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 2853,
                                                        columnNumber: 21
                                                    }, undefined)
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 2799,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 2676,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                    className: "battery-2",
                                    style: {
                                        height: screenWidth < 375 ? "20px" : screenWidth >= 375 && screenWidth < 414 ? "23px" : screenWidth >= 414 && screenWidth < 500 ? "25px" : screenWidth >= 500 && screenWidth < 768 ? "31px" : screenWidth >= 768 && screenWidth < 992 ? "266px" : screenWidth >= 992 && screenWidth < 1366 ? "353px" : screenWidth >= 1366 && screenWidth < 1920 ? "488px" : screenWidth >= 1920 ? "531px" : undefined,
                                        left: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "12px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : screenWidth >= 768 && screenWidth < 992 ? "628px" : screenWidth >= 992 && screenWidth < 1366 ? "831px" : screenWidth >= 1366 && screenWidth < 1920 ? "1146px" : screenWidth >= 1920 ? "1253px" : undefined,
                                        top: screenWidth < 375 ? "318px" : screenWidth >= 375 && screenWidth < 414 ? "367px" : screenWidth >= 414 && screenWidth < 500 ? "405px" : screenWidth >= 500 && screenWidth < 768 ? "493px" : screenWidth >= 768 && screenWidth < 992 ? "135px" : screenWidth >= 992 && screenWidth < 1366 ? "179px" : screenWidth >= 1366 && screenWidth < 1920 ? "248px" : screenWidth >= 1920 ? "269px" : undefined,
                                        width: screenWidth < 375 ? "120px" : screenWidth >= 375 && screenWidth < 414 ? "139px" : screenWidth >= 414 && screenWidth < 500 ? "153px" : screenWidth >= 500 && screenWidth < 768 ? "186px" : screenWidth >= 768 && screenWidth < 992 ? "36px" : screenWidth >= 992 && screenWidth < 1366 ? "48px" : screenWidth >= 1366 && screenWidth < 1920 ? "67px" : screenWidth >= 1920 ? "73px" : undefined
                                    },
                                    alt: "Battery",
                                    src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/battery@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/battery-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/battery-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/battery-3@2x.png" : screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/liquidity--4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/liquidity--5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/liquidity--6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/liquidity--7.svg" : undefined
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 3071,
                                    columnNumber: 13
                                }, undefined),
                                (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "frame-7",
                                    style: {
                                        gap: screenWidth >= 768 && screenWidth < 992 ? "14.03px" : screenWidth >= 992 && screenWidth < 1366 ? "18.63px" : screenWidth >= 1366 && screenWidth < 1920 ? "25.72px" : screenWidth >= 1920 ? "28px" : undefined,
                                        left: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "9px" : screenWidth >= 1366 && screenWidth < 1920 ? "12px" : screenWidth >= 1920 ? "19px" : undefined,
                                        top: screenWidth >= 768 && screenWidth < 992 ? "68px" : screenWidth >= 992 && screenWidth < 1366 ? "91px" : screenWidth >= 1366 && screenWidth < 1920 ? "125px" : screenWidth >= 1920 ? "136px" : undefined
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "rectangle",
                                            style: {
                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "15.75px" : screenWidth >= 992 && screenWidth < 1366 ? "20.92px" : screenWidth >= 1366 && screenWidth < 1920 ? "28.88px" : screenWidth >= 1920 ? "31.44px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "135.78px" : screenWidth >= 992 && screenWidth < 1366 ? "180.34px" : screenWidth >= 1366 && screenWidth < 1920 ? "248.98px" : screenWidth >= 1920 ? "271px" : undefined
                                            }
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 3207,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "ellipse-12",
                                            style: {
                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                            }
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 3253,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "ellipse-13",
                                            style: {
                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                            }
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 3299,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "ellipse-14",
                                            style: {
                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                            }
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 3345,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "ellipse-15",
                                            style: {
                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                            }
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 3391,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "ellipse-16",
                                            style: {
                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                            }
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 3437,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "ellipse-17",
                                            style: {
                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                            }
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 3483,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "rectangle-2",
                                            style: {
                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "15.75px" : screenWidth >= 992 && screenWidth < 1366 ? "20.92px" : screenWidth >= 1366 && screenWidth < 1920 ? "28.88px" : screenWidth >= 1920 ? "31.44px" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "135.78px" : screenWidth >= 992 && screenWidth < 1366 ? "180.34px" : screenWidth >= 1366 && screenWidth < 1920 ? "248.98px" : screenWidth >= 1920 ? "271px" : undefined
                                            }
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 3529,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 3173,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                    className: "img-4",
                                    style: {
                                        height: screenWidth >= 768 && screenWidth < 992 ? "22px" : screenWidth >= 992 && screenWidth < 1366 ? "30px" : screenWidth >= 1366 && screenWidth < 1920 ? "41px" : screenWidth >= 1920 ? "45px" : screenWidth < 375 ? "25px" : screenWidth >= 375 && screenWidth < 414 ? "29px" : screenWidth >= 414 && screenWidth < 500 ? "32px" : screenWidth >= 500 && screenWidth < 768 ? "39px" : undefined,
                                        left: screenWidth >= 768 && screenWidth < 992 ? "82px" : screenWidth >= 992 && screenWidth < 1366 ? "106px" : screenWidth >= 1366 && screenWidth < 1920 ? "146px" : screenWidth >= 1920 ? "164px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "0" : undefined,
                                        top: screenWidth >= 768 && screenWidth < 992 ? "300px" : screenWidth >= 992 && screenWidth < 1366 ? "398px" : screenWidth >= 1366 && screenWidth < 1920 ? "550px" : screenWidth >= 1920 ? "598px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "0" : undefined,
                                        width: screenWidth >= 768 && screenWidth < 992 ? "127px" : screenWidth >= 992 && screenWidth < 1366 ? "169px" : screenWidth >= 1366 && screenWidth < 1920 ? "234px" : screenWidth >= 1920 ? "254px" : screenWidth < 375 ? "293px" : screenWidth >= 375 && screenWidth < 414 ? "338px" : screenWidth >= 414 && screenWidth < 500 ? "372px" : screenWidth >= 500 && screenWidth < 768 ? "453px" : undefined
                                    },
                                    alt: "Element",
                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/99---4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/99---5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/99---6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/99---7.svg" : screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/group-40@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/group-40-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/group-40-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/group-40-3@2x.png" : undefined
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 3577,
                                    columnNumber: 13
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                    className: "group-8",
                                    style: {
                                        height: screenWidth >= 768 && screenWidth < 992 ? "159px" : screenWidth >= 992 && screenWidth < 1366 ? "211px" : screenWidth >= 1366 && screenWidth < 1920 ? "292px" : screenWidth >= 1920 ? "318px" : screenWidth < 375 ? "117px" : screenWidth >= 375 && screenWidth < 414 ? "135px" : screenWidth >= 414 && screenWidth < 500 ? "149px" : screenWidth >= 500 && screenWidth < 768 ? "181px" : undefined,
                                        left: screenWidth >= 768 && screenWidth < 992 ? "393px" : screenWidth >= 992 && screenWidth < 1366 ? "519px" : screenWidth >= 1366 && screenWidth < 1920 ? "716px" : screenWidth >= 1920 ? "785px" : screenWidth < 375 ? "183px" : screenWidth >= 375 && screenWidth < 414 ? "211px" : screenWidth >= 414 && screenWidth < 500 ? "233px" : screenWidth >= 500 && screenWidth < 768 ? "283px" : undefined,
                                        top: screenWidth >= 768 && screenWidth < 992 ? "260px" : screenWidth >= 992 && screenWidth < 1366 ? "345px" : screenWidth >= 1366 && screenWidth < 1920 ? "476px" : screenWidth >= 1920 ? "518px" : screenWidth < 375 ? "340px" : screenWidth >= 375 && screenWidth < 414 ? "392px" : screenWidth >= 414 && screenWidth < 500 ? "432px" : screenWidth >= 500 && screenWidth < 768 ? "526px" : undefined,
                                        width: screenWidth >= 768 && screenWidth < 992 ? "39px" : screenWidth >= 992 && screenWidth < 1366 ? "52px" : screenWidth >= 1366 && screenWidth < 1920 ? "72px" : screenWidth >= 1920 ? "79px" : screenWidth < 375 ? "107px" : screenWidth >= 375 && screenWidth < 414 ? "124px" : screenWidth >= 414 && screenWidth < 500 ? "136px" : screenWidth >= 500 && screenWidth < 768 ? "166px" : undefined
                                    },
                                    alt: "Group",
                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/group-50-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/group-50-5@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-50-6@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-50-7@2x.png" : screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-1.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-3.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-5.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/toriii-name-7.svg" : undefined
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 3669,
                                    columnNumber: 13
                                }, undefined),
                                (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-wrapper-6",
                                            style: {
                                                fontSize: screenWidth < 375 ? "2.7px" : screenWidth >= 375 && screenWidth < 414 ? "3.2px" : screenWidth >= 414 && screenWidth < 500 ? "3.5px" : screenWidth >= 500 && screenWidth < 768 ? "4.2px" : undefined,
                                                height: screenWidth < 375 ? "19px" : screenWidth >= 375 && screenWidth < 414 ? "22px" : screenWidth >= 414 && screenWidth < 500 ? "25px" : screenWidth >= 500 && screenWidth < 768 ? "30px" : undefined,
                                                left: screenWidth < 375 ? "182px" : screenWidth >= 375 && screenWidth < 414 ? "209px" : screenWidth >= 414 && screenWidth < 500 ? "231px" : screenWidth >= 500 && screenWidth < 768 ? "281px" : undefined,
                                                letterSpacing: screenWidth < 375 ? "0.01px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "0.02px" : undefined,
                                                lineHeight: screenWidth < 375 ? "4.1px" : screenWidth >= 375 && screenWidth < 414 ? "4.8px" : screenWidth >= 414 && screenWidth < 500 ? "5.2px" : screenWidth >= 500 && screenWidth < 768 ? "6.4px" : undefined,
                                                top: screenWidth < 375 ? "320px" : screenWidth >= 375 && screenWidth < 414 ? "369px" : screenWidth >= 414 && screenWidth < 500 ? "408px" : screenWidth >= 500 && screenWidth < 768 ? "496px" : undefined,
                                                width: screenWidth < 375 ? "106px" : screenWidth >= 375 && screenWidth < 414 ? "122px" : screenWidth >= 414 && screenWidth < 500 ? "135px" : screenWidth >= 500 && screenWidth < 768 ? "164px" : undefined
                                            },
                                            children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 3772,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "group-9",
                                            style: {
                                                border: screenWidth < 375 ? "0.81px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.94px solid" : screenWidth >= 414 && screenWidth < 500 ? "1.03px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.26px solid" : undefined,
                                                borderRadius: screenWidth < 375 ? "8.14px" : screenWidth >= 375 && screenWidth < 414 ? "9.38px" : screenWidth >= 414 && screenWidth < 500 ? "10.35px" : screenWidth >= 500 && screenWidth < 768 ? "12.59px" : undefined,
                                                height: screenWidth < 375 ? "89px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "114px" : screenWidth >= 500 && screenWidth < 768 ? "138px" : undefined,
                                                left: screenWidth < 375 ? "8px" : screenWidth >= 375 && screenWidth < 414 ? "10px" : screenWidth >= 414 && screenWidth < 500 ? "11px" : screenWidth >= 500 && screenWidth < 768 ? "13px" : undefined,
                                                top: screenWidth < 375 ? "368px" : screenWidth >= 375 && screenWidth < 414 ? "424px" : screenWidth >= 414 && screenWidth < 500 ? "468px" : screenWidth >= 500 && screenWidth < 768 ? "569px" : undefined,
                                                width: screenWidth < 375 ? "122px" : screenWidth >= 375 && screenWidth < 414 ? "140px" : screenWidth >= 414 && screenWidth < 500 ? "155px" : screenWidth >= 500 && screenWidth < 768 ? "188px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "crypto-ASSETS-2",
                                                    style: {
                                                        height: screenWidth < 375 ? "33px" : screenWidth >= 375 && screenWidth < 414 ? "38px" : screenWidth >= 414 && screenWidth < 500 ? "42px" : screenWidth >= 500 && screenWidth < 768 ? "51px" : undefined,
                                                        left: screenWidth < 375 ? "8px" : screenWidth >= 375 && screenWidth < 414 ? "9px" : screenWidth >= 414 && screenWidth < 500 ? "10px" : screenWidth >= 500 && screenWidth < 768 ? "12px" : undefined,
                                                        top: screenWidth < 375 ? "13px" : screenWidth >= 375 && screenWidth < 414 ? "15px" : screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "20px" : undefined,
                                                        width: screenWidth < 375 ? "105px" : screenWidth >= 375 && screenWidth < 414 ? "122px" : screenWidth >= 414 && screenWidth < 500 ? "134px" : screenWidth >= 500 && screenWidth < 768 ? "163px" : undefined
                                                    },
                                                    alt: "Crypto ASSETS",
                                                    src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/crypto-assets.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/crypto-assets-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/crypto-assets-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/crypto-assets-3.svg" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 3918,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "div-wrapper",
                                                    style: {
                                                        borderRadius: screenWidth < 375 ? "0px 0px 6.51px 6.51px" : screenWidth >= 375 && screenWidth < 414 ? "0px 0px 7.51px 7.51px" : screenWidth >= 414 && screenWidth < 500 ? "0px 0px 8.28px 8.28px" : screenWidth >= 500 && screenWidth < 768 ? "0px 0px 10.07px 10.07px" : undefined,
                                                        height: screenWidth < 375 ? "32px" : screenWidth >= 375 && screenWidth < 414 ? "37px" : screenWidth >= 414 && screenWidth < 500 ? "40px" : screenWidth >= 500 && screenWidth < 768 ? "49px" : undefined,
                                                        left: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "2px" : screenWidth >= 500 && screenWidth < 768 ? "3px" : undefined,
                                                        top: screenWidth < 375 ? "56px" : screenWidth >= 375 && screenWidth < 414 ? "65px" : screenWidth >= 414 && screenWidth < 500 ? "71px" : screenWidth >= 500 && screenWidth < 768 ? "87px" : undefined,
                                                        width: screenWidth < 375 ? "118px" : screenWidth >= 375 && screenWidth < 414 ? "136px" : screenWidth >= 414 && screenWidth < 500 ? "150px" : screenWidth >= 500 && screenWidth < 768 ? "183px" : undefined
                                                    },
                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-8",
                                                        style: {
                                                            gap: screenWidth < 375 ? "13.4px" : screenWidth >= 375 && screenWidth < 414 ? "15.45px" : screenWidth >= 414 && screenWidth < 500 ? "17.04px" : screenWidth >= 500 && screenWidth < 768 ? "20.73px" : undefined,
                                                            height: screenWidth < 375 ? "21px" : screenWidth >= 375 && screenWidth < 414 ? "24px" : screenWidth >= 414 && screenWidth < 500 ? "26px" : screenWidth >= 500 && screenWidth < 768 ? "32px" : undefined,
                                                            left: screenWidth < 375 ? "15px" : screenWidth >= 375 && screenWidth < 414 ? "17px" : screenWidth >= 414 && screenWidth < 500 ? "19px" : screenWidth >= 500 && screenWidth < 768 ? "23px" : undefined,
                                                            top: screenWidth < 375 ? "5px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "6px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                                            width: screenWidth < 375 ? "89px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "114px" : screenWidth >= 500 && screenWidth < 768 ? "138px" : undefined
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "frame-9",
                                                                style: {
                                                                    height: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.23px" : undefined,
                                                                    width: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.22px" : undefined
                                                                },
                                                                alt: "Frame",
                                                                src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/frame-39904.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/frame-39904-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/frame-39904-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/frame-39904-3.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 4083,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "tether-usdt-seeklogo-2",
                                                                style: {
                                                                    height: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.22px" : undefined,
                                                                    width: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.22px" : undefined
                                                                },
                                                                alt: "Tether usdt seeklogo",
                                                                src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/tether-usdt-seeklogo.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/tether-usdt-seeklogo-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/tether-usdt-seeklogo-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/tether-usdt-seeklogo-3.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 4121,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "frame-10",
                                                                style: {
                                                                    border: screenWidth < 375 ? "0.92px solid" : screenWidth >= 375 && screenWidth < 414 ? "1.07px solid" : screenWidth >= 414 && screenWidth < 500 ? "1.18px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.43px solid" : undefined,
                                                                    borderRadius: screenWidth < 375 ? "10.41px" : screenWidth >= 375 && screenWidth < 414 ? "12.01px" : screenWidth >= 414 && screenWidth < 500 ? "13.24px" : screenWidth >= 500 && screenWidth < 768 ? "16.11px" : undefined,
                                                                    height: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.22px" : undefined,
                                                                    width: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.22px" : undefined
                                                                },
                                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "group-10",
                                                                    style: {
                                                                        height: screenWidth < 375 ? "17px" : screenWidth >= 375 && screenWidth < 414 ? "20px" : screenWidth >= 414 && screenWidth < 500 ? "22px" : screenWidth >= 500 && screenWidth < 768 ? "27px" : undefined,
                                                                        left: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "6px" : undefined,
                                                                        width: screenWidth < 375 ? "11px" : screenWidth >= 375 && screenWidth < 414 ? "12px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined
                                                                    },
                                                                    alt: "Group",
                                                                    src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/group-54@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/group-54-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/group-54-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/group-54-3@2x.png" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 4204,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 4159,
                                                                columnNumber: 23
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 4029,
                                                        columnNumber: 21
                                                    }, undefined)
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 3976,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 3853,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "liquidity",
                                            style: {
                                                height: screenWidth < 375 ? "140px" : screenWidth >= 375 && screenWidth < 414 ? "161px" : screenWidth >= 414 && screenWidth < 500 ? "178px" : screenWidth >= 500 && screenWidth < 768 ? "216px" : undefined,
                                                left: screenWidth < 375 ? "147px" : screenWidth >= 375 && screenWidth < 414 ? "170px" : screenWidth >= 414 && screenWidth < 500 ? "187px" : screenWidth >= 500 && screenWidth < 768 ? "228px" : undefined,
                                                top: screenWidth < 375 ? "319px" : screenWidth >= 375 && screenWidth < 414 ? "368px" : screenWidth >= 414 && screenWidth < 500 ? "405px" : screenWidth >= 500 && screenWidth < 768 ? "493px" : undefined,
                                                width: screenWidth < 375 ? "19px" : screenWidth >= 375 && screenWidth < 414 ? "22px" : screenWidth >= 414 && screenWidth < 500 ? "24px" : screenWidth >= 500 && screenWidth < 768 ? "30px" : undefined
                                            },
                                            alt: "Liquidity",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/liquidity-.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/liquidity--1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/liquidity--2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/liquidity--3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 4255,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-11",
                                            style: {
                                                gap: screenWidth < 375 ? "9.23px" : screenWidth >= 375 && screenWidth < 414 ? "10.64px" : screenWidth >= 414 && screenWidth < 500 ? "11.74px" : screenWidth >= 500 && screenWidth < 768 ? "14.28px" : undefined,
                                                left: screenWidth < 375 ? "2px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "3px" : screenWidth >= 500 && screenWidth < 768 ? "4px" : undefined,
                                                top: screenWidth < 375 ? "37px" : screenWidth >= 375 && screenWidth < 414 ? "42px" : screenWidth >= 414 && screenWidth < 500 ? "47px" : screenWidth >= 500 && screenWidth < 768 ? "57px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "rectangle-3",
                                                    style: {
                                                        border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                        borderRadius: screenWidth < 375 ? "10.36px" : screenWidth >= 375 && screenWidth < 414 ? "11.95px" : screenWidth >= 414 && screenWidth < 500 ? "13.18px" : screenWidth >= 500 && screenWidth < 768 ? "16.03px" : undefined,
                                                        height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                        width: screenWidth < 375 ? "89.29px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "113.59px" : screenWidth >= 500 && screenWidth < 768 ? "138.17px" : undefined
                                                    }
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4347,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "ellipse-18",
                                                    style: {
                                                        border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                        borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                        height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                        width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                    }
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4393,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "ellipse-19",
                                                    style: {
                                                        border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                        borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                        height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                        width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                    }
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4439,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "ellipse-20",
                                                    style: {
                                                        border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                        borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                        height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                        width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                    }
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4485,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "ellipse-21",
                                                    style: {
                                                        border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                        borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                        height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                        width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                    }
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4531,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "ellipse-22",
                                                    style: {
                                                        border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                        borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                        height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                        width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                    }
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4577,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "ellipse-23",
                                                    style: {
                                                        border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                        borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                        height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                        width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                    }
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4623,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "ellipse-24",
                                                    style: {
                                                        border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                        borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                        height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                        width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                    }
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4669,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "rectangle-4",
                                                    style: {
                                                        border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                        borderRadius: screenWidth < 375 ? "10.36px" : screenWidth >= 375 && screenWidth < 414 ? "11.95px" : screenWidth >= 414 && screenWidth < 500 ? "13.18px" : screenWidth >= 500 && screenWidth < 768 ? "16.03px" : undefined,
                                                        height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                        width: screenWidth < 375 ? "89.29px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "113.59px" : screenWidth >= 500 && screenWidth < 768 ? "138.17px" : undefined
                                                    }
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4715,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 4313,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "overlap-4",
                                            style: {
                                                height: screenWidth < 375 ? "64px" : screenWidth >= 375 && screenWidth < 414 ? "76px" : screenWidth >= 414 && screenWidth < 500 ? "83px" : screenWidth >= 500 && screenWidth < 768 ? "101px" : undefined,
                                                left: screenWidth < 375 ? "19px" : screenWidth >= 375 && screenWidth < 414 ? "22px" : screenWidth >= 414 && screenWidth < 500 ? "25px" : screenWidth >= 500 && screenWidth < 768 ? "30px" : undefined,
                                                top: screenWidth < 375 ? "213px" : screenWidth >= 375 && screenWidth < 414 ? "245px" : screenWidth >= 414 && screenWidth < 500 ? "270px" : screenWidth >= 500 && screenWidth < 768 ? "329px" : undefined,
                                                width: screenWidth < 375 ? "266px" : screenWidth >= 375 && screenWidth < 414 ? "308px" : screenWidth >= 414 && screenWidth < 500 ? "341px" : screenWidth >= 500 && screenWidth < 768 ? "412px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "vector-2",
                                                    style: {
                                                        height: screenWidth < 375 ? "55px" : screenWidth >= 375 && screenWidth < 414 ? "63px" : screenWidth >= 414 && screenWidth < 500 ? "70px" : screenWidth >= 500 && screenWidth < 768 ? "85px" : undefined,
                                                        left: screenWidth < 375 ? "192px" : screenWidth >= 375 && screenWidth < 414 ? "221px" : screenWidth >= 414 && screenWidth < 500 ? "246px" : screenWidth >= 500 && screenWidth < 768 ? "297px" : undefined,
                                                        width: screenWidth < 375 ? "74px" : screenWidth >= 375 && screenWidth < 414 ? "86px" : screenWidth >= 414 && screenWidth < 500 ? "95px" : screenWidth >= 500 && screenWidth < 768 ? "115px" : undefined
                                                    },
                                                    alt: "Vector",
                                                    src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/vector.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/vector-4.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/vector-8.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/vector-12.svg" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4807,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                    className: "text-wrapper-7",
                                                    style: {
                                                        fontSize: screenWidth < 375 ? "14.2px" : screenWidth >= 375 && screenWidth < 414 ? "16.4px" : screenWidth >= 414 && screenWidth < 500 ? "18.1px" : screenWidth >= 500 && screenWidth < 768 ? "22px" : undefined,
                                                        height: screenWidth < 375 ? "42px" : screenWidth >= 375 && screenWidth < 414 ? "50px" : screenWidth >= 414 && screenWidth < 500 ? "54px" : screenWidth >= 500 && screenWidth < 768 ? "66px" : undefined,
                                                        letterSpacing: screenWidth < 375 ? "0.07px" : screenWidth >= 375 && screenWidth < 414 ? "0.08px" : screenWidth >= 414 && screenWidth < 500 ? "0.09px" : screenWidth >= 500 && screenWidth < 768 ? "0.11px" : undefined,
                                                        lineHeight: screenWidth < 375 ? "21.3px" : screenWidth >= 375 && screenWidth < 414 ? "24.6px" : screenWidth >= 414 && screenWidth < 500 ? "27.1px" : screenWidth >= 500 && screenWidth < 768 ? "32.9px" : undefined,
                                                        top: screenWidth < 375 ? "22px" : screenWidth >= 375 && screenWidth < 414 ? "26px" : screenWidth >= 414 && screenWidth < 500 ? "29px" : screenWidth >= 500 && screenWidth < 768 ? "35px" : undefined,
                                                        width: screenWidth < 375 ? "257px" : screenWidth >= 375 && screenWidth < 414 ? "296px" : screenWidth >= 414 && screenWidth < 500 ? "327px" : screenWidth >= 500 && screenWidth < 768 ? "397px" : undefined
                                                    },
                                                    children: "Specializing in high frequency and low latency solutions for digital asset markets."
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4855,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 4762,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "vector-3",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "12px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined,
                                                left: screenWidth < 375 ? "275px" : screenWidth >= 375 && screenWidth < 414 ? "318px" : screenWidth >= 414 && screenWidth < 500 ? "352px" : screenWidth >= 500 && screenWidth < 768 ? "427px" : undefined,
                                                top: screenWidth < 375 ? "285px" : screenWidth >= 375 && screenWidth < 414 ? "328px" : screenWidth >= 414 && screenWidth < 500 ? "362px" : screenWidth >= 500 && screenWidth < 768 ? "441px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "12px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined
                                            },
                                            alt: "Vector",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/vector-1.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/vector-5.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/vector-9.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/vector-13.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 4925,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "vector-4",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "12px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined,
                                                left: screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "12px" : screenWidth >= 375 && screenWidth < 414 ? "10px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "334px" : screenWidth >= 414 && screenWidth < 500 ? "368px" : screenWidth >= 500 && screenWidth < 768 ? "448px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "12px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined
                                            },
                                            alt: "Vector",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/vector-2.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/vector-6.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/vector-10.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/vector-15.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 4983,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "ellipse-25",
                                            style: {
                                                borderRadius: screenWidth < 375 ? "4.93px" : screenWidth >= 375 && screenWidth < 414 ? "5.69px" : screenWidth >= 414 && screenWidth < 500 ? "6.28px" : screenWidth >= 500 && screenWidth < 768 ? "7.64px" : undefined,
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "65px" : screenWidth >= 375 && screenWidth < 414 ? "70px" : screenWidth >= 414 && screenWidth < 500 ? "79px" : screenWidth >= 500 && screenWidth < 768 ? "97px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            }
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5040,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "ellipse-26",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "75px" : screenWidth >= 375 && screenWidth < 414 ? "82px" : screenWidth >= 414 && screenWidth < 500 ? "91px" : screenWidth >= 500 && screenWidth < 768 ? "112px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            },
                                            alt: "Ellipse",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-6.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-6-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-6-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-6-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5096,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "ellipse-27",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "84px" : screenWidth >= 375 && screenWidth < 414 ? "93px" : screenWidth >= 414 && screenWidth < 500 ? "104px" : screenWidth >= 500 && screenWidth < 768 ? "128px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            },
                                            alt: "Ellipse",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-7.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-7-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-7-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-7-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5154,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "ellipse-28",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "94px" : screenWidth >= 375 && screenWidth < 414 ? "104px" : screenWidth >= 414 && screenWidth < 500 ? "116px" : screenWidth >= 500 && screenWidth < 768 ? "143px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            },
                                            alt: "Ellipse",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-8.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-8-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-8-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-8-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5212,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "ellipse-29",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "104px" : screenWidth >= 375 && screenWidth < 414 ? "116px" : screenWidth >= 414 && screenWidth < 500 ? "129px" : screenWidth >= 500 && screenWidth < 768 ? "158px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            },
                                            alt: "Ellipse",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-9.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-9-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-9-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-9-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5270,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "ellipse-30",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "114px" : screenWidth >= 375 && screenWidth < 414 ? "127px" : screenWidth >= 414 && screenWidth < 500 ? "142px" : screenWidth >= 500 && screenWidth < 768 ? "173px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            },
                                            alt: "Ellipse",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-10.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-10-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-10-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-10-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5328,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "ellipse-31",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "124px" : screenWidth >= 375 && screenWidth < 414 ? "139px" : screenWidth >= 414 && screenWidth < 500 ? "154px" : screenWidth >= 500 && screenWidth < 768 ? "189px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            },
                                            alt: "Ellipse",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-11.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-11-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-11-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-11-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5386,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "ellipse-32",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "134px" : screenWidth >= 375 && screenWidth < 414 ? "150px" : screenWidth >= 414 && screenWidth < 500 ? "167px" : screenWidth >= 500 && screenWidth < 768 ? "204px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            },
                                            alt: "Ellipse",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-13.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-13-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-13-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-13-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5444,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "ellipse-33",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "144px" : screenWidth >= 375 && screenWidth < 414 ? "161px" : screenWidth >= 414 && screenWidth < 500 ? "179px" : screenWidth >= 500 && screenWidth < 768 ? "219px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            },
                                            alt: "Ellipse",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-14.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-14-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-14-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-14-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5502,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "ellipse-34",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "154px" : screenWidth >= 375 && screenWidth < 414 ? "173px" : screenWidth >= 414 && screenWidth < 500 ? "192px" : screenWidth >= 500 && screenWidth < 768 ? "234px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            },
                                            alt: "Ellipse",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-15.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-15-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-15-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-15-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5560,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "ellipse-35",
                                            style: {
                                                height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                                left: screenWidth < 375 ? "163px" : screenWidth >= 375 && screenWidth < 414 ? "184px" : screenWidth >= 414 && screenWidth < 500 ? "204px" : screenWidth >= 500 && screenWidth < 768 ? "250px" : undefined,
                                                top: screenWidth < 375 ? "290px" : screenWidth >= 375 && screenWidth < 414 ? "335px" : screenWidth >= 414 && screenWidth < 500 ? "369px" : screenWidth >= 500 && screenWidth < 768 ? "449px" : undefined,
                                                width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                            },
                                            alt: "Ellipse",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-12.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-12-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-12-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/ellipse-12-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5618,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true)
                            ]
                        }, void 0, true, {
                            fileName: "src/screens/Element/Element.jsx",
                            lineNumber: 392,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/screens/Element/Element.jsx",
                        lineNumber: 347,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        id: "service-section",
                        className: "page-service",
                        style: {
                            alignItems: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 || screenWidth < 375 ? "center" : screenWidth >= 500 && screenWidth < 768 ? "flex-start" : undefined,
                            alignSelf: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth < 375 ? "stretch" : undefined,
                            display: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth < 375 ? "flex" : screenWidth >= 992 && screenWidth < 1366 ? "inline-flex" : undefined,
                            flexDirection: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "column" : undefined,
                            gap: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "10px" : undefined,
                            justifyContent: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth < 375 ? "center" : undefined,
                            width: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth < 375 ? "100%" : undefined
                        },
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "frame-12",
                            style: {
                                alignItems: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "center" : screenWidth >= 414 && screenWidth < 500 ? "flex-start" : undefined,
                                display: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "flex" : undefined,
                                flexDirection: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "column" : undefined,
                                gap: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "18px" : screenWidth >= 414 && screenWidth < 500 ? "35px" : undefined,
                                height: screenWidth >= 500 && screenWidth < 768 ? "448px" : screenWidth >= 768 && screenWidth < 992 ? "505px" : screenWidth >= 992 && screenWidth < 1366 ? "671px" : screenWidth >= 1366 && screenWidth < 1920 ? "926px" : screenWidth >= 1920 ? "1008px" : undefined,
                                justifyContent: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "center" : undefined,
                                width: screenWidth < 375 ? "252.03px" : screenWidth >= 375 && screenWidth < 414 ? "290.72px" : screenWidth >= 414 && screenWidth < 500 ? "320.62px" : screenWidth >= 500 && screenWidth < 768 ? "393px" : screenWidth >= 768 && screenWidth < 992 ? "672px" : screenWidth >= 992 && screenWidth < 1366 ? "893px" : screenWidth >= 1366 && screenWidth < 1920 ? "1233px" : screenWidth >= 1920 ? "1342px" : undefined
                            },
                            children: [
                                (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-13",
                                            style: {
                                                gap: screenWidth < 375 ? "3px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "4px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-14",
                                                    style: {
                                                        gap: screenWidth < 375 ? "3.87px" : screenWidth >= 375 && screenWidth < 414 ? "4.46px" : screenWidth >= 414 && screenWidth < 500 ? "4.92px" : undefined,
                                                        padding: screenWidth < 375 ? "1.55px 0px" : screenWidth >= 375 && screenWidth < 414 ? "1.78px 0px" : screenWidth >= 414 && screenWidth < 500 ? "1.97px 0px" : undefined
                                                    },
                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "text-wrapper-8",
                                                        style: {
                                                            fontSize: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "16.1px" : screenWidth >= 414 && screenWidth < 500 ? "17.7px" : undefined,
                                                            letterSpacing: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "0.08px" : screenWidth >= 414 && screenWidth < 500 ? "0.09px" : undefined
                                                        },
                                                        children: "Liquidity provider"
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 5854,
                                                        columnNumber: 21
                                                    }, undefined)
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 5833,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                    className: "text-wrapper-9",
                                                    children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 5878,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5821,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-15",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-16",
                                                    style: {
                                                        gap: screenWidth < 375 ? "3.87px" : screenWidth >= 375 && screenWidth < 414 ? "4.46px" : screenWidth >= 414 && screenWidth < 500 ? "4.92px" : undefined,
                                                        padding: screenWidth < 375 ? "1.55px 0px" : screenWidth >= 375 && screenWidth < 414 ? "1.78px 0px" : screenWidth >= 414 && screenWidth < 500 ? "1.97px 0px" : undefined
                                                    },
                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "text-wrapper-10",
                                                        style: {
                                                            fontSize: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "16.1px" : screenWidth >= 414 && screenWidth < 500 ? "17.7px" : undefined,
                                                            letterSpacing: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "0.08px" : screenWidth >= 414 && screenWidth < 500 ? "0.09px" : undefined
                                                        },
                                                        children: "Comprehensive Financial Services"
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 5911,
                                                        columnNumber: 21
                                                    }, undefined)
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 5890,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                    className: "text-wrapper-9",
                                                    children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 5935,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5889,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-17",
                                            style: {
                                                gap: screenWidth < 375 ? "2px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "3px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-18",
                                                    style: {
                                                        gap: screenWidth < 375 ? "3.87px" : screenWidth >= 375 && screenWidth < 414 ? "4.46px" : screenWidth >= 414 && screenWidth < 500 ? "4.92px" : undefined,
                                                        padding: screenWidth < 375 ? "1.55px 0px" : screenWidth >= 375 && screenWidth < 414 ? "1.78px 0px" : screenWidth >= 414 && screenWidth < 500 ? "1.97px 0px" : undefined
                                                    },
                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "text-wrapper-11",
                                                        style: {
                                                            fontSize: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "16.1px" : screenWidth >= 414 && screenWidth < 500 ? "17.7px" : undefined,
                                                            letterSpacing: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "0.08px" : screenWidth >= 414 && screenWidth < 500 ? "0.09px" : undefined
                                                        },
                                                        children: "Technical Expertise and Optimization"
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 5979,
                                                        columnNumber: 21
                                                    }, undefined)
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 5958,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                    className: "text-wrapper-9",
                                                    children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 6003,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 5946,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true),
                                screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "frame-19",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-wrapper-12",
                                            children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 6018,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-wrapper-13",
                                            children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 6028,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-wrapper-14",
                                            children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 6037,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-20",
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "text-wrapper-15",
                                                children: "Liquidity provider"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6048,
                                                columnNumber: 19
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 6047,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-21",
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "text-wrapper-15",
                                                children: "Comprehensive Financial Services"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6052,
                                                columnNumber: 19
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 6051,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-22",
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "text-wrapper-15",
                                                children: "Technical Expertise and Optimization"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6058,
                                                columnNumber: 19
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 6057,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 6017,
                                    columnNumber: 15
                                }, undefined),
                                (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "overlap-5",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "505px" : screenWidth >= 992 && screenWidth < 1366 ? "671px" : screenWidth >= 1366 && screenWidth < 1920 ? "926px" : screenWidth >= 1920 ? "1008px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "-299px" : screenWidth >= 992 && screenWidth < 1366 ? "-396px" : screenWidth >= 1366 && screenWidth < 1920 ? "-548px" : screenWidth >= 1920 ? "-596px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "593px" : screenWidth >= 992 && screenWidth < 1366 ? "788px" : screenWidth >= 1366 && screenWidth < 1920 ? "1088px" : screenWidth >= 1920 ? "1184px" : undefined
                                            },
                                            children: [
                                                (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "group-11",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "478px" : screenWidth >= 992 && screenWidth < 1366 ? "635px" : screenWidth >= 1366 && screenWidth < 1920 ? "877px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "27px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "50px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "556px" : screenWidth >= 992 && screenWidth < 1366 ? "738px" : screenWidth >= 1366 && screenWidth < 1920 ? "1019px" : undefined
                                                            },
                                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "overlap-group-3",
                                                                style: {
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "478px" : screenWidth >= 992 && screenWidth < 1366 ? "635px" : screenWidth >= 1366 && screenWidth < 1920 ? "877px" : undefined
                                                                },
                                                                children: [
                                                                    (screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite31.LogoToriiiWhite31), {
                                                                        className: `${screenWidth >= 768 && screenWidth < 992 && "class-5"} ${screenWidth >= 992 && screenWidth < 1366 && "class-6"}`
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6153,
                                                                        columnNumber: 29
                                                                    }, undefined),
                                                                    screenWidth >= 1366 && screenWidth < 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite33.LogoToriiiWhite33), {
                                                                        className: "logo-toriii-white-3-3"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6159,
                                                                        columnNumber: 29
                                                                    }, undefined),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite.LogoToriiiWhite), {
                                                                        className: `${screenWidth >= 768 && screenWidth < 992 && "class-7"} ${screenWidth >= 992 && screenWidth < 1366 && "class-8"} ${screenWidth >= 1366 && screenWidth < 1920 && "class-9"}`,
                                                                        logoToriiiWhite: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/logo-toriii-white-6-1.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/logo-toriii-white-6-2.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/logo-toriii-white-6-3.svg" : undefined
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6162,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 6138,
                                                                columnNumber: 25
                                                            }, undefined)
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6109,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "frame-23",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "281px" : screenWidth >= 992 && screenWidth < 1366 ? "373px" : screenWidth >= 1366 && screenWidth < 1920 ? "514px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "520px" : screenWidth >= 992 && screenWidth < 1366 ? "691px" : screenWidth >= 1366 && screenWidth < 1920 ? "954px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "128px" : screenWidth >= 992 && screenWidth < 1366 ? "170px" : screenWidth >= 1366 && screenWidth < 1920 ? "234px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "73px" : screenWidth >= 992 && screenWidth < 1366 ? "97px" : screenWidth >= 1366 && screenWidth < 1920 ? "134px" : undefined
                                                            },
                                                            alt: "Frame",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/frame-39921.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/frame-39921-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/frame-39921-2.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6177,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "group-12",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "81px" : screenWidth >= 992 && screenWidth < 1366 ? "108px" : screenWidth >= 1366 && screenWidth < 1920 ? "149px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "299px" : screenWidth >= 992 && screenWidth < 1366 ? "397px" : screenWidth >= 1366 && screenWidth < 1920 ? "548px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "131px" : screenWidth >= 992 && screenWidth < 1366 ? "174px" : screenWidth >= 1366 && screenWidth < 1920 ? "241px" : undefined
                                                            },
                                                            alt: "Group",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/group-39-5@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/group-39-7@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-39-9@2x.png" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6225,
                                                            columnNumber: 23
                                                        }, undefined)
                                                    ]
                                                }, void 0, true),
                                                screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "overlap-6",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "group-13",
                                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "overlap-group-4",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite34.LogoToriiiWhite34), {
                                                                        className: "logo-toriii-white-3-4"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6271,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite.LogoToriiiWhite), {
                                                                        className: "logo-toriii-white-6",
                                                                        logoToriiiWhite: "https://c.animaapp.com/hycCuBbS/img/logo-toriii-white-6-4.svg"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6272,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 6270,
                                                                columnNumber: 25
                                                            }, undefined)
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6269,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "frame-24",
                                                            alt: "Frame",
                                                            src: "https://c.animaapp.com/hycCuBbS/img/frame-39921-3.svg"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6279,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "group-14",
                                                            alt: "Group",
                                                            src: "https://c.animaapp.com/hycCuBbS/img/group-39-11@2x.png"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6285,
                                                            columnNumber: 23
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 6268,
                                                    columnNumber: 21
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 6070,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "overlap-7",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "421px" : screenWidth >= 992 && screenWidth < 1366 ? "560px" : screenWidth >= 1366 && screenWidth < 1920 ? "773px" : screenWidth >= 1920 ? "841px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "301px" : screenWidth >= 992 && screenWidth < 1366 ? "401px" : screenWidth >= 1366 && screenWidth < 1920 ? "553px" : screenWidth >= 1920 ? "602px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "55px" : screenWidth >= 992 && screenWidth < 1366 ? "73px" : screenWidth >= 1366 && screenWidth < 1920 ? "100px" : screenWidth >= 1920 ? "109px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "371px" : screenWidth >= 992 && screenWidth < 1366 ? "492px" : screenWidth >= 1366 && screenWidth < 1920 ? "680px" : screenWidth >= 1920 ? "740px" : undefined
                                            },
                                            children: [
                                                (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "frame-25",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "375px" : screenWidth >= 992 && screenWidth < 1366 ? "498px" : screenWidth >= 1366 && screenWidth < 1920 ? "687px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "22px" : screenWidth >= 992 && screenWidth < 1366 ? "29px" : screenWidth >= 1366 && screenWidth < 1920 ? "40px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "22px" : screenWidth >= 992 && screenWidth < 1366 ? "29px" : screenWidth >= 1366 && screenWidth < 1920 ? "40px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "327px" : screenWidth >= 992 && screenWidth < 1366 ? "434px" : screenWidth >= 1366 && screenWidth < 1920 ? "599px" : undefined
                                                            },
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                    className: "text-wrapper-16",
                                                                    style: {
                                                                        fontSize: screenWidth >= 768 && screenWidth < 992 ? "10px" : screenWidth >= 992 && screenWidth < 1366 ? "13.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "18.4px" : undefined,
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "75px" : screenWidth >= 992 && screenWidth < 1366 ? "100px" : screenWidth >= 1366 && screenWidth < 1920 ? "140px" : undefined,
                                                                        letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.05px" : screenWidth >= 992 && screenWidth < 1366 ? "0.07px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.09px" : undefined,
                                                                        lineHeight: screenWidth >= 768 && screenWidth < 992 ? "15.0px" : screenWidth >= 992 && screenWidth < 1366 ? "20.0px" : screenWidth >= 1366 && screenWidth < 1920 ? "27.6px" : undefined,
                                                                        top: screenWidth >= 768 && screenWidth < 992 ? "26px" : screenWidth >= 992 && screenWidth < 1366 ? "34px" : screenWidth >= 1366 && screenWidth < 1920 ? "47px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "326px" : screenWidth >= 992 && screenWidth < 1366 ? "433px" : screenWidth >= 1366 && screenWidth < 1920 ? "598px" : undefined
                                                                    },
                                                                    children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6380,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                    className: "text-wrapper-17",
                                                                    style: {
                                                                        fontSize: screenWidth >= 768 && screenWidth < 992 ? "10px" : screenWidth >= 992 && screenWidth < 1366 ? "13.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "18.4px" : undefined,
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "75px" : screenWidth >= 992 && screenWidth < 1366 ? "100px" : screenWidth >= 1366 && screenWidth < 1920 ? "140px" : undefined,
                                                                        letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.05px" : screenWidth >= 992 && screenWidth < 1366 ? "0.07px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.09px" : undefined,
                                                                        lineHeight: screenWidth >= 768 && screenWidth < 992 ? "15.0px" : screenWidth >= 992 && screenWidth < 1366 ? "20.0px" : screenWidth >= 1366 && screenWidth < 1920 ? "27.6px" : undefined,
                                                                        top: screenWidth >= 768 && screenWidth < 992 ? "162px" : screenWidth >= 992 && screenWidth < 1366 ? "216px" : screenWidth >= 1366 && screenWidth < 1920 ? "298px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "326px" : screenWidth >= 992 && screenWidth < 1366 ? "433px" : screenWidth >= 1366 && screenWidth < 1920 ? "598px" : undefined
                                                                    },
                                                                    children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6443,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                    className: "text-wrapper-18",
                                                                    style: {
                                                                        fontSize: screenWidth >= 768 && screenWidth < 992 ? "10px" : screenWidth >= 992 && screenWidth < 1366 ? "13.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "18.4px" : undefined,
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "75px" : screenWidth >= 992 && screenWidth < 1366 ? "100px" : screenWidth >= 1366 && screenWidth < 1920 ? "140px" : undefined,
                                                                        letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.05px" : screenWidth >= 992 && screenWidth < 1366 ? "0.07px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.09px" : undefined,
                                                                        lineHeight: screenWidth >= 768 && screenWidth < 992 ? "15.0px" : screenWidth >= 992 && screenWidth < 1366 ? "20.0px" : screenWidth >= 1366 && screenWidth < 1920 ? "27.6px" : undefined,
                                                                        top: screenWidth >= 768 && screenWidth < 992 ? "299px" : screenWidth >= 992 && screenWidth < 1366 ? "397px" : screenWidth >= 1366 && screenWidth < 1920 ? "548px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "326px" : screenWidth >= 992 && screenWidth < 1366 ? "433px" : screenWidth >= 1366 && screenWidth < 1920 ? "598px" : undefined
                                                                    },
                                                                    children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6505,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                    className: "frame-26",
                                                                    style: {
                                                                        gap: screenWidth >= 768 && screenWidth < 992 ? "5.01px" : screenWidth >= 992 && screenWidth < 1366 ? "6.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "9.19px" : undefined,
                                                                        padding: screenWidth >= 768 && screenWidth < 992 ? "2px 0px" : screenWidth >= 992 && screenWidth < 1366 ? "2.66px 0px" : screenWidth >= 1366 && screenWidth < 1920 ? "3.67px 0px" : undefined
                                                                    },
                                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                        className: "text-wrapper-19",
                                                                        style: {
                                                                            fontSize: screenWidth >= 768 && screenWidth < 992 ? "18px" : screenWidth >= 992 && screenWidth < 1366 ? "24px" : screenWidth >= 1366 && screenWidth < 1920 ? "33.1px" : undefined,
                                                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.09px" : screenWidth >= 992 && screenWidth < 1366 ? "0.12px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.17px" : undefined
                                                                        },
                                                                        children: "Liquidity provider"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6589,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6568,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                    className: "frame-27",
                                                                    style: {
                                                                        gap: screenWidth >= 768 && screenWidth < 992 ? "5.01px" : screenWidth >= 992 && screenWidth < 1366 ? "6.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "9.19px" : undefined,
                                                                        padding: screenWidth >= 768 && screenWidth < 992 ? "2px 0px" : screenWidth >= 992 && screenWidth < 1366 ? "2.66px 0px" : screenWidth >= 1366 && screenWidth < 1920 ? "3.67px 0px" : undefined,
                                                                        top: screenWidth >= 768 && screenWidth < 992 ? "140px" : screenWidth >= 992 && screenWidth < 1366 ? "186px" : screenWidth >= 1366 && screenWidth < 1920 ? "256px" : undefined
                                                                    },
                                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                        className: "text-wrapper-20",
                                                                        style: {
                                                                            fontSize: screenWidth >= 768 && screenWidth < 992 ? "18px" : screenWidth >= 992 && screenWidth < 1366 ? "24px" : screenWidth >= 1366 && screenWidth < 1920 ? "33.1px" : undefined,
                                                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.09px" : screenWidth >= 992 && screenWidth < 1366 ? "0.12px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.17px" : undefined
                                                                        },
                                                                        children: "Comprehensive Financial Services"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6643,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6614,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                    className: "frame-28",
                                                                    style: {
                                                                        gap: screenWidth >= 768 && screenWidth < 992 ? "5.01px" : screenWidth >= 992 && screenWidth < 1366 ? "6.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "9.19px" : undefined,
                                                                        padding: screenWidth >= 768 && screenWidth < 992 ? "2px 0px" : screenWidth >= 992 && screenWidth < 1366 ? "2.66px 0px" : screenWidth >= 1366 && screenWidth < 1920 ? "3.67px 0px" : undefined,
                                                                        top: screenWidth >= 768 && screenWidth < 992 ? "275px" : screenWidth >= 992 && screenWidth < 1366 ? "365px" : screenWidth >= 1366 && screenWidth < 1920 ? "503px" : undefined
                                                                    },
                                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                        className: "text-wrapper-21",
                                                                        style: {
                                                                            fontSize: screenWidth >= 768 && screenWidth < 992 ? "18px" : screenWidth >= 992 && screenWidth < 1366 ? "24px" : screenWidth >= 1366 && screenWidth < 1920 ? "33.1px" : undefined,
                                                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.09px" : screenWidth >= 992 && screenWidth < 1366 ? "0.12px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.17px" : undefined
                                                                        },
                                                                        children: "Technical Expertise and Optimization"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6697,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6668,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6343,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "group-15",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "421px" : screenWidth >= 992 && screenWidth < 1366 ? "560px" : screenWidth >= 1366 && screenWidth < 1920 ? "773px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "371px" : screenWidth >= 992 && screenWidth < 1366 ? "492px" : screenWidth >= 1366 && screenWidth < 1920 ? "680px" : undefined
                                                            },
                                                            alt: "Group",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/group-63@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/group-63-1.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-63-2.png" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6723,
                                                            columnNumber: 23
                                                        }, undefined)
                                                    ]
                                                }, void 0, true),
                                                screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "overlap-8",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "frame-29",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                    className: "text-wrapper-22",
                                                                    children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6760,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                    className: "text-wrapper-23",
                                                                    children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6771,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                    className: "text-wrapper-24",
                                                                    children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6781,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                    className: "frame-30",
                                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                        className: "text-wrapper-25",
                                                                        children: "Liquidity provider"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6793,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6792,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                    className: "frame-31",
                                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                        className: "text-wrapper-25",
                                                                        children: "Comprehensive Financial Services"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6799,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6798,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                    className: "frame-32",
                                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                        className: "text-wrapper-25",
                                                                        children: "Technical Expertise and Optimization"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 6805,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6804,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6759,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "group-16",
                                                            alt: "Group",
                                                            src: "https://c.animaapp.com/hycCuBbS/img/group-63-3.png"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6811,
                                                            columnNumber: 23
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 6758,
                                                    columnNumber: 21
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 6294,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true)
                            ]
                        }, void 0, true, {
                            fileName: "src/screens/Element/Element.jsx",
                            lineNumber: 5752,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/screens/Element/Element.jsx",
                        lineNumber: 5680,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        id: "liquidity-section",
                        className: "page-liquidity",
                        style: {
                            alignSelf: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "stretch" : undefined,
                            display: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "flex" : screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "inline-flex" : undefined,
                            flexDirection: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "column" : undefined,
                            justifyContent: screenWidth >= 1920 || screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth < 375 ? "center" : undefined,
                            width: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "100%" : undefined
                        },
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "frame-33",
                            style: {
                                height: screenWidth < 375 ? "492.09px" : screenWidth >= 375 && screenWidth < 414 ? "568.11px" : screenWidth >= 414 && screenWidth < 500 ? "624.84px" : screenWidth >= 500 && screenWidth < 768 ? "761.14px" : screenWidth >= 768 && screenWidth < 992 ? "378.29px" : screenWidth >= 992 && screenWidth < 1366 ? "502.41px" : screenWidth >= 1366 && screenWidth < 1920 ? "693.66px" : screenWidth >= 1920 ? "755px" : undefined,
                                width: screenWidth < 375 ? "292.29px" : screenWidth >= 375 && screenWidth < 414 ? "337.17px" : screenWidth >= 414 && screenWidth < 500 ? "371.84px" : screenWidth >= 500 && screenWidth < 768 ? "452.3px" : screenWidth >= 768 && screenWidth < 992 ? "642.51px" : screenWidth >= 992 && screenWidth < 1366 ? "853.33px" : screenWidth >= 1366 && screenWidth < 1920 ? "1178.16px" : screenWidth >= 1920 ? "1282.35px" : undefined
                            },
                            children: [
                                (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "overlap-9",
                                    style: {
                                        height: screenWidth >= 768 && screenWidth < 992 ? "215px" : screenWidth >= 992 && screenWidth < 1366 ? "285px" : screenWidth >= 1366 && screenWidth < 1920 ? "394px" : screenWidth >= 1920 ? "429px" : undefined,
                                        left: screenWidth >= 768 && screenWidth < 992 ? "317px" : screenWidth >= 992 && screenWidth < 1366 ? "421px" : screenWidth >= 1366 && screenWidth < 1920 ? "582px" : screenWidth >= 1920 ? "633px" : undefined,
                                        top: screenWidth >= 768 && screenWidth < 992 ? "75px" : screenWidth >= 992 && screenWidth < 1366 ? "100px" : screenWidth >= 1366 && screenWidth < 1920 ? "138px" : screenWidth >= 1920 ? "150px" : undefined,
                                        width: screenWidth >= 768 && screenWidth < 992 ? "315px" : screenWidth >= 992 && screenWidth < 1366 ? "419px" : screenWidth >= 1366 && screenWidth < 1920 ? "578px" : screenWidth >= 1920 ? "629px" : undefined
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-34",
                                            style: {
                                                gap: screenWidth >= 768 && screenWidth < 992 ? "72px 27.57px" : screenWidth >= 992 && screenWidth < 1366 ? "72px 36.61px" : screenWidth >= 1366 && screenWidth < 1920 ? "72px 50.55px" : screenWidth >= 1920 ? "72px 55.02px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "6px" : screenWidth >= 992 && screenWidth < 1366 ? "8px" : screenWidth >= 1366 && screenWidth < 1920 ? "11px" : screenWidth >= 1920 ? "12px" : undefined,
                                                padding: screenWidth >= 768 && screenWidth < 992 ? "27.06px 9.52px" : screenWidth >= 992 && screenWidth < 1366 ? "35.93px 12.64px" : screenWidth >= 1366 && screenWidth < 1920 ? "49.61px 17.46px" : screenWidth >= 1920 ? "54px 19px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "10px" : screenWidth >= 992 && screenWidth < 1366 ? "13px" : screenWidth >= 1366 && screenWidth < 1920 ? "18px" : screenWidth >= 1920 ? "20px" : undefined
                                            },
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-35",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "142px" : screenWidth >= 992 && screenWidth < 1366 ? "188.6px" : screenWidth >= 1366 && screenWidth < 1920 ? "260.38px" : screenWidth >= 1920 ? "283.41px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "280.11px" : screenWidth >= 992 && screenWidth < 1366 ? "372.02px" : screenWidth >= 1366 && screenWidth < 1920 ? "513.64px" : screenWidth >= 1920 ? "559.06px" : undefined
                                                },
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-36",
                                                        style: {
                                                            gap: screenWidth >= 768 && screenWidth < 992 ? "27.57px" : screenWidth >= 992 && screenWidth < 1366 ? "36.61px" : screenWidth >= 1366 && screenWidth < 1920 ? "50.55px" : screenWidth >= 1920 ? "55.02px" : undefined,
                                                            left: screenWidth >= 768 && screenWidth < 992 ? "17px" : screenWidth >= 992 && screenWidth < 1366 ? "23px" : screenWidth >= 1366 && screenWidth < 1920 ? "32px" : screenWidth >= 1920 ? "34px" : undefined
                                                        },
                                                        children: [
                                                            screenWidth >= 768 && screenWidth < 992 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite5.LogoBinanceWhite5), {
                                                                        className: "logo-binance-white"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 7061,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite5.LogoGateioWhite5), {
                                                                        className: "logo-gateio-white"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 7062,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                ]
                                                            }, void 0, true),
                                                            screenWidth >= 992 && screenWidth < 1366 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite6.LogoBinanceWhite6), {
                                                                        className: "logo-binance-white-6"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 7068,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite6.LogoGateioWhite6), {
                                                                        className: "logo-gateio-white-6"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 7069,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                ]
                                                            }, void 0, true),
                                                            screenWidth >= 1366 && screenWidth < 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite7.LogoBinanceWhite7), {
                                                                        className: "logo-binance-white-7"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 7075,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite7.LogoGateioWhite7), {
                                                                        className: "logo-gateio-white-7"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 7076,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                ]
                                                            }, void 0, true),
                                                            screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite8.LogoBinanceWhite8), {
                                                                        className: "logo-binance-white-8"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 7082,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite8.LogoGateioWhite8), {
                                                                        className: "logo-gateio-white-8"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 7083,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                ]
                                                            }, void 0, true)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 7034,
                                                        columnNumber: 21
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-37",
                                                        style: {
                                                            gap: screenWidth >= 768 && screenWidth < 992 ? "27.57px" : screenWidth >= 992 && screenWidth < 1366 ? "36.61px" : screenWidth >= 1366 && screenWidth < 1920 ? "50.55px" : screenWidth >= 1920 ? "55.02px" : undefined,
                                                            left: screenWidth >= 768 && screenWidth < 992 ? "28px" : screenWidth >= 992 && screenWidth < 1366 ? "37px" : screenWidth >= 1366 && screenWidth < 1920 ? "51px" : screenWidth >= 1920 ? "55px" : undefined,
                                                            top: screenWidth >= 768 && screenWidth < 992 ? "59px" : screenWidth >= 992 && screenWidth < 1366 ? "79px" : screenWidth >= 1366 && screenWidth < 1920 ? "109px" : screenWidth >= 1920 ? "118px" : undefined
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "logo-max-white",
                                                                style: {
                                                                    height: screenWidth >= 992 && screenWidth < 1366 ? "30.92px" : screenWidth >= 1366 && screenWidth < 1920 ? "42.69px" : screenWidth >= 1920 ? "46.47px" : screenWidth >= 768 && screenWidth < 992 ? "23.28px" : undefined,
                                                                    width: screenWidth >= 992 && screenWidth < 1366 ? "144.71px" : screenWidth >= 1366 && screenWidth < 1920 ? "199.79px" : screenWidth >= 1920 ? "217.46px" : screenWidth >= 768 && screenWidth < 992 ? "108.96px" : undefined
                                                                },
                                                                alt: "Logo max white",
                                                                src: screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/logo-max-white-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/logo-max-white-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/logo-max-white-7.svg" : screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/logo-max-white-4.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7123,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            screenWidth >= 768 && screenWidth < 992 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite3.LogoBitmexWhite3), {
                                                                className: "logo-bitmex-white"
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7162,
                                                                columnNumber: 25
                                                            }, undefined),
                                                            screenWidth >= 992 && screenWidth < 1366 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite6.LogoBitmexWhite6), {
                                                                className: "logo-bitmex-white-6"
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7166,
                                                                columnNumber: 25
                                                            }, undefined),
                                                            screenWidth >= 1366 && screenWidth < 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite7.LogoBitmexWhite7), {
                                                                className: "logo-bitmex-white-7"
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7170,
                                                                columnNumber: 25
                                                            }, undefined),
                                                            screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite8.LogoBitmexWhite8), {
                                                                className: "logo-bitmex-white-8"
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7174,
                                                                columnNumber: 25
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 7088,
                                                        columnNumber: 21
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-38",
                                                        style: {
                                                            gap: screenWidth >= 768 && screenWidth < 992 ? "17.54px" : screenWidth >= 992 && screenWidth < 1366 ? "23.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "32.16px" : screenWidth >= 1920 ? "35px" : undefined,
                                                            left: screenWidth >= 768 && screenWidth < 992 ? "5px" : screenWidth >= 992 && screenWidth < 1366 ? "6px" : screenWidth >= 1366 && screenWidth < 1920 ? "8px" : screenWidth >= 1920 ? "9px" : undefined,
                                                            top: screenWidth >= 768 && screenWidth < 992 ? "119px" : screenWidth >= 992 && screenWidth < 1366 ? "158px" : screenWidth >= 1366 && screenWidth < 1920 ? "218px" : screenWidth >= 1920 ? "237px" : undefined
                                                        },
                                                        children: [
                                                            screenWidth >= 768 && screenWidth < 992 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite2.LogoAceWhite2), {
                                                                className: "logo-ace-white"
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7214,
                                                                columnNumber: 25
                                                            }, undefined),
                                                            screenWidth >= 992 && screenWidth < 1366 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite6.LogoAceWhite6), {
                                                                className: "logo-ace-white-6"
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7218,
                                                                columnNumber: 25
                                                            }, undefined),
                                                            (screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoWooxWhite1.LogoWooxWhite1), {
                                                                className: `${screenWidth >= 768 && screenWidth < 992 && "class-10"} ${screenWidth >= 992 && screenWidth < 1366 && "class-11"}`
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7223,
                                                                columnNumber: 25
                                                            }, undefined),
                                                            screenWidth >= 992 && screenWidth < 1366 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite3.LogoBitoproWhite3), {
                                                                className: "logo-bitopro-white"
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7229,
                                                                columnNumber: 25
                                                            }, undefined),
                                                            (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite8.LogoAceWhite8), {
                                                                        className: `${screenWidth >= 1366 && screenWidth < 1920 && "class-12"} ${screenWidth >= 1920 && "class-13"}`
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 7235,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoWooxWhite7.LogoWooxWhite7), {
                                                                        className: `${screenWidth >= 1920 && "class-14"} ${screenWidth >= 1366 && screenWidth < 1920 && "class-15"}`
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 7238,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                ]
                                                            }, void 0, true),
                                                            (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 768 && screenWidth < 992) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite5.LogoBitoproWhite5), {
                                                                className: `${screenWidth >= 768 && screenWidth < 992 && "class-16"} ${screenWidth >= 1366 && screenWidth < 1920 && "class-17"}`
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7246,
                                                                columnNumber: 25
                                                            }, undefined),
                                                            screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite8.LogoBitoproWhite8), {
                                                                className: "logo-bitopro-white-8"
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7252,
                                                                columnNumber: 25
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 7178,
                                                        columnNumber: 21
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 7009,
                                                columnNumber: 19
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 6964,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "group-17",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "215px" : screenWidth >= 992 && screenWidth < 1366 ? "285px" : screenWidth >= 1366 && screenWidth < 1920 ? "394px" : screenWidth >= 1920 ? "429px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "315px" : screenWidth >= 992 && screenWidth < 1366 ? "419px" : screenWidth >= 1366 && screenWidth < 1920 ? "578px" : screenWidth >= 1920 ? "629px" : undefined
                                            },
                                            alt: "Group",
                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/group-51-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/group-51-5@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-51-6.png" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-51-7.png" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 7258,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 6919,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                    className: "frame-39",
                                    style: {
                                        height: screenWidth >= 768 && screenWidth < 992 ? "53px" : screenWidth >= 992 && screenWidth < 1366 ? "70px" : screenWidth >= 1366 && screenWidth < 1920 ? "97px" : screenWidth >= 1920 ? "106px" : screenWidth < 375 ? "118px" : screenWidth >= 375 && screenWidth < 414 ? "136px" : screenWidth >= 414 && screenWidth < 500 ? "150px" : screenWidth >= 500 && screenWidth < 768 ? "171px" : undefined,
                                        left: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "0" : screenWidth < 375 ? "220px" : screenWidth >= 375 && screenWidth < 414 ? "252px" : screenWidth >= 414 && screenWidth < 500 ? "281px" : screenWidth >= 500 && screenWidth < 768 ? "342px" : undefined,
                                        top: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "0" : screenWidth < 375 ? "47px" : screenWidth >= 375 && screenWidth < 414 ? "54px" : screenWidth >= 414 && screenWidth < 500 ? "55px" : screenWidth >= 500 && screenWidth < 768 ? "82px" : undefined,
                                        width: screenWidth >= 768 && screenWidth < 992 ? "142px" : screenWidth >= 992 && screenWidth < 1366 ? "188px" : screenWidth >= 1366 && screenWidth < 1920 ? "260px" : screenWidth >= 1920 ? "283px" : screenWidth < 375 ? "44px" : screenWidth >= 375 && screenWidth < 414 ? "51px" : screenWidth >= 414 && screenWidth < 500 ? "56px" : screenWidth >= 500 && screenWidth < 768 ? "64px" : undefined
                                    },
                                    alt: "Frame",
                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/frame-39912-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/frame-39912-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/frame-39912-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/frame-39912-7.svg" : screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/frame-39912.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/frame-39912-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/frame-39912-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/frame-39912-3.svg" : undefined
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 7298,
                                    columnNumber: 13
                                }, undefined),
                                (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-40",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "53px" : screenWidth >= 992 && screenWidth < 1366 ? "71px" : screenWidth >= 1366 && screenWidth < 1920 ? "98px" : screenWidth >= 1920 ? "106px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "159px" : screenWidth >= 992 && screenWidth < 1366 ? "212px" : screenWidth >= 1366 && screenWidth < 1920 ? "292px" : screenWidth >= 1920 ? "318px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "474px" : screenWidth >= 992 && screenWidth < 1366 ? "629px" : screenWidth >= 1366 && screenWidth < 1920 ? "868px" : screenWidth >= 1920 ? "945px" : undefined
                                            },
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "overlap-group-5",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "53px" : screenWidth >= 992 && screenWidth < 1366 ? "71px" : screenWidth >= 1366 && screenWidth < 1920 ? "98px" : screenWidth >= 1920 ? "106px" : undefined
                                                },
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "group-18",
                                                        style: {
                                                            backgroundImage: screenWidth >= 768 && screenWidth < 992 ? "url(https://c.animaapp.com/hycCuBbS/img/vector-14-4.svg)" : screenWidth >= 992 && screenWidth < 1366 ? "url(https://c.animaapp.com/hycCuBbS/img/vector-14-5.svg)" : screenWidth >= 1366 && screenWidth < 1920 ? "url(https://c.animaapp.com/hycCuBbS/img/vector-14-6.svg)" : screenWidth >= 1920 ? "url(https://c.animaapp.com/hycCuBbS/img/vector-14-7.svg)" : undefined,
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "53px" : screenWidth >= 992 && screenWidth < 1366 ? "70px" : screenWidth >= 1366 && screenWidth < 1920 ? "97px" : screenWidth >= 1920 ? "106px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "474px" : screenWidth >= 992 && screenWidth < 1366 ? "629px" : screenWidth >= 1366 && screenWidth < 1920 ? "868px" : screenWidth >= 1920 ? "945px" : undefined
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "RL",
                                                                style: {
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "6px" : screenWidth >= 992 && screenWidth < 1366 ? "8px" : screenWidth >= 1366 && screenWidth < 1920 ? "11px" : screenWidth >= 1920 ? "12px" : undefined,
                                                                    left: screenWidth >= 768 && screenWidth < 992 ? "9px" : screenWidth >= 992 && screenWidth < 1366 ? "12px" : screenWidth >= 1366 && screenWidth < 1920 ? "17px" : screenWidth >= 1920 ? "18px" : undefined,
                                                                    top: screenWidth >= 768 && screenWidth < 992 ? "5px" : screenWidth >= 992 && screenWidth < 1366 ? "6px" : screenWidth >= 1366 && screenWidth < 1920 ? "8px" : screenWidth >= 1920 ? "9px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 ? "11px" : screenWidth >= 992 && screenWidth < 1366 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 ? "20px" : screenWidth >= 1920 ? "22px" : undefined
                                                                },
                                                                alt: "Rl",
                                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/rl-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/rl-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/rl-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/rl-7.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7480,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "ellipse-36",
                                                                style: {
                                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0.88px/0.97px" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px/1.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "1.61px/1.78px" : screenWidth >= 1920 ? "1.75px/1.94px" : undefined,
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                                    left: screenWidth >= 768 && screenWidth < 992 ? "467px" : screenWidth >= 992 && screenWidth < 1366 ? "620px" : screenWidth >= 1366 && screenWidth < 1920 ? "856px" : screenWidth >= 1920 ? "932px" : undefined,
                                                                    top: screenWidth >= 768 && screenWidth < 992 ? "39px" : screenWidth >= 992 && screenWidth < 1366 ? "52px" : screenWidth >= 1366 && screenWidth < 1920 ? "71px" : screenWidth >= 1920 ? "78px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined
                                                                }
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7538,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "ellipse-37",
                                                                style: {
                                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0.88px/0.97px" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px/1.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "1.61px/1.78px" : screenWidth >= 1920 ? "1.75px/1.94px" : undefined,
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                                    left: screenWidth >= 768 && screenWidth < 992 ? "463px" : screenWidth >= 992 && screenWidth < 1366 ? "614px" : screenWidth >= 1366 && screenWidth < 1920 ? "848px" : screenWidth >= 1920 ? "923px" : undefined,
                                                                    top: screenWidth >= 768 && screenWidth < 992 ? "44px" : screenWidth >= 992 && screenWidth < 1366 ? "58px" : screenWidth >= 1366 && screenWidth < 1920 ? "80px" : screenWidth >= 1920 ? "87px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined
                                                                }
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7592,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "ellipse-38",
                                                                style: {
                                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0.88px/0.97px" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px/1.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "1.61px/1.78px" : screenWidth >= 1920 ? "1.75px/1.94px" : undefined,
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                                    left: screenWidth >= 768 && screenWidth < 992 ? "457px" : screenWidth >= 992 && screenWidth < 1366 ? "607px" : screenWidth >= 1366 && screenWidth < 1920 ? "839px" : screenWidth >= 1920 ? "913px" : undefined,
                                                                    top: screenWidth >= 768 && screenWidth < 992 ? "44px" : screenWidth >= 992 && screenWidth < 1366 ? "58px" : screenWidth >= 1366 && screenWidth < 1920 ? "80px" : screenWidth >= 1920 ? "87px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined
                                                                }
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7646,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "ellipse-39",
                                                                style: {
                                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0.88px/0.97px" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px/1.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "1.61px/1.78px" : screenWidth >= 1920 ? "1.75px/1.94px" : undefined,
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                                    left: screenWidth >= 768 && screenWidth < 992 ? "466px" : screenWidth >= 992 && screenWidth < 1366 ? "619px" : screenWidth >= 1366 && screenWidth < 1920 ? "855px" : screenWidth >= 1920 ? "930px" : undefined,
                                                                    top: screenWidth >= 768 && screenWidth < 992 ? "34px" : screenWidth >= 992 && screenWidth < 1366 ? "45px" : screenWidth >= 1366 && screenWidth < 1920 ? "62px" : screenWidth >= 1920 ? "68px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined
                                                                }
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7700,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "ellipse-40",
                                                                style: {
                                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0.88px/0.97px" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px/1.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "1.61px/1.78px" : screenWidth >= 1920 ? "1.75px/1.94px" : undefined,
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                                    left: screenWidth >= 768 && screenWidth < 992 ? "462px" : screenWidth >= 992 && screenWidth < 1366 ? "613px" : screenWidth >= 1366 && screenWidth < 1920 ? "847px" : screenWidth >= 1920 ? "922px" : undefined,
                                                                    top: screenWidth >= 768 && screenWidth < 992 ? "39px" : screenWidth >= 992 && screenWidth < 1366 ? "52px" : screenWidth >= 1366 && screenWidth < 1920 ? "71px" : screenWidth >= 1920 ? "78px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined
                                                                }
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 7754,
                                                                columnNumber: 23
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 7445,
                                                        columnNumber: 21
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                        className: "vector-5",
                                                        style: {
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "30px" : screenWidth >= 992 && screenWidth < 1366 ? "40px" : screenWidth >= 1366 && screenWidth < 1920 ? "55px" : screenWidth >= 1920 ? "60px" : undefined,
                                                            top: screenWidth >= 768 && screenWidth < 992 ? "23px" : screenWidth >= 992 && screenWidth < 1366 ? "31px" : screenWidth >= 1366 && screenWidth < 1920 ? "42px" : screenWidth >= 1920 ? "46px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "231px" : screenWidth >= 992 && screenWidth < 1366 ? "307px" : screenWidth >= 1366 && screenWidth < 1920 ? "423px" : screenWidth >= 1920 ? "461px" : undefined
                                                        },
                                                        alt: "Vector",
                                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/vector-18@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/vector-21@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/vector-24@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/vector-27@2x.png" : undefined
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 7809,
                                                        columnNumber: 21
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 7430,
                                                columnNumber: 19
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 7395,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-41",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "66px" : screenWidth >= 992 && screenWidth < 1366 ? "88px" : screenWidth >= 1366 && screenWidth < 1920 ? "121px" : screenWidth >= 1920 ? "132px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "340px" : screenWidth >= 992 && screenWidth < 1366 ? "452px" : screenWidth >= 1366 && screenWidth < 1920 ? "624px" : screenWidth >= 1920 ? "679px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "310px" : screenWidth >= 992 && screenWidth < 1366 ? "412px" : screenWidth >= 1366 && screenWidth < 1920 ? "569px" : screenWidth >= 1920 ? "619px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "302px" : screenWidth >= 992 && screenWidth < 1366 ? "401px" : screenWidth >= 1366 && screenWidth < 1920 ? "554px" : screenWidth >= 1920 ? "603px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-42",
                                                    style: {
                                                        gap: screenWidth >= 768 && screenWidth < 992 ? "6.7px" : screenWidth >= 992 && screenWidth < 1366 ? "8.89px" : screenWidth >= 1366 && screenWidth < 1920 ? "12.28px" : screenWidth >= 1920 ? "13.36px" : undefined,
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "23px" : screenWidth >= 992 && screenWidth < 1366 ? "31px" : screenWidth >= 1366 && screenWidth < 1920 ? "43px" : screenWidth >= 1920 ? "47px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 ? "99px" : screenWidth >= 992 && screenWidth < 1366 ? "131px" : screenWidth >= 1366 && screenWidth < 1920 ? "181px" : screenWidth >= 1920 ? "197px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "41px" : screenWidth >= 992 && screenWidth < 1366 ? "54px" : screenWidth >= 1366 && screenWidth < 1920 ? "75px" : screenWidth >= 1920 ? "82px" : undefined
                                                    },
                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "text-wrapper-26",
                                                        style: {
                                                            fontSize: screenWidth >= 768 && screenWidth < 992 ? "26.8px" : screenWidth >= 992 && screenWidth < 1366 ? "35.6px" : screenWidth >= 1366 && screenWidth < 1920 ? "49.1px" : screenWidth >= 1920 ? "53.5px" : undefined,
                                                            marginBottom: screenWidth >= 768 && screenWidth < 992 ? "-1.11px" : screenWidth >= 992 && screenWidth < 1366 ? "-1.55px" : screenWidth >= 1366 && screenWidth < 1920 ? "-1.79px" : screenWidth >= 1920 ? "-1.78px" : undefined,
                                                            marginTop: screenWidth >= 768 && screenWidth < 992 ? "-2.45px" : screenWidth >= 992 && screenWidth < 1366 ? "-3.33px" : screenWidth >= 1366 && screenWidth < 1920 ? "-4.24px" : screenWidth >= 1920 ? "-4.45px" : undefined
                                                        },
                                                        children: "TORIII TECHNOLOGY CORP."
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 7949,
                                                        columnNumber: 21
                                                    }, undefined)
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 7904,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                    className: "text-wrapper-27",
                                                    style: {
                                                        fontSize: screenWidth >= 768 && screenWidth < 992 ? "4.8px" : screenWidth >= 992 && screenWidth < 1366 ? "6.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "8.7px" : screenWidth >= 1920 ? "9.5px" : undefined,
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "28px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "52px" : screenWidth >= 1920 ? "56px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 ? "99px" : screenWidth >= 992 && screenWidth < 1366 ? "131px" : screenWidth >= 1366 && screenWidth < 1920 ? "181px" : screenWidth >= 1920 ? "197px" : undefined,
                                                        letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.02px" : screenWidth >= 992 && screenWidth < 1366 ? "0.03px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.04px" : screenWidth >= 1920 ? "0.05px" : undefined,
                                                        lineHeight: screenWidth >= 768 && screenWidth < 992 ? "7.1px" : screenWidth >= 992 && screenWidth < 1366 ? "9.5px" : screenWidth >= 1366 && screenWidth < 1920 ? "13.1px" : screenWidth >= 1920 ? "14.2px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "204px" : screenWidth >= 992 && screenWidth < 1366 ? "270px" : screenWidth >= 1366 && screenWidth < 1920 ? "373px" : screenWidth >= 1920 ? "406px" : undefined
                                                    },
                                                    children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 7988,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "path",
                                                    style: {
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "64px" : screenWidth >= 992 && screenWidth < 1366 ? "85px" : screenWidth >= 1366 && screenWidth < 1920 ? "117px" : screenWidth >= 1920 ? "127px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "5px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "68px" : screenWidth >= 992 && screenWidth < 1366 ? "90px" : screenWidth >= 1366 && screenWidth < 1920 ? "124px" : screenWidth >= 1920 ? "135px" : undefined
                                                    },
                                                    alt: "Path",
                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/path7214-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/path7214-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/path7214-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/path7214-7.svg" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 8062,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 7859,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-43",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "293px" : screenWidth >= 992 && screenWidth < 1366 ? "389px" : screenWidth >= 1366 && screenWidth < 1920 ? "537px" : screenWidth >= 1920 ? "585px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "1px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "2px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "85px" : screenWidth >= 992 && screenWidth < 1366 ? "113px" : screenWidth >= 1366 && screenWidth < 1920 ? "156px" : screenWidth >= 1920 ? "170px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "297px" : screenWidth >= 992 && screenWidth < 1366 ? "394px" : screenWidth >= 1366 && screenWidth < 1920 ? "544px" : screenWidth >= 1920 ? "592px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "liquidity-providing",
                                                    style: {
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "84px" : screenWidth >= 992 && screenWidth < 1366 ? "112px" : screenWidth >= 1366 && screenWidth < 1920 ? "154px" : screenWidth >= 1920 ? "168px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "3px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "35px" : screenWidth >= 992 && screenWidth < 1366 ? "47px" : screenWidth >= 1366 && screenWidth < 1920 ? "65px" : screenWidth >= 1920 ? "70px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "274px" : screenWidth >= 992 && screenWidth < 1366 ? "364px" : screenWidth >= 1366 && screenWidth < 1920 ? "503px" : screenWidth >= 1920 ? "547px" : undefined
                                                    },
                                                    alt: "Liquidity providing",
                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/liquidity-providing.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/liquidity-providing-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/liquidity-providing-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/liquidity-providing-3.svg" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 8152,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "overlap-10",
                                                    style: {
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "152px" : screenWidth >= 992 && screenWidth < 1366 ? "202px" : screenWidth >= 1366 && screenWidth < 1920 ? "279px" : screenWidth >= 1920 ? "304px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "141px" : screenWidth >= 992 && screenWidth < 1366 ? "187px" : screenWidth >= 1366 && screenWidth < 1920 ? "258px" : screenWidth >= 1920 ? "281px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "297px" : screenWidth >= 992 && screenWidth < 1366 ? "394px" : screenWidth >= 1366 && screenWidth < 1920 ? "544px" : screenWidth >= 1920 ? "592px" : undefined
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "overlap-11",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "152px" : screenWidth >= 992 && screenWidth < 1366 ? "202px" : screenWidth >= 1366 && screenWidth < 1920 ? "279px" : screenWidth >= 1920 ? "304px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "297px" : screenWidth >= 992 && screenWidth < 1366 ? "394px" : screenWidth >= 1366 && screenWidth < 1920 ? "544px" : screenWidth >= 1920 ? "592px" : undefined
                                                            },
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "vector-6",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "55px" : screenWidth >= 992 && screenWidth < 1366 ? "73px" : screenWidth >= 1366 && screenWidth < 1920 ? "100px" : screenWidth >= 1920 ? "109px" : undefined,
                                                                        top: screenWidth >= 768 && screenWidth < 992 ? "84px" : screenWidth >= 992 && screenWidth < 1366 ? "111px" : screenWidth >= 1366 && screenWidth < 1920 ? "153px" : screenWidth >= 1920 ? "167px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "287px" : screenWidth >= 992 && screenWidth < 1366 ? "382px" : screenWidth >= 1366 && screenWidth < 1920 ? "527px" : screenWidth >= 1920 ? "574px" : undefined
                                                                    },
                                                                    alt: "Vector",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/vector-13-1.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/vector-13-2.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/vector-13-3.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/vector-13-4.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 8268,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "group-19",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "127px" : screenWidth >= 992 && screenWidth < 1366 ? "168px" : screenWidth >= 1366 && screenWidth < 1920 ? "232px" : screenWidth >= 1920 ? "253px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "48px" : screenWidth >= 992 && screenWidth < 1366 ? "64px" : screenWidth >= 1366 && screenWidth < 1920 ? "88px" : screenWidth >= 1920 ? "96px" : undefined
                                                                    },
                                                                    alt: "Group",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/group-57@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/group-57-1@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-57-2@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/group-57-3@2x.png" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 8316,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "vector-7",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "53px" : screenWidth >= 992 && screenWidth < 1366 ? "71px" : screenWidth >= 1366 && screenWidth < 1920 ? "97px" : screenWidth >= 1920 ? "106px" : undefined,
                                                                        left: screenWidth >= 768 && screenWidth < 992 ? "84px" : screenWidth >= 992 && screenWidth < 1366 ? "112px" : screenWidth >= 1366 && screenWidth < 1920 ? "154px" : screenWidth >= 1920 ? "168px" : undefined,
                                                                        top: screenWidth >= 768 && screenWidth < 992 ? "99px" : screenWidth >= 992 && screenWidth < 1366 ? "132px" : screenWidth >= 1366 && screenWidth < 1920 ? "182px" : screenWidth >= 1920 ? "198px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "212px" : screenWidth >= 992 && screenWidth < 1366 ? "282px" : screenWidth >= 1366 && screenWidth < 1920 ? "390px" : screenWidth >= 1920 ? "424px" : undefined
                                                                    },
                                                                    alt: "Vector",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/vector-19.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/vector-22.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/vector-25.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/vector-28.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 8354,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "vector-8",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "6px" : screenWidth >= 992 && screenWidth < 1366 ? "8px" : screenWidth >= 1366 && screenWidth < 1920 ? "11px" : screenWidth >= 1920 ? "12px" : undefined,
                                                                        left: screenWidth >= 768 && screenWidth < 992 ? "192px" : screenWidth >= 992 && screenWidth < 1366 ? "255px" : screenWidth >= 1366 && screenWidth < 1920 ? "352px" : screenWidth >= 1920 ? "383px" : undefined,
                                                                        top: screenWidth >= 768 && screenWidth < 992 ? "99px" : screenWidth >= 992 && screenWidth < 1366 ? "132px" : screenWidth >= 1366 && screenWidth < 1920 ? "182px" : screenWidth >= 1920 ? "198px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "102px" : screenWidth >= 992 && screenWidth < 1366 ? "136px" : screenWidth >= 1366 && screenWidth < 1920 ? "187px" : screenWidth >= 1920 ? "204px" : undefined
                                                                    },
                                                                    alt: "Vector",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/vector-10-1.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/vector-10-2.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/vector-10-3.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/vector-10-4.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 8412,
                                                                    columnNumber: 23
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8243,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "frame-44",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "20px" : screenWidth >= 992 && screenWidth < 1366 ? "27px" : screenWidth >= 1366 && screenWidth < 1920 ? "37px" : screenWidth >= 1920 ? "40px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "82px" : screenWidth >= 992 && screenWidth < 1366 ? "108px" : screenWidth >= 1366 && screenWidth < 1920 ? "150px" : screenWidth >= 1920 ? "163px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "54px" : screenWidth >= 992 && screenWidth < 1366 ? "71px" : screenWidth >= 1366 && screenWidth < 1920 ? "98px" : screenWidth >= 1920 ? "107px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "202px" : screenWidth >= 992 && screenWidth < 1366 ? "269px" : screenWidth >= 1366 && screenWidth < 1920 ? "371px" : screenWidth >= 1920 ? "404px" : undefined
                                                            },
                                                            alt: "Frame",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/frame-39913.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/frame-39913-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/frame-39913-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/frame-39913-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8471,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "img-5",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "40px" : screenWidth >= 992 && screenWidth < 1366 ? "53px" : screenWidth >= 1366 && screenWidth < 1920 ? "73px" : screenWidth >= 1920 ? "80px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "69px" : screenWidth >= 992 && screenWidth < 1366 ? "91px" : screenWidth >= 1366 && screenWidth < 1920 ? "126px" : screenWidth >= 1920 ? "137px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "218px" : screenWidth >= 992 && screenWidth < 1366 ? "289px" : screenWidth >= 1366 && screenWidth < 1920 ? "400px" : screenWidth >= 1920 ? "435px" : undefined
                                                            },
                                                            alt: "Element",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/----1.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/----1-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/----1-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/----1-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8529,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 8208,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-45",
                                                    style: {
                                                        gap: screenWidth >= 768 && screenWidth < 992 ? "14.03px" : screenWidth >= 992 && screenWidth < 1366 ? "18.63px" : screenWidth >= 1366 && screenWidth < 1920 ? "25.72px" : screenWidth >= 1920 ? "28px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "3px" : undefined
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "rectangle-5",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "65.14px" : screenWidth >= 992 && screenWidth < 1366 ? "86.51px" : screenWidth >= 1366 && screenWidth < 1920 ? "119.44px" : screenWidth >= 1920 ? "130px" : undefined
                                                            },
                                                            alt: "Rectangle",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/rectangle-46.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/rectangle-46-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/rectangle-46-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/rectangle-46-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8601,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-41",
                                                            style: {
                                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8639,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-42",
                                                            style: {
                                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8685,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-43",
                                                            style: {
                                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8731,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-44",
                                                            style: {
                                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8777,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-45",
                                                            style: {
                                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8823,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-46",
                                                            style: {
                                                                border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8869,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "rectangle-6",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "65.14px" : screenWidth >= 992 && screenWidth < 1366 ? "86.51px" : screenWidth >= 1366 && screenWidth < 1920 ? "119.44px" : screenWidth >= 1920 ? "130px" : undefined
                                                            },
                                                            alt: "Rectangle",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/rectangle-53.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/rectangle-53-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/rectangle-53-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/rectangle-53-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 8915,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 8578,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 8109,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true),
                                (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-46",
                                            style: {
                                                height: screenWidth < 375 ? "41px" : screenWidth >= 375 && screenWidth < 414 ? "47px" : screenWidth >= 414 && screenWidth < 500 ? "56px" : screenWidth >= 500 && screenWidth < 768 ? "72px" : undefined,
                                                left: screenWidth < 375 ? "220px" : screenWidth >= 375 && screenWidth < 414 ? "248px" : screenWidth >= 414 && screenWidth < 500 ? "275px" : screenWidth >= 500 && screenWidth < 768 ? "331px" : undefined,
                                                top: screenWidth < 375 ? "177px" : screenWidth >= 375 && screenWidth < 414 ? "204px" : screenWidth >= 414 && screenWidth < 500 ? "216px" : screenWidth >= 500 && screenWidth < 768 ? "270px" : undefined,
                                                width: screenWidth < 375 ? "48px" : screenWidth >= 375 && screenWidth < 414 ? "55px" : screenWidth >= 414 && screenWidth < 500 ? "66px" : screenWidth >= 500 && screenWidth < 768 ? "85px" : undefined
                                            },
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "overlap-group-6",
                                                style: {
                                                    backgroundImage: screenWidth < 375 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-1.svg)" : screenWidth >= 375 && screenWidth < 414 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-3.svg)" : screenWidth >= 414 && screenWidth < 500 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-5.svg)" : screenWidth >= 500 && screenWidth < 768 ? "url(https://c.animaapp.com/hycCuBbS/img/polygon-1-7.svg)" : undefined,
                                                    height: screenWidth < 375 ? "48px" : screenWidth >= 375 && screenWidth < 414 ? "55px" : screenWidth >= 414 && screenWidth < 500 ? "66px" : screenWidth >= 500 && screenWidth < 768 ? "85px" : undefined
                                                },
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                        className: "polygon",
                                                        style: {
                                                            height: screenWidth < 375 ? "40px" : screenWidth >= 375 && screenWidth < 414 ? "46px" : screenWidth >= 414 && screenWidth < 500 ? "55px" : screenWidth >= 500 && screenWidth < 768 ? "71px" : undefined,
                                                            left: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "7px" : undefined,
                                                            top: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "7px" : undefined,
                                                            width: screenWidth < 375 ? "40px" : screenWidth >= 375 && screenWidth < 414 ? "46px" : screenWidth >= 414 && screenWidth < 500 ? "55px" : screenWidth >= 500 && screenWidth < 768 ? "71px" : undefined
                                                        },
                                                        alt: "Polygon",
                                                        src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/polygon-2-1.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/polygon-2-3.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/polygon-2-5.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/polygon-2-7.svg" : undefined
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 9032,
                                                        columnNumber: 21
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                        className: "img-6",
                                                        style: {
                                                            height: screenWidth < 375 ? "18px" : screenWidth >= 375 && screenWidth < 414 ? "21px" : screenWidth >= 414 && screenWidth < 500 ? "25px" : screenWidth >= 500 && screenWidth < 768 ? "32px" : undefined,
                                                            left: screenWidth < 375 ? "22px" : screenWidth >= 375 && screenWidth < 414 ? "25px" : screenWidth >= 414 && screenWidth < 500 ? "30px" : screenWidth >= 500 && screenWidth < 768 ? "39px" : undefined,
                                                            top: screenWidth < 375 ? "13px" : screenWidth >= 375 && screenWidth < 414 ? "15px" : screenWidth >= 414 && screenWidth < 500 ? "18px" : screenWidth >= 500 && screenWidth < 768 ? "24px" : undefined,
                                                            width: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 ? "5px" : screenWidth >= 414 && screenWidth < 500 ? "6px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined
                                                        },
                                                        alt: "Img",
                                                        src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/--1.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/--3.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/--5.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/--7.svg" : undefined
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 9088,
                                                        columnNumber: 21
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 9007,
                                                columnNumber: 19
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 8962,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-47",
                                            style: {
                                                height: screenWidth < 375 ? "31px" : screenWidth >= 375 && screenWidth < 414 ? "36px" : screenWidth >= 414 && screenWidth < 500 ? "40px" : screenWidth >= 500 && screenWidth < 768 ? "48px" : undefined,
                                                left: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "5px" : screenWidth >= 414 && screenWidth < 500 ? "6px" : screenWidth >= 500 && screenWidth < 768 ? "7px" : undefined,
                                                width: screenWidth < 375 ? "278px" : screenWidth >= 375 && screenWidth < 414 ? "321px" : screenWidth >= 414 && screenWidth < 500 ? "354px" : screenWidth >= 500 && screenWidth < 768 ? "430px" : undefined
                                            },
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "overlap-12",
                                                style: {
                                                    height: screenWidth < 375 ? "31px" : screenWidth >= 375 && screenWidth < 414 ? "36px" : screenWidth >= 414 && screenWidth < 500 ? "40px" : screenWidth >= 500 && screenWidth < 768 ? "48px" : undefined
                                                },
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "group-20",
                                                        style: {
                                                            backgroundImage: screenWidth < 375 ? "url(https://c.animaapp.com/hycCuBbS/img/vector-14.svg)" : screenWidth >= 375 && screenWidth < 414 ? "url(https://c.animaapp.com/hycCuBbS/img/vector-14-1.svg)" : screenWidth >= 414 && screenWidth < 500 ? "url(https://c.animaapp.com/hycCuBbS/img/vector-14-2.svg)" : screenWidth >= 500 && screenWidth < 768 ? "url(https://c.animaapp.com/hycCuBbS/img/vector-14-3.svg)" : undefined,
                                                            height: screenWidth < 375 ? "31px" : screenWidth >= 375 && screenWidth < 414 ? "36px" : screenWidth >= 414 && screenWidth < 500 ? "40px" : screenWidth >= 500 && screenWidth < 768 ? "48px" : undefined,
                                                            width: screenWidth < 375 ? "278px" : screenWidth >= 375 && screenWidth < 414 ? "321px" : screenWidth >= 414 && screenWidth < 500 ? "354px" : screenWidth >= 500 && screenWidth < 768 ? "430px" : undefined
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "RL-2",
                                                                style: {
                                                                    height: screenWidth < 375 ? "3px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "4px" : screenWidth >= 500 && screenWidth < 768 ? "5px" : undefined,
                                                                    left: screenWidth < 375 ? "5px" : screenWidth >= 375 && screenWidth < 414 ? "6px" : screenWidth >= 414 && screenWidth < 500 ? "7px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                                                    top: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "3px" : screenWidth >= 500 && screenWidth < 768 ? "4px" : undefined,
                                                                    width: screenWidth < 375 ? "6px" : screenWidth >= 375 && screenWidth < 414 ? "7px" : screenWidth >= 414 && screenWidth < 500 ? "8px" : screenWidth >= 500 && screenWidth < 768 ? "10px" : undefined
                                                                },
                                                                alt: "Rl",
                                                                src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/rl.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/rl-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/rl-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/rl-3.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 9232,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "ellipse-47",
                                                                style: {
                                                                    borderRadius: screenWidth < 375 ? "0.52px/0.57px" : screenWidth >= 375 && screenWidth < 414 ? "0.59px/0.66px" : screenWidth >= 414 && screenWidth < 500 ? "0.66px/0.73px" : screenWidth >= 500 && screenWidth < 768 ? "0.8px/0.88px" : undefined,
                                                                    height: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                                    left: screenWidth < 375 ? "274px" : screenWidth >= 375 && screenWidth < 414 ? "316px" : screenWidth >= 414 && screenWidth < 500 ? "349px" : screenWidth >= 500 && screenWidth < 768 ? "424px" : undefined,
                                                                    top: screenWidth < 375 ? "23px" : screenWidth >= 375 && screenWidth < 414 ? "26px" : screenWidth >= 414 && screenWidth < 500 ? "29px" : screenWidth >= 500 && screenWidth < 768 ? "35px" : undefined,
                                                                    width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined
                                                                }
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 9287,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "ellipse-48",
                                                                style: {
                                                                    borderRadius: screenWidth < 375 ? "0.52px/0.57px" : screenWidth >= 375 && screenWidth < 414 ? "0.59px/0.66px" : screenWidth >= 414 && screenWidth < 500 ? "0.66px/0.73px" : screenWidth >= 500 && screenWidth < 768 ? "0.8px/0.88px" : undefined,
                                                                    height: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                                    left: screenWidth < 375 ? "271px" : screenWidth >= 375 && screenWidth < 414 ? "313px" : screenWidth >= 414 && screenWidth < 500 ? "345px" : screenWidth >= 500 && screenWidth < 768 ? "420px" : undefined,
                                                                    top: screenWidth < 375 ? "26px" : screenWidth >= 375 && screenWidth < 414 ? "30px" : screenWidth >= 414 && screenWidth < 500 ? "33px" : screenWidth >= 500 && screenWidth < 768 ? "40px" : undefined,
                                                                    width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined
                                                                }
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 9339,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "ellipse-49",
                                                                style: {
                                                                    borderRadius: screenWidth < 375 ? "0.52px/0.57px" : screenWidth >= 375 && screenWidth < 414 ? "0.59px/0.66px" : screenWidth >= 414 && screenWidth < 500 ? "0.66px/0.73px" : screenWidth >= 500 && screenWidth < 768 ? "0.8px/0.88px" : undefined,
                                                                    height: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                                    left: screenWidth < 375 ? "268px" : screenWidth >= 375 && screenWidth < 414 ? "310px" : screenWidth >= 414 && screenWidth < 500 ? "341px" : screenWidth >= 500 && screenWidth < 768 ? "415px" : undefined,
                                                                    top: screenWidth < 375 ? "26px" : screenWidth >= 375 && screenWidth < 414 ? "30px" : screenWidth >= 414 && screenWidth < 500 ? "33px" : screenWidth >= 500 && screenWidth < 768 ? "40px" : undefined,
                                                                    width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined
                                                                }
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 9391,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "ellipse-50",
                                                                style: {
                                                                    borderRadius: screenWidth < 375 ? "0.52px/0.57px" : screenWidth >= 375 && screenWidth < 414 ? "0.59px/0.66px" : screenWidth >= 414 && screenWidth < 500 ? "0.66px/0.73px" : screenWidth >= 500 && screenWidth < 768 ? "0.8px/0.88px" : undefined,
                                                                    height: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                                    left: screenWidth < 375 ? "273px" : screenWidth >= 375 && screenWidth < 414 ? "315px" : screenWidth >= 414 && screenWidth < 500 ? "348px" : screenWidth >= 500 && screenWidth < 768 ? "423px" : undefined,
                                                                    top: screenWidth < 375 ? "20px" : screenWidth >= 375 && screenWidth < 414 ? "23px" : screenWidth >= 414 && screenWidth < 500 ? "25px" : screenWidth >= 500 && screenWidth < 768 ? "31px" : undefined,
                                                                    width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined
                                                                }
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 9443,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "ellipse-51",
                                                                style: {
                                                                    borderRadius: screenWidth < 375 ? "0.52px/0.57px" : screenWidth >= 375 && screenWidth < 414 ? "0.59px/0.66px" : screenWidth >= 414 && screenWidth < 500 ? "0.66px/0.73px" : screenWidth >= 500 && screenWidth < 768 ? "0.8px/0.88px" : undefined,
                                                                    height: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                                    left: screenWidth < 375 ? "271px" : screenWidth >= 375 && screenWidth < 414 ? "313px" : screenWidth >= 414 && screenWidth < 500 ? "345px" : screenWidth >= 500 && screenWidth < 768 ? "419px" : undefined,
                                                                    top: screenWidth < 375 ? "23px" : screenWidth >= 375 && screenWidth < 414 ? "26px" : screenWidth >= 414 && screenWidth < 500 ? "29px" : screenWidth >= 500 && screenWidth < 768 ? "35px" : undefined,
                                                                    width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined
                                                                }
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 9495,
                                                                columnNumber: 23
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 9197,
                                                        columnNumber: 21
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                        className: "vector-9",
                                                        style: {
                                                            height: screenWidth < 375 ? "18px" : screenWidth >= 375 && screenWidth < 414 ? "20px" : screenWidth >= 414 && screenWidth < 500 ? "23px" : screenWidth >= 500 && screenWidth < 768 ? "27px" : undefined,
                                                            top: screenWidth < 375 ? "14px" : screenWidth >= 375 && screenWidth < 414 ? "16px" : screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "21px" : undefined,
                                                            width: screenWidth < 375 ? "135px" : screenWidth >= 375 && screenWidth < 414 ? "156px" : screenWidth >= 414 && screenWidth < 500 ? "172px" : screenWidth >= 500 && screenWidth < 768 ? "210px" : undefined
                                                        },
                                                        alt: "Vector",
                                                        src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/vector-3@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/vector-7@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/vector-11@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/vector-16@2x.png" : undefined
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 9548,
                                                        columnNumber: 21
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 9182,
                                                columnNumber: 19
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 9148,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-48",
                                            style: {
                                                height: screenWidth < 375 ? "64px" : screenWidth >= 375 && screenWidth < 414 ? "74px" : screenWidth >= 414 && screenWidth < 500 ? "81px" : screenWidth >= 500 && screenWidth < 768 ? "99px" : undefined,
                                                top: screenWidth < 375 ? "428px" : screenWidth >= 375 && screenWidth < 414 ? "494px" : screenWidth >= 414 && screenWidth < 500 ? "543px" : screenWidth >= 500 && screenWidth < 768 ? "662px" : undefined,
                                                width: screenWidth < 375 ? "292px" : screenWidth >= 375 && screenWidth < 414 ? "337px" : screenWidth >= 414 && screenWidth < 500 ? "372px" : screenWidth >= 500 && screenWidth < 768 ? "452px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-49",
                                                    style: {
                                                        gap: screenWidth < 375 ? "6.47px" : screenWidth >= 375 && screenWidth < 414 ? "7.47px" : screenWidth >= 414 && screenWidth < 500 ? "8.24px" : screenWidth >= 500 && screenWidth < 768 ? "10.02px" : undefined,
                                                        height: screenWidth < 375 ? "23px" : screenWidth >= 375 && screenWidth < 414 ? "26px" : screenWidth >= 414 && screenWidth < 500 ? "29px" : screenWidth >= 500 && screenWidth < 768 ? "35px" : undefined,
                                                        left: screenWidth < 375 ? "89px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "113px" : screenWidth >= 500 && screenWidth < 768 ? "138px" : undefined,
                                                        top: screenWidth < 375 ? "40px" : screenWidth >= 375 && screenWidth < 414 ? "46px" : screenWidth >= 414 && screenWidth < 500 ? "50px" : screenWidth >= 500 && screenWidth < 768 ? "61px" : undefined
                                                    },
                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "text-wrapper-28",
                                                        style: {
                                                            fontSize: screenWidth < 375 ? "25.9px" : screenWidth >= 375 && screenWidth < 414 ? "29.9px" : screenWidth >= 414 && screenWidth < 500 ? "32.9px" : screenWidth >= 500 && screenWidth < 768 ? "40.1px" : undefined,
                                                            marginBottom: screenWidth < 375 ? "-1.02px" : screenWidth >= 375 && screenWidth < 414 ? "-1.18px" : screenWidth >= 414 && screenWidth < 500 ? "-1.26px" : screenWidth >= 500 && screenWidth < 768 ? "-1.47px" : undefined,
                                                            marginTop: screenWidth < 375 ? "-2.32px" : screenWidth >= 375 && screenWidth < 414 ? "-2.68px" : screenWidth >= 414 && screenWidth < 500 ? "-2.91px" : screenWidth >= 500 && screenWidth < 768 ? "-3.47px" : undefined
                                                        },
                                                        children: "TORIII TECHNOLOGY CORP."
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 9678,
                                                        columnNumber: 21
                                                    }, undefined)
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 9633,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                    className: "text-wrapper-29",
                                                    style: {
                                                        fontSize: screenWidth < 375 ? "4.6px" : screenWidth >= 375 && screenWidth < 414 ? "5.3px" : screenWidth >= 414 && screenWidth < 500 ? "5.8px" : screenWidth >= 500 && screenWidth < 768 ? "7.1px" : undefined,
                                                        height: screenWidth < 375 ? "28px" : screenWidth >= 375 && screenWidth < 414 ? "32px" : screenWidth >= 414 && screenWidth < 500 ? "36px" : screenWidth >= 500 && screenWidth < 768 ? "44px" : undefined,
                                                        left: screenWidth < 375 ? "89px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "113px" : screenWidth >= 500 && screenWidth < 768 ? "138px" : undefined,
                                                        letterSpacing: screenWidth < 375 ? "0.02px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "0.03px" : screenWidth >= 500 && screenWidth < 768 ? "0.04px" : undefined,
                                                        lineHeight: screenWidth < 375 ? "6.9px" : screenWidth >= 375 && screenWidth < 414 ? "8.0px" : screenWidth >= 414 && screenWidth < 500 ? "8.8px" : screenWidth >= 500 && screenWidth < 768 ? "10.7px" : undefined,
                                                        top: screenWidth < 375 ? "0" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "-1px" : undefined,
                                                        width: screenWidth < 375 ? "197px" : screenWidth >= 375 && screenWidth < 414 ? "227px" : screenWidth >= 414 && screenWidth < 500 ? "250px" : screenWidth >= 500 && screenWidth < 768 ? "305px" : undefined
                                                    },
                                                    children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 9717,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "path-2",
                                                    style: {
                                                        height: screenWidth < 375 ? "54px" : screenWidth >= 375 && screenWidth < 414 ? "62px" : screenWidth >= 414 && screenWidth < 500 ? "68px" : screenWidth >= 500 && screenWidth < 768 ? "83px" : undefined,
                                                        left: screenWidth < 375 ? "13px" : screenWidth >= 375 && screenWidth < 414 ? "15px" : screenWidth >= 414 && screenWidth < 500 ? "16px" : screenWidth >= 500 && screenWidth < 768 ? "20px" : undefined,
                                                        top: screenWidth < 375 ? "5px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "6px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                                        width: screenWidth < 375 ? "57px" : screenWidth >= 375 && screenWidth < 414 ? "66px" : screenWidth >= 414 && screenWidth < 500 ? "72px" : screenWidth >= 500 && screenWidth < 768 ? "88px" : undefined
                                                    },
                                                    alt: "Path",
                                                    src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/path7214.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/path7214-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/path7214-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/path7214-3.svg" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 9798,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 9598,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "frame-50",
                                            style: {
                                                height: screenWidth < 375 ? "170px" : screenWidth >= 375 && screenWidth < 414 ? "196px" : screenWidth >= 414 && screenWidth < 500 ? "216px" : screenWidth >= 500 && screenWidth < 768 ? "263px" : undefined,
                                                left: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "19px" : screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "25px" : undefined,
                                                top: screenWidth < 375 ? "43px" : screenWidth >= 375 && screenWidth < 414 ? "51px" : screenWidth >= 414 && screenWidth < 500 ? "55px" : screenWidth >= 500 && screenWidth < 768 ? "69px" : undefined,
                                                width: screenWidth < 375 ? "192px" : screenWidth >= 375 && screenWidth < 414 ? "221px" : screenWidth >= 414 && screenWidth < 500 ? "244px" : screenWidth >= 500 && screenWidth < 768 ? "297px" : undefined
                                            },
                                            alt: "Frame",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/frame-39923.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/frame-39923-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/frame-39923-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/frame-39923-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 9856,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "overlap-13",
                                            style: {
                                                height: screenWidth < 375 ? "189px" : screenWidth >= 375 && screenWidth < 414 ? "218px" : screenWidth >= 414 && screenWidth < 500 ? "241px" : screenWidth >= 500 && screenWidth < 768 ? "293px" : undefined,
                                                left: screenWidth < 375 ? "5px" : screenWidth >= 375 && screenWidth < 414 ? "6px" : screenWidth >= 414 && screenWidth < 500 ? "7px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                                top: screenWidth < 375 ? "224px" : screenWidth >= 375 && screenWidth < 414 ? "259px" : screenWidth >= 414 && screenWidth < 500 ? "285px" : screenWidth >= 500 && screenWidth < 768 ? "347px" : undefined,
                                                width: screenWidth < 375 ? "277px" : screenWidth >= 375 && screenWidth < 414 ? "320px" : screenWidth >= 414 && screenWidth < 500 ? "353px" : screenWidth >= 500 && screenWidth < 768 ? "429px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-51",
                                                    style: {
                                                        gap: screenWidth < 375 ? "72px 24.25px" : screenWidth >= 375 && screenWidth < 414 ? "72px 27.97px" : screenWidth >= 414 && screenWidth < 500 ? "72px 30.85px" : screenWidth >= 500 && screenWidth < 768 ? "72px 37.53px" : undefined,
                                                        left: screenWidth < 375 ? "5px" : screenWidth >= 375 && screenWidth < 414 ? "6px" : screenWidth >= 414 && screenWidth < 500 ? "7px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                                        padding: screenWidth < 375 ? "23.8px 8.37px" : screenWidth >= 375 && screenWidth < 414 ? "27.45px 9.66px" : screenWidth >= 414 && screenWidth < 500 ? "30.28px 10.65px" : screenWidth >= 500 && screenWidth < 768 ? "36.83px 12.96px" : undefined,
                                                        top: screenWidth < 375 ? "9px" : screenWidth >= 375 && screenWidth < 414 ? "10px" : screenWidth >= 414 && screenWidth < 500 ? "11px" : screenWidth >= 500 && screenWidth < 768 ? "14px" : undefined
                                                    },
                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-52",
                                                        style: {
                                                            height: screenWidth < 375 ? "124.91px" : screenWidth >= 375 && screenWidth < 414 ? "144.09px" : screenWidth >= 414 && screenWidth < 500 ? "158.91px" : screenWidth >= 500 && screenWidth < 768 ? "193.3px" : undefined,
                                                            width: screenWidth < 375 ? "246.4px" : screenWidth >= 375 && screenWidth < 414 ? "284.24px" : screenWidth >= 414 && screenWidth < 500 ? "313.46px" : screenWidth >= 500 && screenWidth < 768 ? "381.3px" : undefined
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "frame-53",
                                                                style: {
                                                                    gap: screenWidth < 375 ? "24.25px" : screenWidth >= 375 && screenWidth < 414 ? "27.97px" : screenWidth >= 414 && screenWidth < 500 ? "30.85px" : screenWidth >= 500 && screenWidth < 768 ? "37.53px" : undefined,
                                                                    left: screenWidth < 375 ? "15px" : screenWidth >= 375 && screenWidth < 414 ? "17px" : screenWidth >= 414 && screenWidth < 500 ? "19px" : screenWidth >= 500 && screenWidth < 768 ? "23px" : undefined
                                                                },
                                                                children: [
                                                                    screenWidth < 375 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite1.LogoBinanceWhite1), {
                                                                                className: "logo-binance-white-1"
                                                                            }, void 0, false, {
                                                                                fileName: "src/screens/Element/Element.jsx",
                                                                                lineNumber: 10056,
                                                                                columnNumber: 29
                                                                            }, undefined),
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite1.LogoGateioWhite1), {
                                                                                className: "logo-gateio-white-1"
                                                                            }, void 0, false, {
                                                                                fileName: "src/screens/Element/Element.jsx",
                                                                                lineNumber: 10057,
                                                                                columnNumber: 29
                                                                            }, undefined)
                                                                        ]
                                                                    }, void 0, true),
                                                                    screenWidth >= 375 && screenWidth < 414 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite5.LogoBinanceWhite5), {
                                                                                className: "logo-binance-white-5"
                                                                            }, void 0, false, {
                                                                                fileName: "src/screens/Element/Element.jsx",
                                                                                lineNumber: 10063,
                                                                                columnNumber: 29
                                                                            }, undefined),
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite2.LogoGateioWhite2), {
                                                                                className: "logo-gateio-white-2"
                                                                            }, void 0, false, {
                                                                                fileName: "src/screens/Element/Element.jsx",
                                                                                lineNumber: 10064,
                                                                                columnNumber: 29
                                                                            }, undefined)
                                                                        ]
                                                                    }, void 0, true),
                                                                    screenWidth >= 414 && screenWidth < 500 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite3.LogoBinanceWhite3), {
                                                                                className: "logo-binance-white-3"
                                                                            }, void 0, false, {
                                                                                fileName: "src/screens/Element/Element.jsx",
                                                                                lineNumber: 10070,
                                                                                columnNumber: 29
                                                                            }, undefined),
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite3.LogoGateioWhite3), {
                                                                                className: "logo-gateio-white-3"
                                                                            }, void 0, false, {
                                                                                fileName: "src/screens/Element/Element.jsx",
                                                                                lineNumber: 10071,
                                                                                columnNumber: 29
                                                                            }, undefined)
                                                                        ]
                                                                    }, void 0, true),
                                                                    screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite4.LogoBinanceWhite4), {
                                                                                className: "logo-binance-white-4"
                                                                            }, void 0, false, {
                                                                                fileName: "src/screens/Element/Element.jsx",
                                                                                lineNumber: 10077,
                                                                                columnNumber: 29
                                                                            }, undefined),
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite4.LogoGateioWhite4), {
                                                                                className: "logo-gateio-white-4"
                                                                            }, void 0, false, {
                                                                                fileName: "src/screens/Element/Element.jsx",
                                                                                lineNumber: 10078,
                                                                                columnNumber: 29
                                                                            }, undefined)
                                                                        ]
                                                                    }, void 0, true)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 10029,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "frame-54",
                                                                style: {
                                                                    gap: screenWidth < 375 ? "24.25px" : screenWidth >= 375 && screenWidth < 414 ? "27.97px" : screenWidth >= 414 && screenWidth < 500 ? "30.85px" : screenWidth >= 500 && screenWidth < 768 ? "37.53px" : undefined,
                                                                    left: screenWidth < 375 ? "24px" : screenWidth >= 375 && screenWidth < 414 ? "28px" : screenWidth >= 414 && screenWidth < 500 ? "31px" : screenWidth >= 500 && screenWidth < 768 ? "38px" : undefined,
                                                                    top: screenWidth < 375 ? "52px" : screenWidth >= 375 && screenWidth < 414 ? "60px" : screenWidth >= 414 && screenWidth < 500 ? "66px" : screenWidth >= 500 && screenWidth < 768 ? "81px" : undefined
                                                                },
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                        className: "logo-max-white-2",
                                                                        style: {
                                                                            height: screenWidth >= 414 && screenWidth < 500 ? "26.06px" : screenWidth >= 500 && screenWidth < 768 ? "31.69px" : screenWidth < 375 ? "20.45px" : screenWidth >= 375 && screenWidth < 414 ? "23.63px" : undefined,
                                                                            width: screenWidth >= 414 && screenWidth < 500 ? "121.93px" : screenWidth >= 500 && screenWidth < 768 ? "148.32px" : screenWidth < 375 ? "95.71px" : screenWidth >= 375 && screenWidth < 414 ? "110.56px" : undefined
                                                                        },
                                                                        alt: "Logo max white",
                                                                        src: screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/logo-max-white-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/logo-max-white-3.svg" : screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/logo-max-white.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/logo-max-white-1.svg" : undefined
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10118,
                                                                        columnNumber: 25
                                                                    }, undefined),
                                                                    (screenWidth >= 375 && screenWidth < 414 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite1.LogoBitmexWhite1), {
                                                                        className: `${screenWidth < 375 && "class-18"} ${screenWidth >= 375 && screenWidth < 414 && "class-19"}`
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10158,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    screenWidth >= 414 && screenWidth < 500 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite3.LogoBitmexWhite3), {
                                                                        className: "logo-bitmex-white-3"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10164,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite4.LogoBitmexWhite4), {
                                                                        className: "logo-bitmex-white-4"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10168,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 10083,
                                                                columnNumber: 23
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "frame-55",
                                                                style: {
                                                                    gap: screenWidth < 375 ? "15.43px" : screenWidth >= 375 && screenWidth < 414 ? "17.79px" : screenWidth >= 414 && screenWidth < 500 ? "19.62px" : screenWidth >= 500 && screenWidth < 768 ? "23.87px" : undefined,
                                                                    left: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "6px" : undefined,
                                                                    top: screenWidth < 375 ? "104px" : screenWidth >= 375 && screenWidth < 414 ? "120px" : screenWidth >= 414 && screenWidth < 500 ? "133px" : screenWidth >= 500 && screenWidth < 768 ? "162px" : undefined
                                                                },
                                                                children: [
                                                                    screenWidth < 375 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite1.LogoAceWhite1), {
                                                                        className: "logo-ace-white-1"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10207,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    screenWidth >= 375 && screenWidth < 414 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite2.LogoAceWhite2), {
                                                                        className: "logo-ace-white-2"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10211,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    (screenWidth >= 375 && screenWidth < 414 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoWooxWhite1.LogoWooxWhite1), {
                                                                        className: `${screenWidth < 375 && "class-20"} ${screenWidth >= 375 && screenWidth < 414 && "class-21"}`
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10216,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    screenWidth >= 375 && screenWidth < 414 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite2.LogoBitoproWhite2), {
                                                                        className: "logo-bitopro-white-2"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10222,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    screenWidth >= 414 && screenWidth < 500 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite3.LogoAceWhite3), {
                                                                        className: "logo-ace-white-3"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10226,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite6.LogoAceWhite6), {
                                                                        className: "logo-ace-white-4"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10230,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    (screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoWooxWhite7.LogoWooxWhite7), {
                                                                        className: `${screenWidth >= 500 && screenWidth < 768 && "class-22"} ${screenWidth >= 414 && screenWidth < 500 && "class-23"}`
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10235,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite4.LogoBitoproWhite4), {
                                                                        className: "logo-bitopro-white-4"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10241,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    screenWidth < 375 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite1.LogoBitoproWhite1), {
                                                                        className: "logo-bitopro-white-1"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10245,
                                                                        columnNumber: 27
                                                                    }, undefined),
                                                                    screenWidth >= 414 && screenWidth < 500 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite3.LogoBitoproWhite3), {
                                                                        className: "logo-bitopro-white-3"
                                                                    }, void 0, false, {
                                                                        fileName: "src/screens/Element/Element.jsx",
                                                                        lineNumber: 10249,
                                                                        columnNumber: 27
                                                                    }, undefined)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 10172,
                                                                columnNumber: 23
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 10004,
                                                        columnNumber: 21
                                                    }, undefined)
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 9959,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "group-21",
                                                    style: {
                                                        height: screenWidth < 375 ? "189px" : screenWidth >= 375 && screenWidth < 414 ? "218px" : screenWidth >= 414 && screenWidth < 500 ? "241px" : screenWidth >= 500 && screenWidth < 768 ? "293px" : undefined,
                                                        width: screenWidth < 375 ? "277px" : screenWidth >= 375 && screenWidth < 414 ? "320px" : screenWidth >= 414 && screenWidth < 500 ? "353px" : screenWidth >= 500 && screenWidth < 768 ? "429px" : undefined
                                                    },
                                                    alt: "Group",
                                                    src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/group-51@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/group-51-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/group-51-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/group-51-3@2x.png" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 10255,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 9914,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true)
                            ]
                        }, void 0, true, {
                            fileName: "src/screens/Element/Element.jsx",
                            lineNumber: 6874,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/screens/Element/Element.jsx",
                        lineNumber: 6824,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/screens/Element/Element.jsx",
                lineNumber: 296,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "footer-placeholder"
            }, void 0, false, {
                fileName: "src/screens/Element/Element.jsx",
                lineNumber: 10299,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("footer", {
                className: "footer",
                style: {
                    padding: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "16px" : undefined
                },
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "footer-container",
                    style: {
                        borderRadius: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "18px 18px 0px 0px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "16px" : undefined,
                        gap: screenWidth < 375 ? "48px" : screenWidth >= 375 && screenWidth < 414 ? "64px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "100px" : undefined,
                        justifyContent: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "center" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "space-between" : undefined,
                        padding: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "18px 0px" : screenWidth >= 414 && screenWidth < 500 ? "18px 34px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "26px 34px" : screenWidth >= 1920 ? "26px 79px" : undefined
                    },
                    children: [
                        (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "cc",
                                    style: {
                                        marginLeft: screenWidth >= 414 && screenWidth < 500 ? "-6.00px" : undefined
                                    },
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        className: "text-wrapper-30",
                                        style: {
                                            fontSize: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "12px" : screenWidth >= 500 && screenWidth < 768 ? "14px" : undefined,
                                            letterSpacing: screenWidth < 375 ? "0.05px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "0.06px" : screenWidth >= 500 && screenWidth < 768 ? "0.07px" : undefined
                                        },
                                        children: "\xa9 2024 Toriii Technology Corp."
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 10378,
                                        columnNumber: 17
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 10369,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "email",
                                    style: {
                                        gap: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "4px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                        marginRight: screenWidth >= 414 && screenWidth < 500 ? "-6.00px" : undefined
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "email-icon",
                                            style: {
                                                height: screenWidth < 375 ? "10.75px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "12.75px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined,
                                                width: screenWidth < 375 ? "14.33px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "21.33px" : undefined
                                            },
                                            alt: "Email icon",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/hycCuBbS/img/email-icon.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/hycCuBbS/img/email-icon-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/hycCuBbS/img/email-icon-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/hycCuBbS/img/email-icon-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 10422,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                            className: "text-wrapper-30",
                                            style: {
                                                fontSize: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "12px" : screenWidth >= 500 && screenWidth < 768 ? "14px" : undefined,
                                                letterSpacing: screenWidth < 375 ? "0.05px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "0.06px" : screenWidth >= 500 && screenWidth < 768 ? "0.07px" : undefined
                                            },
                                            children: "contact@toriii.tech"
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 10458,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 10405,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true),
                        (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "cc-2",
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        className: "text-wrapper-31",
                                        style: {
                                            fontSize: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "16px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "20px" : undefined,
                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "0.08px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "0.10px" : undefined
                                        },
                                        children: "\xa9 2024 Toriii Technology Corp."
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 10493,
                                        columnNumber: 17
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 10492,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                    className: "stroke-design",
                                    style: {
                                        height: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "6px" : screenWidth >= 1366 && screenWidth < 1920 ? "12px" : screenWidth >= 1920 ? "10px" : undefined,
                                        width: screenWidth >= 768 && screenWidth < 992 ? "107px" : screenWidth >= 992 && screenWidth < 1366 ? "182px" : screenWidth >= 1366 && screenWidth < 1920 ? "301px" : screenWidth >= 1920 ? "376px" : undefined
                                    },
                                    alt: "Stroke design",
                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/hycCuBbS/img/stroke-design.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/hycCuBbS/img/stroke-design-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/hycCuBbS/img/stroke-design-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/hycCuBbS/img/stroke-design-3.svg" : undefined
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 10518,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "cc-3",
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "text-wrapper-32",
                                        style: {
                                            fontSize: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "16px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "20px" : undefined,
                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "0.08px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "0.10px" : undefined
                                        },
                                        children: "Email: contact@toriii.tech"
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 10556,
                                        columnNumber: 17
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 10555,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true)
                    ]
                }, void 0, true, {
                    fileName: "src/screens/Element/Element.jsx",
                    lineNumber: 10313,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/screens/Element/Element.jsx",
                lineNumber: 10301,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/screens/Element/Element.jsx",
        lineNumber: 50,
        columnNumber: 5
    }, undefined);
};
_s(Element, "zbzJdiwf5BpglrhHhFdxxSr152Y=", false, function() {
    return [
        (0, _breakpoints.useWindowWidth)
    ];
});
_c = Element;
var _c;
$RefreshReg$(_c, "Element");

  $parcel$ReactRefreshHelpers$6bb5.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","../../components/HeaderTextDefault":"1kkWK","../../components/LogoToriiiWhite":"fElmD","./style.css":"liMEo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru","../../icons/LogoAceWhite1":"aS3xS","../../icons/LogoBinanceWhite1":"bEpD5","../../icons/LogoBitoproWhite1":"i43NG","../../icons/LogoGateioWhite1":"k2edf","../../breakpoints":"l20Gs","../../icons/LogoAceWhite3":"7zh9u","../../icons/LogoAceWhite8":"ilL3N","../../icons/LogoBinanceWhite3":"f7Kt6","../../icons/LogoBinanceWhite4":"8GWIW","../../icons/LogoBinanceWhite7":"fZdZN","../../icons/LogoBinanceWhite8":"3rFIi","../../icons/LogoBitmexWhite3":"lyqZe","../../icons/LogoBitmexWhite4":"lc4Ln","../../icons/LogoBitmexWhite6":"hqlQJ","../../icons/LogoBitmexWhite7":"fcbd5","../../icons/LogoBitmexWhite8":"fW2Ka","../../icons/LogoBitoproWhite2":"c847C","../../icons/LogoBitoproWhite8":"8Znww","../../icons/LogoGateioWhite2":"aaF9j","../../icons/LogoGateioWhite3":"gYswB","../../icons/LogoGateioWhite4":"cfYay","../../icons/LogoGateioWhite5":"gxJHD","../../icons/LogoGateioWhite6":"kPNsQ","../../icons/LogoGateioWhite7":"hXIor","../../icons/LogoGateioWhite8":"8D2tI","../../icons/LogoToriiiWhite41":"l4dUk","../../icons/LogoToriiiWhite34":"duRj4","../../icons/LogoAceWhite2":"fS10B","../../icons/LogoAceWhite6":"aowlu","../../icons/LogoBinanceWhite5":"glK9r","../../icons/LogoBinanceWhite6":"7DEh3","../../icons/LogoBitmexWhite1":"4tXwY","../../icons/LogoBitoproWhite3":"6N1bv","../../icons/LogoBitoproWhite4":"di59d","../../icons/LogoBitoproWhite5":"6psU4","../../icons/LogoToriiiWhite31":"ejNmI","../../icons/LogoToriiiWhite33":"c2myZ","../../icons/LogoToriiiWhite48":"8CODF","../../icons/LogoWooxWhite1":"4rYPS","../../icons/LogoWooxWhite7":"6AKUI"}],"1kkWK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HeaderTextDefault", ()=>(0, _headerTextDefault.HeaderTextDefault));
var _headerTextDefault = require("./HeaderTextDefault");

},{"./HeaderTextDefault":"2Mofs","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Mofs":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$04a8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$04a8.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HeaderTextDefault", ()=>HeaderTextDefault);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const HeaderTextDefault = ({ className, frameClassName, divClassName, text = "About Us", targetId })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("a", {
        href: `#${targetId}`,
        className: `header-text-default ${className}`,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: `frame ${frameClassName}`,
            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `about-us ${divClassName}`,
                children: text
            }, void 0, false, {
                fileName: "src/components/HeaderTextDefault/HeaderTextDefault.jsx",
                lineNumber: 20,
                columnNumber: 9
            }, undefined)
        }, void 0, false, {
            fileName: "src/components/HeaderTextDefault/HeaderTextDefault.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/HeaderTextDefault/HeaderTextDefault.jsx",
        lineNumber: 18,
        columnNumber: 5
    }, undefined);
};
_c = HeaderTextDefault;
HeaderTextDefault.propTypes = {
    text: (0, _propTypesDefault.default).string,
    targetId: (0, _propTypesDefault.default).string.isRequired
};
var _c;
$RefreshReg$(_c, "HeaderTextDefault");

  $parcel$ReactRefreshHelpers$04a8.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"1ANA8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"7wKI2":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ReactIs = require("96e34ae03f5a2631");
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require("cb216452e2171041")(ReactIs.isElement, throwOnDirectAccess);

},{"96e34ae03f5a2631":"gfIo3","cb216452e2171041":"bBUgD"}],"gfIo3":[function(require,module,exports) {
"use strict";
module.exports = require("ad47820528c6facb");

},{"ad47820528c6facb":"7GE9i"}],"7GE9i":[function(require,module,exports) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === "function" && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 0xead4;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 0xead9;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 0xead7;
    function isValidElementType(type) {
        return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"bBUgD":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var ReactIs = require("c437388b089702c3");
var assign = require("c067a60101d8520c");
var ReactPropTypesSecret = require("74a0f89a70b9f3c2");
var has = require("18441b11647bc78");
var checkPropTypes = require("bec3f6ff89f0b072");
var printWarning = function() {};
printWarning = function(text) {
    var message = "Warning: " + text;
    if (typeof console !== "undefined") console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator"; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = "<<anonymous>>";
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = "Invariant Violation";
                    throw err;
                } else if (typeof console !== "undefined") {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ":" + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated " + "and will throw in the standalone `prop-types` package. " + "You may be seeing this warning due to a third-party PropTypes " + "library. See https://fb.me/react-warning-dont-call-proptypes " + "for details.");
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
                    return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== "function") return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. " + "A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
                else printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === "symbol") return String(value);
                return value;
            });
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== "function") return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning("Invalid argument supplied to oneOfType, expected an instance of array.");
            return emptyFunctionThatReturnsNull;
        }
        for(var i = 0; i < arrayOfTypeCheckers.length; i++){
            var checker = arrayOfTypeCheckers[i];
            if (typeof checker !== "function") {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + ".");
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) return null;
                if (checkerResult.data && has(checkerResult.data, "expectedType")) expectedTypes.push(checkerResult.data.expectedType);
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + type + "`.");
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== "function") return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== "function") return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker) return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`." + "\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
                var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case "number":
            case "string":
            case "undefined":
                return true;
            case "boolean":
                return !propValue;
            case "object":
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === "symbol") return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue["@@toStringTag"] === "Symbol") return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === "function" && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return "array";
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return "object";
        if (isSymbol(propType, propValue)) return "symbol";
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) return "" + propValue;
        var propType = getPropType(propValue);
        if (propType === "object") {
            if (propValue instanceof Date) return "date";
            else if (propValue instanceof RegExp) return "regexp";
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case "array":
            case "object":
                return "an " + type;
            case "boolean":
            case "date":
            case "regexp":
                return "a " + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"c437388b089702c3":"gfIo3","c067a60101d8520c":"7OXxh","74a0f89a70b9f3c2":"jZTZJ","18441b11647bc78":"fqKuf","bec3f6ff89f0b072":"5VwyJ"}],"7OXxh":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ "use strict";
/* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
    if (val === null || val === undefined) throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(val);
}
function shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = new String("abc"); // eslint-disable-line no-new-wrappers
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {};
        for(var i = 0; i < 10; i++)test2["_" + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join("") !== "0123456789") return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if (hasOwnProperty.call(from, key)) to[key] = from[key];
        if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

},{}],"jZTZJ":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
module.exports = ReactPropTypesSecret;

},{}],"fqKuf":[function(require,module,exports) {
module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

},{}],"5VwyJ":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var printWarning = function() {};
var ReactPropTypesSecret = require("24ba1e58d167a82c");
var loggedTypeFailures = {};
var has = require("898bc82f39d83f7c");
printWarning = function(text) {
    var message = "Warning: " + text;
    if (typeof console !== "undefined") console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                err.name = "Invariant Violation";
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker " + "function must return `null` or an `Error` but returned a " + typeof error + ". " + "You may have forgotten to pass an argument to the type checker " + "creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and " + "shape all require an argument).");
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : "";
            printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {};
};
module.exports = checkPropTypes;

},{"24ba1e58d167a82c":"jZTZJ","898bc82f39d83f7c":"fqKuf"}],"1ANA8":[function() {},{}],"fElmD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite", ()=>(0, _logoToriiiWhite.LogoToriiiWhite));
var _logoToriiiWhite = require("./LogoToriiiWhite");

},{"./LogoToriiiWhite":"bmZLR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bmZLR":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$84bc = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$84bc.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite", ()=>LogoToriiiWhite);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const LogoToriiiWhite = ({ className, logoToriiiWhite = "https://c.animaapp.com/hycCuBbS/img/logo-toriii-white-6.png" })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
        className: `logo-toriii-white ${className}`,
        alt: "Logo toriii white",
        src: logoToriiiWhite
    }, void 0, false, {
        fileName: "src/components/LogoToriiiWhite/LogoToriiiWhite.jsx",
        lineNumber: 15,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite;
LogoToriiiWhite.propTypes = {
    logoToriiiWhite: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "LogoToriiiWhite");

  $parcel$ReactRefreshHelpers$84bc.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"2TdBb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"2TdBb":[function() {},{}],"liMEo":[function() {},{}],"aS3xS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite1", ()=>(0, _logoAceWhite1.LogoAceWhite1));
var _logoAceWhite1 = require("./LogoAceWhite1");

},{"./LogoAceWhite1":"9BfiD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9BfiD":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$e85c = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$e85c.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite1", ()=>LogoAceWhite1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-1 ${className}`,
        fill: "none",
        height: "22",
        viewBox: "0 0 62 22",
        width: "62",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10657)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M13.624 0.638184C13.6667 0.763135 13.752 0.86269 13.8201 0.971388C14.5131 2.07665 15.2091 3.17988 15.9062 4.28311C16.5982 5.38025 17.2922 6.47636 17.9842 7.5735C18.665 8.65235 19.3438 9.73222 20.0236 10.8121C20.5428 11.6359 21.0641 12.4588 21.5833 13.2827C22.1432 14.1705 22.7011 15.0584 23.261 15.9463C23.7802 16.7701 24.3015 17.593 24.8207 18.4169C25.3654 19.2793 25.91 20.1428 26.4537 21.0063C26.475 21.0398 26.4913 21.0754 26.5095 21.1109H12.3508C12.3762 21.0398 12.4178 20.9758 12.4554 20.9108C12.8619 20.2078 13.2704 19.5059 13.6768 18.8029C14.13 18.0186 14.5822 17.2344 15.0344 16.4501C15.266 16.0489 15.4957 15.6456 15.7294 15.2463C15.77 15.1762 15.764 15.1265 15.7203 15.0614C15.6095 14.8979 15.5059 14.7293 15.4002 14.5616C14.8179 13.6372 14.2357 12.7128 13.6534 11.7883C13.6026 11.7071 13.5894 11.7071 13.5376 11.7883C13.313 12.1439 13.0885 12.4994 12.8639 12.855C12.5408 13.365 12.2176 13.8749 11.8955 14.3859C11.4698 15.0604 11.046 15.737 10.6203 16.4115C10.2616 16.9804 9.90188 17.5473 9.54319 18.1162C9.10422 18.812 8.66424 19.5079 8.2273 20.2048C8.0383 20.5065 7.84015 20.8021 7.66436 21.1109C5.36181 21.1109 3.05925 21.1109 0.756694 21.1089C0.729258 21.1089 0.664226 21.1526 0.670323 21.0683C0.708936 21.0449 0.731291 21.0083 0.754662 20.9718C1.14282 20.3582 1.52997 19.7436 1.91813 19.13C2.40893 18.3518 2.89972 17.5737 3.39153 16.7955C3.83456 16.0936 4.27962 15.3926 4.72266 14.6896C5.25206 13.8505 5.78045 13.0114 6.30986 12.1723C6.66855 11.6034 7.02826 11.0366 7.38696 10.4677C7.82085 9.78098 8.2527 9.09324 8.68659 8.40549C9.03716 7.8488 9.38874 7.29312 9.7393 6.73643C10.1671 6.05783 10.5929 5.37923 11.0206 4.70165C11.4139 4.07791 11.8071 3.45518 12.2004 2.83144C12.6607 2.10103 13.12 1.37164 13.5793 0.641231C13.5935 0.641231 13.6077 0.641231 13.6219 0.641231L13.624 0.638184Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M61.1592 18.4338C60.5698 18.4338 59.9794 18.4348 59.3901 18.4358C59.3576 18.4358 59.325 18.4368 59.2925 18.4358C59.2234 18.4338 59.196 18.4632 59.2041 18.5354C59.2224 18.6887 59.2468 18.8411 59.3037 18.9864C59.5161 19.5279 60.077 19.6548 60.5139 19.411C60.6328 19.344 60.7121 19.2363 60.774 19.1154C60.8208 19.026 60.9945 18.9762 61.0809 19.027C61.1297 19.0555 61.1073 19.0971 61.0941 19.1317C61.0271 19.3105 60.9204 19.4618 60.772 19.5827C60.3686 19.9098 59.6868 19.8956 59.3057 19.5461C59.1238 19.3785 59.0161 19.1632 58.9562 18.9254C58.8393 18.4561 58.8668 17.999 59.0791 17.5601C59.4236 16.849 60.3554 16.8033 60.8086 17.2198C60.9773 17.3742 61.0799 17.5713 61.1358 17.7917C61.1429 17.8192 61.15 17.8476 61.1571 17.875V18.4358L61.1592 18.4338ZM60.0475 18.1534C60.2883 18.1534 60.5292 18.1544 60.77 18.1534C60.8624 18.1534 60.8797 18.131 60.8696 18.0437C60.8543 17.9218 60.8259 17.8039 60.774 17.6912C60.5668 17.2361 59.9439 17.0928 59.5577 17.4118C59.3596 17.5764 59.2834 17.8009 59.2387 18.0416C59.2204 18.1422 59.2285 18.1534 59.3352 18.1534C59.572 18.1544 59.8097 18.1534 60.0465 18.1534H60.0475Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M53.5811 8.7163C53.5811 7.224 53.5811 5.7327 53.5811 4.2404C53.5811 4.20078 53.5821 4.16116 53.5811 4.12154C53.5801 4.05348 53.6126 4.02199 53.6796 4.02402C53.7122 4.02402 53.7447 4.02402 53.7772 4.02402C56.0076 4.02402 58.239 4.02402 60.4694 4.02402C60.6002 4.02402 60.6655 4.08903 60.6655 4.21906C60.6655 4.62846 60.6655 5.03887 60.6655 5.44826C60.6655 5.58032 60.5978 5.64636 60.4623 5.64636C58.8507 5.64636 57.2381 5.64636 55.6266 5.64636C55.5046 5.64636 55.4436 5.70731 55.4436 5.82921C55.4436 6.48038 55.4436 7.13054 55.4436 7.78171C55.4436 7.89413 55.4989 7.95034 55.6093 7.95034C57.0339 7.95034 58.4585 7.95034 59.8831 7.95034C60.0145 7.95034 60.0803 8.01637 60.0803 8.14843C60.0803 8.58729 60.0803 9.02513 60.0803 9.46398C60.0803 9.60823 60.0721 9.61534 59.9268 9.61534C58.5093 9.61534 57.0918 9.61534 55.6743 9.61534C55.6387 9.61534 55.6022 9.61534 55.5666 9.61534C55.4528 9.61738 55.4436 9.62449 55.4436 9.73928C55.4436 10.3722 55.4436 11.005 55.4436 11.6379C55.4436 11.7862 55.4436 11.7862 55.5951 11.7862C57.2178 11.7862 58.8406 11.7862 60.4633 11.7862C60.5981 11.7862 60.6655 11.8526 60.6655 11.9854C60.6655 12.4171 60.6655 12.8478 60.6655 13.2796C60.6655 13.4238 60.6584 13.4309 60.5121 13.4309C58.2522 13.4309 55.9934 13.4309 53.7335 13.4309C53.5882 13.4309 53.5811 13.4238 53.5811 13.2786C53.5811 11.7578 53.5811 10.2371 53.5811 8.7163Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M40.2809 8.78713C40.2687 7.99577 40.4414 7.29279 40.7737 6.63044C40.9779 6.2241 41.234 5.85229 41.5399 5.51401C41.9575 5.05077 42.4483 4.68608 43.0011 4.40671C43.5884 4.11008 44.2113 3.9384 44.8707 3.88862C45.6948 3.82665 46.4833 3.96278 47.2414 4.28176C47.783 4.51033 48.2677 4.8283 48.6965 5.23261C49.0196 5.53737 49.3062 5.87261 49.5328 6.2566C49.5968 6.3653 49.5958 6.37343 49.4809 6.41914C48.9729 6.62028 48.4638 6.81939 47.9557 7.02257C47.8815 7.05203 47.8379 7.03476 47.7921 6.97279C47.471 6.53394 47.0758 6.17838 46.5941 5.9234C46.2049 5.71718 45.7924 5.59324 45.3473 5.57801C44.5608 5.55058 43.8729 5.80658 43.2835 6.31248C42.6444 6.86104 42.2593 7.55793 42.1638 8.40008C42.0571 9.33773 42.3507 10.1504 42.9645 10.8554C43.4258 11.3857 44.005 11.726 44.695 11.8591C45.5048 12.0155 46.2425 11.8256 46.9172 11.3634C47.2597 11.1297 47.5472 10.8402 47.787 10.5039C47.8389 10.4308 47.8866 10.4206 47.9669 10.4531C48.4709 10.6553 48.9769 10.8534 49.482 11.0535C49.5947 11.0982 49.5978 11.1104 49.5348 11.2171C49.0643 12.0064 48.411 12.6017 47.6021 13.0324C47.0493 13.327 46.46 13.5079 45.8391 13.5759C44.889 13.6806 43.9745 13.5444 43.1078 13.1289C42.5469 12.8597 42.0439 12.5103 41.6201 12.0562C40.8702 11.2547 40.4109 10.315 40.2992 9.21481C40.2829 9.05633 40.2829 8.89887 40.2809 8.78814V8.78713Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M36.8505 13.4307C36.566 13.4307 36.2815 13.4266 35.998 13.4327C35.8893 13.4357 35.8293 13.4012 35.7816 13.3016C35.5834 12.8943 35.3751 12.492 35.1759 12.0846C35.1323 11.9952 35.0784 11.9597 34.9768 11.9607C33.5705 11.9638 32.1631 11.9638 30.7568 11.9607C30.6521 11.9607 30.5942 11.9952 30.5495 12.0897C30.3564 12.492 30.1542 12.8892 29.9622 13.2915C29.9144 13.3921 29.8534 13.4347 29.7386 13.4337C29.1665 13.4286 28.5945 13.4317 28.0224 13.4317C27.9939 13.4317 27.9645 13.4317 27.936 13.4286C27.8933 13.4246 27.8801 13.4002 27.8964 13.3606C27.9076 13.3342 27.9208 13.3088 27.934 13.2823C28.4502 12.2949 28.9653 11.3075 29.4826 10.3191C29.7142 9.87615 29.9469 9.43425 30.1776 8.99133C30.708 7.97546 31.2384 6.95858 31.7699 5.9417C32.0097 5.48253 32.2495 5.02437 32.4893 4.56622C32.5655 4.41993 32.6448 4.27466 32.7189 4.12635C32.7504 4.06235 32.7962 4.04102 32.8653 4.04102C32.9374 4.04102 32.9862 4.06032 33.0207 4.12838C33.1762 4.43212 33.3367 4.73384 33.4953 5.03656C33.8905 5.79542 34.2848 6.55427 34.6801 7.31312C35.0124 7.95007 35.3456 8.58702 35.6789 9.22396C36.1016 10.0326 36.5244 10.8422 36.9481 11.6509C37.2245 12.1791 37.5039 12.7074 37.7813 13.2346C37.8016 13.2732 37.8209 13.3118 37.8392 13.3504C37.8636 13.4012 37.8423 13.4256 37.7905 13.4276C37.762 13.4286 37.7325 13.4286 37.7041 13.4286C37.4196 13.4286 37.1361 13.4286 36.8515 13.4286L36.8505 13.4307ZM32.8521 10.3627C33.2585 10.3627 33.6639 10.3627 34.0704 10.3627C34.1944 10.3627 34.1984 10.3546 34.1436 10.2419C33.9231 9.78574 33.7015 9.33063 33.4821 8.87451C33.3743 8.65102 33.2707 8.42651 33.164 8.20302C33.0756 8.01813 32.9852 7.83426 32.8968 7.65039C32.8775 7.60975 32.8602 7.60874 32.8399 7.64836C32.8317 7.66461 32.8236 7.68086 32.8165 7.69712C32.6661 8.01102 32.5157 8.32594 32.3643 8.63882C32.1021 9.17825 31.84 9.71767 31.5768 10.2561C31.528 10.3567 31.5311 10.3627 31.6449 10.3627C32.0473 10.3627 32.4497 10.3627 32.8521 10.3627Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M56.6481 18.3407C56.6481 18.7176 56.6532 19.0955 56.6461 19.4723C56.642 19.6948 56.6278 19.9163 56.5628 20.1327C56.4276 20.5807 56.1187 20.8184 55.6645 20.8671C55.4105 20.8946 55.1534 20.8885 54.9126 20.7777C54.6403 20.6528 54.4675 20.4435 54.4005 20.1509C54.3811 20.0656 54.3954 20.0504 54.4848 20.0463C54.5204 20.0443 54.5569 20.0473 54.5925 20.0463C54.6545 20.0433 54.6921 20.0676 54.7154 20.1276C54.8465 20.4598 55.1097 20.5847 55.4481 20.5878C55.5202 20.5878 55.5924 20.5888 55.6635 20.5786C55.9978 20.5268 56.2041 20.3358 56.2874 20.0057C56.3382 19.8015 56.3484 19.5942 56.3443 19.385C56.3443 19.3677 56.3504 19.3443 56.3301 19.3383C56.3098 19.3322 56.3026 19.3555 56.2915 19.3687C55.8108 19.962 54.8689 19.8655 54.5163 19.1727C54.2287 18.6078 54.2521 18.0278 54.563 17.4802C54.7703 17.1155 55.1128 16.9459 55.5385 16.9571C55.6981 16.9611 55.8535 16.9804 55.9998 17.0495C56.1055 17.0993 56.199 17.1633 56.2762 17.2517C56.2915 17.2689 56.3006 17.3065 56.3301 17.2933C56.3555 17.2832 56.3433 17.2486 56.3474 17.2242C56.3524 17.1927 56.3565 17.1602 56.3606 17.1277C56.3667 17.082 56.3626 17.0272 56.4236 17.017C56.4906 17.0048 56.5618 16.9916 56.6217 17.0333C56.6624 17.0607 56.6492 17.1115 56.6502 17.1541C56.6502 17.5493 56.6502 17.9445 56.6502 18.3397H56.6481V18.3407ZM56.3443 18.3254C56.3535 18.1649 56.3392 17.9902 56.2966 17.8185C56.2203 17.5107 56.0374 17.3106 55.7143 17.2598C55.6472 17.2496 55.5781 17.2506 55.5101 17.2476C55.1473 17.2313 54.8831 17.4406 54.7602 17.7535C54.6169 18.1162 54.6047 18.489 54.7266 18.8608C54.8059 19.1016 54.9532 19.2915 55.192 19.3982C55.3485 19.4683 55.5101 19.4723 55.6777 19.4459C55.948 19.4033 56.1411 19.2651 56.2447 19.0081C56.3311 18.7937 56.3504 18.5703 56.3443 18.3254Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M29.2933 19.7505C28.9448 19.7505 28.5952 19.7505 28.2467 19.7505C28.1166 19.7505 28.1055 19.7404 28.1055 19.6083C28.1055 18.437 28.1055 17.2657 28.1055 16.0934C28.1055 15.9553 28.1136 15.9481 28.2528 15.9481C28.9397 15.9481 29.6266 15.9481 30.3135 15.9481C30.3613 15.9481 30.4253 15.9278 30.4466 15.9878C30.4731 16.0629 30.4731 16.1432 30.4426 16.2194C30.4324 16.2448 30.4029 16.2488 30.3775 16.2509C30.342 16.2529 30.3054 16.2539 30.2698 16.2539C29.7049 16.2539 29.1409 16.2539 28.5759 16.2539C28.4428 16.2539 28.4337 16.262 28.4337 16.3941C28.4337 16.7466 28.4337 17.0981 28.4337 17.4506C28.4337 17.5817 28.4418 17.5877 28.577 17.5888C29.1125 17.5888 29.649 17.5888 30.1845 17.5898C30.2383 17.5898 30.3115 17.5644 30.341 17.6284C30.3725 17.6975 30.3613 17.7767 30.346 17.8509C30.3389 17.8834 30.3084 17.8915 30.278 17.8935C30.2424 17.8956 30.2058 17.8956 30.1703 17.8956C29.6419 17.8956 29.1125 17.8956 28.5841 17.8956C28.4377 17.8956 28.4337 17.8996 28.4337 18.0479C28.4337 18.4644 28.4337 18.882 28.4337 19.2985C28.4337 19.4376 28.4398 19.4437 28.58 19.4437C29.1663 19.4437 29.7526 19.4437 30.3389 19.4437C30.3745 19.4437 30.4111 19.4437 30.4466 19.4458C30.468 19.4458 30.4934 19.4468 30.5066 19.4661C30.5554 19.5392 30.5076 19.6114 30.5015 19.6845C30.4974 19.7312 30.4588 19.7475 30.4151 19.7495C30.3826 19.7505 30.3501 19.7515 30.3176 19.7515C29.9762 19.7515 29.6348 19.7515 29.2923 19.7515L29.2933 19.7505Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M47.4963 18.6167C47.4963 18.8321 47.4963 19.0485 47.4963 19.2638C47.4963 19.3715 47.4983 19.4792 47.5136 19.5869C47.5339 19.7331 47.5136 19.7514 47.3703 19.7514C47.3561 19.7514 47.3419 19.7504 47.3276 19.7514C47.2616 19.7535 47.2311 19.7179 47.2189 19.657C47.2037 19.5848 47.2189 19.5066 47.1732 19.4416C47.1224 19.4914 47.0736 19.5432 47.0208 19.5909C46.8673 19.7301 46.6793 19.7819 46.4792 19.8073C46.2556 19.8358 46.0402 19.8104 45.838 19.7108C45.5463 19.5676 45.3838 19.2405 45.4112 18.9154C45.4437 18.5344 45.6571 18.317 46.0026 18.2022C46.1845 18.1413 46.3745 18.1169 46.5655 18.1118C46.7383 18.1067 46.911 18.1078 47.0838 18.1108C47.162 18.1118 47.1955 18.0803 47.1925 18.0021C47.1884 17.9015 47.1945 17.801 47.1793 17.7014C47.1407 17.4576 46.9964 17.3174 46.7606 17.2676C46.5899 17.2311 46.4182 17.2331 46.2475 17.2727C46.0717 17.3123 45.9548 17.416 45.8918 17.5856C45.8268 17.7583 45.8156 17.7614 45.6337 17.7492C45.5596 17.7441 45.5392 17.7106 45.5535 17.6445C45.6073 17.4017 45.7242 17.2047 45.9508 17.0828C46.1337 16.9852 46.3318 16.9558 46.535 16.9598C46.6854 16.9629 46.8358 16.973 46.9821 17.0228C47.2656 17.1193 47.4242 17.3195 47.477 17.608C47.4933 17.6963 47.5004 17.7857 47.4994 17.8761C47.4973 18.124 47.4994 18.3719 47.4994 18.6208L47.4963 18.6167ZM46.8165 18.3729C46.7413 18.3729 46.6651 18.3688 46.5899 18.3729C46.407 18.3841 46.2241 18.4003 46.0524 18.4755C45.8258 18.5751 45.712 18.7681 45.7292 19.02C45.7465 19.2577 45.8939 19.4365 46.1255 19.5015C46.3003 19.5503 46.4751 19.5351 46.6478 19.4914C46.8907 19.4294 47.0482 19.276 47.1224 19.0363C47.1803 18.8483 47.1935 18.6553 47.1894 18.4603C47.1884 18.3963 47.1569 18.3699 47.0949 18.3709C47.0014 18.3719 46.908 18.3709 46.8145 18.3709L46.8165 18.3729Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M41.0605 17.7471C41.0605 17.1396 41.0605 16.5331 41.0605 15.9256C41.0605 15.7458 41.1215 15.6991 41.2993 15.7397C41.34 15.7489 41.3634 15.7702 41.3644 15.8129C41.3654 15.8454 41.3664 15.8779 41.3664 15.9094C41.3664 16.3553 41.3664 16.8003 41.3664 17.2463C41.3664 17.2716 41.3644 17.297 41.3664 17.3214C41.3684 17.3407 41.3552 17.3702 41.3827 17.3773C41.3999 17.3824 41.4091 17.357 41.4203 17.3428C41.6905 16.9913 42.0564 16.9039 42.4699 16.9801C42.8591 17.0522 43.1091 17.36 43.1568 17.7897C43.1711 17.9188 43.1782 18.0468 43.1782 18.1768C43.1761 18.6512 43.1782 19.1256 43.1771 19.6C43.1771 19.6488 43.1924 19.7118 43.1355 19.7341C43.0613 19.7636 42.98 19.7605 42.9038 19.7341C42.8774 19.725 42.8743 19.6955 42.8733 19.6701C42.8723 19.6376 42.8713 19.6051 42.8713 19.5736C42.8713 19.085 42.8713 18.5963 42.8713 18.1077C42.8713 17.9777 42.855 17.8497 42.8205 17.7247C42.7361 17.425 42.5268 17.2564 42.2139 17.2544C41.8044 17.2513 41.5066 17.421 41.405 17.8883C41.3796 18.0041 41.3674 18.1219 41.3674 18.2408C41.3684 18.6898 41.3684 19.1388 41.3674 19.5878C41.3674 19.6386 41.3908 19.7077 41.3319 19.7351C41.2597 19.7676 41.1774 19.7595 41.1002 19.7382C41.0727 19.7311 41.0666 19.7026 41.0646 19.6762C41.0626 19.6406 41.0616 19.6041 41.0616 19.5685C41.0616 18.961 41.0616 18.3546 41.0616 17.7471H41.0605Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M49.9723 18.435C49.9723 18.112 49.9723 17.7879 49.9723 17.4649C49.9723 17.3572 49.9754 17.2495 49.9612 17.1418C49.9479 17.0392 49.9744 17.0149 50.079 17.0108C50.1044 17.0108 50.1298 17.0108 50.1542 17.0108C50.2233 17.0108 50.2599 17.0413 50.2629 17.1134C50.267 17.1926 50.2833 17.2698 50.2802 17.3501C50.2802 17.3663 50.2741 17.3917 50.2934 17.3968C50.3138 17.4029 50.3198 17.3775 50.329 17.3633C50.4641 17.151 50.6542 17.0189 50.9021 16.9783C51.147 16.9377 51.3898 16.9397 51.6174 17.0616C51.7892 17.153 51.9131 17.2891 51.9833 17.47C52.0422 17.6213 52.0737 17.7798 52.0737 17.9444C52.0727 18.494 52.0737 19.0446 52.0727 19.5941C52.0727 19.6449 52.095 19.714 52.031 19.7374C51.9599 19.7638 51.8827 19.7577 51.8085 19.7384C51.781 19.7313 51.7729 19.7049 51.7709 19.6785C51.7689 19.6429 51.7678 19.6063 51.7678 19.5708C51.7678 19.0567 51.7678 18.5427 51.7678 18.0287C51.7678 17.9352 51.7617 17.8428 51.7414 17.7503C51.6581 17.3663 51.3888 17.2262 51.0342 17.2566C50.6826 17.2861 50.4621 17.4832 50.3544 17.8133C50.3087 17.9545 50.2792 18.0978 50.2802 18.2471C50.2812 18.686 50.2802 19.1238 50.2802 19.5626C50.2802 19.7435 50.2203 19.7892 50.0404 19.7475C49.9998 19.7384 49.9764 19.7171 49.9754 19.6744C49.9744 19.6388 49.9733 19.6023 49.9733 19.5667C49.9733 19.1888 49.9733 18.8119 49.9733 18.434L49.9723 18.435Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M37.8888 16.9577C38.341 16.9689 38.6885 17.2239 38.8216 17.678C38.8298 17.7054 38.8359 17.7338 38.841 17.7623C38.8521 17.8222 38.8267 17.8507 38.7668 17.8517C38.7312 17.8517 38.6946 17.8507 38.6591 17.8527C38.5829 17.8578 38.5422 17.8243 38.5178 17.7511C38.4589 17.5764 38.3613 17.4271 38.1937 17.3366C37.7862 17.1152 37.2832 17.2767 37.083 17.7125C36.8717 18.1717 36.8758 18.6441 37.1034 19.0971C37.3483 19.5858 37.9041 19.6213 38.2353 19.3948C38.3634 19.3074 38.4335 19.1804 38.4985 19.0463C38.5199 19.0027 38.5259 18.9417 38.5849 18.9305C38.6591 18.9173 38.7363 18.9153 38.8105 18.9316C38.8542 18.9407 38.843 18.9823 38.8328 19.0128C38.7038 19.4049 38.4721 19.7046 38.0321 19.7889C37.4082 19.9088 36.894 19.6051 36.7071 18.9986C36.5435 18.4673 36.5729 17.9441 36.8737 17.4626C37.0922 17.1111 37.4255 16.9506 37.8888 16.9567V16.9577Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M34.6077 19.7518C34.5041 19.7762 34.435 19.7163 34.371 19.6187C34.1617 19.3008 33.9442 18.9879 33.7288 18.673C33.6729 18.5907 33.6698 18.5917 33.6129 18.675C33.3955 18.997 33.1791 19.319 32.9616 19.6411C32.8966 19.7376 32.7025 19.7945 32.5999 19.7447C32.546 19.7183 32.5785 19.6848 32.5978 19.6563C32.7137 19.4877 32.8315 19.3201 32.9484 19.1514C33.1171 18.9097 33.2847 18.6669 33.4554 18.4271C33.4961 18.3702 33.4788 18.3296 33.4453 18.2818C33.2512 18.0015 33.0571 17.7201 32.8641 17.4387C32.7889 17.329 32.7126 17.2203 32.6395 17.1095C32.5958 17.0445 32.607 17.0191 32.6832 17.013C32.7442 17.008 32.8051 17.011 32.8661 17.013C32.9321 17.0151 32.9657 17.0628 32.9982 17.1116C33.1953 17.4072 33.3935 17.7038 33.5916 17.9994C33.6038 18.0177 33.615 18.036 33.6272 18.0533C33.677 18.1213 33.6861 18.1224 33.7328 18.0553C33.8843 17.841 34.0346 17.6256 34.185 17.4113C34.2531 17.3137 34.3202 17.2162 34.3883 17.1197C34.4574 17.0222 34.6342 16.9724 34.7449 17.0181C34.8018 17.0415 34.7713 17.076 34.752 17.1034C34.6779 17.2091 34.6027 17.3147 34.5264 17.4194C34.3283 17.6937 34.1322 17.9679 33.931 18.2392C33.8782 18.3103 33.8741 18.3672 33.9259 18.4413C34.1911 18.8213 34.4523 19.2053 34.7144 19.5872C34.7205 19.5964 34.7276 19.6045 34.7327 19.6136C34.751 19.6502 34.8028 19.6817 34.7764 19.7264C34.751 19.7681 34.6972 19.7457 34.6555 19.7508C34.6453 19.7518 34.6342 19.7508 34.6057 19.7508L34.6077 19.7518Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10657",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "20.4799",
                        transform: "translate(0.670898 0.638184)",
                        width: "60.4883"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite1;
var _c;
$RefreshReg$(_c, "LogoAceWhite1");

  $parcel$ReactRefreshHelpers$e85c.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"bEpD5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite1", ()=>(0, _logoBinanceWhite1.LogoBinanceWhite1));
var _logoBinanceWhite1 = require("./LogoBinanceWhite1");

},{"./LogoBinanceWhite1":"cSEiv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cSEiv":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$38f9 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$38f9.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite1", ()=>LogoBinanceWhite1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-1 ${className}`,
        fill: "none",
        height: "21",
        viewBox: "0 0 104 21",
        width: "104",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10651)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M7.10067 8.77628L11.0729 4.80575L15.0467 8.77951L17.3567 6.46794L11.0729 0.182617L4.78906 6.46633L7.10067 8.77628Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.844727 10.4092L3.15548 8.09846L5.46624 10.4092L3.15548 12.7199L0.844727 10.4092Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M7.09999 12.0412L11.0722 16.0133L15.046 12.0396L17.3576 14.3479L17.356 14.3495L11.0722 20.6348L4.78839 14.3527L4.78516 14.3495L7.09999 12.0412Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M16.6748 10.4097L18.9856 8.09895L21.2963 10.4097L18.9856 12.7204L16.6748 10.4097Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M13.4166 10.408L11.0727 8.0625L9.33943 9.79577L9.13912 9.99446L8.72882 10.4048L8.72559 10.408L8.72882 10.4128L11.0727 12.7551L13.4166 10.4096L13.4183 10.408H13.4166Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M24.9023 5.13818H29.9294C31.1765 5.13818 32.1198 5.46125 32.7595 6.10739C33.0005 6.34607 33.1905 6.63123 33.318 6.94556C33.4454 7.2599 33.5077 7.59685 33.501 7.93597V7.96666C33.5053 8.24447 33.4666 8.52128 33.3863 8.78726C33.3147 9.01623 33.2108 9.2338 33.0778 9.4334C32.9537 9.62161 32.8036 9.7913 32.6319 9.93739C32.4642 10.0818 32.2804 10.2064 32.0843 10.3089C32.6499 10.5059 33.1586 10.8387 33.5656 11.2781C33.9253 11.6874 34.1051 12.2527 34.1051 12.9742V13.0049C34.1154 13.4556 34.0173 13.902 33.8192 14.3069C33.6273 14.6799 33.3459 14.9996 33.0002 15.2374C32.6094 15.4993 32.1743 15.6882 31.716 15.7946C31.1715 15.9238 30.6133 15.9861 30.0538 15.9804H24.9023V5.13818ZM29.4254 9.52224C29.8603 9.54326 30.2931 9.44968 30.6805 9.25086C30.8316 9.16262 30.955 9.03384 31.0366 8.8791C31.1183 8.72437 31.155 8.54986 31.1425 8.37535V8.34465C31.1505 8.18385 31.1179 8.02363 31.0476 7.8788C30.9773 7.73396 30.8716 7.60918 30.7403 7.51598C30.4722 7.32537 30.085 7.23006 29.5789 7.23006H27.2269V9.52224H29.4254ZM30.0602 13.8918C30.4936 13.916 30.9249 13.8169 31.3041 13.6058C31.4518 13.5109 31.5714 13.3782 31.6504 13.2213C31.7294 13.0645 31.7648 12.8894 31.7532 12.7142V12.6835C31.759 12.517 31.7239 12.3515 31.6509 12.2017C31.578 12.0519 31.4694 11.9223 31.3348 11.8241C31.0569 11.6087 30.6079 11.501 29.9875 11.501H27.2269V13.8918H30.0602Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M37.0996 5.13818H39.4855V15.9836H37.0996V5.13818Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M43.0967 5.13818H45.2968L50.382 11.8128V5.13818H52.7372V15.9836H50.7067L45.4551 9.08933V15.9836H43.0967V5.13818Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M59.9606 5.06104H62.1575L66.8049 15.984H64.314L63.3222 13.5513H58.7361L57.7443 15.984H55.3115L59.9606 5.06104ZM62.4709 11.4449L61.0267 7.92667L59.589 11.4449H62.4709Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M69.3867 5.14502H71.5869L76.6688 11.8196V5.14502H79.0241V15.9905H76.9935L71.7419 9.09617V15.9905H69.3867V5.14502Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M87.6095 16.1745C86.8491 16.181 86.0952 16.0337 85.3932 15.7416C84.7322 15.4687 84.1326 15.0662 83.6296 14.558C83.1266 14.0498 82.7305 13.446 82.4645 12.7822C82.1838 12.088 82.0417 11.3455 82.0461 10.5967V10.566C82.0336 9.08992 82.6016 7.66804 83.6276 6.60676C84.1324 6.08836 84.7368 5.67736 85.4045 5.39848C86.1307 5.09764 86.9106 4.94761 87.6967 4.95749C88.1616 4.95402 88.6258 4.99568 89.0827 5.08187C89.4736 5.1558 89.8558 5.27002 90.2231 5.42271C90.5565 5.56303 90.8734 5.73963 91.1681 5.94931C91.4557 6.15383 91.7259 6.38183 91.9758 6.63099L90.459 8.38203C90.0714 8.02445 89.6365 7.72172 89.1667 7.48228C88.7051 7.26157 88.1986 7.15098 87.687 7.15921C87.2612 7.15467 86.8394 7.24076 86.4495 7.41176C86.0596 7.58277 85.7105 7.83477 85.4255 8.15104C85.1428 8.46649 84.9215 8.83189 84.7729 9.22848C84.6172 9.64758 84.539 10.0915 84.5419 10.5385V10.5692C84.5403 11.0156 84.6186 11.4587 84.7729 11.8777C84.9196 12.2757 85.1387 12.6431 85.419 12.9616C85.7018 13.2817 86.05 13.5374 86.4402 13.7114C86.8304 13.8853 87.2534 13.9733 87.6805 13.9695C88.2245 13.9867 88.7643 13.8696 89.2523 13.6287C89.7169 13.3755 90.1465 13.0627 90.5301 12.6982L92.0485 14.2328C91.7804 14.5238 91.4904 14.7938 91.181 15.0405C90.8771 15.2808 90.5471 15.4862 90.1973 15.6527C89.8245 15.8282 89.4318 15.9578 89.0278 16.0388C88.5609 16.1324 88.0856 16.1779 87.6095 16.1745Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M94.8643 5.13818H103.027V7.26075H97.2114V9.46086H102.332V11.5834H97.2195V13.8611H103.108V15.9836H94.8691L94.8643 5.13818Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10651",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "20.452",
                        transform: "translate(0.845703 0.182617)",
                        width: "102.26"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite1;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite1");

  $parcel$ReactRefreshHelpers$38f9.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"i43NG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite1", ()=>(0, _logoBitoproWhite1.LogoBitoproWhite1));
var _logoBitoproWhite1 = require("./LogoBitoproWhite1");

},{"./LogoBitoproWhite1":"fMlgm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fMlgm":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$50b2 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$50b2.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite1", ()=>LogoBitoproWhite1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-1 ${className}`,
        fill: "none",
        height: "22",
        viewBox: "0 0 87 22",
        width: "87",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M31.498 3.39878C31.4855 3.53659 31.3853 3.63682 31.2475 3.64935C31.1849 3.63682 31.1222 3.61177 31.0721 3.56165C30.358 2.80994 29.3934 2.39649 28.2158 2.27121C28.0029 2.23362 27.8024 2.22109 27.5895 2.23362C25.4598 2.23362 23.0921 3.27349 21.0251 4.95232L24.1444 4.97738H25.7855C27.3013 4.97738 28.3536 5.06508 29.0176 5.19037C29.9446 5.40336 30.571 5.77921 30.9969 6.26783C31.3728 6.80656 31.4605 7.43299 31.1598 8.14712C30.9719 8.64826 30.6712 9.08676 30.2829 9.43756C29.7818 9.87606 29.218 10.2394 28.6042 10.515C29.4811 10.8909 30.0323 11.3043 30.333 11.8431C30.5835 12.3818 30.5835 13.0082 30.333 13.7223C30.0824 14.4365 29.6189 15.0504 28.9049 15.6392C28.2284 16.2155 27.4391 16.654 26.5873 16.9297C25.7479 17.2178 24.6079 17.3431 23.3051 17.3431H21.2756C21.213 17.3682 21.1378 17.3807 21.0626 17.3807L18.6323 17.3556L18.6198 17.3807V17.3556L17.6927 17.3431C17.342 17.3431 17.0664 17.0675 17.0664 16.7167C17.0664 16.3659 17.342 16.0902 17.6927 16.0902L19.0833 16.1028L22.7037 6.19266L19.6596 6.1676H19.647C18.5321 7.3077 17.605 8.59815 16.8784 10.0139L18.745 10.0389C19.0833 10.0389 19.3714 10.302 19.3714 10.6528V10.6654C19.3589 11.0036 19.0833 11.2793 18.745 11.2918L16.3147 11.2667C15.9389 12.2189 15.7009 13.2337 15.6257 14.2485H13.4459C13.5962 12.8078 13.9971 11.392 14.6235 10.0765C17.0162 4.86463 22.2778 0.943173 26.7752 0.943173C27.0257 0.930644 27.2763 0.955702 27.5268 0.980759C29.2055 1.14363 30.5585 1.89535 31.4354 3.18579C31.498 3.27349 31.5356 3.31108 31.498 3.39878ZM28.0029 8.48539C28.1281 8.10953 28.0906 7.77126 27.7899 7.5708C27.5394 7.35782 27.0383 7.23253 26.3117 7.23253H24.8334L23.8688 9.86353H25.2092C25.9609 9.86353 26.5998 9.73825 27.0633 9.48768C27.5018 9.27469 27.8275 8.92389 28.0029 8.48539ZM21.9521 15.113H23.4303C24.7332 15.113 25.6602 14.9877 26.2114 14.7372C26.7 14.5242 27.0884 14.1358 27.3013 13.6597C27.5143 13.121 27.389 12.695 26.9631 12.4068C26.5372 12.1187 25.6978 11.9433 24.4826 11.9433H23.1422L21.9521 15.113ZM22.2026 1.23133C20.2233 1.4819 18.0811 2.55936 16.227 4.23819C15.5129 4.87715 14.874 5.56623 14.2978 6.31794H12.3184C14.8866 2.86005 18.6699 0.517201 22.1525 0.642487C22.3154 0.642487 22.4407 0.767773 22.4407 0.918116V0.930646C22.4657 1.09352 22.353 1.2188 22.2026 1.23133ZM10.2138 5.8168C9.12392 7.23253 8.23447 8.86125 7.77095 10.5651C7.14458 12.7702 7.14458 14.9376 7.73337 16.7793C8.03403 17.7566 8.54766 18.6586 9.2492 19.4103C9.37447 19.5356 9.37447 19.7361 9.2492 19.8739C9.18656 19.9491 9.09887 19.9992 8.99865 19.9992C8.92348 20.0117 8.84832 19.9866 8.78568 19.9616C7.84612 19.3101 7.09447 18.4331 6.60589 17.4058C6.58084 17.4058 6.54326 17.4183 6.5182 17.4183L3.86237 17.3807C3.5116 17.3807 3.236 17.1051 3.236 16.7543C3.236 16.4035 3.5116 16.1278 3.86237 16.1278L6.11732 16.1654C5.59117 14.3989 5.61622 12.3317 6.26765 10.2143C6.69359 8.79861 7.34502 7.47057 8.20942 6.26783L7.48282 6.2553C7.13205 6.2553 6.85644 5.97967 6.85644 5.62887C6.85644 5.27807 7.13205 5.00244 7.48282 5.00244L9.08634 5.04002C9.12392 5.04002 9.17403 5.04003 9.21162 5.05255C10.4518 3.68694 11.9927 2.62201 13.709 1.95799C13.8844 1.87029 14.0848 1.94546 14.1725 2.12086V2.13339C14.2101 2.30879 14.185 2.48419 14.0848 2.63453C12.6567 3.31108 11.3037 4.43865 10.2138 5.8168ZM4.36347 10.9034L1.0061 10.941C0.617749 10.9535 0.279507 10.6528 0.266979 10.2645C0.254452 9.87606 0.555111 9.53779 0.943464 9.52526C0.968519 9.52526 0.981046 9.52526 1.0061 9.52526L4.32589 9.48768C4.72677 9.48768 5.05248 9.80089 5.07754 10.2018C5.06501 10.5777 4.75182 10.8909 4.36347 10.9034ZM9.96327 11.154C10.0885 10.7405 10.2138 10.277 10.3767 9.86353C10.6648 9.0617 11.0406 8.28493 11.5167 7.5708H13.4459C12.9323 8.43528 12.4813 9.34986 12.1055 10.277C12.0178 10.5651 11.8925 10.8533 11.8048 11.154H9.96327ZM11.429 12.3567C11.1033 13.785 11.0907 15.2634 11.3914 16.6916C11.8173 18.4456 12.7318 19.7361 14.0848 20.4878C14.2101 20.5755 14.2602 20.7258 14.2101 20.8636C14.16 20.9639 14.0723 21.0265 13.9595 21.0265H13.8718C12.2809 20.6005 10.9404 19.498 10.2138 18.0197C9.41206 16.4411 9.2492 14.4365 9.62502 12.3442L11.429 12.3567ZM15.7259 15.4889C15.7886 16.2907 16.0141 17.08 16.4024 17.7816C17.1165 19.0345 18.3316 19.7862 19.8976 19.9491C20.1105 19.9866 20.311 19.9992 20.524 19.9866C21.664 19.9866 22.8791 19.6985 24.1444 19.1096C24.2697 19.0595 24.42 19.1096 24.4826 19.2349C24.5578 19.3352 24.5328 19.473 24.4325 19.5481C24.42 19.5607 24.4075 19.5607 24.3949 19.5732C22.6286 20.5755 20.8622 21.1142 19.2211 21.1142C18.9705 21.1267 18.72 21.1017 18.4694 21.0766C16.6154 20.8636 15.1872 19.9992 14.3103 18.4957C13.7842 17.5812 13.5085 16.5413 13.5085 15.4889H15.7259Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite1/LogoBitoproWhite1.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M60.1482 15.8271C58.0686 15.8271 56.6656 14.5241 56.6656 12.5822C56.6656 9.85097 58.6449 7.62088 61.5763 7.62088C63.7812 7.62088 65.059 9.06167 65.059 10.8407C65.059 13.7223 63.0045 15.8271 60.1482 15.8271ZM61.2631 9.37489C59.8726 9.37489 59.1585 11.3168 59.1836 12.5321C59.1836 13.4467 59.6596 14.0606 60.499 14.0606C61.8269 14.0606 62.566 12.2189 62.566 10.8658C62.5535 10.1391 62.2278 9.37489 61.2631 9.37489ZM56.653 9.55029H54.8992L54.348 12.2189C54.2728 12.5446 54.2227 12.8829 54.2102 13.2086C54.2102 13.597 54.373 13.8727 54.8992 13.8727C55.1247 13.8727 55.3502 13.8727 55.5757 13.8351L55.2875 15.6517C54.9869 15.7645 54.3855 15.8271 53.8594 15.8271C52.4187 15.8271 51.7297 15.1005 51.7297 14.1232C51.7422 13.6346 51.7924 13.146 51.9051 12.6699L53.1954 6.33044L55.6884 5.67895L55.2625 7.80881H57.0163L56.653 9.55029ZM50.0761 6.81905H50.0636C49.4121 6.81905 48.8985 6.38055 48.8985 5.69148C48.911 4.90218 49.5499 4.37598 50.2891 4.37598C50.9906 4.37598 51.5042 4.82701 51.5042 5.51608C51.5042 6.34297 50.8528 6.83158 50.0761 6.81905ZM49.4247 15.6517H47.0068L48.5728 7.80881H50.9906L49.4247 15.6517ZM44.6517 9.92614C45.7416 10.2519 46.4306 11.1038 46.4306 12.2815C46.4306 13.4342 45.7792 14.2861 44.8772 14.8499C43.9251 15.4638 42.4969 15.7269 40.6053 15.7269C39.6532 15.7394 38.6886 15.6768 37.749 15.5139L39.8286 5.00241C40.8057 4.83953 41.8079 4.75183 42.8101 4.75183C43.9877 4.75183 44.8646 4.88965 45.6163 5.32815C46.3679 5.69148 46.9317 6.39308 46.9317 7.30767C46.9317 8.67329 45.8668 9.53776 44.6517 9.87603V9.92614ZM40.4424 13.8727C40.7556 13.9102 41.0563 13.9228 41.3695 13.9228C42.6849 13.9228 43.875 13.4216 43.875 12.2189C43.875 11.1414 42.9354 10.8282 41.8079 10.8282H41.0563L40.4424 13.8727ZM42.8728 6.55595C42.5596 6.54342 42.2464 6.56848 41.9332 6.63112L41.4321 9.13684H42.2339C43.5618 9.13684 44.4763 8.58558 44.4763 7.671C44.4638 6.89422 43.7998 6.55595 42.8728 6.55595Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite1/LogoBitoproWhite1.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M81.8716 15.7643C79.8046 15.7643 78.5268 14.3987 78.5268 12.5444C78.5268 9.90091 80.456 7.59564 83.2497 7.59564C85.4545 7.59564 86.607 9.09908 86.607 10.8406C86.607 13.4966 84.6527 15.7643 81.8716 15.7643ZM83.0116 9.04896C81.4457 9.04896 80.5437 11.041 80.5437 12.4943C80.5437 13.5718 81.145 14.3235 82.1347 14.3235C83.6004 14.3235 84.5776 12.3941 84.5776 10.8406C84.5776 10.0387 84.2017 9.04896 83.0116 9.04896ZM78.5769 9.43735C77.1863 9.43735 76.2969 10.7904 75.9712 12.4567L75.3448 15.6014H73.3905C73.3905 15.6014 74.6683 8.4977 74.7685 7.78357H76.5976C76.4848 8.30977 76.3595 8.86103 76.2718 9.43735H76.322C76.8732 8.37242 77.7626 7.60817 78.8901 7.60817C79.0279 7.60817 79.1657 7.6207 79.3035 7.64576L78.9151 9.47493C78.8149 9.44988 78.6896 9.43735 78.5769 9.43735ZM69.2314 11.5797C68.8806 11.5672 68.5173 11.5422 68.1665 11.5046L67.3648 15.6014H65.4355L67.5527 4.96464C68.4547 4.78924 69.3692 4.70154 70.2962 4.71407C71.336 4.71407 72.4635 4.92705 73.1901 5.47831C73.8666 5.96693 74.2299 6.66853 74.2299 7.63323C74.2299 8.78586 73.6912 9.86332 72.7892 10.5649C71.8622 11.2415 70.5718 11.5797 69.2314 11.5797ZM70.2837 6.20497C69.9204 6.19244 69.5571 6.23003 69.2063 6.3052L68.4672 9.96355C68.8054 10.0262 69.1437 10.0638 69.4945 10.0638C71.1606 10.0638 72.2505 9.04896 72.2505 7.77105C72.2505 6.61842 71.3986 6.20497 70.2837 6.20497Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite1/LogoBitoproWhite1.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite1/LogoBitoproWhite1.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite1/LogoBitoproWhite1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite1;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite1");

  $parcel$ReactRefreshHelpers$50b2.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"k2edf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite1", ()=>(0, _logoGateioWhite1.LogoGateioWhite1));
var _logoGateioWhite1 = require("./LogoGateioWhite1");

},{"./LogoGateioWhite1":"3zGGv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3zGGv":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$dcb8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$dcb8.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite1", ()=>LogoGateioWhite1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-1 ${className}`,
        fill: "none",
        height: "21",
        viewBox: "0 0 90 21",
        width: "90",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10652)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "21",
                        id: "mask0_271_10652",
                        maskUnits: "userSpaceOnUse",
                        width: "90",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.355469 0.182617H89.6601V20.6346H0.355469V0.182617Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_271_10652)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M74.2878 6.26059H76.824V3.72363H74.2878V6.26059ZM60.8073 10.4855C61.292 9.20001 62.5329 8.28477 63.9881 8.28477C65.4431 8.28477 66.684 9.20001 67.1689 10.4855H60.8073ZM63.9881 5.92602C60.809 5.92602 58.231 8.50435 58.231 11.685C58.231 14.8656 60.809 17.4435 63.9881 17.4435C66.1697 17.4435 68.0675 16.2302 69.0444 14.4417L66.9171 13.4094C66.326 14.4118 65.2358 15.0848 63.9881 15.0848C62.4116 15.0848 61.0864 14.0113 60.7019 12.5553H67.2741C67.2737 12.5563 67.2734 12.5578 67.2732 12.5591H69.6803C69.7238 12.2739 69.7462 11.982 69.7462 11.685C69.7462 8.50435 67.1682 5.92602 63.9881 5.92602ZM70.4148 17.1365H72.951V14.5996H70.4148V17.1365ZM74.2878 17.1365H76.824V7.3759H74.2878V17.1365ZM83.9029 15.0848C82.0257 15.0848 80.5039 13.5626 80.5039 11.685C80.5039 9.80699 82.0257 8.28477 83.9029 8.28477C85.7802 8.28477 87.3019 9.80699 87.3019 11.685C87.3019 13.5626 85.7802 15.0848 83.9029 15.0848ZM83.9018 5.92602C80.7228 5.92602 78.1448 8.50435 78.1448 11.685C78.1448 14.8656 80.7228 17.4435 83.9018 17.4435C87.082 17.4435 89.66 14.8656 89.66 11.685C89.66 8.50435 87.082 5.92602 83.9018 5.92602ZM30.8755 9.56216V12.1853H34.4217C34.2366 12.9348 33.8705 13.6065 33.3456 14.143C32.5538 14.9524 31.456 15.3984 30.2541 15.3984C27.7601 15.3984 25.7307 13.3687 25.7307 10.8737C25.7307 8.37876 27.7601 6.34885 30.2541 6.34885C31.5901 6.34885 32.8181 6.92082 33.6694 7.90735L35.6998 6.24786C34.3536 4.66985 32.3563 3.72554 30.2541 3.72554C26.314 3.72554 23.1084 6.93228 23.1084 10.8737C23.1084 14.8151 26.314 18.0217 30.2541 18.0217C32.1672 18.0217 33.9307 17.3322 35.22 16.0142C36.3019 14.9081 37.019 13.3651 37.1569 11.8193C37.2241 11.0653 37.2303 10.3164 37.1906 9.56216H30.8755ZM43.7937 15.0854C41.9165 15.0854 40.3945 13.5628 40.3945 11.685C40.3945 9.80678 41.9165 8.28456 43.7937 8.28456C45.6712 8.28456 47.1932 9.80678 47.1932 11.685C47.1932 13.5628 45.6712 15.0854 43.7937 15.0854ZM47.1936 7.04833C46.2407 6.34949 45.0657 5.93578 43.7937 5.93578C40.6147 5.93578 38.0375 8.5139 38.0375 11.6939C38.0375 14.8743 40.6147 17.452 43.7937 17.452C45.0657 17.452 46.2407 17.0385 47.1936 16.3397V17.1365H49.5502V6.25147H47.1936V7.04833ZM54.6091 3.72385H52.2523V6.26059H50.8397V8.48547H52.2523V14.3079C52.2523 14.9091 52.3278 15.4149 52.4775 15.8118C52.6251 16.2045 52.8508 16.512 53.1191 16.7521C53.391 16.9959 53.71 17.1858 54.0882 17.2935C54.4725 17.4017 54.8965 17.4435 55.3446 17.4435C55.8085 17.4435 56.222 17.3954 56.575 17.3001C56.9027 17.2121 57.2168 17.0875 57.509 16.9293V15.1366C57.0441 15.3377 56.6095 15.4104 56.1137 15.4336C55.5902 15.4582 55.2806 15.3086 55.0229 15.0629C54.7529 14.8056 54.6091 14.4702 54.6091 13.9075V8.48547H57.509V6.26059H54.6091V3.72385Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "21",
                        id: "mask1_271_10652",
                        maskUnits: "userSpaceOnUse",
                        width: "90",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.355469 0.182617H89.6601V20.6346H0.355469V0.182617Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_271_10652)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M10.5786 16.033C7.47335 16.033 4.95601 13.5151 4.95601 10.4087C4.95601 7.30257 7.47335 4.78428 10.5786 4.78428V0.182617C4.93246 0.182617 0.355469 4.76094 0.355469 10.4087C0.355469 16.0563 4.93246 20.6347 10.5786 20.6347C16.2246 20.6347 20.8018 16.0563 20.8018 10.4087H16.2012C16.2012 13.5151 13.6839 16.033 10.5786 16.033Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "21",
                        id: "mask2_271_10652",
                        maskUnits: "userSpaceOnUse",
                        width: "90",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.355469 0.182617H89.6601V20.6346H0.355469V0.182617Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_271_10652)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M10.5781 10.4084H16.2007V4.78418H10.5781V10.4084Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10652",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "20.452",
                        transform: "translate(0.355469 0.182617)",
                        width: "89.3046"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite1;
var _c;
$RefreshReg$(_c, "LogoGateioWhite1");

  $parcel$ReactRefreshHelpers$dcb8.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"l20Gs":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$449f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$449f.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useWindowWidth", ()=>useWindowWidth);
var _react = require("react");
var _s = $RefreshSig$();
function useWindowWidth() {
    _s();
    const [screenWidth, setScreenWidth] = (0, _react.useState)(0);
    (0, _react.useEffect)(()=>{
        function handleResize() {
            setScreenWidth(window.innerWidth);
        }
        window.addEventListener("resize", handleResize);
        handleResize();
        return ()=>window.removeEventListener("resize", handleResize);
    }, []);
    return screenWidth;
}
_s(useWindowWidth, "p7mA4Om2cHpiZ8viGIkF1WDmDDM=");

  $parcel$ReactRefreshHelpers$449f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"7zh9u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite3", ()=>(0, _logoAceWhite3.LogoAceWhite3));
var _logoAceWhite3 = require("./LogoAceWhite3");

},{"./LogoAceWhite3":"cCpFW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cCpFW":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$a71d = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$a71d.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite3", ()=>LogoAceWhite3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-3 ${className}`,
        fill: "none",
        height: "27",
        viewBox: "0 0 78 27",
        width: "78",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_9767)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M16.607 0.691895C16.6614 0.851083 16.7701 0.977916 16.8569 1.1164C17.7398 2.5245 18.6265 3.93002 19.5146 5.33554C20.3962 6.7333 21.2804 8.12975 22.162 9.52751C23.0293 10.902 23.8941 12.2777 24.7601 13.6535C25.4216 14.7031 26.0858 15.7514 26.7473 16.801C27.4606 17.9321 28.1713 19.0633 28.8846 20.1944C29.5461 21.244 30.2102 22.2924 30.8717 23.342C31.5656 24.4408 32.2595 25.5408 32.9521 26.6409C32.9793 26.6836 33 26.7289 33.0233 26.7742H14.9849C15.0173 26.6836 15.0704 26.6021 15.1183 26.5193C15.6361 25.6237 16.1565 24.7294 16.6743 23.8338C17.2517 22.8346 17.8278 21.8355 18.4039 20.8364C18.699 20.3252 18.9916 19.8114 19.2893 19.3027C19.3411 19.2134 19.3334 19.15 19.2777 19.0672C19.1366 18.8588 19.0045 18.644 18.8699 18.4304C18.1281 17.2527 17.3863 16.0749 16.6446 14.8972C16.5798 14.7937 16.563 14.7937 16.497 14.8972C16.2109 15.3502 15.9248 15.8032 15.6387 16.2561C15.227 16.9058 14.8154 17.5555 14.405 18.2065C13.8626 19.0659 13.3227 19.9278 12.7803 20.7872C12.3233 21.512 11.8651 22.2341 11.4081 22.9589C10.8488 23.8454 10.2883 24.732 9.73164 25.6198C9.49085 26.0042 9.23841 26.3808 9.01445 26.7742C6.08099 26.7742 3.14753 26.7742 0.214064 26.7716C0.179111 26.7716 0.0962591 26.8273 0.104026 26.7199C0.15322 26.6901 0.1817 26.6435 0.211475 26.5969C0.705995 25.8152 1.19922 25.0322 1.69374 24.2505C2.31901 23.2591 2.94428 22.2678 3.57085 21.2764C4.13527 20.3821 4.70229 19.4891 5.26671 18.5935C5.94118 17.5245 6.61435 16.4554 7.28881 15.3864C7.74579 14.6617 8.20406 13.9395 8.66104 13.2147C9.21381 12.3398 9.764 11.4637 10.3168 10.5875C10.7634 9.87824 11.2113 9.1703 11.6579 8.46107C12.2029 7.59654 12.7454 6.732 13.2904 5.86876C13.7914 5.07411 14.2924 4.28076 14.7933 3.48611C15.3798 2.55557 15.9649 1.62632 16.5501 0.695777C16.5682 0.695777 16.5863 0.695777 16.6044 0.695777L16.607 0.691895Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M77.1683 23.364C76.4174 23.364 75.6653 23.3653 74.9144 23.3666C74.873 23.3666 74.8316 23.3678 74.7902 23.3666C74.7021 23.364 74.6672 23.4015 74.6775 23.4934C74.7008 23.6888 74.7319 23.8829 74.8044 24.068C75.075 24.7578 75.7896 24.9196 76.3462 24.609C76.4977 24.5236 76.5987 24.3864 76.6776 24.2324C76.7372 24.1185 76.9585 24.0551 77.0686 24.1198C77.1307 24.156 77.1022 24.2091 77.0854 24.2531C77 24.4809 76.864 24.6737 76.675 24.8277C76.1611 25.2445 75.2925 25.2263 74.807 24.7811C74.5753 24.5676 74.438 24.2932 74.3617 23.9904C74.2128 23.3924 74.2477 22.81 74.5183 22.2509C74.9572 21.345 76.1443 21.2867 76.7216 21.8174C76.9365 22.0141 77.0673 22.2652 77.1385 22.546C77.1475 22.581 77.1566 22.6172 77.1657 22.6521V23.3666L77.1683 23.364ZM75.752 23.0068C76.0588 23.0068 76.3656 23.0081 76.6725 23.0068C76.7903 23.0068 76.8123 22.9783 76.7993 22.867C76.7799 22.7117 76.7436 22.5616 76.6776 22.4179C76.4135 21.8381 75.62 21.6556 75.128 22.062C74.8756 22.2716 74.7785 22.5577 74.7216 22.8644C74.6983 22.9925 74.7086 23.0068 74.8445 23.0068C75.1462 23.0081 75.4491 23.0068 75.7507 23.0068H75.752Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M67.5127 10.9835C67.5127 9.08227 67.5127 7.18236 67.5127 5.28116C67.5127 5.23068 67.514 5.18021 67.5127 5.12973C67.5114 5.04302 67.5529 5.0029 67.6383 5.00549C67.6797 5.00549 67.7211 5.00549 67.7626 5.00549C70.6041 5.00549 73.447 5.00549 76.2885 5.00549C76.4551 5.00549 76.5384 5.08832 76.5384 5.25398C76.5384 5.77555 76.5384 6.29841 76.5384 6.81998C76.5384 6.98823 76.4521 7.07235 76.2795 7.07235C74.2263 7.07235 72.1718 7.07235 70.1187 7.07235C69.9633 7.07235 69.8856 7.15 69.8856 7.30531C69.8856 8.1349 69.8856 8.9632 69.8856 9.79279C69.8856 9.93602 69.956 10.0076 70.0967 10.0076C71.9116 10.0076 73.7266 10.0076 75.5416 10.0076C75.709 10.0076 75.7927 10.0918 75.7927 10.26C75.7927 10.8191 75.7927 11.3769 75.7927 11.936C75.7927 12.1198 75.7823 12.1289 75.5972 12.1289C73.7913 12.1289 71.9854 12.1289 70.1795 12.1289C70.1342 12.1289 70.0876 12.1289 70.0423 12.1289C69.8973 12.1314 69.8856 12.1405 69.8856 12.2867C69.8856 13.093 69.8856 13.8993 69.8856 14.7056C69.8856 14.8946 69.8856 14.8946 70.0785 14.8946C72.1459 14.8946 74.2133 14.8946 76.2807 14.8946C76.4525 14.8946 76.5384 14.9791 76.5384 15.1483C76.5384 15.6983 76.5384 16.2471 76.5384 16.7971C76.5384 16.9809 76.5293 16.9899 76.3429 16.9899C73.4638 16.9899 70.586 16.9899 67.7069 16.9899C67.5218 16.9899 67.5127 16.9809 67.5127 16.7958C67.5127 14.8584 67.5127 12.9209 67.5127 10.9835Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M50.5691 11.0738C50.5536 10.0656 50.7737 9.16997 51.197 8.32614C51.4572 7.80845 51.7834 7.33477 52.1731 6.9038C52.7051 6.31363 53.3304 5.84901 54.0347 5.4931C54.7829 5.11519 55.5765 4.89647 56.4166 4.83305C57.4665 4.7541 58.4711 4.92753 59.4368 5.33391C60.1268 5.62511 60.7443 6.0302 61.2906 6.5453C61.7023 6.93356 62.0674 7.36065 62.3561 7.84987C62.4376 7.98835 62.4363 7.9987 62.29 8.05694C61.6428 8.3132 60.9942 8.56686 60.3469 8.82571C60.2524 8.86324 60.1967 8.84124 60.1385 8.76229C59.7294 8.20319 59.2258 7.75021 58.6122 7.42536C58.1164 7.16264 57.5908 7.00474 57.0238 6.98533C56.0218 6.95039 55.1454 7.27653 54.3945 7.92105C53.5803 8.61993 53.0896 9.50776 52.9679 10.5807C52.832 11.7752 53.2061 12.8106 53.9881 13.7088C54.5758 14.3844 55.3137 14.8179 56.1927 14.9875C57.2244 15.1868 58.1643 14.9448 59.0239 14.3559C59.4601 14.0582 59.8265 13.6894 60.132 13.261C60.198 13.1678 60.2589 13.1549 60.3611 13.1963C61.0032 13.4538 61.6479 13.7062 62.2913 13.9612C62.435 14.0181 62.4389 14.0336 62.3586 14.1695C61.7593 15.1751 60.9269 15.9335 59.8964 16.4823C59.1922 16.8576 58.4413 17.088 57.6503 17.1747C56.4399 17.308 55.2748 17.1346 54.1706 16.6052C53.456 16.2623 52.8152 15.8171 52.2754 15.2385C51.32 14.2174 50.7348 13.0203 50.5924 11.6186C50.5717 11.4167 50.5717 11.2161 50.5691 11.0751V11.0738Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M46.1984 16.9898C45.8359 16.9898 45.4735 16.9846 45.1123 16.9924C44.9738 16.9963 44.8974 16.9523 44.8365 16.8254C44.5841 16.3064 44.3187 15.7939 44.065 15.2749C44.0093 15.1611 43.9407 15.1158 43.8113 15.1171C42.0196 15.1209 40.2266 15.1209 38.435 15.1171C38.3016 15.1171 38.2278 15.1611 38.1709 15.2814C37.9249 15.7939 37.6673 16.3 37.4226 16.8125C37.3618 16.9406 37.2841 16.995 37.1378 16.9937C36.409 16.9872 35.6802 16.9911 34.9513 16.9911C34.9151 16.9911 34.8775 16.9911 34.8413 16.9872C34.7869 16.982 34.7701 16.951 34.7908 16.9005C34.805 16.8668 34.8219 16.8345 34.8387 16.8008C35.4963 15.5428 36.1527 14.2849 36.8116 13.0256C37.1068 12.4613 37.4032 11.8983 37.6971 11.3341C38.3728 10.0398 39.0486 8.74433 39.7256 7.44882C40.0312 6.86384 40.3367 6.28014 40.6422 5.69645C40.7393 5.51009 40.8403 5.32501 40.9348 5.13606C40.9749 5.05452 41.0331 5.02734 41.1212 5.02734C41.2131 5.02734 41.2752 5.05193 41.3192 5.13865C41.5173 5.52562 41.7218 5.91 41.9238 6.29568C42.4274 7.26245 42.9297 8.22923 43.4333 9.19601C43.8566 10.0075 44.2812 10.819 44.7058 11.6304C45.2443 12.6606 45.7829 13.6921 46.3227 14.7223C46.6748 15.3953 47.0308 16.0683 47.3842 16.74C47.4101 16.7892 47.4347 16.8384 47.458 16.8875C47.4891 16.9523 47.4619 16.9833 47.3959 16.9859C47.3596 16.9872 47.3221 16.9872 47.2858 16.9872C46.9234 16.9872 46.5622 16.9872 46.1997 16.9872L46.1984 16.9898ZM41.1043 13.0813C41.6222 13.0813 42.1387 13.0813 42.6565 13.0813C42.8145 13.0813 42.8196 13.0709 42.7497 12.9272C42.4688 12.3461 42.1866 11.7663 41.907 11.1852C41.7697 10.9005 41.6377 10.6145 41.5018 10.3297C41.3891 10.0942 41.2739 9.85995 41.1613 9.62569C41.1367 9.57392 41.1147 9.57263 41.0888 9.62311C41.0785 9.64381 41.0681 9.66452 41.059 9.68523C40.8674 10.0851 40.6758 10.4863 40.483 10.885C40.149 11.5722 39.815 12.2594 39.4797 12.9454C39.4175 13.0735 39.4214 13.0813 39.5664 13.0813C40.0791 13.0813 40.5917 13.0813 41.1043 13.0813Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M71.4204 23.2448C71.4204 23.725 71.4269 24.2064 71.4178 24.6866C71.4126 24.97 71.3945 25.2522 71.3116 25.5278C71.1395 26.0986 70.7459 26.4014 70.1673 26.4635C69.8436 26.4985 69.5161 26.4907 69.2093 26.3497C68.8623 26.1905 68.6423 25.9239 68.5568 25.5511C68.5322 25.4424 68.5504 25.423 68.6643 25.4178C68.7096 25.4152 68.7562 25.4191 68.8015 25.4178C68.8805 25.4139 68.9284 25.445 68.9581 25.5214C69.1251 25.9446 69.4604 26.1038 69.8915 26.1076C69.9834 26.1076 70.0753 26.1089 70.166 26.096C70.5919 26.03 70.8547 25.7867 70.9608 25.366C71.0255 25.1059 71.0385 24.8419 71.0333 24.5753C71.0333 24.5533 71.0411 24.5235 71.0152 24.5157C70.9893 24.508 70.9802 24.5377 70.966 24.5546C70.3537 25.3104 69.1536 25.1874 68.7044 24.3048C68.338 23.5852 68.3678 22.8462 68.764 22.1486C69.028 21.684 69.4643 21.4679 70.0067 21.4821C70.21 21.4873 70.408 21.5119 70.5945 21.5999C70.7291 21.6633 70.8482 21.7448 70.9466 21.8574C70.966 21.8794 70.9776 21.9273 71.0152 21.9105C71.0476 21.8975 71.032 21.8535 71.0372 21.8225C71.0437 21.7824 71.0488 21.7409 71.054 21.6995C71.0618 21.6413 71.0566 21.5714 71.1343 21.5585C71.2197 21.5429 71.3103 21.5261 71.3867 21.5792C71.4385 21.6141 71.4217 21.6788 71.423 21.7332C71.423 22.2366 71.423 22.7401 71.423 23.2435H71.4204V23.2448ZM71.0333 23.2254C71.045 23.0209 71.0268 22.7983 70.9725 22.5796C70.8754 22.1875 70.6424 21.9325 70.2307 21.8678C70.1452 21.8548 70.0572 21.8561 69.9705 21.8523C69.5083 21.8315 69.1717 22.0982 69.0151 22.4968C68.8326 22.9588 68.817 23.4338 68.9724 23.9075C69.0733 24.2142 69.2611 24.4562 69.5653 24.5921C69.7646 24.6814 69.9705 24.6866 70.1841 24.6529C70.5284 24.5986 70.7744 24.4226 70.9064 24.0951C71.0165 23.822 71.0411 23.5373 71.0333 23.2254Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M36.571 25.0413C36.1269 25.0413 35.6816 25.0413 35.2376 25.0413C35.0719 25.0413 35.0576 25.0284 35.0576 24.8602C35.0576 23.3679 35.0576 21.8757 35.0576 20.3822C35.0576 20.2062 35.068 20.1971 35.2453 20.1971C36.1204 20.1971 36.9956 20.1971 37.8707 20.1971C37.9315 20.1971 38.0131 20.1712 38.0403 20.2476C38.0739 20.3433 38.0739 20.4456 38.0351 20.5427C38.0221 20.575 37.9846 20.5802 37.9522 20.5828C37.9069 20.5854 37.8603 20.5867 37.815 20.5867C37.0952 20.5867 36.3768 20.5867 35.657 20.5867C35.4874 20.5867 35.4758 20.597 35.4758 20.7653C35.4758 21.2144 35.4758 21.6621 35.4758 22.1112C35.4758 22.2782 35.4861 22.286 35.6583 22.2873C36.3405 22.2873 37.024 22.2873 37.7063 22.2885C37.7749 22.2885 37.8681 22.2562 37.9056 22.3377C37.9458 22.4257 37.9315 22.5267 37.9121 22.6212C37.9031 22.6626 37.8642 22.6729 37.8254 22.6755C37.7801 22.6781 37.7335 22.6781 37.6882 22.6781C37.015 22.6781 36.3405 22.6781 35.6674 22.6781C35.4809 22.6781 35.4758 22.6833 35.4758 22.8722C35.4758 23.4029 35.4758 23.9348 35.4758 24.4654C35.4758 24.6427 35.4835 24.6505 35.6622 24.6505C36.4091 24.6505 37.1561 24.6505 37.9031 24.6505C37.9484 24.6505 37.995 24.6505 38.0403 24.6531C38.0675 24.6531 38.0998 24.6544 38.1167 24.679C38.1788 24.7721 38.1179 24.864 38.1102 24.9572C38.105 25.0168 38.0558 25.0375 38.0001 25.0401C37.9587 25.0413 37.9173 25.0426 37.8759 25.0426C37.4409 25.0426 37.0059 25.0426 36.5697 25.0426L36.571 25.0413Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M59.7618 23.5967C59.7618 23.8711 59.7618 24.1467 59.7618 24.4211C59.7618 24.5583 59.7644 24.6955 59.7838 24.8327C59.8097 25.019 59.7838 25.0423 59.6013 25.0423C59.5832 25.0423 59.565 25.041 59.5469 25.0423C59.4628 25.0449 59.4239 24.9996 59.4084 24.922C59.389 24.8301 59.4084 24.7304 59.3501 24.6476C59.2854 24.711 59.2233 24.777 59.156 24.8378C58.9605 25.0151 58.721 25.0811 58.466 25.1135C58.1812 25.1497 57.9067 25.1174 57.6491 24.9906C57.2776 24.8081 57.0704 24.3913 57.1054 23.9772C57.1468 23.4918 57.4187 23.2149 57.8588 23.0686C58.0905 22.991 58.3326 22.9599 58.576 22.9535C58.7961 22.947 59.0161 22.9483 59.2362 22.9522C59.3359 22.9535 59.3786 22.9133 59.3747 22.8137C59.3696 22.6856 59.3773 22.5574 59.3579 22.4306C59.3087 22.12 59.1249 21.9414 58.8245 21.878C58.6071 21.8314 58.3883 21.834 58.1708 21.8844C57.9468 21.9349 57.798 22.0669 57.7177 22.2831C57.6349 22.5031 57.6206 22.5069 57.3889 22.4914C57.2944 22.4849 57.2685 22.4422 57.2866 22.3581C57.3552 22.0488 57.5041 21.7977 57.7928 21.6424C58.0258 21.5182 58.2782 21.4806 58.5372 21.4858C58.7287 21.4897 58.9203 21.5026 59.1068 21.5661C59.4679 21.689 59.6699 21.944 59.7372 22.3115C59.7579 22.4241 59.767 22.538 59.7657 22.6532C59.7631 22.969 59.7657 23.2848 59.7657 23.6019L59.7618 23.5967ZM58.8957 23.2861C58.8 23.2861 58.7029 23.2809 58.6071 23.2861C58.374 23.3003 58.141 23.321 57.9222 23.4168C57.6336 23.5436 57.4886 23.7895 57.5106 24.1105C57.5326 24.4133 57.7203 24.6411 58.0154 24.7239C58.2381 24.7861 58.4608 24.7667 58.6809 24.711C58.9903 24.6321 59.1909 24.4366 59.2854 24.1312C59.3592 23.8918 59.376 23.6459 59.3708 23.3974C59.3696 23.3158 59.3294 23.2822 59.2505 23.2835C59.1314 23.2848 59.0123 23.2835 58.8932 23.2835L58.8957 23.2861Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M51.5615 22.4888C51.5615 21.7149 51.5615 20.9422 51.5615 20.1683C51.5615 19.9392 51.6392 19.8797 51.8657 19.9314C51.9175 19.9431 51.9473 19.9703 51.9486 20.0246C51.9499 20.066 51.9512 20.1075 51.9512 20.1476C51.9512 20.7157 51.9512 21.2826 51.9512 21.8508C51.9512 21.8831 51.9486 21.9155 51.9512 21.9465C51.9538 21.9711 51.9369 22.0087 51.9719 22.0177C51.9939 22.0242 52.0056 21.9918 52.0198 21.9737C52.3641 21.5259 52.8302 21.4146 53.3571 21.5117C53.8529 21.6036 54.1713 21.9957 54.2322 22.5432C54.2503 22.7075 54.2594 22.8706 54.2594 23.0363C54.2568 23.6407 54.2594 24.2451 54.2581 24.8495C54.2581 24.9116 54.2775 24.9918 54.205 25.0203C54.1105 25.0578 54.0069 25.054 53.9098 25.0203C53.8762 25.0087 53.8723 24.9711 53.871 24.9388C53.8697 24.8974 53.8684 24.8559 53.8684 24.8158C53.8684 24.1933 53.8684 23.5708 53.8684 22.9483C53.8684 22.7826 53.8477 22.6195 53.8037 22.4603C53.6962 22.0786 53.4296 21.8637 53.0308 21.8611C52.5091 21.8572 52.1298 22.0734 52.0004 22.6687C51.968 22.8163 51.9525 22.9664 51.9525 23.1178C51.9538 23.6899 51.9538 24.2619 51.9525 24.8339C51.9525 24.8986 51.9823 24.9867 51.9072 25.0216C51.8153 25.063 51.7104 25.0527 51.612 25.0255C51.5771 25.0164 51.5693 24.9802 51.5667 24.9465C51.5641 24.9012 51.5628 24.8546 51.5628 24.8093C51.5628 24.0354 51.5628 23.2628 51.5628 22.4888H51.5615Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M62.9167 23.3651C62.9167 22.9535 62.9167 22.5407 62.9167 22.1291C62.9167 21.9919 62.9206 21.8547 62.9024 21.7176C62.8856 21.5868 62.9193 21.5558 63.0526 21.5506C63.085 21.5506 63.1173 21.5506 63.1484 21.5506C63.2364 21.5506 63.283 21.5894 63.2869 21.6813C63.2921 21.7823 63.3128 21.8806 63.3089 21.9829C63.3089 22.0036 63.3012 22.0359 63.3258 22.0424C63.3517 22.0502 63.3594 22.0178 63.3711 21.9997C63.5432 21.7292 63.7853 21.561 64.1012 21.5092C64.4132 21.4574 64.7226 21.46 65.0126 21.6153C65.2313 21.7318 65.3893 21.9052 65.4786 22.1356C65.5537 22.3284 65.5938 22.5303 65.5938 22.74C65.5925 23.4402 65.5938 24.1416 65.5925 24.8418C65.5925 24.9065 65.621 24.9945 65.5395 25.0243C65.4488 25.0579 65.3504 25.0502 65.2559 25.0256C65.221 25.0165 65.2106 24.9829 65.208 24.9492C65.2055 24.9039 65.2042 24.8573 65.2042 24.812C65.2042 24.1572 65.2042 23.5023 65.2042 22.8474C65.2042 22.7283 65.1964 22.6106 65.1705 22.4928C65.0644 22.0036 64.7213 21.825 64.2695 21.8638C63.8216 21.9013 63.5407 22.1524 63.4034 22.573C63.3452 22.7529 63.3076 22.9354 63.3089 23.1257C63.3102 23.6848 63.3089 24.2426 63.3089 24.8017C63.3089 25.032 63.2326 25.0903 63.0034 25.0372C62.9516 25.0256 62.9219 24.9984 62.9206 24.944C62.9193 24.8987 62.918 24.8522 62.918 24.8069C62.918 24.3254 62.918 23.8452 62.918 23.3638L62.9167 23.3651Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M47.5209 21.4834C48.097 21.4977 48.5397 21.8225 48.7093 22.401C48.7197 22.436 48.7275 22.4722 48.7339 22.5085C48.7482 22.5848 48.7158 22.6211 48.6394 22.6224C48.5941 22.6224 48.5475 22.6211 48.5022 22.6236C48.4051 22.6301 48.3533 22.5874 48.3223 22.4942C48.2472 22.2716 48.1229 22.0814 47.9093 21.9662C47.3902 21.684 46.7494 21.8898 46.4943 22.445C46.2251 23.03 46.2303 23.6318 46.5202 24.2091C46.8322 24.8316 47.5403 24.8769 47.9624 24.5883C48.1255 24.477 48.2148 24.3152 48.2977 24.1444C48.3248 24.0887 48.3326 24.011 48.4077 23.9968C48.5022 23.98 48.6006 23.9774 48.6951 23.9981C48.7508 24.0098 48.7365 24.0628 48.7236 24.1016C48.5592 24.6012 48.264 24.983 47.7035 25.0904C46.9086 25.2431 46.2536 24.8562 46.0154 24.0835C45.8069 23.4066 45.8445 22.7401 46.2277 22.1267C46.506 21.6789 46.9306 21.4744 47.5209 21.4821V21.4834Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M43.3408 25.0426C43.2088 25.0737 43.1207 24.9974 43.0392 24.8731C42.7725 24.468 42.4955 24.0694 42.221 23.6682C42.1498 23.5634 42.1459 23.5647 42.0734 23.6708C41.7964 24.081 41.5207 24.4913 41.2436 24.9016C41.1608 25.0245 40.9135 25.097 40.7828 25.0336C40.7142 24.9999 40.7556 24.9572 40.7802 24.921C40.9278 24.7062 41.0779 24.4926 41.2268 24.2778C41.4417 23.9697 41.6553 23.6604 41.8728 23.355C41.9246 23.2825 41.9026 23.2307 41.8598 23.1699C41.6126 22.8127 41.3653 22.4542 41.1193 22.0957C41.0235 21.9559 40.9265 21.8175 40.8332 21.6764C40.7776 21.5936 40.7918 21.5612 40.8889 21.5534C40.9666 21.547 41.0443 21.5509 41.1219 21.5534C41.2061 21.556 41.2488 21.6169 41.2902 21.679C41.5414 22.0556 41.7938 22.4335 42.0462 22.8101C42.0618 22.8334 42.076 22.8567 42.0916 22.8787C42.155 22.9654 42.1666 22.9667 42.2262 22.8813C42.4191 22.6082 42.6107 22.3339 42.8023 22.0608C42.889 21.9365 42.9744 21.8123 43.0612 21.6893C43.1492 21.5651 43.3745 21.5017 43.5156 21.5599C43.5881 21.5897 43.5492 21.6337 43.5246 21.6686C43.4301 21.8032 43.3343 21.9378 43.2372 22.0711C42.9848 22.4206 42.735 22.77 42.4786 23.1156C42.4113 23.2062 42.4061 23.2786 42.4722 23.3731C42.81 23.8571 43.1427 24.3464 43.4767 24.833C43.4845 24.8446 43.4936 24.855 43.5 24.8666C43.5233 24.9132 43.5894 24.9533 43.5557 25.0103C43.5233 25.0634 43.4547 25.0349 43.4016 25.0414C43.3887 25.0427 43.3745 25.0414 43.3382 25.0414L43.3408 25.0426Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_9767",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "26.0914",
                        transform: "translate(0.105469 0.691895)",
                        width: "77.0623"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite3;
var _c;
$RefreshReg$(_c, "LogoAceWhite3");

  $parcel$ReactRefreshHelpers$a71d.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"ilL3N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite8", ()=>(0, _logoAceWhite8.LogoAceWhite8));
var _logoAceWhite8 = require("./LogoAceWhite8");

},{"./LogoAceWhite8":"7FIJ4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7FIJ4":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$0470 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$0470.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite8", ()=>LogoAceWhite8);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite8 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-8 ${className}`,
        fill: "none",
        height: "44",
        viewBox: "0 0 127 44",
        width: "127",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7232)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M27.3109 0.543457C27.4 0.8043 27.5782 1.01213 27.7203 1.23904C29.167 3.54634 30.62 5.84939 32.0752 8.15245C33.5197 10.4428 34.9685 12.731 36.4131 15.0213C37.8343 17.2735 39.2513 19.5278 40.6704 21.782C41.7544 23.5019 42.8426 25.2197 43.9265 26.9395C45.0953 28.793 46.2599 30.6465 47.4287 32.5C48.5126 34.2198 49.6008 35.9376 50.6848 37.6574C51.8217 39.4579 52.9587 41.2605 54.0936 43.0631C54.1381 43.133 54.1721 43.2073 54.2103 43.2815H24.653C24.706 43.133 24.793 42.9994 24.8715 42.8637C25.72 41.3962 26.5727 39.9308 27.4212 38.4633C28.3673 36.8261 29.3112 35.189 30.2552 33.5518C30.7388 32.7141 31.2182 31.8722 31.7061 31.0388C31.7909 30.8925 31.7782 30.7886 31.687 30.6528C31.4558 30.3114 31.2394 29.9594 31.0188 29.6095C29.8033 27.6797 28.5879 25.7498 27.3724 23.82C27.2663 23.6504 27.2388 23.6504 27.1306 23.82C26.6618 24.5623 26.193 25.3045 25.7242 26.0467C25.0496 27.1113 24.3751 28.1759 23.7027 29.2426C22.8139 30.6507 21.9293 32.0631 21.0405 33.4712C20.2917 34.6588 19.5408 35.8421 18.792 37.0297C17.8756 38.4824 16.9571 39.9351 16.045 41.3898C15.6505 42.0197 15.2368 42.6368 14.8698 43.2815C10.0631 43.2815 5.25641 43.2815 0.449697 43.2772C0.392423 43.2772 0.256664 43.3684 0.269392 43.1924C0.349999 43.1436 0.396666 43.0673 0.445454 42.991C1.25577 41.7101 2.06396 40.4271 2.87427 39.1462C3.89882 37.5217 4.92338 35.8973 5.95006 34.2728C6.87492 32.8075 7.80402 31.3442 8.72887 29.8767C9.83404 28.125 10.9371 26.3733 12.0422 24.6216C12.791 23.4341 13.542 22.2507 14.2907 21.0631C15.1965 19.6296 16.098 18.1939 17.0038 16.7582C17.7356 15.596 18.4696 14.436 19.2014 13.2739C20.0944 11.8573 20.9832 10.4407 21.8763 9.02617C22.6972 7.72407 23.5181 6.4241 24.339 5.122C25.3 3.59723 26.2588 2.07459 27.2176 0.549819C27.2472 0.549819 27.2769 0.549819 27.3066 0.549819L27.3109 0.543457Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M126.545 37.6938C125.314 37.6938 124.082 37.6959 122.851 37.6981C122.784 37.6981 122.716 37.7002 122.648 37.6981C122.504 37.6938 122.446 37.7553 122.463 37.9059C122.501 38.2261 122.552 38.5442 122.671 38.8475C123.115 39.9778 124.285 40.2429 125.198 39.7339C125.446 39.594 125.611 39.3692 125.741 39.1168C125.838 38.9302 126.201 38.8263 126.381 38.9323C126.483 38.9917 126.436 39.0786 126.409 39.1507C126.269 39.524 126.046 39.8399 125.736 40.0923C124.894 40.7752 123.471 40.7455 122.675 40.016C122.296 39.6661 122.071 39.2165 121.946 38.7202C121.702 37.7405 121.759 36.7862 122.202 35.87C122.921 34.3856 124.867 34.2901 125.813 35.1596C126.165 35.482 126.379 35.8934 126.496 36.3536C126.511 36.4108 126.525 36.4702 126.54 36.5274V37.6981L126.545 37.6938ZM124.224 37.1085C124.727 37.1085 125.229 37.1106 125.732 37.1085C125.925 37.1085 125.961 37.0619 125.94 36.8795C125.908 36.625 125.849 36.379 125.741 36.1436C125.308 35.1935 124.008 34.8945 123.201 35.5604C122.788 35.904 122.629 36.3726 122.535 36.8752C122.497 37.0852 122.514 37.1085 122.737 37.1085C123.231 37.1106 123.728 37.1085 124.222 37.1085H124.224Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M110.724 17.4074C110.724 14.2921 110.724 11.179 110.724 8.06371C110.724 7.98101 110.726 7.8983 110.724 7.81559C110.722 7.67351 110.79 7.60777 110.93 7.61201C110.998 7.61201 111.066 7.61201 111.134 7.61201C115.79 7.61201 120.448 7.61201 125.104 7.61201C125.377 7.61201 125.513 7.74773 125.513 8.01918C125.513 8.87381 125.513 9.73057 125.513 10.5852C125.513 10.8609 125.372 10.9987 125.089 10.9987C121.725 10.9987 118.358 10.9987 114.994 10.9987C114.74 10.9987 114.612 11.126 114.612 11.3805C114.612 12.7398 114.612 14.097 114.612 15.4564C114.612 15.6911 114.728 15.8084 114.958 15.8084C117.932 15.8084 120.906 15.8084 123.88 15.8084C124.154 15.8084 124.292 15.9463 124.292 16.222C124.292 17.1381 124.292 18.0521 124.292 18.9682C124.292 19.2694 124.275 19.2842 123.971 19.2842C121.012 19.2842 118.053 19.2842 115.094 19.2842C115.02 19.2842 114.943 19.2842 114.869 19.2842C114.631 19.2885 114.612 19.3033 114.612 19.5429C114.612 20.8641 114.612 22.1853 114.612 23.5065C114.612 23.8161 114.612 23.8161 114.928 23.8161C118.316 23.8161 121.704 23.8161 125.091 23.8161C125.373 23.8161 125.513 23.9547 125.513 24.2318C125.513 25.1331 125.513 26.0322 125.513 26.9335C125.513 27.2346 125.499 27.2495 125.193 27.2495C120.475 27.2495 115.76 27.2495 111.042 27.2495C110.739 27.2495 110.724 27.2346 110.724 26.9314C110.724 23.7567 110.724 20.5821 110.724 17.4074Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M82.9593 17.5557C82.9338 15.9037 83.2944 14.4362 83.9881 13.0535C84.4144 12.2052 84.949 11.4291 85.5875 10.7229C86.4593 9.75585 87.4839 8.99452 88.6378 8.41134C89.8639 7.7921 91.1642 7.4337 92.5409 7.32979C94.2612 7.20043 95.9073 7.4846 97.4897 8.15049C98.6203 8.62764 99.6322 9.29142 100.527 10.1354C101.202 10.7717 101.8 11.4715 102.273 12.2731C102.407 12.5 102.405 12.517 102.165 12.6124C101.104 13.0323 100.042 13.4479 98.981 13.8721C98.8261 13.9336 98.7349 13.8975 98.6394 13.7682C97.9691 12.852 97.144 12.1098 96.1385 11.5775C95.3261 11.147 94.4648 10.8883 93.5357 10.8565C91.8939 10.7992 90.4578 11.3336 89.2275 12.3897C87.8933 13.5349 87.0893 14.9897 86.8899 16.7477C86.6672 18.7051 87.2802 20.4017 88.5614 21.8734C89.5245 22.9804 90.7336 23.6908 92.1739 23.9686C93.8645 24.2952 95.4045 23.8986 96.813 22.9337C97.5279 22.446 98.1282 21.8416 98.6288 21.1396C98.737 20.987 98.8367 20.9658 99.0043 21.0336C100.056 21.4556 101.113 21.8692 102.167 22.2869C102.402 22.3802 102.409 22.4057 102.277 22.6284C101.295 24.2761 99.9313 25.5188 98.2428 26.418C97.0888 27.033 95.8585 27.4105 94.5624 27.5526C92.5791 27.771 90.67 27.4868 88.8605 26.6195C87.6896 26.0575 86.6396 25.328 85.7551 24.38C84.1896 22.7068 83.2308 20.7452 82.9974 18.4485C82.9635 18.1177 82.9635 17.789 82.9593 17.5578V17.5557Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M75.7982 27.2494C75.2042 27.2494 74.6103 27.2409 74.0184 27.2536C73.7915 27.26 73.6663 27.1879 73.5666 26.9801C73.153 26.1297 72.7181 25.2899 72.3024 24.4395C72.2112 24.2529 72.0987 24.1786 71.8866 24.1808C68.9508 24.1871 66.0129 24.1871 63.0771 24.1808C62.8586 24.1808 62.7377 24.2529 62.6444 24.4501C62.2414 25.2899 61.8192 26.1191 61.4183 26.9588C61.3186 27.1688 61.1913 27.2579 60.9516 27.2557C59.7574 27.2451 58.5631 27.2515 57.3689 27.2515C57.3095 27.2515 57.248 27.2515 57.1886 27.2451C57.0995 27.2367 57.0719 27.1858 57.1058 27.1031C57.1292 27.0479 57.1567 26.9949 57.1843 26.9398C58.2619 24.8785 59.3374 22.8172 60.4171 20.7537C60.9007 19.8291 61.3865 18.9066 61.868 17.982C62.9753 15.8613 64.0826 13.7385 65.192 11.6157C65.6926 10.6572 66.1932 9.70077 66.6938 8.74434C66.8529 8.43896 67.0184 8.13571 67.1732 7.82609C67.239 7.69248 67.3344 7.64795 67.4787 7.64795C67.6293 7.64795 67.7311 7.68824 67.8032 7.83033C68.1278 8.46441 68.4629 9.09425 68.7938 9.72621C69.619 11.3104 70.442 12.8945 71.2672 14.4787C71.9608 15.8083 72.6566 17.138 73.3524 18.4676C74.2348 20.1557 75.1172 21.8459 76.0018 23.534C76.5788 24.6367 77.1621 25.7395 77.7412 26.8401C77.7836 26.9207 77.8239 27.0013 77.8621 27.0818C77.913 27.1879 77.8685 27.2388 77.7603 27.243C77.7009 27.2451 77.6394 27.2451 77.58 27.2451C76.9861 27.2451 76.3942 27.2451 75.8003 27.2451L75.7982 27.2494ZM67.4511 20.8449C68.2996 20.8449 69.146 20.8449 69.9945 20.8449C70.2533 20.8449 70.2617 20.828 70.1472 20.5926C69.6869 19.6404 69.2245 18.6903 68.7663 17.7381C68.5414 17.2716 68.325 16.8029 68.1023 16.3364C67.9178 15.9504 67.729 15.5666 67.5444 15.1827C67.5041 15.0979 67.4681 15.0958 67.4256 15.1785C67.4087 15.2124 67.3917 15.2463 67.3769 15.2803C67.0629 15.9356 66.749 16.593 66.4329 17.2461C65.8856 18.3722 65.3384 19.4983 64.789 20.6223C64.6871 20.8322 64.6935 20.8449 64.9311 20.8449C65.7711 20.8449 66.6111 20.8449 67.4511 20.8449Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M117.126 37.4988C117.126 38.2856 117.137 39.0745 117.122 39.8613C117.113 40.3257 117.084 40.788 116.948 41.2397C116.666 42.1749 116.021 42.6712 115.073 42.7729C114.542 42.8302 114.006 42.8175 113.503 42.5863C112.935 42.3255 112.574 41.8886 112.434 41.2779C112.394 41.0997 112.423 41.0679 112.61 41.0594C112.684 41.0552 112.761 41.0616 112.835 41.0594C112.964 41.0531 113.043 41.104 113.091 41.2291C113.365 41.9226 113.915 42.1834 114.621 42.1898C114.772 42.1898 114.922 42.1919 115.071 42.1707C115.768 42.0625 116.199 41.6638 116.373 40.9746C116.479 40.5484 116.5 40.1157 116.492 39.6789C116.492 39.6428 116.505 39.594 116.462 39.5813C116.42 39.5686 116.405 39.6174 116.382 39.6449C115.378 40.8834 113.412 40.682 112.676 39.2357C112.075 38.0566 112.124 36.8456 112.773 35.7026C113.206 34.9413 113.921 34.5871 114.81 34.6105C115.143 34.6189 115.467 34.6592 115.773 34.8034C115.993 34.9074 116.188 35.041 116.35 35.2255C116.382 35.2615 116.401 35.34 116.462 35.3124C116.515 35.2912 116.49 35.2191 116.498 35.1682C116.509 35.1025 116.517 35.0346 116.526 34.9667C116.539 34.8713 116.53 34.7568 116.657 34.7356C116.797 34.7101 116.946 34.6826 117.071 34.7695C117.156 34.8268 117.128 34.9328 117.13 35.0219C117.13 35.8468 117.13 36.6718 117.13 37.4967H117.126V37.4988ZM116.492 37.467C116.511 37.1319 116.481 36.7672 116.392 36.4088C116.233 35.7662 115.851 35.3485 115.177 35.2424C115.037 35.2212 114.892 35.2233 114.75 35.217C113.993 35.183 113.442 35.6199 113.185 36.2731C112.886 37.0301 112.86 37.8084 113.115 38.5846C113.28 39.0872 113.588 39.4838 114.086 39.7064C114.413 39.8528 114.75 39.8613 115.1 39.8061C115.665 39.717 116.068 39.4286 116.284 38.8921C116.464 38.4446 116.505 37.9781 116.492 37.467Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M60.0227 40.4422C59.2951 40.4422 58.5654 40.4422 57.8378 40.4422C57.5663 40.4422 57.543 40.421 57.543 40.1453C57.543 37.7001 57.543 35.255 57.543 32.8077C57.543 32.5193 57.5599 32.5045 57.8506 32.5045C59.2845 32.5045 60.7185 32.5045 62.1524 32.5045C62.2521 32.5045 62.3857 32.4621 62.4303 32.5872C62.4854 32.7441 62.4854 32.9117 62.4218 33.0707C62.4006 33.1237 62.3391 33.1322 62.2861 33.1364C62.2118 33.1407 62.1354 33.1428 62.0612 33.1428C60.8818 33.1428 59.7045 33.1428 58.5251 33.1428C58.2472 33.1428 58.2281 33.1598 58.2281 33.4355C58.2281 34.1713 58.2281 34.9051 58.2281 35.641C58.2281 35.9145 58.2451 35.9273 58.5272 35.9294C59.6451 35.9294 60.7651 35.9294 61.883 35.9315C61.9954 35.9315 62.1482 35.8785 62.2097 36.0121C62.2754 36.1563 62.2521 36.3217 62.2203 36.4765C62.2054 36.5444 62.1418 36.5613 62.0782 36.5656C62.0039 36.5698 61.9276 36.5698 61.8533 36.5698C60.7503 36.5698 59.6451 36.5698 58.5421 36.5698C58.2366 36.5698 58.2281 36.5783 58.2281 36.8879C58.2281 37.7574 58.2281 38.629 58.2281 39.4985C58.2281 39.789 58.2409 39.8017 58.5336 39.8017C59.7575 39.8017 60.9815 39.8017 62.2054 39.8017C62.2797 39.8017 62.3561 39.8017 62.4303 39.806C62.4748 39.806 62.5279 39.8081 62.5554 39.8484C62.6573 40.0011 62.5576 40.1516 62.5448 40.3043C62.5364 40.4019 62.4557 40.4358 62.3645 40.4401C62.2967 40.4422 62.2288 40.4443 62.1609 40.4443C61.4482 40.4443 60.7354 40.4443 60.0206 40.4443L60.0227 40.4422Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M98.0221 38.0753C98.0221 38.5249 98.0221 38.9766 98.0221 39.4262C98.0221 39.651 98.0264 39.8758 98.0582 40.1006C98.1006 40.4059 98.0582 40.4441 97.7591 40.4441C97.7294 40.4441 97.6997 40.442 97.67 40.4441C97.5321 40.4483 97.4685 40.3741 97.443 40.2469C97.4112 40.0963 97.443 39.933 97.3476 39.7973C97.2415 39.9012 97.1397 40.0094 97.0294 40.109C96.7091 40.3996 96.3166 40.5077 95.8988 40.5607C95.4321 40.6201 94.9824 40.5671 94.5603 40.3593C93.9515 40.0603 93.6121 39.3774 93.6693 38.6988C93.7372 37.9035 94.1827 37.4497 94.9039 37.2101C95.2836 37.0828 95.6803 37.0319 96.0791 37.0213C96.4397 37.0107 96.8003 37.0128 97.1609 37.0192C97.3242 37.0213 97.3942 36.9556 97.3879 36.7923C97.3794 36.5823 97.3921 36.3724 97.3603 36.1646C97.2797 35.6556 96.9785 35.363 96.4863 35.259C96.13 35.1827 95.7715 35.1869 95.4151 35.2696C95.0481 35.3524 94.8042 35.5687 94.6727 35.9228C94.5369 36.2833 94.5136 36.2897 94.1339 36.2642C93.979 36.2536 93.9366 36.1837 93.9663 36.0458C94.0787 35.539 94.3227 35.1276 94.7957 34.8731C95.1775 34.6695 95.5912 34.608 96.0154 34.6165C96.3294 34.6228 96.6433 34.644 96.9488 34.748C97.5406 34.9494 97.8715 35.3672 97.9818 35.9695C98.0157 36.154 98.0306 36.3406 98.0285 36.5293C98.0242 37.0468 98.0285 37.5642 98.0285 38.0838L98.0221 38.0753ZM96.603 37.5663C96.446 37.5663 96.2869 37.5579 96.13 37.5663C95.7481 37.5897 95.3663 37.6236 95.0078 37.7805C94.5348 37.9884 94.2972 38.3913 94.3333 38.9172C94.3693 39.4135 94.6769 39.7867 95.1606 39.9224C95.5254 40.0242 95.8903 39.9924 96.2509 39.9012C96.7579 39.7718 97.0867 39.4516 97.2415 38.9511C97.3624 38.5588 97.39 38.1559 97.3815 37.7487C97.3794 37.6151 97.3136 37.56 97.1842 37.5621C96.9891 37.5642 96.7939 37.5621 96.5988 37.5621L96.603 37.5663Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M84.5864 36.26C84.5864 34.9918 84.5864 33.7258 84.5864 32.4576C84.5864 32.0822 84.7137 31.9847 85.0849 32.0695C85.1698 32.0886 85.2186 32.1331 85.2207 32.2222C85.2228 32.2901 85.2249 32.3579 85.2249 32.4237C85.2249 33.3546 85.2249 34.2835 85.2249 35.2145C85.2249 35.2675 85.2207 35.3205 85.2249 35.3714C85.2292 35.4117 85.2016 35.4732 85.2589 35.488C85.2949 35.4986 85.314 35.4456 85.3373 35.4159C85.9016 34.6822 86.6652 34.4998 87.5286 34.6589C88.341 34.8094 88.8628 35.452 88.9625 36.349C88.9922 36.6184 89.0071 36.8856 89.0071 37.157C89.0028 38.1474 89.0071 39.1377 89.005 40.1281C89.005 40.2299 89.0368 40.3614 88.918 40.408C88.7631 40.4695 88.5934 40.4631 88.4343 40.408C88.3792 40.3889 88.3728 40.3274 88.3707 40.2744C88.3686 40.2065 88.3665 40.1387 88.3665 40.0729C88.3665 39.0529 88.3665 38.0329 88.3665 37.0128C88.3665 36.7414 88.3325 36.4742 88.2604 36.2133C88.0843 35.5877 87.6474 35.2357 86.994 35.2314C86.1392 35.2251 85.5176 35.5792 85.3055 36.5547C85.2525 36.7965 85.227 37.0425 85.227 37.2906C85.2292 38.228 85.2292 39.1653 85.227 40.1026C85.227 40.2087 85.2758 40.3529 85.1528 40.4101C85.0022 40.478 84.8304 40.461 84.6692 40.4165C84.6119 40.4016 84.5991 40.3423 84.5949 40.2871C84.5907 40.2129 84.5885 40.1366 84.5885 40.0623C84.5885 38.7942 84.5885 37.5281 84.5885 36.26H84.5864Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M103.192 37.696C103.192 37.0216 103.192 36.3451 103.192 35.6707C103.192 35.4459 103.198 35.2212 103.168 34.9964C103.141 34.7822 103.196 34.7313 103.414 34.7228C103.467 34.7228 103.52 34.7228 103.571 34.7228C103.715 34.7228 103.792 34.7864 103.798 34.937C103.807 35.1024 103.841 35.2636 103.834 35.4311C103.834 35.465 103.822 35.518 103.862 35.5287C103.904 35.5414 103.917 35.4884 103.936 35.4587C104.218 35.0154 104.615 34.7398 105.132 34.6549C105.644 34.5701 106.151 34.5743 106.626 34.8288C106.984 35.0197 107.243 35.3039 107.389 35.6813C107.512 35.9973 107.578 36.3281 107.578 36.6717C107.576 37.819 107.578 38.9684 107.576 40.1157C107.576 40.2217 107.623 40.3659 107.489 40.4147C107.341 40.4698 107.179 40.4571 107.025 40.4168C106.967 40.402 106.95 40.3468 106.946 40.2917C106.942 40.2175 106.94 40.1411 106.94 40.0669C106.94 38.9938 106.94 37.9208 106.94 36.8477C106.94 36.6526 106.927 36.4596 106.885 36.2666C106.711 35.465 106.149 35.1724 105.408 35.236C104.674 35.2975 104.214 35.7089 103.989 36.3981C103.894 36.6929 103.832 36.9919 103.834 37.3037C103.836 38.2198 103.834 39.1338 103.834 40.0499C103.834 40.4274 103.709 40.5228 103.334 40.4359C103.249 40.4168 103.2 40.3723 103.198 40.2832C103.196 40.209 103.194 40.1326 103.194 40.0584C103.194 39.2695 103.194 38.4828 103.194 37.6939L103.192 37.696Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M77.966 34.6123C78.9099 34.6357 79.6354 35.168 79.9132 36.1159C79.9302 36.1732 79.9429 36.2325 79.9536 36.2919C79.9769 36.417 79.9239 36.4764 79.7987 36.4785C79.7245 36.4785 79.6481 36.4764 79.5739 36.4807C79.4148 36.4913 79.3299 36.4213 79.279 36.2686C79.156 35.9038 78.9523 35.5921 78.6023 35.4033C77.7517 34.941 76.7017 35.2782 76.2838 36.188C75.8426 37.1465 75.8511 38.1327 76.3262 39.0785C76.8375 40.0985 77.9978 40.1728 78.6893 39.6998C78.9566 39.5175 79.1029 39.2524 79.2387 38.9724C79.2832 38.8813 79.296 38.754 79.419 38.7307C79.5738 38.7031 79.7351 38.6989 79.8899 38.7328C79.9811 38.7519 79.9578 38.8388 79.9366 38.9025C79.6672 39.721 79.1835 40.3466 78.265 40.5227C76.9626 40.7729 75.8893 40.1388 75.499 38.8728C75.1574 37.7637 75.219 36.6715 75.8468 35.6663C76.3029 34.9326 76.9987 34.5975 77.966 34.6102V34.6123Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M71.1165 40.4442C70.9002 40.4951 70.7559 40.3699 70.6223 40.1664C70.1853 39.5026 69.7314 38.8494 69.2817 38.192C69.165 38.0202 69.1586 38.0224 69.0398 38.1963C68.5859 38.8685 68.1341 39.5408 67.6801 40.213C67.5444 40.4145 67.1392 40.5332 66.925 40.4293C66.8125 40.3742 66.8804 40.3042 66.9207 40.2448C67.1625 39.8928 67.4086 39.5429 67.6525 39.1909C68.0047 38.6861 68.3547 38.1793 68.711 37.6788C68.7959 37.5601 68.7598 37.4752 68.6898 37.3756C68.2847 36.7902 67.8795 36.2028 67.4765 35.6154C67.3195 35.3864 67.1604 35.1594 67.0077 34.9283C66.9165 34.7926 66.9398 34.7396 67.0989 34.7268C67.2262 34.7162 67.3535 34.7226 67.4807 34.7268C67.6186 34.7311 67.6886 34.8307 67.7565 34.9325C68.168 35.5496 68.5817 36.1689 68.9953 36.786C69.0207 36.8242 69.0441 36.8623 69.0695 36.8984C69.1735 37.0405 69.1926 37.0426 69.2901 36.9026C69.6062 36.4552 69.9201 36.0056 70.2341 35.5581C70.3762 35.3545 70.5162 35.151 70.6583 34.9495C70.8026 34.7459 71.1717 34.642 71.4029 34.7374C71.5217 34.7862 71.458 34.8583 71.4177 34.9156C71.2629 35.1361 71.1059 35.3567 70.9468 35.5751C70.5332 36.1477 70.1238 36.7203 69.7038 37.2865C69.5935 37.4349 69.585 37.5537 69.6932 37.7085C70.2468 38.5016 70.792 39.3032 71.3393 40.1006C71.352 40.1197 71.3668 40.1367 71.3774 40.1558C71.4156 40.2321 71.5238 40.2978 71.4687 40.3912C71.4156 40.4781 71.3032 40.4315 71.2162 40.4421C71.195 40.4442 71.1717 40.4421 71.1123 40.4421L71.1165 40.4442Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7232",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "42.7529",
                        transform: "translate(0.271484 0.543457)",
                        width: "126.273"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite8;
var _c;
$RefreshReg$(_c, "LogoAceWhite8");

  $parcel$ReactRefreshHelpers$0470.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"f7Kt6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite3", ()=>(0, _logoBinanceWhite3.LogoBinanceWhite3));
var _logoBinanceWhite3 = require("./LogoBinanceWhite3");

},{"./LogoBinanceWhite3":"3m8wm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3m8wm":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f6b3 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f6b3.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite3", ()=>LogoBinanceWhite3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-3 ${className}`,
        fill: "none",
        height: "27",
        viewBox: "0 0 131 27",
        width: "131",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_9761)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M8.28972 11.755L13.3503 6.69652L18.413 11.7591L21.3559 8.81417L13.3503 0.806641L5.34473 8.81211L8.28972 11.755Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.320312 13.835L3.26423 10.8911L6.20814 13.835L3.26422 16.7788L0.320312 13.835Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M8.28993 15.9142L13.3505 20.9747L18.4132 15.9121L21.3582 18.8529L21.3561 18.855L13.3505 26.8625L5.34494 18.8591L5.34082 18.855L8.28993 15.9142Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M20.4873 13.8359L23.4312 10.8921L26.3751 13.8359L23.4312 16.7798L20.4873 13.8359Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M16.3368 13.8334L13.3506 10.8452L11.1424 13.0534L10.8872 13.3065L10.3645 13.8293L10.3604 13.8334L10.3645 13.8395L13.3506 16.8236L16.3368 13.8354L16.3388 13.8334H16.3368Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M30.9688 7.12061H37.3732C38.962 7.12061 40.1639 7.5322 40.9788 8.35538C41.2859 8.65946 41.5279 9.02275 41.6903 9.42321C41.8527 9.82367 41.932 10.2529 41.9235 10.685V10.7241C41.929 11.078 41.8797 11.4307 41.7773 11.7695C41.6862 12.0612 41.5538 12.3384 41.3843 12.5927C41.2262 12.8325 41.035 13.0487 40.8163 13.2348C40.6026 13.4187 40.3685 13.5775 40.1186 13.7081C40.8392 13.9591 41.4872 14.3831 42.0058 14.9429C42.464 15.4643 42.6931 16.1846 42.6931 17.1038V17.1429C42.7062 17.717 42.5812 18.2858 42.3289 18.8016C42.0843 19.2768 41.7259 19.6841 41.2855 19.987C40.7876 20.3208 40.2332 20.5613 39.6494 20.697C38.9557 20.8615 38.2446 20.9409 37.5317 20.9336H30.9688V7.12061ZM36.7311 12.7059C37.2852 12.7327 37.8367 12.6135 38.3302 12.3602C38.5227 12.2478 38.6798 12.0837 38.7838 11.8865C38.8879 11.6894 38.9346 11.4671 38.9188 11.2448V11.2057C38.929 11.0008 38.8874 10.7967 38.7978 10.6122C38.7082 10.4276 38.5736 10.2687 38.4063 10.1499C38.0647 9.90708 37.5715 9.78566 36.9266 9.78566H33.9302V12.7059H36.7311ZM37.5399 18.2727C38.092 18.3036 38.6415 18.1773 39.1246 17.9084C39.3128 17.7875 39.4651 17.6184 39.5658 17.4186C39.6664 17.2188 39.7116 16.9956 39.6967 16.7724V16.7333C39.7041 16.5212 39.6594 16.3104 39.5665 16.1196C39.4736 15.9287 39.3353 15.7635 39.1637 15.6385C38.8097 15.3641 38.2376 15.2269 37.4473 15.2269H33.9302V18.2727H37.5399Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M46.5088 7.12061H49.5484V20.9378H46.5088V7.12061Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M54.1484 7.12061H56.9514L63.43 15.6241V7.12061H66.4305V20.9378H63.8436L57.1531 12.1544V20.9378H54.1484V7.12061Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M75.6338 7.02148H78.4327L84.3536 20.9374H81.1801L79.9165 17.8381H74.0739L72.8103 20.9374H69.7109L75.6338 7.02148ZM78.832 15.1545L76.9921 10.6723L75.1605 15.1545H78.832Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M87.6426 7.12891H90.4456L96.92 15.6324V7.12891H99.9206V20.9461H97.3337L90.6431 12.1627V20.9461H87.6426V7.12891Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M110.858 21.1802C109.89 21.1885 108.929 21.0009 108.035 20.6287C107.193 20.281 106.429 19.7683 105.788 19.1208C105.147 18.4733 104.643 17.7041 104.304 16.8585C103.946 15.974 103.765 15.0281 103.771 14.0741V14.035C103.755 12.1545 104.478 10.343 105.786 8.99092C106.429 8.33047 107.199 7.80686 108.049 7.45157C108.975 7.0683 109.968 6.87715 110.97 6.88974C111.562 6.88532 112.153 6.93839 112.735 7.04821C113.233 7.14239 113.72 7.28791 114.188 7.48244C114.613 7.6612 115.017 7.88619 115.392 8.15333C115.759 8.41388 116.103 8.70436 116.421 9.02179L114.489 11.2526C113.995 10.7971 113.441 10.4114 112.842 10.1063C112.254 9.82515 111.609 9.68425 110.957 9.69474C110.415 9.68896 109.877 9.79864 109.381 10.0165C108.884 10.2344 108.439 10.5554 108.076 10.9583C107.716 11.3602 107.434 11.8257 107.245 12.331C107.046 12.8649 106.947 13.4304 106.95 14V14.0391C106.948 14.6078 107.048 15.1724 107.245 15.706C107.432 16.2131 107.711 16.6813 108.068 17.0869C108.428 17.4949 108.872 17.8206 109.369 18.0422C109.866 18.2637 110.405 18.3759 110.949 18.3711C111.642 18.3929 112.33 18.2438 112.951 17.9369C113.543 17.6143 114.091 17.2158 114.579 16.7515L116.514 18.7066C116.172 19.0773 115.803 19.4213 115.409 19.7355C115.021 20.0417 114.601 20.3033 114.155 20.5155C113.68 20.7391 113.18 20.9042 112.665 21.0074C112.071 21.1266 111.465 21.1845 110.858 21.1802Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M120.101 7.12061H130.5V9.82477H123.091V12.6277H129.615V15.3319H123.101V18.2336H130.603V20.9378H120.107L120.101 7.12061Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_9761",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "26.0558",
                        transform: "translate(0.321289 0.806641)",
                        width: "130.279"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite3;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite3");

  $parcel$ReactRefreshHelpers$f6b3.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8GWIW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite4", ()=>(0, _logoBinanceWhite4.LogoBinanceWhite4));
var _logoBinanceWhite4 = require("./LogoBinanceWhite4");

},{"./LogoBinanceWhite4":"dnmuV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dnmuV":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$2568 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$2568.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite4", ()=>LogoBinanceWhite4);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite4 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-4 ${className}`,
        fill: "none",
        height: "33",
        viewBox: "0 0 159 33",
        width: "159",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_8643)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M10.138 14.1853L16.2937 8.03216L22.452 14.1903L26.0318 10.6081L16.2937 0.867676L6.55566 10.6056L10.138 14.1853Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.443359 16.7153L4.02435 13.1344L7.60534 16.7153L4.02435 20.2963L0.443359 16.7153Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M10.1381 19.2447L16.2938 25.4003L22.4521 19.2422L26.0344 22.8194L26.0319 22.8219L16.2938 32.5623L6.55579 22.8269L6.55078 22.8219L10.1381 19.2447Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M24.9756 16.7163L28.5566 13.1354L32.1376 16.7163L28.5566 20.2972L24.9756 16.7163Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M19.926 16.7134L16.2936 13.0786L13.6075 15.7647L13.2971 16.0726L12.6613 16.7084L12.6562 16.7134L12.6613 16.7209L16.2936 20.3507L19.926 16.7159L19.9285 16.7134H19.926Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M37.7246 8.54785H45.515C47.4476 8.54785 48.9096 9.04851 49.9009 10.0498C50.2744 10.4197 50.5688 10.8616 50.7664 11.3488C50.9639 11.8359 51.0604 12.3581 51.05 12.8836V12.9312C51.0567 13.3617 50.9967 13.7907 50.8722 14.2028C50.7613 14.5577 50.6003 14.8948 50.3941 15.2042C50.2018 15.4958 49.9692 15.7588 49.7032 15.9852C49.4432 16.2089 49.1585 16.4021 48.8545 16.561C49.7311 16.8663 50.5193 17.382 51.1501 18.0629C51.7075 18.6971 51.9862 19.5733 51.9862 20.6914V20.739C52.0021 21.4373 51.8501 22.1292 51.5431 22.7567C51.2457 23.3348 50.8096 23.8302 50.2739 24.1986C49.6683 24.6046 48.994 24.8972 48.2838 25.0622C47.44 25.2623 46.575 25.359 45.7078 25.3501H37.7246V8.54785ZM44.734 15.3418C45.408 15.3744 46.0788 15.2294 46.6791 14.9213C46.9132 14.7845 47.1044 14.585 47.2309 14.3452C47.3575 14.1054 47.4143 13.8349 47.3951 13.5645V13.5169C47.4075 13.2677 47.3568 13.0194 47.2479 12.795C47.1389 12.5705 46.9752 12.3772 46.7717 12.2327C46.3562 11.9373 45.7562 11.7896 44.9718 11.7896H41.3269V15.3418H44.734ZM45.7178 22.1133C46.3893 22.1509 47.0577 21.9973 47.6454 21.6702C47.8743 21.5231 48.0597 21.3174 48.1821 21.0743C48.3044 20.8313 48.3595 20.5599 48.3413 20.2884V20.2408C48.3504 19.9828 48.296 19.7264 48.1829 19.4942C48.0699 19.2621 47.9017 19.0611 47.693 18.9091C47.2624 18.5753 46.5665 18.4084 45.6052 18.4084H41.3269V22.1133H45.7178Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M56.6279 8.54785H60.3254V25.3551H56.6279V8.54785Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M65.9199 8.54785H69.3295L77.21 18.8915V8.54785H80.8599V25.3551H77.7132L69.5748 14.671V25.3551H65.9199V8.54785Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M92.0552 8.42773H95.4598L102.662 25.3551H98.8018L97.2647 21.5852H90.1577L88.6206 25.3551H84.8506L92.0552 8.42773ZM95.9454 18.3208L93.7075 12.8686L91.4795 18.3208H95.9454Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M106.662 8.55811H110.072L117.947 18.9018V8.55811H121.597V25.3654H118.45L110.312 14.6812V25.3654H106.662V8.55811Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M134.902 25.6503C133.724 25.6604 132.556 25.4322 131.468 24.9794C130.443 24.5565 129.514 23.9329 128.735 23.1452C127.955 22.3576 127.341 21.4219 126.929 20.3934C126.494 19.3175 126.274 18.1669 126.281 17.0064V16.9588C126.261 14.6714 127.141 12.4679 128.731 10.8232C129.514 10.0198 130.45 9.3829 131.485 8.95072C132.611 8.48451 133.819 8.25199 135.037 8.26731C135.758 8.26194 136.477 8.32649 137.185 8.46007C137.791 8.57463 138.383 8.75164 138.953 8.98827C139.469 9.20571 139.96 9.47939 140.417 9.80435C140.863 10.1213 141.281 10.4746 141.669 10.8607L139.318 13.5743C138.717 13.0202 138.044 12.551 137.315 12.18C136.6 11.8379 135.815 11.6666 135.022 11.6793C134.363 11.6723 133.709 11.8057 133.105 12.0707C132.5 12.3357 131.959 12.7262 131.518 13.2164C131.08 13.7052 130.737 14.2715 130.506 14.8861C130.265 15.5356 130.144 16.2234 130.148 16.9163V16.9638C130.146 17.6556 130.267 18.3423 130.506 18.9915C130.734 19.6083 131.073 20.1778 131.508 20.6712C131.946 21.1674 132.485 21.5637 133.09 21.8332C133.695 22.1027 134.35 22.2391 135.012 22.2333C135.855 22.2599 136.692 22.0784 137.448 21.7051C138.168 21.3127 138.834 20.828 139.428 20.2632L141.781 22.6413C141.366 23.0923 140.916 23.5107 140.437 23.893C139.966 24.2654 139.455 24.5836 138.913 24.8418C138.335 25.1137 137.726 25.3146 137.1 25.44C136.377 25.5851 135.64 25.6556 134.902 25.6503Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M146.145 8.54785H158.794V11.8372H149.782V15.2467H157.718V18.5361H149.794V22.0657H158.919V25.3551H146.152L146.145 8.54785Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_8643",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "31.6945",
                        transform: "translate(0.445312 0.867676)",
                        width: "158.472"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite4;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite4");

  $parcel$ReactRefreshHelpers$2568.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"fZdZN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite7", ()=>(0, _logoBinanceWhite7.LogoBinanceWhite7));
var _logoBinanceWhite7 = require("./LogoBinanceWhite7");

},{"./LogoBinanceWhite7":"7epR8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7epR8":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$0fa6 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$0fa6.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite7", ()=>LogoBinanceWhite7);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite7 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-7 ${className}`,
        fill: "none",
        height: "44",
        viewBox: "0 0 215 44",
        width: "215",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7226)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M13.6215 18.7401L21.9137 10.4513L30.2093 18.7468L35.0315 13.9213L21.9137 0.800293L8.7959 13.9179L13.6215 18.7401Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.5625 22.1484L5.38634 17.3247L10.2102 22.1484L5.38634 26.9722L0.5625 22.1484Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M13.6214 25.5551L21.9136 33.8472L30.2092 25.5518L35.0348 30.3705L35.0314 30.3739L21.9136 43.4949L8.79581 30.3807L8.78906 30.3739L13.6214 25.5551Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M33.6089 22.1494L38.4327 17.3257L43.2566 22.1494L38.4327 26.9732L33.6089 22.1494Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M26.8065 22.1459L21.9135 17.2495L18.2951 20.8678L17.877 21.2826L17.0204 22.1391L17.0137 22.1459L17.0204 22.156L21.9135 27.0456L26.8065 22.1492L26.8099 22.1459H26.8065Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M50.7827 11.146H61.277C63.8803 11.146 65.8497 11.8204 67.185 13.1693C67.6882 13.6675 68.0848 14.2628 68.3509 14.919C68.6169 15.5752 68.7469 16.2786 68.7329 16.9865V17.0506C68.7419 17.6306 68.6612 18.2084 68.4935 18.7637C68.3441 19.2416 68.1272 19.6958 67.8494 20.1125C67.5904 20.5054 67.277 20.8596 66.9186 21.1646C66.5685 21.466 66.1849 21.7262 65.7755 21.9402C66.9563 22.3515 68.0181 23.0462 68.8678 23.9635C69.6186 24.8178 69.9941 25.998 69.9941 27.5042V27.5683C70.0154 28.509 69.8107 29.4411 69.3972 30.2862C68.9965 31.065 68.4091 31.7323 67.6875 32.2286C66.8717 32.7755 65.9633 33.1697 65.0066 33.392C63.87 33.6615 62.7047 33.7917 61.5366 33.7798H50.7827V11.146ZM60.2248 20.298C61.1328 20.3419 62.0363 20.1465 62.845 19.7315C63.1604 19.5472 63.4179 19.2784 63.5884 18.9554C63.7588 18.6324 63.8354 18.2681 63.8095 17.9038V17.8397C63.8262 17.504 63.758 17.1695 63.6112 16.8672C63.4645 16.5648 63.2439 16.3043 62.9698 16.1098C62.41 15.7119 61.6018 15.5129 60.5452 15.5129H55.6353V20.298H60.2248ZM61.5501 29.4196C62.4547 29.4703 63.3551 29.2633 64.1467 28.8227C64.4551 28.6246 64.7047 28.3474 64.8696 28.02C65.0345 27.6926 65.1086 27.3271 65.0842 26.9613V26.8972C65.0963 26.5496 65.0231 26.2043 64.8708 25.8915C64.7185 25.5788 64.4919 25.3081 64.2108 25.1033C63.6308 24.6536 62.6933 24.4288 61.3984 24.4288H55.6353V29.4196H61.5501Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M76.2461 11.146H81.2268V33.7865H76.2461V11.146Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M88.7637 11.146H93.3566L103.972 25.0797V11.146H108.889V33.7865H104.65L93.6871 19.3942V33.7865H88.7637V11.146Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M123.97 10.9839H128.556L138.258 33.7863H133.058L130.987 28.7078H121.414L119.343 33.7863H114.265L123.97 10.9839ZM129.21 24.3106L126.195 16.9661L123.194 24.3106H129.21Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M143.647 11.1602H148.24L158.849 25.0938V11.1602H163.765V33.8007H159.527L148.564 19.4084V33.8007H143.647V11.1602Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M181.688 34.1847C180.101 34.1982 178.527 33.8908 177.061 33.2809C175.682 32.7112 174.43 31.8711 173.38 30.8101C172.33 29.7492 171.503 28.4887 170.948 27.1032C170.362 25.6538 170.065 24.1039 170.074 22.5407V22.4766C170.048 19.3952 171.234 16.427 173.376 14.2115C174.429 13.1293 175.691 12.2713 177.085 11.6891C178.601 11.0611 180.229 10.7479 181.87 10.7685C182.841 10.7613 183.81 10.8483 184.763 11.0282C185.579 11.1825 186.377 11.421 187.144 11.7397C187.84 12.0326 188.502 12.4013 189.117 12.839C189.717 13.266 190.281 13.7419 190.803 14.2621L187.637 17.9175C186.827 17.171 185.92 16.539 184.939 16.0392C183.975 15.5784 182.918 15.3476 181.85 15.3648C180.961 15.3553 180.08 15.535 179.266 15.892C178.453 16.249 177.724 16.775 177.129 17.4352C176.539 18.0938 176.077 18.8566 175.766 19.6845C175.442 20.5594 175.278 21.486 175.284 22.4193V22.4833C175.281 23.4153 175.444 24.3403 175.766 25.2148C176.073 26.0456 176.53 26.8127 177.115 27.4775C177.706 28.1459 178.433 28.6797 179.247 29.0427C180.062 29.4058 180.945 29.5896 181.836 29.5817C182.972 29.6175 184.099 29.3731 185.117 28.8702C186.087 28.3416 186.984 27.6886 187.785 26.9278L190.955 30.1313C190.395 30.7388 189.79 31.3025 189.144 31.8174C188.509 32.319 187.821 32.7477 187.09 33.0954C186.312 33.4618 185.492 33.7324 184.649 33.9014C183.674 34.0968 182.682 34.1917 181.688 34.1847Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M196.833 11.146H213.872V15.577H201.732V20.1698H212.422V24.6008H201.749V29.3555H214.041V33.7865H196.843L196.833 11.146Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7226",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "42.6946",
                        transform: "translate(0.564453 0.800293)",
                        width: "213.473"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite7;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite7");

  $parcel$ReactRefreshHelpers$0fa6.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"3rFIi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite8", ()=>(0, _logoBinanceWhite8.LogoBinanceWhite8));
var _logoBinanceWhite8 = require("./LogoBinanceWhite8");

},{"./LogoBinanceWhite8":"4iTIv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4iTIv":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f4dc = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f4dc.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite8", ()=>LogoBinanceWhite8);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite8 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-8 ${className}`,
        fill: "none",
        height: "47",
        viewBox: "0 0 233 47",
        width: "233",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_6268)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M14.4245 19.5263L23.45 10.5045L32.4792 19.5336L37.7279 14.2813L23.45 0L9.17212 14.2777L14.4245 19.5263Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.210938 23.2358L5.46138 17.9855L10.7118 23.2358L5.46138 28.4862L0.210938 23.2358Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M14.4245 26.9441L23.45 35.9695L32.4792 26.9404L37.7316 32.1854L37.7279 32.189L23.45 46.4704L9.17214 32.1964L9.16479 32.189L14.4245 26.9441Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M36.1794 23.2373L41.4299 17.9869L46.6803 23.2373L41.4299 28.4877L36.1794 23.2373Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M28.7758 23.2332L23.4501 17.9038L19.5117 21.8421L19.0566 22.2936L18.1243 23.2258L18.1169 23.2332L18.1243 23.2442L23.4501 28.5662L28.7758 23.2368L28.7795 23.2332H28.7758Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M54.8726 11.2607H66.2949C69.1284 11.2607 71.272 11.9948 72.7254 13.463C73.273 14.0053 73.7047 14.6532 73.9943 15.3674C74.284 16.0816 74.4254 16.8472 74.4102 17.6178V17.6875C74.42 18.3188 74.3321 18.9477 74.1496 19.5521C73.9869 20.0723 73.7509 20.5667 73.4485 21.0202C73.1666 21.4479 72.8256 21.8334 72.4355 22.1654C72.0544 22.4934 71.6369 22.7766 71.1912 23.0095C72.4764 23.4572 73.6321 24.2134 74.557 25.2118C75.3743 26.1416 75.7829 27.4262 75.7829 29.0656V29.1354C75.8061 30.1592 75.5833 31.1737 75.1332 32.0937C74.6971 32.9413 74.0577 33.6676 73.2723 34.2078C72.3844 34.8031 71.3957 35.2321 70.3544 35.4741C69.1172 35.7674 67.8489 35.9092 66.5775 35.8961H54.8726V11.2607ZM65.1497 21.2221C66.1379 21.2698 67.1214 21.0572 68.0016 20.6055C68.3449 20.405 68.6252 20.1123 68.8107 19.7608C68.9962 19.4092 69.0796 19.0127 69.0514 18.6161V18.5464C69.0695 18.181 68.9953 17.817 68.8356 17.4879C68.6758 17.1588 68.4357 16.8753 68.1374 16.6635C67.5281 16.2304 66.6485 16.0138 65.4984 16.0138H60.1543V21.2221H65.1497ZM66.5922 31.1504C67.5767 31.2055 68.5568 30.9803 69.4184 30.5007C69.7541 30.2851 70.0258 29.9834 70.2052 29.627C70.3847 29.2707 70.4653 28.8728 70.4388 28.4747V28.405C70.452 28.0266 70.3723 27.6507 70.2065 27.3103C70.0408 26.9699 69.7941 26.6753 69.4881 26.4523C68.8568 25.963 67.8365 25.7183 66.427 25.7183H60.1543V31.1504H66.5922Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M82.5879 11.2607H88.0091V35.9035H82.5879V11.2607Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M96.2124 11.2607H101.212L112.766 26.4266V11.2607H118.117V35.9035H113.504L101.571 20.2384V35.9035H96.2124V11.2607Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M134.531 11.0845H139.523L150.083 35.9034H144.423L142.17 30.3758H131.749L129.496 35.9034H123.968L134.531 11.0845ZM140.235 25.5897L136.954 17.5957L133.687 25.5897H140.235Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M155.949 11.2759H160.948L172.495 26.4418V11.2759H177.847V35.9186H173.233L161.301 20.2536V35.9186H155.949V11.2759Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M197.354 36.3366C195.627 36.3514 193.914 36.0168 192.318 35.3529C190.817 34.7329 189.454 33.8185 188.311 32.6637C187.169 31.5089 186.268 30.137 185.664 28.6289C185.026 27.0514 184.703 25.3644 184.713 23.6629V23.5931C184.685 20.2393 185.975 17.0085 188.307 14.5971C189.454 13.4192 190.827 12.4853 192.344 11.8517C193.994 11.1681 195.766 10.8272 197.552 10.8497C198.609 10.8418 199.664 10.9364 200.702 11.1323C201.59 11.3003 202.458 11.5598 203.293 11.9067C204.05 12.2256 204.771 12.6268 205.44 13.1033C206.094 13.568 206.708 14.086 207.275 14.6522L203.829 18.6308C202.948 17.8183 201.96 17.1305 200.893 16.5864C199.844 16.0849 198.693 15.8337 197.53 15.8524C196.563 15.842 195.605 16.0377 194.719 16.4262C193.833 16.8148 193.04 17.3873 192.392 18.106C191.75 18.8227 191.247 19.653 190.909 20.5541C190.555 21.5064 190.378 22.5149 190.384 23.5307V23.6005C190.381 24.6148 190.558 25.6216 190.909 26.5735C191.243 27.4778 191.74 28.3128 192.377 29.0363C193.02 29.7638 193.811 30.3448 194.697 30.7399C195.584 31.1351 196.545 31.3351 197.516 31.3266C198.752 31.3655 199.978 31.0995 201.087 30.5521C202.143 29.9768 203.119 29.2661 203.99 28.438L207.441 31.9248C206.831 32.586 206.172 33.1996 205.47 33.76C204.779 34.306 204.029 34.7726 203.234 35.1511C202.387 35.5498 201.495 35.8444 200.577 36.0283C199.516 36.241 198.436 36.3443 197.354 36.3366Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M213.838 11.2607H232.384V16.0836H219.171V21.0826H230.806V25.9055H219.189V31.0806H232.568V35.9035H213.849L213.838 11.2607Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_6268",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "46.4703",
                        transform: "translate(0.212891)",
                        width: "232.352"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite8;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite8");

  $parcel$ReactRefreshHelpers$f4dc.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"lyqZe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite3", ()=>(0, _logoBitmexWhite3.LogoBitmexWhite3));
var _logoBitmexWhite3 = require("./LogoBitmexWhite3");

},{"./LogoBitmexWhite3":"b71aW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b71aW":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$e3ee = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$e3ee.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite3", ()=>LogoBitmexWhite3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-3 ${className}`,
        fill: "none",
        height: "15",
        viewBox: "0 0 89 15",
        width: "89",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_8166)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M4.49836 0.549805L1.1123 14.1267H4.50563L6.62237 5.63797H10.0193L11.2886 0.549805H7.89168H4.49836Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M18.075 0.549805H14.6817L13.4124 5.63797L12.565 9.03494H9.17166L7.90234 14.1267H11.2957H14.689L16.8057 5.63797L18.075 0.549805Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M36.3912 1.37214C36.3939 1.49808 36.3692 1.6231 36.319 1.73861C36.2688 1.85413 36.1942 1.95741 36.1003 2.04136C35.9295 2.20928 35.6996 2.30338 35.4601 2.30338C35.2207 2.30338 34.9908 2.20928 34.82 2.04136C34.6456 1.87405 34.544 1.64484 34.5372 1.40325C34.5304 1.16166 34.6189 0.927086 34.7836 0.750218L34.8273 0.702945C34.998 0.535022 35.2279 0.440918 35.4674 0.440918C35.7069 0.440918 35.9368 0.535022 36.1075 0.702945C36.2015 0.786465 36.2757 0.889845 36.3247 1.00559C36.3738 1.12134 36.3965 1.24654 36.3912 1.37214ZM21.4795 0.546542H27.095C28.648 0.546542 29.8664 0.993894 30.652 1.75039C30.9365 2.03692 31.1605 2.37779 31.3104 2.75271C31.4604 3.12762 31.5333 3.52889 31.5249 3.9326V3.97262C31.5249 5.7402 30.4338 6.65309 29.3718 7.11499C30.983 7.60235 32.2814 8.53342 32.2814 10.3883V10.4283C32.2814 12.756 30.3247 14.1344 27.3533 14.1344H21.4795V0.546542ZM26.8332 6.60216C28.6735 6.60216 29.9573 5.76565 29.9573 4.16536V4.12897C29.9573 2.78691 28.8881 1.91403 26.935 1.91403H22.9961V6.59849L26.8332 6.60216ZM27.3751 12.7523C29.4336 12.7523 30.7138 11.8431 30.7138 10.3192V10.2828C30.7138 8.80616 29.47 7.95146 27.1023 7.95146H22.9961V12.7523L27.3751 12.7523ZM34.7109 4.09626H36.2094V14.1308H34.7109V4.09626ZM40.1664 10.9484V5.41649H37.8969V4.10717H40.1664V0.546542H41.6649V4.10717H45.7856V5.41649H41.6794V10.7556C41.6794 12.1049 42.3159 12.9633 43.5307 12.9378C44.2612 12.9522 44.988 12.8288 45.6729 12.5741V13.8798C44.884 14.204 44.0332 14.3493 43.1815 14.3053C41.3703 14.2653 40.181 12.9887 40.181 10.9338L40.1664 10.9484ZM47.9569 0.546542H51.1793L54.7508 6.28937L58.3187 0.546542H61.5411V14.1308H58.5769V5.26374L54.7544 11.0829H54.6744L50.892 5.34012V14.1417H47.9569V0.546542ZM64.1998 0.546542H74.4488V3.20519H67.1748V5.96204H73.2304V8.62069H67.1712V11.4721H74.5434V14.1308H64.1998V0.546542ZM80.1335 7.22044L75.5908 0.546542H79.086L81.9374 4.95096L84.8107 0.546542H88.2076L83.6723 7.18408L88.4004 14.1308H84.9089L81.8538 9.47903L78.7878 14.138H75.3908L80.1335 7.22044Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_8166",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "14.7154",
                        transform: "translate(0.696289 0.019043)",
                        width: "88.1204"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite3;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite3");

  $parcel$ReactRefreshHelpers$e3ee.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"lc4Ln":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite4", ()=>(0, _logoBitmexWhite4.LogoBitmexWhite4));
var _logoBitmexWhite4 = require("./LogoBitmexWhite4");

},{"./LogoBitmexWhite4":"9lMiw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9lMiw":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$6e56 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$6e56.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite4", ()=>LogoBitmexWhite4);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite4 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-4 ${className}`,
        fill: "none",
        height: "21",
        viewBox: "0 0 121 21",
        width: "121",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M5.76351 1.22266L1.1543 19.7041H5.77342L8.6548 8.14886H13.2789L15.0067 1.22266H10.3826H5.76351Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M24.2449 1.22266H19.6258L17.898 8.14886L16.7444 12.7729H12.1253L10.3975 19.7041H15.0166H19.6357L22.5171 8.14886L24.2449 1.22266Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
                lineNumber: 24,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M49.1773 2.34184C49.1809 2.51326 49.1474 2.68344 49.079 2.84069C49.0106 2.99794 48.9091 3.13852 48.7812 3.25279C48.5488 3.48138 48.2359 3.60947 47.9099 3.60947C47.5839 3.60947 47.271 3.48138 47.0385 3.25279C46.8011 3.02505 46.6628 2.71304 46.6536 2.38417C46.6443 2.05531 46.7648 1.73601 46.989 1.49525L47.0484 1.4309C47.2808 1.20232 47.5938 1.07422 47.9197 1.07422C48.2457 1.07422 48.5587 1.20232 48.7911 1.4309C48.919 1.54459 49.02 1.68531 49.0868 1.84287C49.1536 2.00043 49.1845 2.17086 49.1773 2.34184ZM28.8789 1.218H36.523C38.637 1.218 40.2955 1.82695 41.3649 2.85672C41.7522 3.24675 42.057 3.71077 42.2611 4.22111C42.4653 4.73146 42.5646 5.27768 42.5531 5.82722V5.8817C42.5531 8.2878 41.0678 9.53046 39.6222 10.1592C41.8154 10.8226 43.5829 12.09 43.5829 14.6149V14.6694C43.5829 17.838 40.9193 19.7143 36.8745 19.7143H28.8789V1.218ZM36.1665 9.46113C38.6716 9.46113 40.4193 8.32243 40.4193 6.14407V6.09453C40.4193 4.26767 38.9637 3.07947 36.3051 3.07947H30.9434V9.45613L36.1665 9.46113ZM36.9042 17.833C39.7064 17.833 41.4491 16.5953 41.4491 14.5209V14.4713C41.4491 12.4613 39.7559 11.2978 36.5329 11.2978H30.9434V17.8329L36.9042 17.833ZM46.89 6.05H48.9297V19.7093H46.89V6.05ZM54.3162 15.3774V7.84715H51.2269V6.06486H54.3162V1.218H56.356V6.06486H61.9653V7.84715H56.3758V15.115C56.3758 16.9517 57.2422 18.1201 58.8958 18.0855C59.8902 18.105 60.8795 17.937 61.8118 17.5904V19.3677C60.738 19.809 59.5798 20.0068 58.4205 19.947C55.955 19.8925 54.336 18.1548 54.336 15.3576L54.3162 15.3774ZM64.9209 1.218H69.3073L74.1691 9.03535L79.0258 1.218H83.4122V19.7093H79.3773V7.63922L74.174 15.5605H74.0651L68.9162 7.74319V19.7242H64.9209V1.218ZM87.0313 1.218H100.983V4.83705H91.0811V8.58978H99.3242V12.2088H91.0761V16.0903H101.111V19.7093H87.0313V1.218ZM108.721 10.3028L102.537 1.218H107.295L111.176 7.21345L115.088 1.218H119.712L113.538 10.2533L119.974 19.7093H115.221L111.063 13.3772L106.889 19.7192H102.265L108.721 10.3028Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
                lineNumber: 30,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite4;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite4");

  $parcel$ReactRefreshHelpers$6e56.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"hqlQJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite6", ()=>(0, _logoBitmexWhite6.LogoBitmexWhite6));
var _logoBitmexWhite6 = require("./LogoBitmexWhite6");

},{"./LogoBitmexWhite6":"4d4fD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4d4fD":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$9eea = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$9eea.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite6", ()=>LogoBitmexWhite6);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite6 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-6 ${className}`,
        fill: "none",
        height: "21",
        viewBox: "0 0 118 21",
        width: "118",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7698)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M5.39602 1.29053L0.898926 19.3224H5.40568L8.21697 8.04825H12.7286L14.4144 1.29053H9.90278H5.39602Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M23.4281 1.29053H18.9213L17.2355 8.04825L16.11 12.5598H11.6033L9.91748 19.3224H14.4242H18.931L21.7423 8.04825L23.4281 1.29053Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M47.7538 2.38229C47.7574 2.54955 47.7247 2.71559 47.658 2.86901C47.5913 3.02243 47.4921 3.1596 47.3674 3.27109C47.1406 3.49411 46.8353 3.61909 46.5173 3.61909C46.1992 3.61909 45.8939 3.49411 45.6671 3.27109C45.4355 3.04888 45.3005 2.74446 45.2915 2.4236C45.2825 2.10274 45.4 1.7912 45.6188 1.5563L45.6767 1.49351C45.9035 1.27049 46.2088 1.14551 46.5269 1.14551C46.8449 1.14551 47.1503 1.27049 47.377 1.49351C47.5018 1.60444 47.6004 1.74174 47.6655 1.89546C47.7307 2.04919 47.7609 2.21547 47.7538 2.38229ZM27.9492 1.28579H35.4073C37.4699 1.28579 39.0881 1.87993 40.1315 2.88465C40.5094 3.26519 40.8067 3.71792 41.0059 4.21585C41.2051 4.71378 41.302 5.24672 41.2908 5.78289V5.83604C41.2908 8.18362 39.8416 9.39605 38.4312 10.0095C40.571 10.6568 42.2955 11.8934 42.2955 14.3569V14.41C42.2955 17.5015 39.6967 19.3322 35.7503 19.3322H27.9492V1.28579ZM35.0596 9.3284C37.5037 9.3284 39.2089 8.21741 39.2089 6.09203V6.04369C39.2089 4.26128 37.7887 3.10198 35.1948 3.10198H29.9635V9.32353L35.0596 9.3284ZM35.7793 17.4966C38.5133 17.4966 40.2136 16.289 40.2136 14.2651V14.2167C40.2136 12.2556 38.5616 11.1204 35.417 11.1204H29.9635V17.4966L35.7793 17.4966ZM45.5222 6.00025H47.5123V19.3273H45.5222V6.00025ZM52.7678 15.1007V7.75369H49.7536V6.01475H52.7678V1.28579H54.7579V6.01475H60.2307V7.75369H54.7772V14.8447C54.7772 16.6368 55.6225 17.7768 57.2359 17.7429C58.2062 17.762 59.1714 17.5981 60.081 17.2599V18.994C59.0334 19.4245 57.9033 19.6175 56.7722 19.5592C54.3666 19.506 52.7871 17.8106 52.7871 15.0814L52.7678 15.1007ZM63.1145 1.28579H67.3942L72.1377 8.91298L76.8763 1.28579H81.156V19.3273H77.2192V7.55082L72.1425 15.2794H72.0362L67.0126 7.65225V19.3418H63.1145V1.28579ZM84.687 1.28579H98.2991V4.81681H88.6383V8.47825H96.6809V12.0093H88.6335V15.7963H98.4247V19.3273H84.687V1.28579ZM105.849 10.1496L99.8158 1.28579H104.458L108.245 7.1354L112.061 1.28579H116.572L110.549 10.1013L116.828 19.3273H112.191L108.134 13.1492L104.062 19.337H99.5501L105.849 10.1496Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7698",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "19.5439",
                        transform: "translate(0.346191 0.585449)",
                        width: "117.035"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite6;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite6");

  $parcel$ReactRefreshHelpers$9eea.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"fcbd5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite7", ()=>(0, _logoBitmexWhite7.LogoBitmexWhite7));
var _logoBitmexWhite7 = require("./LogoBitmexWhite7");

},{"./LogoBitmexWhite7":"9owY4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9owY4":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$09ce = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$09ce.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite7", ()=>LogoBitmexWhite7);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite7 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-7 ${className}`,
        fill: "none",
        height: "28",
        viewBox: "0 0 162 28",
        width: "162",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7230)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M7.14253 1.47412L0.933594 26.3699H7.15586L11.0373 10.8042H17.2662L19.5937 1.47412H13.3648H7.14253Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M32.0382 1.47412H25.816L23.4885 10.8042L21.9346 17.0331H15.7123L13.3848 26.3699H19.607H25.8293L29.7107 10.8042L32.0382 1.47412Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M65.6236 2.98101C65.6285 3.21193 65.5833 3.44118 65.4912 3.653C65.3991 3.86482 65.2623 4.0542 65.0901 4.20813C64.777 4.51604 64.3554 4.6886 63.9163 4.6886C63.4772 4.6886 63.0556 4.51604 62.7425 4.20813C62.4227 3.90134 62.2364 3.48104 62.224 3.03804C62.2115 2.59504 62.3738 2.16491 62.6758 1.84059L62.7558 1.75391C63.0689 1.446 63.4905 1.27344 63.9296 1.27344C64.3687 1.27344 64.7903 1.446 65.1034 1.75391C65.2757 1.90706 65.4117 2.09663 65.5017 2.30887C65.5917 2.52111 65.6333 2.75069 65.6236 2.98101ZM38.2803 1.46712H48.5774C51.4251 1.46712 53.6592 2.28742 55.0997 3.6746C55.6215 4.19999 56.0321 4.82505 56.3071 5.51252C56.582 6.19999 56.7158 6.93579 56.7003 7.67606V7.74944C56.7003 10.9906 54.6996 12.6646 52.7522 13.5115C55.7066 14.4052 58.0875 16.1125 58.0875 19.5137V19.5871C58.0875 23.8553 54.4995 26.3829 49.0509 26.3829H38.2803V1.46712ZM48.0972 12.5712C51.4718 12.5712 53.8259 11.0373 53.8259 8.10287V8.03614C53.8259 5.57523 51.8652 3.97465 48.2839 3.97465H41.0613V12.5645L48.0972 12.5712ZM49.0909 23.8486C52.8656 23.8486 55.2131 22.1813 55.2131 19.387V19.3203C55.2131 16.6126 52.9323 15.0454 48.5907 15.0454H41.0613V23.8486L49.0909 23.8486ZM62.5425 7.97616H65.2901V26.3762H62.5425V7.97616ZM72.5461 20.5407V10.397H68.3846V7.99617H72.5461V1.46712H75.2938V7.99617H82.8499V10.397H75.3205V20.1873C75.3205 22.6615 76.4876 24.2354 78.715 24.1888C80.0547 24.215 81.3873 23.9888 82.6431 23.5218V25.916C81.1967 26.5104 79.6365 26.7769 78.0748 26.6963C74.7536 26.6229 72.5728 24.2821 72.5728 20.5141L72.5461 20.5407ZM86.8313 1.46712H92.7402L99.2892 11.9976L105.832 1.46712H111.74V26.3762H106.305V10.117L99.2959 20.7875H99.1492L92.2133 10.257V26.3962H86.8313V1.46712ZM116.616 1.46712H135.409V6.34223H122.071V11.3974H133.175V16.2725H122.064V21.5011H135.582V26.3762H116.616V1.46712ZM145.833 13.7049L137.503 1.46712H143.912L149.141 9.5434L154.409 1.46712H160.638L152.322 13.6382L160.992 26.3762H154.589L148.987 17.8464L143.365 26.3896H137.136L145.833 13.7049Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7230",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "26.9834",
                        transform: "translate(0.17041 0.500488)",
                        width: "161.585"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite7;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite7");

  $parcel$ReactRefreshHelpers$09ce.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"fW2Ka":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite8", ()=>(0, _logoBitmexWhite8.LogoBitmexWhite8));
var _logoBitmexWhite8 = require("./LogoBitmexWhite8");

},{"./LogoBitmexWhite8":"jRIrK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jRIrK":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f7dc = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f7dc.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite8", ()=>LogoBitmexWhite8);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite8 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-8 ${className}`,
        fill: "none",
        height: "30",
        viewBox: "0 0 177 30",
        width: "177",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_6272)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M8.24972 1.08057L1.4917 28.178H8.26424L12.4889 11.2357H19.2687L21.8021 1.08057H15.0223H8.24972Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M35.3471 1.08057H28.5745L26.0412 11.2357L24.3498 18.0155H17.5773L15.0439 28.178H21.8165H28.589L32.8137 11.2357L35.3471 1.08057Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M71.903 2.72137C71.9084 2.97272 71.8592 3.22224 71.759 3.45279C71.6587 3.68334 71.5098 3.88947 71.3223 4.05701C70.9816 4.39216 70.5227 4.57998 70.0448 4.57998C69.5668 4.57998 69.108 4.39216 68.7672 4.05701C68.4191 3.72309 68.2163 3.26562 68.2028 2.78345C68.1892 2.30127 68.3658 1.83311 68.6946 1.48011L68.7817 1.38576C69.1224 1.05061 69.5813 0.862793 70.0592 0.862793C70.5372 0.862793 70.996 1.05061 71.3368 1.38576C71.5243 1.55245 71.6724 1.75878 71.7704 1.98979C71.8683 2.2208 71.9137 2.47069 71.903 2.72137ZM42.1416 1.0736H53.3493C56.4489 1.0736 58.8806 1.96645 60.4485 3.4763C61.0164 4.04815 61.4633 4.72849 61.7626 5.47676C62.0619 6.22503 62.2075 7.0259 62.1906 7.83163V7.91151C62.1906 11.4393 60.013 13.2613 57.8934 14.1832C61.1091 15.1559 63.7005 17.0141 63.7005 20.7162V20.7961C63.7005 25.4417 59.7952 28.1929 53.8647 28.1929H42.1416V1.0736ZM52.8267 13.1597C56.4997 13.1597 59.0621 11.4901 59.0621 8.29619V8.22355C59.0621 5.54502 56.928 3.80289 53.0299 3.80289H45.1686V13.1523L52.8267 13.1597ZM53.9083 25.4344C58.0168 25.4344 60.5719 23.6197 60.5719 20.5782V20.5056C60.5719 17.5585 58.0894 15.8526 53.3638 15.8526H45.1686V25.4344L53.9083 25.4344ZM68.5494 8.15827H71.5401V28.1856H68.5494V8.15827ZM79.4378 21.834V10.7933H74.9082V8.18005H79.4378V1.0736H82.4284V8.18005H90.6527V10.7933H82.4575V21.4493C82.4575 24.1423 83.7278 25.8554 86.1522 25.8046C87.6103 25.8332 89.0608 25.587 90.4277 25.0787V27.6847C88.8534 28.3316 87.1552 28.6217 85.4554 28.534C81.8405 28.4541 79.4668 25.9063 79.4668 21.805L79.4378 21.834ZM94.9863 1.0736H101.418L108.546 12.5354L115.667 1.0736H122.098V28.1856H116.182V10.4884L108.553 22.1026H108.393L100.844 10.6408V28.2073H94.9863V1.0736ZM127.404 1.0736H147.86V6.37985H133.342V11.8821H145.428V17.1883H133.335V22.8793H148.049V28.1856H127.404V1.0736ZM159.206 14.3937L150.139 1.0736H157.115L162.806 9.86411L168.541 1.0736H175.32L166.269 14.3211L175.705 28.1856H168.737L162.639 18.9014L156.52 28.2001H149.74L159.206 14.3937Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_6272",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "29.3697",
                        transform: "translate(0.661133 0.0209961)",
                        width: "175.874"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite8;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite8");

  $parcel$ReactRefreshHelpers$f7dc.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"c847C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite2", ()=>(0, _logoBitoproWhite2.LogoBitoproWhite2));
var _logoBitoproWhite2 = require("./LogoBitoproWhite2");

},{"./LogoBitoproWhite2":"lLFoD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lLFoD":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$10c7 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$10c7.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite2", ()=>LogoBitoproWhite2);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite2 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-2 ${className}`,
        fill: "none",
        height: "25",
        viewBox: "0 0 101 25",
        width: "101",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M36.542 3.95626C36.5275 4.11546 36.4118 4.23125 36.2526 4.24572C36.1802 4.23125 36.1079 4.2023 36.05 4.14441C35.2251 3.27601 34.1107 2.79839 32.7504 2.65366C32.5043 2.61024 32.2728 2.59577 32.0268 2.61024C29.5665 2.61024 26.8313 3.81152 24.4434 5.75094L28.047 5.77989H29.9428C31.6939 5.77989 32.9095 5.8812 33.6766 6.02593C34.7475 6.27198 35.4711 6.70617 35.9631 7.27063C36.3973 7.89298 36.4986 8.61665 36.1513 9.44162C35.9342 10.0206 35.5869 10.5271 35.1382 10.9324C34.5594 11.4389 33.9081 11.8587 33.199 12.1771C34.212 12.6113 34.8488 13.0889 35.1961 13.7112C35.4856 14.3336 35.4856 15.0572 35.1961 15.8822C34.9067 16.7072 34.3712 17.4164 33.5463 18.0966C32.7648 18.7624 31.8531 19.269 30.869 19.5874C29.8994 19.9203 28.5824 20.065 27.0773 20.065H24.7329C24.6605 20.0939 24.5737 20.1084 24.4868 20.1084L21.6793 20.0795L21.6648 20.1084V20.0795L20.5939 20.065C20.1887 20.065 19.8703 19.7466 19.8703 19.3413C19.8703 18.9361 20.1887 18.6177 20.5939 18.6177L22.2003 18.6321L26.3827 7.18379L22.866 7.15485H22.8515C21.5635 8.47191 20.4926 9.96266 19.6532 11.5981L21.8095 11.6271C22.2003 11.6271 22.5331 11.931 22.5331 12.3363V12.3507C22.5187 12.7415 22.2003 13.0599 21.8095 13.0744L19.002 13.0455C18.5678 14.1454 18.2928 15.3178 18.206 16.4901H15.6879C15.8615 14.8257 16.3246 13.1902 17.0482 11.6705C19.8124 5.64963 25.8906 1.11949 31.0861 1.11949C31.3755 1.10502 31.665 1.13397 31.9544 1.16292C33.8936 1.35107 35.4566 2.21946 36.4697 3.71021C36.542 3.81152 36.5854 3.85494 36.542 3.95626ZM32.5043 9.8324C32.6491 9.3982 32.6056 9.00743 32.2583 8.77585C31.9689 8.52981 31.39 8.38507 30.5506 8.38507H28.8429L27.7286 11.4245H29.2771C30.1454 11.4245 30.8835 11.2797 31.4189 10.9903C31.9255 10.7442 32.3017 10.339 32.5043 9.8324ZM25.5144 17.4888H27.2221C28.7271 17.4888 29.7981 17.344 30.4348 17.0546C30.9992 16.8085 31.4479 16.3598 31.6939 15.8099C31.9399 15.1875 31.7952 14.6954 31.3032 14.3625C30.8111 14.0296 29.8415 13.827 28.4377 13.827H26.8892L25.5144 17.4888ZM25.8038 1.45238C23.5172 1.74185 21.0425 2.98655 18.9007 4.92596C18.0757 5.6641 17.3377 6.46013 16.672 7.32853H14.3854C17.3521 3.33391 21.7227 0.627405 25.7459 0.772138C25.934 0.772138 26.0788 0.91687 26.0788 1.09055V1.10502C26.1077 1.29318 25.9775 1.43791 25.8038 1.45238ZM11.9541 6.7496C10.695 8.38507 9.66752 10.2666 9.13205 12.235C8.40845 14.7823 8.40845 17.2861 9.08864 19.4137C9.43596 20.5426 10.0293 21.5847 10.8397 22.4531C10.9845 22.5978 10.9845 22.8294 10.8397 22.9886C10.7674 23.0754 10.6661 23.1333 10.5503 23.1333C10.4635 23.1478 10.3766 23.1189 10.3043 23.0899C9.21889 22.3373 8.35056 21.3242 7.78616 20.1374C7.75721 20.1374 7.7138 20.1518 7.68485 20.1518L4.61679 20.1084C4.21157 20.1084 3.89319 19.79 3.89319 19.3848C3.89319 18.9795 4.21157 18.6611 4.61679 18.6611L7.22175 18.7045C6.61393 16.6638 6.64287 14.2757 7.39541 11.8297C7.88746 10.1942 8.64001 8.66007 9.63857 7.27063L8.7992 7.25616C8.39398 7.25616 8.0756 6.93775 8.0756 6.5325C8.0756 6.12725 8.39398 5.80883 8.7992 5.80883L10.6516 5.85225C10.695 5.85225 10.7529 5.85225 10.7963 5.86673C12.2291 4.28914 14.0091 3.05891 15.9918 2.29183C16.1944 2.19052 16.4259 2.27736 16.5272 2.47998V2.49446C16.5707 2.69708 16.5417 2.89971 16.4259 3.07339C14.7761 3.85494 13.2132 5.15754 11.9541 6.7496ZM5.19567 12.6257L1.31717 12.6692C0.868542 12.6836 0.477799 12.3363 0.463327 11.8876C0.448855 11.4389 0.796182 11.0482 1.24481 11.0337C1.27376 11.0337 1.28823 11.0337 1.31717 11.0337L5.15225 10.9903C5.61536 10.9903 5.99163 11.3521 6.02057 11.8152C6.0061 12.2494 5.6443 12.6113 5.19567 12.6257ZM11.6647 12.9152C11.8094 12.4376 11.9541 11.9021 12.1422 11.4245C12.4751 10.4982 12.9092 9.60083 13.4592 8.77585H15.6879C15.0945 9.77451 14.5735 10.8311 14.1394 11.9021C14.0381 12.235 13.8933 12.5678 13.792 12.9152H11.6647ZM13.3579 14.3046C12.9816 15.9546 12.9671 17.6624 13.3145 19.3124C13.8065 21.3386 14.863 22.8294 16.4259 23.6978C16.5707 23.7991 16.6285 23.9728 16.5707 24.132C16.5128 24.2478 16.4115 24.3201 16.2812 24.3201H16.1799C14.342 23.828 12.7935 22.5544 11.9541 20.8466C11.0279 19.0229 10.8397 16.7072 11.2739 14.2902L13.3579 14.3046ZM18.3218 17.923C18.3941 18.8492 18.6546 19.7611 19.1033 20.5716C19.9282 22.0189 21.3319 22.8873 23.1409 23.0754C23.387 23.1189 23.6185 23.1333 23.8645 23.1189C25.1815 23.1189 26.5853 22.786 28.047 22.1057C28.1917 22.0478 28.3653 22.1057 28.4377 22.2505C28.5245 22.3662 28.4956 22.5255 28.3798 22.6123C28.3653 22.6268 28.3509 22.6268 28.3364 22.6412C26.2958 23.7991 24.2553 24.4215 22.3595 24.4215C22.07 24.4359 21.7806 24.407 21.4911 24.378C19.3493 24.132 17.6995 23.1333 16.6864 21.3965C16.0786 20.34 15.7602 19.1387 15.7602 17.923H18.3218Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite2/LogoBitoproWhite2.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M69.6396 18.3135C67.2373 18.3135 65.6164 16.8083 65.6164 14.5649C65.6164 11.4098 67.903 8.83354 71.2894 8.83354C73.8365 8.83354 75.3126 10.498 75.3126 12.5532C75.3126 15.882 72.9392 18.3135 69.6396 18.3135ZM70.9276 10.8598C69.3212 10.8598 68.4963 13.1032 68.5253 14.5071C68.5253 15.5636 69.0752 16.2728 70.0448 16.2728C71.5789 16.2728 72.4327 14.1452 72.4327 12.5821C72.4182 11.7427 72.042 10.8598 70.9276 10.8598ZM65.6019 11.0624H63.5758L62.9391 14.1452C62.8522 14.5215 62.7944 14.9123 62.7799 15.2886C62.7799 15.7373 62.968 16.0557 63.5758 16.0557C63.8363 16.0557 64.0968 16.0557 64.3573 16.0123L64.0245 18.1109C63.6771 18.2412 62.9825 18.3135 62.3747 18.3135C60.7104 18.3135 59.9144 17.4741 59.9144 16.3452C59.9289 15.7807 59.9868 15.2162 60.117 14.6663L61.6076 7.34279L64.4876 6.59018L63.9955 9.05063H66.0216L65.6019 11.0624ZM58.0041 7.90725H57.9896C57.2371 7.90725 56.6438 7.40068 56.6438 6.60465C56.6582 5.69284 57.3963 5.08496 58.2501 5.08496C59.0606 5.08496 59.6539 5.606 59.6539 6.40203C59.6539 7.35726 58.9014 7.92172 58.0041 7.90725ZM57.2516 18.1109H54.4585L56.2675 9.05063H59.0606L57.2516 18.1109ZM51.7377 11.4966C52.9968 11.8729 53.7928 12.8571 53.7928 14.2176C53.7928 15.5491 53.0402 16.5333 51.9982 17.1846C50.8984 17.8938 49.2486 18.1977 47.0633 18.1977C45.9634 18.2122 44.8491 18.1398 43.7637 17.9517L46.166 5.80862C47.2948 5.62047 48.4526 5.51916 49.6104 5.51916C50.9707 5.51916 51.9838 5.67836 52.8521 6.18493C53.7204 6.60465 54.3716 7.41516 54.3716 8.4717C54.3716 10.0493 53.1415 11.0479 51.7377 11.4387V11.4966ZM46.8752 16.0557C47.237 16.0991 47.5843 16.1136 47.9461 16.1136C49.4656 16.1136 50.8405 15.5347 50.8405 14.1452C50.8405 12.9005 49.7551 12.5387 48.4526 12.5387H47.5843L46.8752 16.0557ZM49.6827 7.60331C49.3209 7.58883 48.9591 7.61778 48.5973 7.69015L48.0184 10.5848H48.9446C50.4787 10.5848 51.5351 9.94798 51.5351 8.89143C51.5207 7.99409 50.7536 7.60331 49.6827 7.60331Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite2/LogoBitoproWhite2.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M94.7343 18.2414C92.3465 18.2414 90.8703 16.6638 90.8703 14.5218C90.8703 11.4679 93.099 8.80482 96.3263 8.80482C98.8733 8.80482 100.205 10.5416 100.205 12.5534C100.205 15.6217 97.9471 18.2414 94.7343 18.2414ZM96.0513 10.4837C94.2423 10.4837 93.2003 12.785 93.2003 14.4639C93.2003 15.7086 93.895 16.577 95.0382 16.577C96.7315 16.577 97.8603 14.3481 97.8603 12.5534C97.8603 11.6271 97.4261 10.4837 96.0513 10.4837ZM90.9282 10.9324C89.3218 10.9324 88.2943 12.4955 87.918 14.4204L87.1944 18.0532H84.9368C84.9368 18.0532 86.4129 9.84689 86.5287 9.02192H88.6416C88.5114 9.62979 88.3667 10.2666 88.2653 10.9324H88.3232C88.96 9.70216 89.9875 8.81929 91.29 8.81929C91.4492 8.81929 91.6084 8.83377 91.7676 8.86271L91.3189 10.9758C91.2032 10.9469 91.0584 10.9324 90.9282 10.9324ZM80.1321 13.4073C79.7269 13.3928 79.3072 13.3639 78.902 13.3205L77.9758 18.0532H75.7471L78.1928 5.76544C79.2348 5.56281 80.2913 5.4615 81.3622 5.47597C82.5634 5.47597 83.8659 5.72201 84.7052 6.35884C85.4867 6.92329 85.9064 7.7338 85.9064 8.84824C85.9064 10.1798 85.2841 11.4245 84.2421 12.235C83.1712 13.0165 81.6806 13.4073 80.1321 13.4073ZM81.3477 7.19829C80.928 7.18381 80.5084 7.22723 80.1031 7.31407L79.2493 11.5403C79.64 11.6126 80.0308 11.6561 80.436 11.6561C82.3608 11.6561 83.6198 10.4837 83.6198 9.00745C83.6198 7.67591 82.6357 7.19829 81.3477 7.19829Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite2/LogoBitoproWhite2.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite2/LogoBitoproWhite2.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite2/LogoBitoproWhite2.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite2;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite2");

  $parcel$ReactRefreshHelpers$10c7.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8Znww":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite8", ()=>(0, _logoBitoproWhite8.LogoBitoproWhite8));
var _logoBitoproWhite8 = require("./LogoBitoproWhite8");

},{"./LogoBitoproWhite8":"621gY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"621gY":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$fe79 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$fe79.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite8", ()=>LogoBitoproWhite8);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite8 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-8 ${className}`,
        fill: "none",
        height: "47",
        viewBox: "0 0 197 47",
        width: "197",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M71.4429 6.27317C71.4145 6.58631 71.1868 6.81404 70.8736 6.84251C70.7313 6.81404 70.589 6.75711 70.4751 6.64324C68.8527 4.93521 66.6609 3.9958 63.9852 3.71113C63.5013 3.62573 63.0459 3.59726 62.562 3.62572C57.723 3.62572 52.3432 5.9885 47.6465 9.80309L54.7342 9.86002H58.4631C61.9073 9.86002 64.2983 10.0593 65.8069 10.344C67.9133 10.8279 69.3366 11.6819 70.3043 12.7921C71.1583 14.0162 71.3575 15.4396 70.6744 17.0622C70.2474 18.2009 69.5643 19.1972 68.6819 19.9943C67.5433 20.9907 66.2624 21.8162 64.8676 22.4425C66.8601 23.2965 68.1126 24.2359 68.7957 25.46C69.365 26.6841 69.365 28.1075 68.7957 29.7301C68.2264 31.3527 67.1732 32.7476 65.5508 34.0856C64.0137 35.395 62.2204 36.3914 60.2848 37.0177C58.3777 37.6724 55.7874 37.9571 52.8271 37.9571H48.2158C48.0735 38.014 47.9027 38.0425 47.7319 38.0425L42.2098 37.9856L42.1813 38.0425V37.9856L40.0749 37.9571C39.2779 37.9571 38.6517 37.3308 38.6517 36.5337C38.6517 35.7366 39.2779 35.1104 40.0749 35.1104L43.2345 35.1388L51.4608 12.6213L44.5439 12.5644H44.5154C41.982 15.1549 39.8757 18.087 38.2247 21.3038L42.4659 21.3607C43.2345 21.3607 43.8892 21.9586 43.8892 22.7556V22.7841C43.8607 23.5527 43.2345 24.179 42.4659 24.2075L36.9438 24.1505C36.0899 26.314 35.549 28.6199 35.3782 30.9257H30.4254C30.767 27.652 31.6778 24.4352 33.1011 21.4461C38.5378 9.60382 50.493 0.69361 60.7118 0.69361C61.2811 0.665142 61.8503 0.722078 62.4196 0.779012C66.2339 1.14908 69.3081 2.85711 71.3006 5.78923C71.4429 5.9885 71.5283 6.0739 71.4429 6.27317ZM63.5013 17.8308C63.7859 16.9768 63.7006 16.2082 63.0174 15.7527C62.4481 15.2688 61.3095 14.9841 59.6586 14.9841H56.2997L54.108 20.9622H57.1537C58.8616 20.9622 60.3133 20.6775 61.3665 20.1082C62.3627 19.6242 63.1028 18.8272 63.5013 17.8308ZM49.7529 32.8899H53.1117C56.072 32.8899 58.1784 32.6053 59.4309 32.0359C60.541 31.552 61.4234 30.6695 61.9073 29.5877C62.3912 28.3637 62.1065 27.3958 61.1387 26.741C60.1709 26.0863 58.2638 25.6877 55.5027 25.6877H52.457L49.7529 32.8899ZM50.3222 1.34835C45.8248 1.9177 40.9573 4.36587 36.7445 8.18047C35.1221 9.63229 33.6704 11.198 32.361 12.906H27.8636C33.6988 5.04908 42.2951 -0.274271 50.2083 0.0104003C50.5784 0.0104003 50.863 0.295071 50.863 0.636676V0.665145C50.9199 1.03522 50.6637 1.31989 50.3222 1.34835ZM23.0815 11.7673C20.6051 14.9841 18.5841 18.6848 17.5309 22.5564C16.1077 27.5666 16.1077 32.4914 17.4455 36.6761C18.1287 38.8965 19.2957 40.9461 20.8897 42.6542C21.1744 42.9388 21.1744 43.3943 20.8897 43.7074C20.7474 43.8782 20.5482 43.9921 20.3204 43.9921C20.1497 44.0206 19.9789 43.9636 19.8365 43.9067C17.7017 42.4264 15.9938 40.4337 14.8837 38.0994C14.8268 38.0994 14.7414 38.1279 14.6844 38.1279L8.64994 38.0425C7.85293 38.0425 7.22671 37.4162 7.22671 36.6191C7.22671 35.822 7.85293 35.1958 8.64994 35.1958L13.7736 35.2812C12.5781 31.2673 12.635 26.5702 14.1152 21.7593C15.083 18.5425 16.5631 15.525 18.5272 12.7921L16.8762 12.7637C16.0792 12.7637 15.453 12.1374 15.453 11.3403C15.453 10.5432 16.0792 9.91696 16.8762 9.91696L20.5197 10.0024C20.6051 10.0024 20.7189 10.0024 20.8043 10.0308C23.6223 6.92791 27.1235 4.50821 31.0231 2.99945C31.4217 2.80018 31.8771 2.97098 32.0763 3.36952V3.39799C32.1617 3.79653 32.1048 4.19507 31.8771 4.53667C28.6321 6.0739 25.5579 8.63594 23.0815 11.7673ZM9.78853 23.325L2.16001 23.4104C1.2776 23.4388 0.509059 22.7556 0.480594 21.8732C0.45213 20.9907 1.13528 20.2221 2.01768 20.1936C2.07461 20.1936 2.10308 20.1936 2.16001 20.1936L9.70313 20.1082C10.614 20.1082 11.3541 20.8199 11.411 21.7308C11.3825 22.5848 10.6709 23.2965 9.78853 23.325ZM22.5122 23.8943C22.7969 22.9549 23.0815 21.9016 23.4516 20.9622C24.1062 19.1403 24.9602 17.3753 26.0418 15.7527H30.4254C29.2583 17.717 28.2336 19.7951 27.3797 21.9016C27.1804 22.5564 26.8958 23.2111 26.6965 23.8943H22.5122ZM25.8426 26.6272C25.1025 29.8724 25.074 33.2315 25.7572 36.4768C26.725 40.4622 28.8029 43.3943 31.8771 45.1023C32.1617 45.3016 32.2756 45.6432 32.1617 45.9563C32.0479 46.1841 31.8486 46.3264 31.5924 46.3264H31.3932C27.7782 45.3585 24.7325 42.8534 23.0815 39.4943C21.2598 35.9074 20.8897 31.3527 21.7437 26.5987L25.8426 26.6272ZM35.606 33.7439C35.7483 35.5658 36.2606 37.3593 37.143 38.9534C38.7655 41.8001 41.5266 43.5082 45.0847 43.8782C45.5686 43.9636 46.024 43.9921 46.5079 43.9636C49.0982 43.9636 51.8593 43.3089 54.7342 41.971C55.0188 41.8571 55.3604 41.971 55.5027 42.2556C55.6735 42.4834 55.6166 42.7965 55.3889 42.9673C55.3604 42.9958 55.3319 42.9958 55.3035 43.0242C51.29 45.3016 47.2765 46.5257 43.5476 46.5257C42.9783 46.5542 42.409 46.4972 41.8397 46.4403C37.6269 45.9563 34.382 43.9921 32.3894 40.5761C31.1939 38.498 30.5677 36.1352 30.5677 33.7439H35.606Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite8/LogoBitoproWhite8.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M136.542 34.5126C131.817 34.5126 128.629 31.552 128.629 27.1396C128.629 20.9338 133.126 15.8666 139.787 15.8666C144.796 15.8666 147.7 19.1404 147.7 23.1827C147.7 29.7301 143.032 34.5126 136.542 34.5126ZM139.075 19.852C135.916 19.852 134.293 24.2644 134.35 27.0258C134.35 29.1039 135.432 30.4987 137.339 30.4987C140.356 30.4987 142.035 26.3141 142.035 23.2396C142.007 21.5885 141.267 19.852 139.075 19.852ZM128.6 20.2506H124.615L123.363 26.3141C123.192 27.0542 123.078 27.8228 123.05 28.563C123.05 29.4455 123.42 30.0717 124.615 30.0717C125.127 30.0717 125.64 30.0717 126.152 29.9863L125.497 34.1141C124.814 34.3703 123.448 34.5126 122.252 34.5126C118.979 34.5126 117.414 32.8615 117.414 30.6411C117.442 29.5309 117.556 28.4206 117.812 27.3389L120.744 12.9345L126.408 11.4542L125.441 16.2936H129.426L128.6 20.2506ZM113.656 14.0447H113.628C112.148 14.0447 110.98 13.0484 110.98 11.4827C111.009 9.68927 112.461 8.49365 114.14 8.49365C115.734 8.49365 116.901 9.51847 116.901 11.0842C116.901 12.963 115.421 14.0732 113.656 14.0447ZM112.176 34.1141H106.682L110.24 16.2936H115.734L112.176 34.1141ZM101.331 21.1046C103.807 21.8447 105.373 23.7805 105.373 26.4564C105.373 29.0754 103.893 31.0111 101.843 32.2922C99.68 33.6871 96.4351 34.2849 92.1369 34.2849C89.9736 34.3133 87.7818 34.171 85.647 33.8009L90.3721 9.91701C92.5923 9.54694 94.8695 9.34767 97.1467 9.34767C99.8224 9.34767 101.815 9.6608 103.523 10.6572C105.231 11.4827 106.512 13.0769 106.512 15.155C106.512 18.2579 104.092 20.2221 101.331 20.9907V21.1046ZM91.7669 30.0717C92.4785 30.1571 93.1616 30.1856 93.8732 30.1856C96.862 30.1856 99.5662 29.0469 99.5662 26.3141C99.5662 23.8659 97.4313 23.1542 94.8695 23.1542H93.1616L91.7669 30.0717ZM97.289 13.4469C96.5774 13.4185 95.8658 13.4754 95.1542 13.6177L94.0156 19.3112H95.8373C98.8546 19.3112 100.932 18.0586 100.932 15.9805C100.904 14.2155 99.3954 13.4469 97.289 13.4469Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite8/LogoBitoproWhite8.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M185.899 34.3704C181.203 34.3704 178.299 31.2675 178.299 27.0544C178.299 21.0478 182.683 15.8099 189.03 15.8099C194.04 15.8099 196.659 19.2259 196.659 23.1829C196.659 29.2179 192.218 34.3704 185.899 34.3704ZM188.49 19.1121C184.932 19.1121 182.882 23.6383 182.882 26.9405C182.882 29.3887 184.248 31.0967 186.497 31.0967C189.827 31.0967 192.048 26.7128 192.048 23.1829C192.048 21.361 191.194 19.1121 188.49 19.1121ZM178.413 19.9945C175.254 19.9945 173.233 23.069 172.492 26.8551L171.069 34.0004H166.629C166.629 34.0004 169.532 17.8595 169.76 16.2369H173.916C173.66 17.4325 173.375 18.6851 173.176 19.9945H173.289C174.542 17.5748 176.563 15.8383 179.125 15.8383C179.438 15.8383 179.751 15.8668 180.064 15.9238L179.182 20.0799C178.954 20.023 178.669 19.9945 178.413 19.9945ZM157.178 24.8624C156.381 24.834 155.556 24.777 154.759 24.6916L152.937 34.0004H148.554L153.364 9.83178C155.414 9.43324 157.492 9.23397 159.598 9.26244C161.961 9.26244 164.522 9.74638 166.173 10.9989C167.71 12.1092 168.536 13.7033 168.536 15.8953C168.536 18.5143 167.312 20.9624 165.262 22.5566C163.156 24.0938 160.224 24.8624 157.178 24.8624ZM159.57 12.65C158.744 12.6216 157.919 12.707 157.122 12.8778L155.442 21.1902C156.211 21.3325 156.979 21.4179 157.776 21.4179C161.562 21.4179 164.038 19.1121 164.038 16.2084C164.038 13.5894 162.103 12.65 159.57 12.65Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite8/LogoBitoproWhite8.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite8/LogoBitoproWhite8.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite8/LogoBitoproWhite8.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite8;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite8");

  $parcel$ReactRefreshHelpers$fe79.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"aaF9j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite2", ()=>(0, _logoGateioWhite2.LogoGateioWhite2));
var _logoGateioWhite2 = require("./LogoGateioWhite2");

},{"./LogoGateioWhite2":"gQLPo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gQLPo":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$39bc = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$39bc.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite2", ()=>LogoGateioWhite2);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite2 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-2 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 104 24",
        width: "104",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10207)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "24",
                        id: "mask0_271_10207",
                        maskUnits: "userSpaceOnUse",
                        width: "104",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.231445 0.270996H103.398V23.8975H0.231445V0.270996Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_271_10207)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M85.64 7.29256H88.5699V4.36182H85.64V7.29256ZM70.0671 12.1732C70.6269 10.6882 72.0605 9.63093 73.7416 9.63093C75.4224 9.63093 76.856 10.6882 77.4161 12.1732H70.0671ZM73.7416 6.90606C70.069 6.90606 67.0909 9.88459 67.0909 13.5589C67.0909 17.2333 70.069 20.2113 73.7416 20.2113C76.2618 20.2113 78.4542 18.8097 79.5827 16.7436L77.1252 15.551C76.4424 16.709 75.183 17.4864 73.7416 17.4864C71.9204 17.4864 70.3895 16.2463 69.9453 14.5643H77.5376C77.5371 14.5655 77.5369 14.5672 77.5366 14.5687H80.3173C80.3675 14.2393 80.3935 13.902 80.3935 13.5589C80.3935 9.88459 77.4153 6.90606 73.7416 6.90606ZM81.1658 19.8567H84.0957V16.9259H81.1658V19.8567ZM85.64 19.8567H88.5699V8.58098H85.64V19.8567ZM96.7475 17.4864C94.5789 17.4864 92.8209 15.7279 92.8209 13.5589C92.8209 11.3894 94.5789 9.63093 96.7475 9.63093C98.9161 9.63093 100.674 11.3894 100.674 13.5589C100.674 15.7279 98.9161 17.4864 96.7475 17.4864ZM96.7463 6.90606C93.0738 6.90606 90.0956 9.88459 90.0956 13.5589C90.0956 17.2333 93.0738 20.2113 96.7463 20.2113C100.42 20.2113 103.398 17.2333 103.398 13.5589C103.398 9.88459 100.42 6.90606 96.7463 6.90606ZM35.4893 11.1066V14.1368H39.586C39.3721 15.0027 38.9492 15.7787 38.3428 16.3985C37.4281 17.3335 36.1599 17.8487 34.7714 17.8487C31.8903 17.8487 29.546 15.5039 29.546 12.6217C29.546 9.7395 31.8903 7.39451 34.7714 7.39451C36.3148 7.39451 37.7334 8.05527 38.7169 9.19492L41.0624 7.27785C39.5073 5.4549 37.2 4.36402 34.7714 4.36402C30.2198 4.36402 26.5166 8.0685 26.5166 12.6217C26.5166 17.1749 30.2198 20.8792 34.7714 20.8792C36.9814 20.8792 39.0187 20.0826 40.5082 18.5602C41.758 17.2823 42.5864 15.4998 42.7457 13.7141C42.8233 12.843 42.8305 11.9779 42.7846 11.1066H35.4893ZM50.4127 17.4872C48.2441 17.4872 46.4858 15.7282 46.4858 13.5589C46.4858 11.3892 48.2441 9.63068 50.4127 9.63068C52.5816 9.63068 54.3398 11.3892 54.3398 13.5589C54.3398 15.7282 52.5816 17.4872 50.4127 17.4872ZM54.3403 8.20256C53.2394 7.39525 51.882 6.91733 50.4127 6.91733C46.7402 6.91733 43.763 9.89562 43.763 13.5692C43.763 17.2433 46.7402 20.2211 50.4127 20.2211C51.882 20.2211 53.2394 19.7434 54.3403 18.9361V19.8567H57.0626V7.28202H54.3403V8.20256ZM62.9068 4.36206H60.1841V7.29256H58.5523V9.86278H60.1841V16.5889C60.1841 17.2835 60.2714 17.8678 60.4443 18.3263C60.6149 18.78 60.8756 19.1351 61.1855 19.4126C61.4996 19.6942 61.8681 19.9135 62.305 20.038C62.749 20.163 63.2387 20.2113 63.7565 20.2113C64.2923 20.2113 64.7701 20.1557 65.1778 20.0456C65.5563 19.9439 65.9192 19.8 66.2568 19.6172V17.5462C65.7198 17.7786 65.2177 17.8626 64.6449 17.8894C64.0402 17.9178 63.6825 17.745 63.3848 17.4612C63.0729 17.1639 62.9068 16.7764 62.9068 16.1264V9.86278H66.2568V7.29256H62.9068V4.36206Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "24",
                        id: "mask1_271_10207",
                        maskUnits: "userSpaceOnUse",
                        width: "104",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.231445 0.270996H103.398V23.8975H0.231445V0.270996Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_271_10207)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M12.0414 18.5816C8.45416 18.5816 5.54607 15.673 5.54607 12.0844C5.54607 8.49609 8.45416 5.58692 12.0414 5.58692V0.270996C5.51887 0.270996 0.231445 5.55996 0.231445 12.0844C0.231445 18.6086 5.51887 23.8976 12.0414 23.8976C18.5637 23.8976 23.8514 18.6086 23.8514 12.0844H18.5368C18.5368 15.673 15.6287 18.5816 12.0414 18.5816Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "24",
                        id: "mask2_271_10207",
                        maskUnits: "userSpaceOnUse",
                        width: "104",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.231445 0.270996H103.398V23.8975H0.231445V0.270996Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_271_10207)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M12.041 12.0842H18.5364V5.58691H12.041V12.0842Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10207",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "23.6265",
                        transform: "translate(0.231445 0.270996)",
                        width: "103.166"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite2;
var _c;
$RefreshReg$(_c, "LogoGateioWhite2");

  $parcel$ReactRefreshHelpers$39bc.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"gYswB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite3", ()=>(0, _logoGateioWhite3.LogoGateioWhite3));
var _logoGateioWhite3 = require("./LogoGateioWhite3");

},{"./LogoGateioWhite3":"fwLjk","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fwLjk":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$9bf6 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$9bf6.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite3", ()=>LogoGateioWhite3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-3 ${className}`,
        fill: "none",
        height: "27",
        viewBox: "0 0 115 27",
        width: "115",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_9762)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "27",
                        id: "mask0_271_9762",
                        maskUnits: "userSpaceOnUse",
                        width: "115",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.450195 0.806641H114.225V26.8625H0.450195V0.806641Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_271_9762)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M94.6402 8.54996H97.8714V5.31787H94.6402V8.54996ZM77.466 13.9325C78.0835 12.2948 79.6645 11.1288 81.5184 11.1288C83.372 11.1288 84.953 12.2948 85.5707 13.9325H77.466ZM81.5184 8.12372C77.4682 8.12372 74.1838 11.4085 74.1838 15.4607C74.1838 19.5128 77.4682 22.7971 81.5184 22.7971C84.2977 22.7971 86.7156 21.2513 87.9601 18.9728L85.2499 17.6576C84.4969 18.9347 83.108 19.792 81.5184 19.792C79.5099 19.792 77.8216 18.4244 77.3317 16.5694H85.7047C85.7042 16.5707 85.7039 16.5726 85.7036 16.5742H88.7702C88.8256 16.211 88.8543 15.8391 88.8543 15.4607C88.8543 11.4085 85.5699 8.12372 81.5184 8.12372ZM89.706 22.406H92.9371V19.1739H89.706V22.406ZM94.6402 22.406H97.8714V9.97086H94.6402V22.406ZM106.89 19.792C104.498 19.792 102.56 17.8527 102.56 15.4607C102.56 13.0681 104.498 11.1288 106.89 11.1288C109.282 11.1288 111.22 13.0681 111.22 15.4607C111.22 17.8527 109.282 19.792 106.89 19.792ZM106.889 8.12372C102.838 8.12372 99.554 11.4085 99.554 15.4607C99.554 19.5128 102.838 22.7971 106.889 22.7971C110.94 22.7971 114.224 19.5128 114.224 15.4607C114.224 11.4085 110.94 8.12372 106.889 8.12372ZM39.3328 12.7562V16.098H43.8507C43.6148 17.0529 43.1484 17.9087 42.4797 18.5922C41.471 19.6234 40.0724 20.1915 38.5411 20.1915C35.3637 20.1915 32.7784 17.6057 32.7784 14.4271C32.7784 11.2485 35.3637 8.6624 38.5411 8.6624C40.2432 8.6624 41.8077 9.3911 42.8923 10.6479L45.479 8.53375C43.764 6.52335 41.2194 5.3203 38.5411 5.3203C33.5214 5.3203 29.4375 9.40569 29.4375 14.4271C29.4375 19.4485 33.5214 23.5336 38.5411 23.5336C40.9784 23.5336 43.2252 22.6552 44.8678 20.9761C46.2461 19.5669 47.1597 17.6011 47.3353 15.6318C47.421 14.6712 47.4288 13.717 47.3783 12.7562H39.3328ZM55.7907 19.7928C53.3991 19.7928 51.4601 17.853 51.4601 15.4607C51.4601 13.0678 53.3991 11.1285 55.7907 11.1285C58.1826 11.1285 60.1216 13.0678 60.1216 15.4607C60.1216 17.853 58.1826 19.7928 55.7907 19.7928ZM60.1221 9.55354C58.9081 8.66322 57.4111 8.13616 55.7907 8.13616C51.7405 8.13616 48.4572 11.4207 48.4572 15.472C48.4572 19.5239 51.7405 22.8079 55.7907 22.8079C57.4111 22.8079 58.9081 22.2811 60.1221 21.3908V22.406H63.1244V8.53834H60.1221V9.55354ZM69.5695 5.31814H66.5669V8.54996H64.7673V11.3845H66.5669V18.8022C66.5669 19.5682 66.6631 20.2126 66.8539 20.7183C67.0419 21.2186 67.3294 21.6102 67.6712 21.9162C68.0176 22.2268 68.424 22.4687 68.9058 22.606C69.3954 22.7438 69.9356 22.7971 70.5065 22.7971C71.0975 22.7971 71.6244 22.7357 72.074 22.6144C72.4915 22.5022 72.8917 22.3435 73.264 22.1419V19.858C72.6717 20.1142 72.1181 20.2069 71.4863 20.2364C70.8194 20.2677 70.4249 20.0772 70.0966 19.7642C69.7527 19.4363 69.5695 19.009 69.5695 18.2922V11.3845H73.264V8.54996H69.5695V5.31814Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "27",
                        id: "mask1_271_9762",
                        maskUnits: "userSpaceOnUse",
                        width: "115",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.450195 0.806641H114.225V26.8625H0.450195V0.806641Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_271_9762)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M13.4745 21.0001C9.5184 21.0001 6.31129 17.7923 6.31129 13.8348C6.31129 9.87748 9.5184 6.66917 13.4745 6.66917V0.806641C6.2813 0.806641 0.450195 6.63944 0.450195 13.8348C0.450195 21.0298 6.2813 26.8626 13.4745 26.8626C20.6675 26.8626 26.4989 21.0298 26.4989 13.8348H20.6378C20.6378 17.7923 17.4307 21.0001 13.4745 21.0001Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "27",
                        id: "mask2_271_9762",
                        maskUnits: "userSpaceOnUse",
                        width: "115",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.450195 0.806641H114.225V26.8625H0.450195V0.806641Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_271_9762)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M13.4746 13.8343H20.6378V6.66895H13.4746V13.8343Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_9762",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "26.0558",
                        transform: "translate(0.450195 0.806641)",
                        width: "113.774"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite3;
var _c;
$RefreshReg$(_c, "LogoGateioWhite3");

  $parcel$ReactRefreshHelpers$9bf6.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"cfYay":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite4", ()=>(0, _logoGateioWhite4.LogoGateioWhite4));
var _logoGateioWhite4 = require("./LogoGateioWhite4");

},{"./LogoGateioWhite4":"bEBPw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bEBPw":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$4d72 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$4d72.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite4", ()=>LogoGateioWhite4);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite4 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-4 ${className}`,
        fill: "none",
        height: "33",
        viewBox: "0 0 139 33",
        width: "139",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_8644)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "33",
                        id: "mask0_271_8644",
                        maskUnits: "userSpaceOnUse",
                        width: "139",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.443359 0.867676H138.839V32.5621H0.443359V0.867676Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_271_8644)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M115.017 10.287H118.947V6.35547H115.017V10.287ZM94.1263 16.8343C94.8773 14.8422 96.8004 13.4239 99.0555 13.4239C101.31 13.4239 103.233 14.8422 103.985 16.8343H94.1263ZM99.0555 9.76852C94.1289 9.76852 90.1337 13.7642 90.1337 18.6932C90.1337 23.6223 94.1289 27.6173 99.0555 27.6173C102.436 27.6173 105.377 25.737 106.891 22.9654L103.595 21.3655C102.679 22.919 100.989 23.9619 99.0555 23.9619C96.6124 23.9619 94.5588 22.2983 93.9629 20.0419H104.148C104.147 20.0435 104.147 20.0458 104.146 20.0478H107.877C107.944 19.6059 107.979 19.1535 107.979 18.6932C107.979 13.7642 103.984 9.76852 99.0555 9.76852ZM109.015 27.1415H112.945V23.21H109.015V27.1415ZM115.017 27.1415H118.947V12.0154H115.017V27.1415ZM129.918 23.9619C127.008 23.9619 124.65 21.6029 124.65 18.6932C124.65 15.7829 127.008 13.4239 129.918 13.4239C132.827 13.4239 135.185 15.7829 135.185 18.6932C135.185 21.6029 132.827 23.9619 129.918 23.9619ZM129.916 9.76852C124.989 9.76852 120.994 13.7642 120.994 18.6932C120.994 23.6223 124.989 27.6173 129.916 27.6173C134.844 27.6173 138.839 23.6223 138.839 18.6932C138.839 13.7642 134.844 9.76852 129.916 9.76852ZM47.7408 15.4035V19.4685H53.2364C52.9495 20.6301 52.3822 21.671 51.5687 22.5024C50.3417 23.7567 48.6404 24.4478 46.7778 24.4478C42.9128 24.4478 39.7679 21.3024 39.7679 17.436C39.7679 13.5695 42.9128 10.4238 46.7778 10.4238C48.8481 10.4238 50.7512 11.3102 52.0706 12.839L55.217 10.2673C53.1309 7.82182 50.0357 6.35843 46.7778 6.35843C40.6718 6.35843 35.7041 11.3279 35.7041 17.436C35.7041 23.544 40.6718 28.5132 46.7778 28.5132C49.7425 28.5132 52.4755 27.4446 54.4736 25.4023C56.1502 23.688 57.2615 21.2968 57.4751 18.9013C57.5793 17.7329 57.5888 16.5723 57.5274 15.4035H47.7408ZM67.7603 23.9629C64.8511 23.9629 62.4925 21.6032 62.4925 18.6932C62.4925 15.7825 64.8511 13.4236 67.7603 13.4236C70.6698 13.4236 73.0284 15.7825 73.0284 18.6932C73.0284 21.6032 70.6698 23.9629 67.7603 23.9629ZM73.0291 11.5078C71.5523 10.4248 69.7314 9.78364 67.7603 9.78364C62.8336 9.78364 58.8398 13.779 58.8398 18.707C58.8398 23.6357 62.8336 27.6304 67.7603 27.6304C69.7314 27.6304 71.5523 26.9896 73.0291 25.9066V27.1415H76.6811V10.2729H73.0291V11.5078ZM84.5208 6.3558H80.8685V10.287H78.6794V13.7349H80.8685V22.7579C80.8685 23.6897 80.9855 24.4735 81.2175 25.0886C81.4463 25.6972 81.796 26.1736 82.2118 26.5458C82.6332 26.9235 83.1275 27.2178 83.7136 27.3848C84.3091 27.5525 84.9662 27.6173 85.6607 27.6173C86.3795 27.6173 87.0204 27.5426 87.5674 27.395C88.0752 27.2586 88.562 27.0656 89.0149 26.8203V24.0421C88.2944 24.3538 87.621 24.4666 86.8525 24.5024C86.0413 24.5405 85.5614 24.3088 85.1621 23.928C84.7437 23.5292 84.5208 23.0094 84.5208 22.1375V13.7349H89.0149V10.287H84.5208V6.3558Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "33",
                        id: "mask1_271_8644",
                        maskUnits: "userSpaceOnUse",
                        width: "139",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.443359 0.867676H138.839V32.5621H0.443359V0.867676Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_271_8644)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M16.2862 25.4311C11.474 25.4311 7.57283 21.5291 7.57283 16.7151C7.57283 11.9015 11.474 7.99888 16.2862 7.99888V0.867676C7.53634 0.867676 0.443359 7.96272 0.443359 16.7151C0.443359 25.4672 7.53634 32.5623 16.2862 32.5623C25.0358 32.5623 32.1291 25.4672 32.1291 16.7151H24.9996C24.9996 21.5291 21.0985 25.4311 16.2862 25.4311Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "33",
                        id: "mask2_271_8644",
                        maskUnits: "userSpaceOnUse",
                        width: "139",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.443359 0.867676H138.839V32.5621H0.443359V0.867676Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_271_8644)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M16.2861 16.7149H24.9995V7.99902H16.2861V16.7149Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_8644",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "31.6945",
                        transform: "translate(0.443359 0.867676)",
                        width: "138.396"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite4;
var _c;
$RefreshReg$(_c, "LogoGateioWhite4");

  $parcel$ReactRefreshHelpers$4d72.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"gxJHD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite5", ()=>(0, _logoGateioWhite5.LogoGateioWhite5));
var _logoGateioWhite5 = require("./LogoGateioWhite5");

},{"./LogoGateioWhite5":"anhz0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"anhz0":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$dc8b = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$dc8b.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite5", ()=>LogoGateioWhite5);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite5 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-5 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 103 24",
        width: "103",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_8163)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "24",
                        id: "mask0_250_8163",
                        maskUnits: "userSpaceOnUse",
                        width: "103",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.651367 0.376465H102.32V23.66H0.651367V0.376465Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_250_8163)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M84.82 7.29592H87.7074V4.40771H84.82V7.29592ZM69.4731 12.1057C70.0249 10.6423 71.4376 9.60035 73.0943 9.60035C74.7507 9.60035 76.1635 10.6423 76.7155 12.1057H69.4731ZM73.0943 6.91503C69.4751 6.91503 66.5401 9.85034 66.5401 13.4713C66.5401 17.0924 69.4751 20.0272 73.0943 20.0272C75.5779 20.0272 77.7385 18.6459 78.8507 16.6098L76.4288 15.4345C75.7559 16.5757 74.5148 17.3419 73.0943 17.3419C71.2995 17.3419 69.7909 16.1197 69.3531 14.4621H76.8352C76.8347 14.4633 76.8345 14.465 76.8343 14.4664H79.5746C79.6241 14.1418 79.6497 13.8095 79.6497 13.4713C79.6497 9.85034 76.7147 6.91503 73.0943 6.91503ZM80.4108 19.6777H83.2981V16.7895H80.4108V19.6777ZM84.82 19.6777H87.7074V8.56564H84.82V19.6777ZM95.7664 17.3419C93.6292 17.3419 91.8967 15.6089 91.8967 13.4713C91.8967 11.3333 93.6292 9.60035 95.7664 9.60035C97.9035 9.60035 99.636 11.3333 99.636 13.4713C99.636 15.6089 97.9035 17.3419 95.7664 17.3419ZM95.7652 6.91503C92.1459 6.91503 89.211 9.85034 89.211 13.4713C89.211 17.0924 92.1459 20.0272 95.7652 20.0272C99.3856 20.0272 102.321 17.0924 102.321 13.4713C102.321 9.85034 99.3856 6.91503 95.7652 6.91503ZM35.3972 11.0546V14.0409H39.4344C39.2236 14.8942 38.8068 15.6589 38.2092 16.2697C37.3078 17.1911 36.058 17.6988 34.6897 17.6988C31.8504 17.6988 29.5401 15.3881 29.5401 12.5477C29.5401 9.70735 31.8504 7.3964 34.6897 7.3964C36.2106 7.3964 37.6087 8.04756 38.5779 9.17067L40.8894 7.28143C39.3569 5.48494 37.083 4.40989 34.6897 4.40989C30.2041 4.40989 26.5547 8.06061 26.5547 12.5477C26.5547 17.0349 30.2041 20.6853 34.6897 20.6853C36.8677 20.6853 38.8754 19.9004 40.3432 18.4C41.5749 17.1407 42.3913 15.384 42.5482 13.6242C42.6248 12.7658 42.6318 11.9132 42.5866 11.0546H35.3972ZM50.104 17.3426C47.9668 17.3426 46.2341 15.6091 46.2341 13.4713C46.2341 11.3331 47.9668 9.60011 50.104 9.60011C52.2414 9.60011 53.9741 11.3331 53.9741 13.4713C53.9741 15.6091 52.2414 17.3426 50.104 17.3426ZM53.9746 8.19272C52.8897 7.39712 51.552 6.92614 50.104 6.92614C46.4847 6.92614 43.5508 9.86121 43.5508 13.4815C43.5508 17.1023 46.4847 20.0368 50.104 20.0368C51.552 20.0368 52.8897 19.5661 53.9746 18.7705V19.6777H56.6574V7.28554H53.9746V8.19272ZM62.4167 4.40796H59.7336V7.29592H58.1255V9.82884H59.7336V16.4574C59.7336 17.1419 59.8196 17.7177 59.9901 18.1696C60.1581 18.6166 60.415 18.9666 60.7205 19.24C61.03 19.5176 61.3932 19.7337 61.8237 19.8564C62.2612 19.9796 62.7439 20.0272 63.2541 20.0272C63.7822 20.0272 64.253 19.9724 64.6548 19.8639C65.0279 19.7637 65.3855 19.6219 65.7182 19.4417V17.4008C65.1889 17.6298 64.6942 17.7126 64.1296 17.7389C63.5337 17.7669 63.1812 17.5967 62.8878 17.317C62.5804 17.024 62.4167 16.6421 62.4167 16.0016V9.82884H65.7182V7.29592H62.4167V4.40796Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "24",
                        id: "mask1_250_8163",
                        maskUnits: "userSpaceOnUse",
                        width: "103",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.651367 0.376465H102.32V23.66H0.651367V0.376465Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_250_8163)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M12.2899 18.4214C8.75474 18.4214 5.88886 15.5549 5.88886 12.0184C5.88886 8.48219 8.75474 5.61524 12.2899 5.61524V0.376465C5.86206 0.376465 0.651367 5.58867 0.651367 12.0184C0.651367 18.4479 5.86206 23.6601 12.2899 23.6601C18.7176 23.6601 23.9285 18.4479 23.9285 12.0184H18.691C18.691 15.5549 15.8252 18.4214 12.2899 18.4214Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "24",
                        id: "mask2_250_8163",
                        maskUnits: "userSpaceOnUse",
                        width: "103",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.651367 0.376465H102.32V23.66H0.651367V0.376465Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_250_8163)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M12.29 12.0182H18.6911V5.61523H12.29V12.0182Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_8163",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "23.2836",
                        transform: "translate(0.651367 0.376465)",
                        width: "101.669"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite5;
var _c;
$RefreshReg$(_c, "LogoGateioWhite5");

  $parcel$ReactRefreshHelpers$dc8b.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"kPNsQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite6", ()=>(0, _logoGateioWhite6.LogoGateioWhite6));
var _logoGateioWhite6 = require("./LogoGateioWhite6");

},{"./LogoGateioWhite6":"6yeze","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6yeze":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$d253 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$d253.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite6", ()=>LogoGateioWhite6);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite6 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-6 ${className}`,
        fill: "none",
        height: "31",
        viewBox: "0 0 136 31",
        width: "136",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7695)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "31",
                        id: "mask0_250_7695",
                        maskUnits: "userSpaceOnUse",
                        width: "136",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.303223 0.0600586H135.332V30.9835H0.303223V0.0600586Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_250_7695)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M112.09 9.24996H115.924V5.41406H112.09V9.24996ZM91.7071 15.638C92.4398 13.6944 94.3162 12.3105 96.5164 12.3105C98.7164 12.3105 100.593 13.6944 101.326 15.638H91.7071ZM96.5164 8.74409C91.7096 8.74409 87.8117 12.6425 87.8117 17.4517C87.8117 22.2608 91.7096 26.1586 96.5164 26.1586C99.815 26.1586 102.685 24.3241 104.162 21.6199L100.945 20.059C100.051 21.5747 98.403 22.5922 96.5164 22.5922C94.1328 22.5922 92.1291 20.9691 91.5477 18.7675H101.485C101.484 18.7691 101.484 18.7714 101.484 18.7733H105.123C105.189 18.3422 105.223 17.9008 105.223 17.4517C105.223 12.6425 101.325 8.74409 96.5164 8.74409ZM106.234 25.6945H110.068V21.8586H106.234V25.6945ZM112.09 25.6945H115.924V10.9363H112.09V25.6945ZM126.628 22.5922C123.789 22.5922 121.488 20.2906 121.488 17.4517C121.488 14.6121 123.789 12.3105 126.628 12.3105C129.466 12.3105 131.767 14.6121 131.767 17.4517C131.767 20.2906 129.466 22.5922 126.628 22.5922ZM126.626 8.74409C121.819 8.74409 117.921 12.6425 117.921 17.4517C117.921 22.2608 121.819 26.1586 126.626 26.1586C131.435 26.1586 135.333 22.2608 135.333 17.4517C135.333 12.6425 131.435 8.74409 126.626 8.74409ZM46.45 14.242V18.2081H51.8119C51.5319 19.3414 50.9784 20.357 50.1847 21.1683C48.9876 22.392 47.3277 23.0663 45.5104 23.0663C41.7394 23.0663 38.671 19.9974 38.671 16.225C38.671 12.4526 41.7394 9.38341 45.5104 9.38341C47.5304 9.38341 49.3872 10.2482 50.6744 11.7399L53.7443 9.23072C51.7089 6.84475 48.689 5.41695 45.5104 5.41695C39.5529 5.41695 34.7061 10.2656 34.7061 16.225C34.7061 22.1845 39.5529 27.0328 45.5104 27.0328C48.403 27.0328 51.0695 25.9902 53.0189 23.9975C54.6548 22.325 55.739 19.992 55.9475 17.6547C56.0491 16.5147 56.0584 15.3823 55.9985 14.242H46.45ZM65.9824 22.5932C63.144 22.5932 60.8428 20.2909 60.8428 17.4517C60.8428 14.6118 63.144 12.3102 65.9824 12.3102C68.8212 12.3102 71.1224 14.6118 71.1224 17.4517C71.1224 20.2909 68.8212 22.5932 65.9824 22.5932ZM71.1231 10.441C69.6822 9.38437 67.9056 8.75885 65.9824 8.75885C61.1756 8.75885 57.279 12.657 57.279 17.4652C57.279 22.274 61.1756 26.1715 65.9824 26.1715C67.9056 26.1715 69.6822 25.5463 71.1231 24.4896V25.6945H74.6862V9.23617H71.1231V10.441ZM82.3353 5.41438H78.7718V9.24996H76.636V12.614H78.7718V21.4175C78.7718 22.3266 78.886 23.0913 79.1124 23.6915C79.3356 24.2853 79.6768 24.7501 80.0824 25.1132C80.4936 25.4818 80.9759 25.7689 81.5477 25.9319C82.1288 26.0955 82.7698 26.1586 83.4474 26.1586C84.1488 26.1586 84.7741 26.0858 85.3077 25.9418C85.8032 25.8087 86.2781 25.6204 86.72 25.3811V22.6705C86.0171 22.9746 85.36 23.0846 84.6102 23.1196C83.8188 23.1568 83.3506 22.9306 82.9609 22.5592C82.5527 22.1701 82.3353 21.6629 82.3353 20.8122V12.614H86.72V9.24996H82.3353V5.41438Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "31",
                        id: "mask1_250_7695",
                        maskUnits: "userSpaceOnUse",
                        width: "136",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.303223 0.0600586H135.332V30.9835H0.303223V0.0600586Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_250_7695)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M15.7607 24.0259C11.0655 24.0259 7.25927 20.2189 7.25927 15.522C7.25927 10.8255 11.0655 7.0178 15.7607 7.0178V0.0600586C7.22367 0.0600586 0.303223 6.98251 0.303223 15.522C0.303223 24.0612 7.22367 30.9837 15.7607 30.9837C24.2974 30.9837 31.2182 24.0612 31.2182 15.522H24.2621C24.2621 20.2189 20.4559 24.0259 15.7607 24.0259Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "31",
                        id: "mask2_250_7695",
                        maskUnits: "userSpaceOnUse",
                        width: "136",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.303223 0.0600586H135.332V30.9835H0.303223V0.0600586Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_250_7695)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M15.7607 15.5215H24.2622V7.01758H15.7607V15.5215Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7695",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "30.9235",
                        transform: "translate(0.303223 0.0600586)",
                        width: "135.029"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite6;
var _c;
$RefreshReg$(_c, "LogoGateioWhite6");

  $parcel$ReactRefreshHelpers$d253.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"hXIor":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite7", ()=>(0, _logoGateioWhite7.LogoGateioWhite7));
var _logoGateioWhite7 = require("./LogoGateioWhite7");

},{"./LogoGateioWhite7":"50Ydl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"50Ydl":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$8114 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$8114.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite7", ()=>LogoGateioWhite7);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite7 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-7 ${className}`,
        fill: "none",
        height: "44",
        viewBox: "0 0 188 44",
        width: "188",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7227)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "44",
                        id: "mask0_250_7227",
                        maskUnits: "userSpaceOnUse",
                        width: "188",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.587891 0.800293H187.016V43.4949H0.587891V0.800293Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_250_7227)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M154.926 13.4884H160.22V8.19238H154.926V13.4884ZM126.785 22.3081C127.796 19.6246 130.387 17.714 133.425 17.714C136.462 17.714 139.053 19.6246 140.065 22.3081H126.785ZM133.425 12.79C126.788 12.79 121.406 18.1724 121.406 24.8122C121.406 31.4519 126.788 36.8335 133.425 36.8335C137.979 36.8335 141.941 34.3006 143.98 30.5671L139.539 28.412C138.305 30.5046 136.029 31.9094 133.425 31.9094C130.134 31.9094 127.367 29.6684 126.565 26.6289H140.284C140.283 26.6311 140.283 26.6342 140.283 26.6369H145.307C145.398 26.0416 145.445 25.4322 145.445 24.8122C145.445 18.1724 140.063 12.79 133.425 12.79ZM146.841 36.1926H152.135V30.8966H146.841V36.1926ZM154.926 36.1926H160.22V15.8167H154.926V36.1926ZM174.998 31.9094C171.079 31.9094 167.902 28.7317 167.902 24.8122C167.902 20.8917 171.079 17.714 174.998 17.714C178.917 17.714 182.094 20.8917 182.094 24.8122C182.094 28.7317 178.917 31.9094 174.998 31.9094ZM174.996 12.79C168.359 12.79 162.977 18.1724 162.977 24.8122C162.977 31.4519 168.359 36.8335 174.996 36.8335C181.634 36.8335 187.016 31.4519 187.016 24.8122C187.016 18.1724 181.634 12.79 174.996 12.79ZM64.3002 20.3806V25.8565H71.7031C71.3166 27.4212 70.5524 28.8234 69.4566 29.9435C67.8038 31.6331 65.512 32.564 63.0029 32.564C57.7965 32.564 53.5602 28.3269 53.5602 23.1186C53.5602 17.9102 57.7965 13.6727 63.0029 13.6727C65.7919 13.6727 68.3555 14.8667 70.1327 16.9261L74.3712 13.4619C71.561 10.1677 67.3916 8.19637 63.0029 8.19637C54.7778 8.19637 48.0859 14.8906 48.0859 23.1186C48.0859 31.3465 54.7778 38.0403 63.0029 38.0403C66.9966 38.0403 70.6782 36.601 73.3697 33.8497C75.6282 31.5405 77.1252 28.3194 77.413 25.0925C77.5533 23.5185 77.5662 21.9551 77.4834 20.3806H64.3002ZM91.2678 31.9108C87.3489 31.9108 84.1717 28.7322 84.1717 24.8122C84.1717 20.8913 87.3489 17.7136 91.2678 17.7136C95.1871 17.7136 98.3643 20.8913 98.3643 24.8122C98.3643 28.7322 95.1871 31.9108 91.2678 31.9108ZM98.3652 15.1329C96.3759 13.674 93.923 12.8104 91.2678 12.8104C84.6313 12.8104 79.2513 18.1923 79.2513 24.8308C79.2513 31.4701 84.6313 36.8512 91.2678 36.8512C93.923 36.8512 96.3759 35.988 98.3652 34.5291V36.1926H103.285V13.4694H98.3652V15.1329ZM113.845 8.19283H108.925V13.4884H105.977V18.133H108.925V30.2876C108.925 31.5427 109.083 32.5986 109.396 33.4272C109.704 34.247 110.175 34.8888 110.735 35.3901C111.303 35.899 111.969 36.2954 112.758 36.5204C113.56 36.7462 114.445 36.8335 115.381 36.8335C116.349 36.8335 117.213 36.7329 117.949 36.5341C118.633 36.3503 119.289 36.0903 119.899 35.7599V32.0175C118.929 32.4374 118.021 32.5893 116.986 32.6376C115.894 32.6889 115.247 32.3767 114.709 31.8638C114.146 31.3266 113.845 30.6264 113.845 29.4519V18.133H119.899V13.4884H113.845V8.19283Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "44",
                        id: "mask1_250_7227",
                        maskUnits: "userSpaceOnUse",
                        width: "188",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.587891 0.800293H187.016V43.4949H0.587891V0.800293Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_250_7227)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M21.9293 33.8889C15.4469 33.8889 10.1918 28.6327 10.1918 22.1479C10.1918 15.6636 15.4469 10.4065 21.9293 10.4065V0.800293C10.1426 0.800293 0.587891 10.3578 0.587891 22.1479C0.587891 33.9376 10.1426 43.4951 21.9293 43.4951C33.7156 43.4951 43.2707 33.9376 43.2707 22.1479H33.6669C33.6669 28.6327 28.4118 33.8889 21.9293 33.8889Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "44",
                        id: "mask2_250_7227",
                        maskUnits: "userSpaceOnUse",
                        width: "188",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.587891 0.800293H187.016V43.4949H0.587891V0.800293Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_250_7227)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M21.9292 22.1472H33.6667V10.4062H21.9292V22.1472Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7227",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "42.6946",
                        transform: "translate(0.587891 0.800293)",
                        width: "186.428"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite7;
var _c;
$RefreshReg$(_c, "LogoGateioWhite7");

  $parcel$ReactRefreshHelpers$8114.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8D2tI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite8", ()=>(0, _logoGateioWhite8.LogoGateioWhite8));
var _logoGateioWhite8 = require("./LogoGateioWhite8");

},{"./LogoGateioWhite8":"7B5ft","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7B5ft":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$fb14 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$fb14.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite8", ()=>LogoGateioWhite8);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite8 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-8 ${className}`,
        fill: "none",
        height: "47",
        viewBox: "0 0 204 47",
        width: "204",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_6269)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "47",
                        id: "mask0_250_6269",
                        maskUnits: "userSpaceOnUse",
                        width: "204",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.585449 0H203.501V46.4703H0.585449V0Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_250_6269)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M168.573 13.8103H174.335V8.0459H168.573V13.8103ZM137.943 23.4099C139.044 20.4892 141.863 18.4096 145.17 18.4096C148.476 18.4096 151.295 20.4892 152.397 23.4099H137.943ZM145.17 13.0501C137.946 13.0501 132.089 18.9085 132.089 26.1355C132.089 33.3624 137.946 39.2199 145.17 39.2199C150.127 39.2199 154.439 36.463 156.659 32.3993L151.825 30.0536C150.482 32.3313 148.005 33.8604 145.17 33.8604C141.588 33.8604 138.577 31.4212 137.703 28.1129H152.636C152.635 28.1153 152.635 28.1186 152.634 28.1215H158.103C158.202 27.4737 158.253 26.8103 158.253 26.1355C158.253 18.9085 152.396 13.0501 145.17 13.0501ZM159.772 38.5223H165.535V32.7579H159.772V38.5223ZM168.573 38.5223H174.335V16.3445H168.573V38.5223ZM190.42 33.8604C186.154 33.8604 182.697 30.4017 182.697 26.1355C182.697 21.8683 186.154 18.4096 190.42 18.4096C194.685 18.4096 198.143 21.8683 198.143 26.1355C198.143 30.4017 194.685 33.8604 190.42 33.8604ZM190.417 13.0501C183.194 13.0501 177.336 18.9085 177.336 26.1355C177.336 33.3624 183.194 39.2199 190.417 39.2199C197.643 39.2199 203.501 33.3624 203.501 26.1355C203.501 18.9085 197.643 13.0501 190.417 13.0501ZM69.9324 21.312V27.2722H77.99C77.5693 28.9753 76.7375 30.5014 75.5448 31.7206C73.7458 33.5596 71.2514 34.5729 68.5204 34.5729C62.8535 34.5729 58.2426 29.9611 58.2426 24.2921C58.2426 18.6231 62.8535 14.0108 68.5204 14.0108C71.5559 14.0108 74.3462 15.3105 76.2806 17.552L80.894 13.7814C77.8353 10.1959 73.2971 8.05024 68.5204 8.05024C59.5678 8.05024 52.2842 15.3365 52.2842 24.2921C52.2842 33.2477 59.5678 40.5335 68.5204 40.5335C72.8672 40.5335 76.8744 38.9668 79.8039 35.9723C82.2622 33.4588 83.8915 29.9529 84.2048 26.4406C84.3575 24.7274 84.3715 23.0257 84.2814 21.312H69.9324ZM99.2848 33.8618C95.0194 33.8618 91.5612 30.4021 91.5612 26.1355C91.5612 21.8678 95.0194 18.4091 99.2848 18.4091C103.551 18.4091 107.009 21.8678 107.009 26.1355C107.009 30.4021 103.551 33.8618 99.2848 33.8618ZM107.01 15.6002C104.845 14.0123 102.175 13.0723 99.2848 13.0723C92.0614 13.0723 86.2057 18.9302 86.2057 26.1557C86.2057 33.3822 92.0614 39.2392 99.2848 39.2392C102.175 39.2392 104.845 38.2996 107.01 36.7117V38.5223H112.364V13.7896H107.01V15.6002ZM123.859 8.04638H118.504V13.8103H115.295V18.8656H118.504V32.0951C118.504 33.4613 118.676 34.6105 119.016 35.5124C119.351 36.4047 119.864 37.1032 120.474 37.6489C121.091 38.2027 121.816 38.6342 122.676 38.8791C123.549 39.1249 124.512 39.2199 125.53 39.2199C126.584 39.2199 127.524 39.1105 128.326 38.894C129.071 38.694 129.784 38.411 130.448 38.0514V33.978C129.392 34.435 128.405 34.6003 127.278 34.6529C126.088 34.7088 125.385 34.369 124.799 33.8107C124.186 33.226 123.859 32.4639 123.859 31.1855V18.8656H130.448V13.8103H123.859V8.04638Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "47",
                        id: "mask1_250_6269",
                        maskUnits: "userSpaceOnUse",
                        width: "204",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.585449 0H203.501V46.4703H0.585449V0Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_250_6269)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M23.8142 36.0143C16.7585 36.0143 11.0387 30.2933 11.0387 23.235C11.0387 16.1773 16.7585 10.4553 23.8142 10.4553V-0.000488281C10.9852 -0.000488281 0.585449 10.4022 0.585449 23.235C0.585449 36.0673 10.9852 46.47 23.8142 46.47C36.6428 46.47 47.043 36.0673 47.043 23.235H36.5898C36.5898 30.2933 30.8699 36.0143 23.8142 36.0143Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "47",
                        id: "mask2_250_6269",
                        maskUnits: "userSpaceOnUse",
                        width: "204",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.585449 0H203.501V46.4703H0.585449V0Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_250_6269)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M23.814 23.2348H36.5895V10.4556H23.814V23.2348Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_6269",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "46.4703",
                        transform: "translate(0.585449)",
                        width: "202.915"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite8;
var _c;
$RefreshReg$(_c, "LogoGateioWhite8");

  $parcel$ReactRefreshHelpers$fb14.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"l4dUk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite41", ()=>(0, _logoToriiiWhite41.LogoToriiiWhite41));
var _logoToriiiWhite41 = require("./LogoToriiiWhite41");

},{"./LogoToriiiWhite41":"1IdLn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1IdLn":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$42a8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$42a8.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite41", ()=>LogoToriiiWhite41);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite41 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-4-1 ${className}`,
        fill: "none",
        height: "29",
        viewBox: "0 0 136 29",
        width: "136",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M13.5787 16.0247C13.1932 16.0247 12.8117 16.007 12.4352 15.9722L12.5663 14.9954C12.8997 15.0249 13.2375 15.0399 13.5787 15.0399C13.9199 15.0399 14.2576 15.0249 14.5911 14.9954L14.7222 15.9722C14.3457 16.007 13.9642 16.0247 13.5787 16.0247ZM26.5644 10.5822C26.4712 10.2779 26.3677 9.97828 26.2541 9.6836C26.1105 9.31093 26.066 8.90788 26.1219 8.51244C26.1376 8.40147 26.1518 8.29004 26.1647 8.1782C26.1651 8.17524 26.1654 8.17228 26.1657 8.16932C26.2262 7.6332 26.0947 7.09341 25.8007 6.64106C25.7447 6.5549 25.6878 6.4694 25.63 6.38451C25.5852 6.58542 25.5353 6.78449 25.4808 6.98147C25.4175 7.20923 25.3482 7.43439 25.2722 7.65694C25.0278 8.37539 24.7188 9.06433 24.3521 9.71637C24.3505 9.71913 24.349 9.72183 24.3474 9.72459C24.0629 10.2307 23.9952 10.8297 24.1619 11.3859C24.328 11.9396 24.4517 12.5116 24.5292 13.0983C24.5927 13.5768 24.6257 14.0649 24.6257 14.5608V14.5635C24.6257 18.2499 22.8199 21.5146 20.0447 23.521L19.8322 22.5505L19.0773 19.1047L18.8862 18.231C19.9736 17.7286 20.9776 17.0766 21.872 16.3015C23.2625 15.0964 23.7965 13.173 23.2269 11.4233C23.2238 11.4141 23.2208 11.4049 23.2178 11.3956C21.9048 13.0332 20.1826 14.3291 18.2065 15.1282L17.9923 14.1511C19.9244 13.3362 21.5839 12.0023 22.7964 10.3241C23.001 10.041 23.193 9.74802 23.3712 9.44614C23.5252 9.18592 23.6689 8.91855 23.8018 8.64541C24.1205 7.99123 24.3782 7.30234 24.5675 6.58516C24.5856 6.51687 24.6143 6.38941 24.6462 6.2398C24.7727 5.64615 24.6025 5.02684 24.1863 4.58505L24.1796 4.57795C24.1308 4.74507 24.0781 4.9104 24.0212 5.07385C23.9558 5.26343 23.8851 5.45091 23.8097 5.63549C23.5653 6.23398 23.2697 6.80639 22.9286 7.3469C22.7851 7.5744 22.6335 7.79639 22.4743 8.01236C22.2887 8.26416 22.0925 8.50749 21.8866 8.74214C19.862 11.0508 16.8905 12.508 13.5787 12.508C10.2669 12.508 7.29544 11.0508 5.27108 8.74214C5.06517 8.50749 4.86901 8.26416 4.68336 8.01236C4.52415 7.79639 4.37224 7.5744 4.22881 7.34659C3.88763 6.80613 3.59208 6.23373 3.34794 5.63518C3.27229 5.45066 3.2019 5.26343 3.13646 5.07385C3.07955 4.9104 3.02682 4.74507 2.97802 4.57795C2.97578 4.5803 2.97353 4.5827 2.97133 4.58505C2.55512 5.02684 2.38494 5.64616 2.51153 6.23975C2.54338 6.38926 2.57207 6.51661 2.59019 6.58491C2.77926 7.30203 3.03708 7.99123 3.35585 8.64541C3.48872 8.91855 3.63241 9.18592 3.78641 9.44614C3.96466 9.74802 4.15633 10.041 4.36091 10.3241C5.57347 12.0023 7.23297 13.3362 9.16504 14.1511L8.95096 15.1282C6.97483 14.3291 5.25291 13.0332 3.93985 11.3956C3.93684 11.4049 3.93377 11.4141 3.93076 11.4234C3.36116 13.1731 3.89508 15.0965 5.28563 16.3016C6.17992 17.0767 7.18396 17.7286 8.27126 18.231L8.0801 19.1047L7.32525 22.5505L7.11271 23.5208C4.33743 21.5143 2.53195 18.2499 2.53195 14.5635V14.5614C2.53195 14.0654 2.56487 13.5768 2.62842 13.0983C2.70601 12.5116 2.82974 11.9395 2.99573 11.3857C3.16245 10.8298 3.09491 10.2311 2.81065 9.7251C2.80896 9.72209 2.80728 9.71913 2.80559 9.71611C2.43884 9.06408 2.12982 8.37513 1.88517 7.65668C1.80952 7.43439 1.73989 7.20923 1.67685 6.98147C1.62229 6.78449 1.57247 6.58542 1.52765 6.38451C1.46987 6.46935 1.41301 6.55484 1.35701 6.64101C1.063 7.09341 0.931455 7.63331 0.991994 8.16942C0.9923 8.17218 0.992606 8.17494 0.992963 8.17764C1.00578 8.28948 1.02002 8.40091 1.03569 8.51188C1.09158 8.90737 1.04707 9.31047 0.903432 9.68319C0.789756 9.97802 0.686188 10.2779 0.592981 10.5822C0.207495 11.8412 0 13.1782 0 14.5635C0 21.7698 5.61354 27.6649 12.7062 28.1147L12.8657 26.3527L12.9346 25.5915C12.3345 25.5573 11.7473 25.475 11.1767 25.3481L11.2973 24.4496L11.8728 20.1615L11.9894 19.2943C12.5101 19.3597 13.0406 19.3932 13.5787 19.3932C14.1171 19.3932 14.6475 19.3597 15.1683 19.2943L15.2846 20.1615L15.8604 24.4496L15.9809 25.3481C15.4104 25.4747 14.8231 25.5573 14.2231 25.5915L14.2919 26.3527L14.4514 28.1147C21.5441 27.6647 27.1574 21.7695 27.1574 14.5635C27.1574 13.1782 26.9499 11.8412 26.5644 10.5822Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M23.4025 3.81314C23.363 3.98031 23.319 4.14589 23.2707 4.30959C23.2151 4.49917 23.1541 4.6864 23.0877 4.87093C22.8731 5.46998 22.6034 6.0429 22.2846 6.58341C22.1504 6.81122 22.0075 7.03295 21.8562 7.24862C21.6798 7.50067 21.492 7.74431 21.2938 7.97896C21.2417 7.91786 21.1889 7.85742 21.1354 7.7976C20.8644 7.4947 20.8398 7.04561 21.0733 6.71291C21.1107 6.65962 21.1476 6.60587 21.1838 6.55176C21.1853 6.54957 21.1867 6.54742 21.1882 6.54523C21.4381 6.17255 21.3617 5.66936 21.0132 5.38663C19.3907 4.07025 17.4123 3.17575 15.2446 2.86979V11.4242C14.7026 11.5141 14.1457 11.561 13.5781 11.561C13.0104 11.561 12.4536 11.5141 11.9115 11.4242V2.86979C9.7441 3.17575 7.76568 4.07025 6.14318 5.38663C5.79465 5.66936 5.71824 6.1726 5.96826 6.54528C5.96969 6.54747 5.97111 6.54962 5.97259 6.55176C6.00884 6.60587 6.04564 6.65957 6.083 6.71286C6.31648 7.04566 6.29177 7.49475 6.02063 7.79765C5.96713 7.85732 5.9144 7.9177 5.86234 7.9787C5.66434 7.74431 5.47665 7.50067 5.30024 7.24862C5.14889 7.03295 5.00597 6.81091 4.87178 6.58315C4.553 6.04265 4.28334 5.46973 4.0687 4.87067C4.00224 4.68609 3.94109 4.49891 3.8857 4.30934C3.83747 4.14564 3.79341 3.98005 3.75391 3.81288C4.01913 3.57006 4.2936 3.33725 4.57623 3.1147C7.05381 1.16389 10.18 8.29144e-05 13.5781 8.29144e-05C16.9764 8.29144e-05 20.1026 1.16389 22.5802 3.11495C22.8631 3.33751 23.1373 3.57032 23.4025 3.81314Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 24,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M36.725 24.3324L36.7343 27.6379L35.2349 27.6421L35.2256 24.3366L32.3916 24.3445C32.4785 24.2563 32.5606 24.1712 32.6379 24.0891C32.7152 24.0067 32.7967 23.9348 32.8815 23.8735C32.9667 23.8123 33.059 23.7631 33.1596 23.7265C33.2595 23.69 33.3778 23.6716 33.5143 23.6713L33.6791 23.6707H33.7527L36.7174 23.6622L39.5514 23.6544C39.4644 23.7422 39.3823 23.8277 39.305 23.9098C39.2278 23.9922 39.1466 24.064 39.0614 24.1253C38.9763 24.1866 38.8836 24.2358 38.7834 24.2723C38.6832 24.3088 38.5652 24.3272 38.4287 24.3275L36.725 24.3324Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 30,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M41.4045 24.3133L41.4091 25.9036C41.4921 25.82 41.5693 25.7412 41.6412 25.6672C41.7127 25.5933 41.7894 25.5287 41.8706 25.4734C41.9518 25.4185 42.0409 25.3744 42.1372 25.3421C42.2338 25.3098 42.3482 25.2932 42.4807 25.2929L45.3714 25.2848L45.3732 25.9549L41.4091 25.9661L41.4118 26.9487L45.0864 26.9381C45.2229 26.9378 45.3412 26.9562 45.4414 26.9936C45.542 27.0308 45.6349 27.0803 45.7204 27.1419C45.8055 27.2037 45.8861 27.2747 45.9622 27.3553C46.0382 27.4359 46.1197 27.5192 46.2073 27.6052L39.9145 27.623L39.9033 23.6474L46.1961 23.6296C46.1092 23.7171 46.0271 23.8017 45.9498 23.8832C45.8722 23.9647 45.791 24.0368 45.7062 24.0996C45.6211 24.1624 45.5284 24.2128 45.4282 24.2508C45.3279 24.2892 45.2096 24.3082 45.0735 24.3088L41.4045 24.3133Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 36,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M52.6539 23.6004L52.3197 23.9363C52.1045 24.1528 51.8415 24.2615 51.5312 24.2624L49.7876 24.2672L48.9074 24.2696L48.8506 24.2699C48.7407 24.2702 48.6366 24.2953 48.5385 24.3445C48.4286 24.3904 48.3275 24.454 48.2351 24.5356C48.1424 24.6174 48.0624 24.7131 47.9945 24.8232C47.9266 24.9331 47.874 25.0545 47.8366 25.187C47.7989 25.3198 47.7805 25.4581 47.7808 25.6018C47.7814 25.7458 47.8007 25.884 47.8387 26.0162C47.8771 26.1488 47.9305 26.2698 47.9987 26.3794C48.0672 26.489 48.1478 26.5844 48.2411 26.6656C48.3341 26.7468 48.4355 26.8098 48.5454 26.8548C48.6438 26.9037 48.7483 26.9282 48.8581 26.9279L51.5388 26.9203C51.8491 26.9194 52.1126 27.0266 52.3291 27.2418L52.665 27.576L48.2749 27.5884C48.0023 27.589 47.7455 27.5377 47.5049 27.4341C47.2643 27.3309 47.0536 27.1893 46.8733 27.01C46.6928 26.8307 46.5503 26.6209 46.4456 26.3809C46.3408 26.1406 46.288 25.8843 46.2871 25.6117C46.2865 25.3391 46.3378 25.0825 46.4414 24.8417C46.5446 24.6011 46.6862 24.3904 46.8655 24.2101C47.0448 24.0299 47.2543 23.8871 47.4946 23.7824C47.7349 23.6776 47.9912 23.6248 48.2638 23.6239L52.6539 23.6004Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 42,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M54.72 23.6056L54.7263 25.866L55.0095 25.5813C55.2247 25.3649 55.4876 25.2562 55.798 25.2553L57.8881 25.2493L57.8833 23.5965L59.3827 23.5926L59.3938 27.5679L57.8944 27.5722L57.8899 25.9194L54.7209 25.9285L54.7254 27.5812L53.226 27.5854L53.2148 23.6098L54.7142 23.6056H54.72Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 48,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M61.2687 23.5929C61.4655 23.5923 61.6397 23.6155 61.7916 23.6623C61.9428 23.7094 62.0832 23.7734 62.2124 23.8543C62.3413 23.9355 62.4653 24.0288 62.5849 24.1344C62.7047 24.2401 62.8306 24.3515 62.9637 24.4683L65.1272 26.3876L65.1194 23.582L65.852 23.5799L65.8632 27.5498L64.0969 27.5549L60.6804 24.401L60.6891 27.5643L59.9565 27.5664L59.9453 23.5965L61.2687 23.5929Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 54,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M73.4629 24.7657C73.3578 24.5254 73.2156 24.3159 73.0351 24.1363C72.8546 23.9573 72.6442 23.8157 72.4036 23.7125C72.1627 23.6089 71.9061 23.5576 71.6335 23.5582L68.402 23.5673C68.1294 23.5682 67.8728 23.621 67.6329 23.7257C67.3926 23.8305 67.1822 23.9733 67.0007 24.1532C66.8196 24.3337 66.6774 24.5444 66.5739 24.785C66.4703 25.0259 66.419 25.2825 66.4199 25.5551C66.4205 25.8277 66.4734 26.084 66.5781 26.3239C66.6829 26.5642 66.8256 26.774 67.0059 26.9533C67.1861 27.1327 67.3968 27.2742 67.6377 27.3775C67.878 27.481 68.1349 27.5323 68.4075 27.5317L69.7339 27.5278L69.6524 27.3246C69.5449 27.0569 69.285 26.8815 68.9964 26.8824C68.8865 26.8827 68.7824 26.8586 68.6837 26.8097C68.5738 26.7644 68.4724 26.7013 68.3794 26.6201C68.2861 26.5389 68.2055 26.4435 68.1373 26.3342C68.0688 26.2243 68.0153 26.1036 67.977 25.9711C67.9389 25.8385 67.9196 25.7003 67.9193 25.5566C67.9187 25.4126 67.9374 25.2746 67.9749 25.1418C68.0123 25.0093 68.0651 24.8879 68.1327 24.7778C68.2007 24.6679 68.281 24.5719 68.3733 24.4904C68.466 24.4086 68.5668 24.3449 68.6767 24.299C68.7748 24.2498 68.879 24.2247 68.9889 24.2244L71.0561 24.2187C71.162 24.2184 71.2644 24.2429 71.3631 24.2918C71.4729 24.3367 71.5744 24.4001 71.6674 24.481C71.7603 24.5622 71.8409 24.6576 71.9098 24.7672C71.978 24.8771 72.0314 24.9978 72.0697 25.1304C72.1078 25.2629 72.1271 25.4008 72.1274 25.5448C72.128 25.6885 72.1093 25.8268 72.0722 25.9596C72.0344 26.0921 71.9816 26.2135 71.914 26.3233C71.8461 26.4335 71.7658 26.5292 71.6734 26.611C71.5807 26.6925 71.4796 26.7562 71.37 26.8021C71.2716 26.8516 71.1696 26.8764 71.0636 26.8767H71.0488C70.7617 26.8776 70.5036 27.0524 70.3968 27.3189L70.3135 27.5263L71.6447 27.5224C71.9173 27.5218 72.1736 27.4689 72.4139 27.3642C72.6539 27.2594 72.8637 27.1167 73.043 26.9364C73.2223 26.7562 73.3639 26.5455 73.4674 26.3046C73.5706 26.0643 73.622 25.8074 73.6214 25.5349C73.6205 25.2623 73.5676 25.006 73.4629 24.7657Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 60,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M75.6015 26.8581L79.1455 26.8481C79.2816 26.8478 79.4 26.8653 79.5005 26.9013C79.601 26.9369 79.694 26.9849 79.7791 27.0452C79.8645 27.1056 79.946 27.1754 80.0239 27.2547C80.1018 27.3338 80.1845 27.4172 80.2718 27.5038L74.1039 27.521L74.0928 23.5457L75.5922 23.5414L75.6015 26.8581Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 66,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M87.0537 24.7279C86.949 24.4876 86.8065 24.2778 86.6259 24.0985C86.4457 23.9192 86.235 23.7779 85.9944 23.6744C85.7535 23.5711 85.497 23.5195 85.2244 23.5204L81.9928 23.5295C81.7202 23.5304 81.464 23.5829 81.2237 23.688C80.9837 23.7927 80.773 23.9352 80.5916 24.1154C80.4104 24.2959 80.2682 24.5066 80.1647 24.7469C80.0612 24.9881 80.0098 25.2444 80.0108 25.5173C80.0114 25.7899 80.0642 26.0462 80.1689 26.2862C80.2737 26.5264 80.4165 26.7362 80.597 26.9156C80.7769 27.0949 80.9876 27.2364 81.2285 27.3397C81.4691 27.4432 81.7257 27.4945 81.9983 27.4936L83.3256 27.49L83.2444 27.2878C83.1366 27.0194 82.8761 26.8437 82.5872 26.8446C82.4773 26.8449 82.3732 26.8208 82.2745 26.7716C82.1646 26.7266 82.0632 26.6635 81.9702 26.5823C81.8772 26.5011 81.7963 26.4057 81.7281 26.2961C81.6596 26.1865 81.6061 26.0655 81.5681 25.933C81.5298 25.8007 81.5104 25.6625 81.5101 25.5185C81.5095 25.3748 81.5283 25.2366 81.5657 25.104C81.6031 24.9712 81.6559 24.8499 81.7236 24.74C81.7915 24.6301 81.8718 24.5341 81.9642 24.4523C82.0568 24.3708 82.158 24.3071 82.2675 24.2612C82.3659 24.212 82.4698 24.1869 82.5797 24.1866L84.6469 24.1809C84.7528 24.1806 84.8552 24.2051 84.9539 24.2537C85.0638 24.2989 85.1652 24.362 85.2585 24.4432C85.3511 24.5244 85.4321 24.6198 85.5006 24.7294C85.5688 24.839 85.6222 24.9597 85.6606 25.0923C85.6986 25.2248 85.7182 25.363 85.7185 25.5067C85.7188 25.6507 85.7001 25.789 85.663 25.9215C85.6252 26.054 85.5727 26.1754 85.5048 26.2856C85.4372 26.3957 85.3566 26.4914 85.2642 26.5729C85.1718 26.6547 85.0707 26.7184 84.9608 26.764C84.8627 26.8138 84.7604 26.8383 84.6544 26.8389H84.6396C84.352 26.8398 84.0936 27.0149 83.9864 27.282L83.9037 27.4885L85.2355 27.4846C85.5081 27.484 85.7647 27.4312 86.0047 27.3264C86.245 27.2217 86.4545 27.0789 86.6338 26.8984C86.8131 26.7181 86.9547 26.5077 87.0582 26.2668C87.1615 26.0262 87.2128 25.7694 87.2122 25.4971C87.2113 25.2245 87.1584 24.9682 87.0537 24.7279Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 72,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M90.3658 24.1647C90.2297 24.165 90.0971 24.1994 89.9685 24.2679C89.8399 24.3361 89.7255 24.43 89.6256 24.5493C89.5257 24.6685 89.4457 24.8077 89.3856 24.9664C89.3253 25.1252 89.2957 25.2955 89.296 25.4769C89.2966 25.6544 89.3256 25.8225 89.3826 25.981C89.44 26.1395 89.5188 26.2799 89.6196 26.4024C89.7201 26.525 89.8396 26.6219 89.9782 26.6934C90.1165 26.7647 90.2671 26.8 90.4301 26.7997L93.1219 26.7922L93.1192 25.8038L90.3649 25.8117C90.4515 25.7244 90.5336 25.6408 90.6112 25.5611C90.6885 25.4814 90.7697 25.4111 90.8548 25.3504C90.9397 25.2894 91.0323 25.2408 91.1326 25.2046C91.2328 25.1684 91.3511 25.15 91.4876 25.1497L94.6167 25.1409L94.6234 27.4581L93.124 27.4623L89.7844 27.4717C89.5118 27.4726 89.2552 27.4213 89.0146 27.3177C88.7737 27.2142 88.563 27.0729 88.3828 26.8936C88.2026 26.7143 88.0598 26.5045 87.9551 26.2642C87.8503 26.0242 87.7975 25.7679 87.7969 25.4953C87.796 25.2224 87.8473 24.9658 87.9508 24.7252C88.0541 24.4847 88.1957 24.274 88.375 24.0934C88.5543 23.9132 88.7641 23.7707 89.0044 23.666C89.2444 23.5609 89.5006 23.5084 89.7732 23.5075L94.6065 23.4939C94.5195 23.5815 94.4374 23.6657 94.3602 23.7472C94.2826 23.829 94.2014 23.9011 94.1165 23.9639C94.0314 24.0267 93.9387 24.0771 93.8385 24.1152C93.7383 24.1532 93.62 24.1725 93.4838 24.1728L90.3658 24.1647Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 78,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M102.126 23.4838C101.696 23.9203 101.249 24.3562 100.787 24.7909C100.324 25.2259 99.8773 25.6615 99.4469 26.0983L99.2881 26.0986L99.2917 27.4616L97.7923 27.4658L97.7887 26.1029H97.7772C97.584 26.1035 97.421 26.0319 97.2882 25.8885L97.1116 25.7017L94.9131 23.4929L96.8215 23.4932L98.758 25.4699L100.361 23.9545C100.701 23.6354 101.104 23.4754 101.569 23.4742L102.126 23.4838Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 84,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M112.627 23.4319L112.292 23.7679C112.077 23.9843 111.814 24.093 111.504 24.0939L109.76 24.0987L108.88 24.1012L108.823 24.1015C108.713 24.1018 108.609 24.1268 108.511 24.176C108.401 24.2219 108.3 24.2856 108.208 24.3671C108.115 24.4489 108.035 24.5446 107.967 24.6548C107.899 24.7647 107.847 24.886 107.809 25.0185C107.772 25.1514 107.753 25.2896 107.753 25.4333C107.754 25.5773 107.773 25.7156 107.811 25.8478C107.85 25.9803 107.903 26.1013 107.971 26.2109C108.04 26.3205 108.121 26.4159 108.214 26.4971C108.307 26.5783 108.408 26.6414 108.518 26.6864C108.617 26.7353 108.721 26.7597 108.831 26.7594L111.511 26.7519C111.822 26.751 112.085 26.8581 112.302 27.0734L112.638 27.4075L108.248 27.4199C107.975 27.4205 107.718 27.3692 107.478 27.2657C107.237 27.1624 107.026 27.0208 106.846 26.8415C106.665 26.6622 106.523 26.4524 106.418 26.2124C106.314 25.9721 106.261 25.7159 106.26 25.4433C106.259 25.1707 106.31 24.9141 106.414 24.6732C106.517 24.4326 106.659 24.2219 106.838 24.0417C107.017 23.8615 107.227 23.7187 107.467 23.6139C107.708 23.5092 107.964 23.4564 108.236 23.4554L112.627 23.4319Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 90,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M119.607 24.6363C119.502 24.396 119.36 24.1865 119.18 24.0069C118.999 23.8279 118.789 23.6863 118.548 23.5831C118.307 23.4795 118.051 23.4282 117.778 23.4288L114.547 23.4379C114.274 23.4388 114.017 23.4916 113.777 23.5964C113.537 23.7011 113.326 23.8439 113.145 24.0238C112.964 24.2043 112.822 24.415 112.718 24.6556C112.615 24.8965 112.564 25.1531 112.564 25.4257C112.565 25.6983 112.618 25.9546 112.723 26.1946C112.827 26.4348 112.97 26.6446 113.15 26.824C113.331 27.0033 113.541 27.1448 113.782 27.2481C114.023 27.3516 114.279 27.4029 114.552 27.4023L115.882 27.3984L115.802 27.1989C115.694 26.9287 115.432 26.7521 115.141 26.753C115.031 26.7533 114.927 26.7292 114.828 26.6803C114.718 26.635 114.617 26.5719 114.524 26.4907C114.431 26.4095 114.35 26.3141 114.282 26.2048C114.213 26.0949 114.16 25.9742 114.122 25.8414C114.083 25.7091 114.064 25.5709 114.064 25.4272C114.063 25.2832 114.082 25.1449 114.119 25.0124C114.157 24.8799 114.209 24.7586 114.277 24.6484C114.345 24.5385 114.425 24.4425 114.518 24.3607C114.61 24.2792 114.711 24.2155 114.821 24.1696C114.919 24.1204 115.024 24.0953 115.133 24.095L117.201 24.0893C117.307 24.089 117.409 24.1135 117.508 24.1621C117.617 24.2073 117.719 24.2704 117.812 24.3516C117.905 24.4328 117.985 24.5282 118.054 24.6378C118.123 24.7474 118.176 24.8684 118.214 25.001C118.252 25.1335 118.272 25.2714 118.272 25.4151C118.273 25.5591 118.254 25.6974 118.216 25.8302C118.179 25.9627 118.126 26.0841 118.059 26.194C117.991 26.3041 117.91 26.3998 117.818 26.4816C117.725 26.5631 117.624 26.6268 117.515 26.6727C117.416 26.7222 117.314 26.747 117.208 26.7473H117.193C116.904 26.7482 116.643 26.9245 116.536 27.1931L116.454 27.3969L117.789 27.393C118.062 27.3924 118.318 27.3395 118.558 27.2348C118.798 27.1301 119.008 26.9873 119.188 26.807C119.367 26.6268 119.508 26.4161 119.612 26.1752C119.715 25.9346 119.766 25.6781 119.766 25.4055C119.765 25.1329 119.712 24.8766 119.607 24.6363Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 96,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M124.592 25.0965C124.736 25.0923 124.856 25.041 124.952 24.9423C125.049 24.8436 125.097 24.7222 125.096 24.5782C125.096 24.4382 125.045 24.318 124.945 24.2181C124.844 24.1182 124.722 24.0681 124.578 24.0687L121.727 24.0765L121.736 27.382L120.237 27.3862L120.226 23.4106L125.405 23.3961C125.667 23.3955 125.884 23.4535 126.059 23.5703C126.233 23.6871 126.364 23.8335 126.452 24.0095C126.54 24.1852 126.584 24.3754 126.584 24.5797C126.585 24.7841 126.542 24.9746 126.455 25.1509C126.368 25.3272 126.238 25.4745 126.064 25.5922C125.89 25.7102 125.673 25.7694 125.412 25.77L124.725 25.7721L126.683 27.3681L125.28 27.372C125.159 27.3723 125.045 27.3669 124.939 27.356C124.833 27.3449 124.733 27.3243 124.638 27.2945C124.543 27.2643 124.451 27.2247 124.359 27.1758C124.269 27.1269 124.176 27.0629 124.081 26.9835L122.635 25.7836L121.857 25.7857L122.185 25.4355C122.279 25.3359 122.388 25.2623 122.511 25.214C122.634 25.166 122.763 25.1343 122.9 25.1186C123.036 25.1029 123.175 25.0968 123.317 25.1002C123.459 25.1035 123.598 25.105 123.735 25.1047L124.586 25.1023L124.592 25.0965Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 102,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M131.43 25.094C131.487 25.0937 131.545 25.0831 131.603 25.062C131.662 25.0408 131.714 25.011 131.759 24.9723C131.805 24.934 131.842 24.889 131.873 24.8374C131.903 24.7855 131.921 24.729 131.929 24.6677C131.936 24.5757 131.928 24.4926 131.905 24.4181C131.882 24.3435 131.848 24.2792 131.803 24.2258C131.757 24.1724 131.702 24.1313 131.638 24.1029C131.573 24.0743 131.503 24.0601 131.427 24.0604L128.576 24.0682L128.586 27.3737L127.086 27.3779L127.075 23.4023L132.243 23.3878C132.505 23.3872 132.722 23.4455 132.897 23.562C133.071 23.6791 133.202 23.8252 133.29 24.0012C133.378 24.1769 133.422 24.3671 133.422 24.5714C133.423 24.7761 133.38 24.9663 133.293 25.1426C133.206 25.3192 133.076 25.4662 132.903 25.5839C132.729 25.7019 132.511 25.7611 132.25 25.7617L131.268 25.7647L128.7 25.7717C128.787 25.6814 128.867 25.5951 128.941 25.5121C129.015 25.4294 129.092 25.3578 129.173 25.2974C129.254 25.2371 129.346 25.1891 129.448 25.1531C129.551 25.1172 129.672 25.0988 129.812 25.0985L130.573 25.0907L130.391 25.097L131.419 25.094H131.43Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M133.987 27.3589L133.983 26.1378L135.482 26.1336L135.486 27.3547L133.987 27.3589Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 114,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M85.5915 11.7878C85.5946 12.8242 85.399 13.8001 85.0059 14.7151C84.6123 15.6303 84.075 16.4309 83.3933 17.1161C82.7117 17.802 81.9142 18.3442 81.001 18.7423C80.0881 19.1411 79.1137 19.3415 78.0774 19.3446L72.9115 19.359L73.1895 18.6666C73.6197 17.5955 74.6563 16.8925 75.8103 16.8891L75.8683 16.8888C76.2707 16.8882 76.6595 16.7938 77.0332 16.6054C77.4501 16.4309 77.8344 16.1894 78.1864 15.8785C78.5383 15.5685 78.8432 15.2041 79.1016 14.7857C79.3588 14.3676 79.5596 13.9067 79.7014 13.4019C79.8442 12.8984 79.9149 12.3729 79.9128 11.8253C79.9116 11.2786 79.8379 10.7536 79.693 10.2501C79.5472 9.74688 79.3446 9.28683 79.0841 8.86995C78.8239 8.45306 78.5172 8.09082 78.164 7.78231C77.8099 7.47349 77.4247 7.23351 77.0063 7.06174C76.6314 6.87639 76.2426 6.78342 75.8402 6.78493L67.9807 6.80727C67.5629 6.80787 67.1678 6.90326 66.7944 7.09072C66.3775 7.2646 65.9929 7.5067 65.6412 7.81763C65.2892 8.12765 64.9846 8.49201 64.7265 8.9101C64.4691 9.32849 64.2686 9.78945 64.1258 10.2936C63.9836 10.7983 63.913 11.3233 63.9145 11.8708C63.916 12.4175 63.9897 12.9425 64.1346 13.4457C64.2801 13.9492 64.4829 14.4093 64.7431 14.8262C65.0037 15.243 65.3101 15.605 65.6642 15.9138C66.0176 16.2223 66.4025 16.4626 66.8209 16.6335C67.1959 16.8197 67.5919 16.9127 68.0094 16.9112C69.1698 16.9079 70.2152 17.6121 70.6474 18.6892L70.9182 19.3639L65.771 19.3784C64.7347 19.382 63.7587 19.1867 62.8435 18.7936C61.9285 18.4006 61.1279 17.8624 60.4427 17.1811C59.7569 16.4994 59.2153 15.7019 58.8165 14.7887C58.4184 13.8756 58.2179 12.9014 58.2149 11.8651C58.2113 10.8285 58.4069 9.85284 58.7999 8.93757C59.1936 8.0226 59.7345 7.22204 60.424 6.53679C61.1126 5.85094 61.9131 5.30938 62.8263 4.91061C63.7394 4.51245 64.7136 4.3111 65.7499 4.30838L78.0348 4.27427C79.072 4.27095 80.0471 4.46626 80.9621 4.85929C81.8773 5.25293 82.6779 5.79026 83.3637 6.47189C84.049 7.15412 84.5905 7.95105 84.9893 8.86421C85.3875 9.77707 85.5885 10.7515 85.5915 11.7878Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 120,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M103.94 10.6139C104.486 10.5982 104.943 10.4026 105.309 10.0271C105.675 9.65216 105.857 9.1909 105.856 8.64391C105.854 8.11141 105.662 7.65498 105.28 7.27432C104.897 6.89427 104.432 6.70469 103.885 6.7062L93.047 6.73669L93.0823 19.3024L87.3824 19.3184L87.3398 4.2049L107.031 4.14966C108.024 4.14694 108.852 4.36791 109.515 4.81196C110.178 5.25632 110.677 5.81266 111.01 6.48101C111.342 7.14935 111.51 7.87233 111.512 8.64965C111.515 9.42666 111.351 10.1505 111.022 10.8207C110.693 11.4909 110.197 12.0502 109.537 12.4982C108.876 12.9465 108.049 13.1717 107.056 13.1744L104.443 13.1816L111.888 19.2495L106.555 19.2646C106.094 19.2658 105.662 19.2453 105.259 19.2033C104.856 19.1614 104.474 19.0835 104.114 18.9691C103.754 18.855 103.401 18.7047 103.055 18.5187C102.709 18.3328 102.355 18.0888 101.995 17.7876L96.4983 13.2257L93.5403 13.2339L94.7888 11.9023C95.1471 11.5241 95.5607 11.2433 96.028 11.0607C96.495 10.8778 96.9879 10.757 97.5059 10.6975C98.024 10.6381 98.5528 10.6148 99.0926 10.6275C99.6323 10.6408 100.161 10.6462 100.68 10.6447L103.918 10.6357L103.94 10.6139Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 126,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M114.068 19.2866L114.025 4.17316L119.726 4.15716L119.768 19.2706L114.068 19.2866Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 132,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M121.927 19.2642L121.885 4.1507L127.585 4.1347L127.627 19.2482L121.927 19.2642Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M129.787 19.2422L129.744 4.12873L135.444 4.11273L135.487 19.2262L129.787 19.2422Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 144,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M48.8643 6.9281L48.8996 19.4938L43.1997 19.5098L43.1644 6.9441L32.3906 6.97428C32.7209 6.63951 33.0327 6.3156 33.3273 6.00286C33.621 5.68982 33.9302 5.41693 34.2532 5.18329C34.5765 4.95054 34.9285 4.76429 35.3094 4.62513C35.6907 4.48657 36.1402 4.41593 36.6585 4.41472L37.2846 4.41291L37.5653 4.41201L48.8353 4.38031L59.6091 4.35012C59.2789 4.6852 58.9667 5.00911 58.6727 5.32184C58.3784 5.63488 58.0699 5.90808 57.7466 6.14112C57.4236 6.37417 57.071 6.56042 56.6903 6.69928C56.309 6.83844 55.8596 6.90848 55.3416 6.90998L48.8643 6.9281Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 150,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite41;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite41");

  $parcel$ReactRefreshHelpers$42a8.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"duRj4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite34", ()=>(0, _logoToriiiWhite34.LogoToriiiWhite34));
var _logoToriiiWhite34 = require("./LogoToriiiWhite34");

},{"./LogoToriiiWhite34":"lAtEh","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lAtEh":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$beb9 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$beb9.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite34", ()=>LogoToriiiWhite34);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite34 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-3-4 ${className}`,
        fill: "none",
        height: "940",
        viewBox: "0 0 1084 940",
        width: "1084",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path-3",
            d: "M542.102 456.75C526.729 456.75 511.51 456.045 496.495 454.656L501.721 415.678C515.022 416.855 528.494 417.456 542.102 417.456C555.711 417.456 569.183 416.855 582.485 415.678L587.712 454.656C572.695 456.045 557.478 456.75 542.102 456.75ZM1060.05 239.584C1056.34 227.441 1052.21 215.485 1047.68 203.727C1041.95 188.856 1040.18 172.774 1042.41 156.995C1043.03 152.567 1043.6 148.121 1044.11 143.658C1044.13 143.54 1044.14 143.422 1044.15 143.304C1046.56 121.912 1041.32 100.373 1029.59 82.3227C1027.36 78.8846 1025.09 75.473 1022.78 72.0858C1021 80.1026 1019.01 88.046 1016.83 95.9059C1014.31 104.994 1011.54 113.978 1008.51 122.859C998.764 151.526 986.441 179.017 971.812 205.034C971.749 205.144 971.688 205.252 971.627 205.362C960.276 225.557 957.579 249.459 964.228 271.651C970.851 293.746 975.784 316.57 978.877 339.981C981.412 359.076 982.727 378.55 982.727 398.339V398.445C982.727 545.543 910.701 675.809 800.006 755.871L791.53 717.143L761.422 579.651L753.797 544.785C797.172 524.741 837.219 498.725 872.891 467.797C928.353 419.709 949.651 342.963 926.931 273.146C926.811 272.778 926.691 272.409 926.571 272.04C874.198 337.384 805.507 389.092 726.687 420.98L718.146 381.99C795.211 349.472 861.4 296.247 909.764 229.284C917.924 217.986 925.582 206.297 932.689 194.252C938.832 183.868 944.563 173.2 949.862 162.301C962.577 136.197 972.852 108.709 980.404 80.0924C981.127 77.3672 982.271 72.2813 983.543 66.3115C988.591 42.6238 981.801 17.9116 965.201 0.283322L964.933 0.000136965C962.988 6.66855 960.885 13.2657 958.613 19.7874C956.005 27.352 953.187 34.8332 950.178 42.1981C940.43 66.0794 928.642 88.9198 915.033 110.487C909.312 119.565 903.265 128.423 896.913 137.041C889.51 147.088 881.686 156.797 873.473 166.16C792.719 258.28 674.199 316.426 542.102 316.426C410.007 316.426 291.488 258.28 210.743 166.16C202.53 156.797 194.706 147.088 187.301 137.041C180.951 128.423 174.892 119.565 169.171 110.475C155.563 88.9096 143.775 66.0692 134.037 42.186C131.019 34.823 128.212 27.352 125.602 19.7874C123.332 13.2657 121.228 6.66855 119.282 0.000136965C119.192 0.0938287 119.103 0.189631 119.015 0.283322C102.414 17.9116 95.6262 42.6239 100.675 66.3095C101.946 72.2753 103.09 77.357 103.813 80.0822C111.354 108.697 121.638 136.197 134.352 162.301C139.652 173.2 145.383 183.868 151.526 194.252C158.635 206.297 166.28 217.986 174.44 229.284C222.805 296.247 288.996 349.472 366.059 381.99L357.52 420.98C278.7 389.092 210.019 337.384 157.646 272.04C157.526 272.409 157.403 272.778 157.283 273.148C134.564 342.965 155.86 419.713 211.324 467.801C246.994 498.73 287.041 524.741 330.409 544.785L322.784 579.651L292.677 717.143L284.199 755.86C173.504 675.799 101.49 545.543 101.49 398.445V398.361C101.49 378.572 102.803 359.076 105.338 339.981C108.432 316.568 113.368 293.742 119.989 271.645C126.638 249.463 123.944 225.573 112.606 205.383C112.539 205.263 112.472 205.144 112.405 205.024C97.7762 179.006 85.4505 151.516 75.6921 122.848C72.6748 113.978 69.8978 104.994 67.3833 95.9059C65.2069 88.046 63.2198 80.1026 61.4323 72.0858C59.1275 75.471 56.8595 78.8825 54.626 82.3206C42.8989 100.373 37.6522 121.916 40.0669 143.308C40.0791 143.418 40.0913 143.528 40.1056 143.636C40.6166 148.098 41.1846 152.545 41.8097 156.973C44.039 172.754 42.2637 188.838 36.5345 203.711C32.0004 215.475 27.8694 227.439 24.1518 239.584C8.77619 289.819 0.5 343.169 0.5 398.445C0.5 685.993 224.403 921.222 507.304 939.17L513.666 868.861L516.41 838.488C492.476 837.122 469.056 833.838 446.298 828.777L451.105 792.924L474.062 621.818L478.711 587.215C499.479 589.824 520.639 591.161 542.102 591.161C563.578 591.161 584.735 589.824 605.506 587.215L610.144 621.818L633.112 792.924L637.917 828.777C615.161 833.828 591.739 837.122 567.804 838.488L570.551 868.861L576.911 939.17C859.812 921.212 1083.7 685.983 1083.7 398.445C1083.7 343.169 1075.43 289.819 1060.05 239.584Z",
            fill: "white"
        }, void 0, false, {
            fileName: "src/icons/LogoToriiiWhite34/LogoToriiiWhite34.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoToriiiWhite34/LogoToriiiWhite34.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite34;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite34");

  $parcel$ReactRefreshHelpers$beb9.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"fS10B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite2", ()=>(0, _logoAceWhite2.LogoAceWhite2));
var _logoAceWhite2 = require("./LogoAceWhite2");

},{"./LogoAceWhite2":"eRVNg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eRVNg":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$b503 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$b503.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite2", ()=>LogoAceWhite2);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite2 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-2 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 70 24",
        width: "70",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_8168)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M15.7095 0.123047C15.7581 0.265298 15.8553 0.378637 15.9328 0.502384C16.7217 1.76067 17.5141 3.01665 18.3077 4.27262C19.0955 5.52166 19.8856 6.76954 20.6734 8.01858C21.4485 9.24679 22.2212 10.4762 22.9951 11.7055C23.5863 12.6435 24.1797 13.5803 24.7709 14.5182C25.4083 15.529 26.0434 16.5398 26.6808 17.5506C27.2719 18.4885 27.8653 19.4253 28.4565 20.3632C29.0765 21.3451 29.6966 22.3281 30.3155 23.3112C30.3398 23.3493 30.3583 23.3898 30.3791 23.4303H14.26C14.2889 23.3493 14.3363 23.2765 14.3792 23.2025C14.8419 22.4022 15.3069 21.603 15.7696 20.8027C16.2856 19.9099 16.8004 19.017 17.3152 18.1242C17.5789 17.6674 17.8404 17.2082 18.1064 16.7537C18.1527 16.6739 18.1458 16.6173 18.096 16.5432C17.9699 16.357 17.8519 16.1651 17.7316 15.9742C17.0688 14.9218 16.4059 13.8694 15.743 12.817C15.6852 12.7244 15.6702 12.7244 15.6112 12.817C15.3555 13.2217 15.0998 13.6265 14.8442 14.0313C14.4763 14.6119 14.1085 15.1924 13.7417 15.7742C13.257 16.5421 12.7746 17.3123 12.2899 18.0803C11.8816 18.7279 11.4721 19.3732 11.0637 20.0209C10.564 20.8131 10.0631 21.6053 9.56563 22.3987C9.35046 22.7422 9.12488 23.0787 8.92475 23.4303C6.3034 23.4303 3.68205 23.4303 1.0607 23.428C1.02947 23.428 0.95543 23.4777 0.962371 23.3817C1.00633 23.3551 1.03178 23.3135 1.05839 23.2719C1.50029 22.5733 1.94104 21.8736 2.38294 21.1751C2.94169 20.2892 3.50043 19.4033 4.06033 18.5174C4.5647 17.7183 5.07139 16.9203 5.57576 16.12C6.17846 15.1647 6.78001 14.2094 7.38271 13.2541C7.79107 12.6065 8.20058 11.9611 8.60894 11.3135C9.1029 10.5317 9.59455 9.74872 10.0885 8.96576C10.4876 8.33199 10.8879 7.69938 11.287 7.06561C11.774 6.29306 12.2587 5.5205 12.7457 4.74911C13.1934 4.03901 13.6411 3.33006 14.0888 2.61996C14.6128 1.78843 15.1357 0.958051 15.6586 0.126516C15.6748 0.126516 15.691 0.126516 15.7072 0.126516L15.7095 0.123047Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M69.8262 20.3827C69.1552 20.3827 68.4831 20.3839 67.8122 20.385C67.7751 20.385 67.7381 20.3862 67.7011 20.385C67.6224 20.3827 67.5912 20.4162 67.6005 20.4984C67.6213 20.673 67.6491 20.8465 67.7138 21.0118C67.9556 21.6283 68.5942 21.7728 69.0916 21.4953C69.227 21.4189 69.3172 21.2963 69.3878 21.1587C69.441 21.057 69.6388 21.0003 69.7371 21.0581C69.7926 21.0905 69.7672 21.1379 69.7522 21.1772C69.6758 21.3808 69.5543 21.5531 69.3854 21.6907C68.9262 22.0631 68.15 22.0469 67.7161 21.6491C67.5091 21.4583 67.3865 21.2131 67.3182 20.9425C67.1852 20.4081 67.2164 19.8877 67.4582 19.3881C67.8503 18.5785 68.9111 18.5265 69.4271 19.0007C69.6191 19.1765 69.736 19.4008 69.7996 19.6518C69.8077 19.683 69.8158 19.7154 69.8239 19.7466V20.385L69.8262 20.3827ZM68.5606 20.0635C68.8348 20.0635 69.109 20.0647 69.3831 20.0635C69.4884 20.0635 69.5081 20.0381 69.4965 19.9386C69.4791 19.7998 69.4467 19.6657 69.3878 19.5373C69.1518 19.0192 68.4426 18.8561 68.003 19.2192C67.7775 19.4066 67.6907 19.6622 67.6398 19.9363C67.619 20.0508 67.6282 20.0635 67.7497 20.0635C68.0192 20.0647 68.2899 20.0635 68.5595 20.0635H68.5606Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M61.1983 9.31959C61.1983 7.62067 61.1983 5.9229 61.1983 4.22398C61.1983 4.17888 61.1994 4.13377 61.1983 4.08867C61.1971 4.01118 61.2341 3.97533 61.3105 3.97764C61.3475 3.97764 61.3845 3.97764 61.4215 3.97764C63.9608 3.97764 66.5011 3.97764 69.0403 3.97764C69.1892 3.97764 69.2636 4.05166 69.2636 4.19969C69.2636 4.66577 69.2636 5.133 69.2636 5.59908C69.2636 5.74942 69.1865 5.8246 69.0322 5.8246C67.1975 5.8246 65.3617 5.8246 63.5269 5.8246C63.3881 5.8246 63.3187 5.89399 63.3187 6.03277C63.3187 6.7741 63.3187 7.51427 63.3187 8.25559C63.3187 8.38358 63.3816 8.44758 63.5073 8.44758C65.1291 8.44758 66.751 8.44758 68.3729 8.44758C68.5225 8.44758 68.5973 8.52275 68.5973 8.6731C68.5973 9.17271 68.5973 9.67117 68.5973 10.1708C68.5973 10.335 68.588 10.3431 68.4226 10.3431C66.8088 10.3431 65.1951 10.3431 63.5813 10.3431C63.5408 10.3431 63.4992 10.3431 63.4587 10.3431C63.3291 10.3454 63.3187 10.3535 63.3187 10.4842C63.3187 11.2047 63.3187 11.9252 63.3187 12.6457C63.3187 12.8146 63.3187 12.8146 63.4911 12.8146C65.3385 12.8146 67.186 12.8146 69.0334 12.8146C69.1869 12.8146 69.2636 12.8901 69.2636 13.0413C69.2636 13.5328 69.2636 14.0231 69.2636 14.5147C69.2636 14.6789 69.2555 14.687 69.0889 14.687C66.5162 14.687 63.9446 14.687 61.3718 14.687C61.2064 14.687 61.1983 14.6789 61.1983 14.5135C61.1983 12.7822 61.1983 11.0509 61.1983 9.31959Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M46.0573 9.40046C46.0434 8.49954 46.2401 7.69923 46.6184 6.94518C46.8509 6.48258 47.1424 6.05929 47.4906 5.67417C47.9661 5.1468 48.5248 4.73161 49.1541 4.41357C49.8228 4.07587 50.5319 3.88042 51.2827 3.82375C52.2209 3.7532 53.1185 3.90817 53.9815 4.27132C54.5981 4.53153 55.1499 4.89352 55.6381 5.35382C56.006 5.70077 56.3322 6.08242 56.5902 6.51958C56.663 6.64333 56.6619 6.65258 56.5312 6.70463C55.9528 6.93362 55.3732 7.16029 54.7948 7.3916C54.7103 7.42514 54.6606 7.40548 54.6085 7.33493C54.243 6.83531 53.793 6.43053 53.2446 6.14025C52.8016 5.90547 52.3319 5.76438 51.8252 5.74703C50.9298 5.71581 50.1467 6.00725 49.4757 6.58319C48.7481 7.20771 48.3097 8.00108 48.2009 8.95983C48.0794 10.0273 48.4138 10.9525 49.1125 11.7551C49.6377 12.3588 50.2971 12.7463 51.0825 12.8978C52.0045 13.0759 52.8444 12.8596 53.6125 12.3334C54.0024 12.0674 54.3297 11.7378 54.6027 11.355C54.6617 11.2717 54.7161 11.2601 54.8075 11.2971C55.3813 11.5273 55.9574 11.7528 56.5323 11.9806C56.6607 12.0315 56.6642 12.0454 56.5925 12.1668C56.0569 13.0655 55.313 13.7432 54.3922 14.2335C53.7629 14.5689 53.0919 14.7748 52.3851 14.8523C51.3035 14.9714 50.2624 14.8164 49.2756 14.3434C48.637 14.0369 48.0644 13.6391 47.582 13.1221C46.7283 12.2096 46.2054 11.1399 46.0782 9.88736C46.0596 9.70694 46.0596 9.52768 46.0573 9.40162V9.40046Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M42.1517 14.6867C41.8278 14.6867 41.5039 14.6821 41.1812 14.6891C41.0574 14.6925 40.9891 14.6532 40.9348 14.5399C40.7092 14.0761 40.472 13.6181 40.2453 13.1544C40.1956 13.0526 40.1342 13.0121 40.0186 13.0133C38.4175 13.0167 36.8153 13.0167 35.2143 13.0133C35.0951 13.0133 35.0292 13.0526 34.9783 13.1601C34.7585 13.6181 34.5283 14.0703 34.3097 14.5283C34.2553 14.6428 34.1859 14.6914 34.0552 14.6902C33.4039 14.6844 32.7526 14.6879 32.1013 14.6879C32.0689 14.6879 32.0354 14.6879 32.003 14.6844C31.9544 14.6798 31.9393 14.652 31.9579 14.6069C31.9706 14.5769 31.9856 14.548 32.0007 14.5179C32.5883 13.3938 33.1748 12.2696 33.7636 11.1443C34.0274 10.6401 34.2923 10.137 34.5549 9.63277C35.1588 8.47625 35.7626 7.31858 36.3676 6.16091C36.6407 5.63817 36.9137 5.11658 37.1867 4.59499C37.2734 4.42845 37.3637 4.26307 37.4481 4.09422C37.484 4.02136 37.536 3.99707 37.6147 3.99707C37.6968 3.99707 37.7524 4.01904 37.7917 4.09653C37.9687 4.44233 38.1515 4.78581 38.3319 5.13046C38.7819 5.99437 39.2308 6.85829 39.6808 7.72221C40.0591 8.44734 40.4385 9.17248 40.8179 9.89761C41.2992 10.8182 41.7804 11.7399 42.2628 12.6605C42.5774 13.2619 42.8956 13.8633 43.2114 14.4635C43.2345 14.5075 43.2565 14.5514 43.2773 14.5954C43.3051 14.6532 43.2808 14.681 43.2218 14.6833C43.1894 14.6844 43.1559 14.6844 43.1235 14.6844C42.7996 14.6844 42.4768 14.6844 42.1529 14.6844L42.1517 14.6867ZM37.5997 11.1941C38.0624 11.1941 38.524 11.1941 38.9867 11.1941C39.1278 11.1941 39.1324 11.1848 39.07 11.0564C38.8189 10.5372 38.5668 10.019 38.3169 9.49977C38.1943 9.24534 38.0763 8.98975 37.9548 8.73531C37.8542 8.52483 37.7512 8.3155 37.6506 8.10617C37.6286 8.05991 37.6089 8.05875 37.5858 8.10386C37.5765 8.12236 37.5673 8.14086 37.5592 8.15937C37.388 8.51673 37.2168 8.87525 37.0444 9.23146C36.7459 9.84557 36.4475 10.4597 36.1479 11.0726C36.0923 11.1871 36.0958 11.1941 36.2254 11.1941C36.6835 11.1941 37.1416 11.1941 37.5997 11.1941Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M64.69 20.2764C64.69 20.7055 64.6958 21.1357 64.6877 21.5648C64.683 21.8181 64.6668 22.0702 64.5928 22.3165C64.439 22.8266 64.0873 23.0972 63.5702 23.1527C63.281 23.1839 62.9883 23.177 62.7141 23.0509C62.4041 22.9087 62.2075 22.6704 62.1311 22.3374C62.1091 22.2402 62.1253 22.2229 62.2271 22.2182C62.2676 22.2159 62.3093 22.2194 62.3497 22.2182C62.4203 22.2148 62.4631 22.2425 62.4897 22.3108C62.6389 22.6889 62.9386 22.8312 63.3238 22.8347C63.4059 22.8347 63.4881 22.8358 63.569 22.8242C63.9496 22.7653 64.1845 22.5478 64.2793 22.172C64.3372 21.9395 64.3487 21.7036 64.3441 21.4653C64.3441 21.4457 64.351 21.4191 64.3279 21.4121C64.3048 21.4052 64.2967 21.4318 64.2839 21.4468C63.7368 22.1222 62.6644 22.0124 62.263 21.2236C61.9356 20.5806 61.9622 19.9202 62.3162 19.2969C62.5522 18.8817 62.942 18.6886 63.4267 18.7013C63.6084 18.7059 63.7854 18.7279 63.9519 18.8065C64.0722 18.8632 64.1787 18.936 64.2666 19.0367C64.2839 19.0563 64.2944 19.0991 64.3279 19.0841C64.3568 19.0725 64.3429 19.0332 64.3476 19.0054C64.3534 18.9696 64.358 18.9326 64.3626 18.8956C64.3695 18.8435 64.3649 18.7811 64.4343 18.7695C64.5107 18.7556 64.5917 18.7406 64.6599 18.788C64.7062 18.8192 64.6911 18.8771 64.6923 18.9256C64.6923 19.3755 64.6923 19.8254 64.6923 20.2753H64.69V20.2764ZM64.3441 20.2591C64.3545 20.0764 64.3383 19.8774 64.2897 19.682C64.203 19.3316 63.9947 19.1037 63.6269 19.0459C63.5505 19.0343 63.4719 19.0355 63.3944 19.032C62.9814 19.0135 62.6806 19.2518 62.5406 19.608C62.3775 20.0209 62.3636 20.4453 62.5024 20.8686C62.5927 21.1427 62.7604 21.3589 63.0323 21.4804C63.2104 21.5602 63.3944 21.5648 63.5852 21.5347C63.8929 21.4862 64.1127 21.3289 64.2307 21.0363C64.3291 20.7923 64.351 20.5378 64.3441 20.2591Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M33.5486 21.8814C33.1518 21.8814 32.7539 21.8814 32.3571 21.8814C32.209 21.8814 32.1963 21.8699 32.1963 21.7195C32.1963 20.3861 32.1963 19.0526 32.1963 17.718C32.1963 17.5607 32.2055 17.5526 32.364 17.5526C33.146 17.5526 33.928 17.5526 34.7101 17.5526C34.7644 17.5526 34.8373 17.5295 34.8616 17.5977C34.8917 17.6833 34.8917 17.7747 34.857 17.8614C34.8454 17.8903 34.8119 17.8949 34.7829 17.8972C34.7424 17.8996 34.7008 17.9007 34.6603 17.9007C34.0171 17.9007 33.3751 17.9007 32.7319 17.9007C32.5804 17.9007 32.5699 17.91 32.5699 18.0603C32.5699 18.4616 32.5699 18.8618 32.5699 19.2631C32.5699 19.4123 32.5792 19.4192 32.7331 19.4204C33.3427 19.4204 33.9535 19.4204 34.5631 19.4215C34.6245 19.4215 34.7077 19.3926 34.7413 19.4655C34.7772 19.5441 34.7644 19.6343 34.7471 19.7188C34.739 19.7558 34.7043 19.765 34.6696 19.7673C34.6291 19.7696 34.5874 19.7696 34.5469 19.7696C33.9454 19.7696 33.3427 19.7696 32.7412 19.7696C32.5746 19.7696 32.5699 19.7743 32.5699 19.9431C32.5699 20.4173 32.5699 20.8926 32.5699 21.3668C32.5699 21.5252 32.5769 21.5322 32.7365 21.5322C33.404 21.5322 34.0715 21.5322 34.739 21.5322C34.7795 21.5322 34.8211 21.5322 34.8616 21.5345C34.8859 21.5345 34.9148 21.5356 34.9299 21.5576C34.9854 21.6409 34.931 21.723 34.9241 21.8063C34.9194 21.8595 34.8755 21.878 34.8257 21.8803C34.7887 21.8814 34.7517 21.8826 34.7147 21.8826C34.326 21.8826 33.9373 21.8826 33.5475 21.8826L33.5486 21.8814Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M54.2717 20.5908C54.2717 20.836 54.2717 21.0823 54.2717 21.3275C54.2717 21.4501 54.274 21.5727 54.2914 21.6953C54.3145 21.8618 54.2914 21.8826 54.1283 21.8826C54.1121 21.8826 54.0959 21.8815 54.0797 21.8826C54.0045 21.8849 53.9698 21.8445 53.9559 21.7751C53.9386 21.6929 53.9559 21.6039 53.9039 21.5299C53.846 21.5866 53.7905 21.6455 53.7303 21.6999C53.5557 21.8583 53.3417 21.9173 53.1138 21.9462C52.8593 21.9786 52.614 21.9497 52.3838 21.8364C52.0518 21.6733 51.8667 21.3009 51.8979 20.9308C51.935 20.4971 52.1779 20.2496 52.5712 20.1189C52.7783 20.0495 52.9946 20.0218 53.2121 20.016C53.4087 20.0102 53.6054 20.0114 53.8021 20.0148C53.8911 20.016 53.9293 19.9801 53.9258 19.8911C53.9212 19.7766 53.9282 19.6621 53.9108 19.5488C53.8668 19.2712 53.7026 19.1116 53.4342 19.0549C53.2398 19.0133 53.0443 19.0156 52.85 19.0607C52.6499 19.1058 52.5168 19.2238 52.4451 19.4169C52.3711 19.6135 52.3584 19.617 52.1513 19.6031C52.0668 19.5973 52.0437 19.5592 52.0599 19.484C52.1212 19.2076 52.2542 18.9832 52.5122 18.8445C52.7204 18.7334 52.946 18.6999 53.1774 18.7045C53.3486 18.708 53.5198 18.7195 53.6864 18.7762C54.0091 18.8861 54.1896 19.1139 54.2498 19.4424C54.2683 19.543 54.2764 19.6448 54.2752 19.7477C54.2729 20.0299 54.2752 20.3121 54.2752 20.5954L54.2717 20.5908ZM53.4978 20.3132C53.4122 20.3132 53.3255 20.3086 53.2399 20.3132C53.0316 20.3259 52.8234 20.3445 52.6279 20.43C52.3699 20.5434 52.2404 20.7631 52.26 21.0499C52.2797 21.3206 52.4474 21.5241 52.7112 21.5981C52.9102 21.6536 53.1091 21.6363 53.3058 21.5865C53.5823 21.516 53.7616 21.3414 53.846 21.0684C53.912 20.8545 53.927 20.6347 53.9224 20.4127C53.9212 20.3398 53.8854 20.3098 53.8148 20.3109C53.7084 20.3121 53.6019 20.3109 53.4955 20.3109L53.4978 20.3132Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M46.9443 19.6011C46.9443 18.9095 46.9443 18.2191 46.9443 17.5275C46.9443 17.3228 47.0137 17.2696 47.2162 17.3158C47.2625 17.3262 47.2891 17.3505 47.2902 17.3991C47.2914 17.4361 47.2925 17.4731 47.2925 17.509C47.2925 18.0167 47.2925 18.5232 47.2925 19.0309C47.2925 19.0599 47.2902 19.0888 47.2925 19.1165C47.2948 19.1385 47.2798 19.172 47.311 19.1801C47.3307 19.1859 47.3411 19.157 47.3538 19.1408C47.6616 18.7407 48.078 18.6412 48.5488 18.7279C48.9919 18.81 49.2765 19.1605 49.3308 19.6497C49.347 19.7966 49.3551 19.9423 49.3551 20.0903C49.3528 20.6304 49.3551 21.1705 49.354 21.7106C49.354 21.7661 49.3713 21.8378 49.3066 21.8632C49.2221 21.8968 49.1296 21.8933 49.0428 21.8632C49.0127 21.8528 49.0093 21.8193 49.0081 21.7904C49.0069 21.7534 49.0058 21.7164 49.0058 21.6805C49.0058 21.1242 49.0058 20.5679 49.0058 20.0117C49.0058 19.8636 48.9873 19.7179 48.9479 19.5757C48.8519 19.2345 48.6136 19.0425 48.2573 19.0402C47.7911 19.0367 47.4522 19.2299 47.3365 19.7619C47.3076 19.8937 47.2937 20.0279 47.2937 20.1632C47.2949 20.6743 47.2949 21.1855 47.2937 21.6967C47.2937 21.7545 47.3203 21.8332 47.2532 21.8644C47.1711 21.9014 47.0774 21.8922 46.9895 21.8679C46.9582 21.8598 46.9513 21.8274 46.949 21.7973C46.9466 21.7568 46.9455 21.7152 46.9455 21.6747C46.9455 20.9831 46.9455 20.2927 46.9455 19.6011H46.9443Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M57.0905 20.3837C57.0905 20.0159 57.0905 19.647 57.0905 19.2792C57.0905 19.1566 57.094 19.034 57.0778 18.9114C57.0628 18.7946 57.0928 18.7669 57.212 18.7622C57.2409 18.7622 57.2698 18.7622 57.2976 18.7622C57.3763 18.7622 57.4179 18.7969 57.4214 18.879C57.426 18.9692 57.4445 19.0571 57.441 19.1485C57.441 19.167 57.4341 19.1959 57.4561 19.2017C57.4792 19.2086 57.4862 19.1797 57.4966 19.1635C57.6504 18.9218 57.8667 18.7715 58.149 18.7252C58.4278 18.679 58.7043 18.6813 58.9634 18.8201C59.1589 18.9241 59.3 19.0791 59.3799 19.285C59.447 19.4573 59.4828 19.6377 59.4828 19.8251C59.4817 20.4507 59.4828 21.0776 59.4817 21.7032C59.4817 21.7611 59.5071 21.8397 59.4342 21.8663C59.3533 21.8964 59.2653 21.8894 59.1809 21.8675C59.1497 21.8594 59.1404 21.8293 59.1381 21.7992C59.1358 21.7588 59.1346 21.7171 59.1346 21.6766C59.1346 21.0914 59.1346 20.5063 59.1346 19.9211C59.1346 19.8147 59.1277 19.7094 59.1045 19.6042C59.0097 19.167 58.7031 19.0074 58.2994 19.0421C57.8991 19.0756 57.6481 19.3 57.5255 19.6759C57.4734 19.8366 57.4399 19.9997 57.441 20.1697C57.4422 20.6693 57.441 21.1678 57.441 21.6674C57.441 21.8733 57.3728 21.9253 57.168 21.8779C57.1218 21.8675 57.0952 21.8432 57.094 21.7946C57.0928 21.7541 57.0917 21.7125 57.0917 21.672C57.0917 21.2418 57.0917 20.8127 57.0917 20.3825L57.0905 20.3837Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M43.3337 18.7025C43.8485 18.7152 44.2441 19.0055 44.3957 19.5225C44.4049 19.5537 44.4118 19.5861 44.4176 19.6185C44.4304 19.6867 44.4014 19.7191 44.3332 19.7203C44.2927 19.7203 44.2511 19.7191 44.2106 19.7214C44.1238 19.7272 44.0775 19.689 44.0498 19.6058C43.9827 19.4068 43.8716 19.2368 43.6807 19.1339C43.2169 18.8818 42.6442 19.0657 42.4163 19.5618C42.1757 20.0846 42.1803 20.6223 42.4395 21.1381C42.7183 21.6944 43.351 21.7349 43.7282 21.477C43.8739 21.3775 43.9537 21.233 44.0278 21.0803C44.0521 21.0306 44.059 20.9612 44.1261 20.9485C44.2106 20.9334 44.2985 20.9311 44.3829 20.9496C44.4327 20.96 44.4199 21.0075 44.4084 21.0421C44.2615 21.4886 43.9977 21.8297 43.4968 21.9257C42.7865 22.0622 42.2012 21.7164 41.9883 21.026C41.8021 20.4211 41.8356 19.8255 42.178 19.2773C42.4267 18.8772 42.8062 18.6944 43.3337 18.7014V18.7025Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M39.5988 21.8827C39.4808 21.9104 39.4021 21.8422 39.3293 21.7312C39.091 21.3692 38.8434 21.013 38.5982 20.6544C38.5345 20.5608 38.5311 20.5619 38.4663 20.6568C38.2187 21.0234 37.9723 21.39 37.7248 21.7566C37.6507 21.8665 37.4298 21.9312 37.3129 21.8746C37.2516 21.8445 37.2886 21.8063 37.3106 21.774C37.4425 21.582 37.5767 21.3911 37.7097 21.1992C37.9018 20.9239 38.0926 20.6475 38.287 20.3746C38.3333 20.3098 38.3136 20.2635 38.2754 20.2092C38.0545 19.89 37.8335 19.5696 37.6137 19.2493C37.5281 19.1244 37.4413 19.0006 37.3581 18.8746C37.3083 18.8006 37.321 18.7716 37.4078 18.7647C37.4772 18.7589 37.5466 18.7624 37.616 18.7647C37.6912 18.767 37.7294 18.8214 37.7664 18.8769C37.9908 19.2134 38.2164 19.5511 38.442 19.8877C38.4559 19.9085 38.4686 19.9293 38.4825 19.949C38.5392 20.0265 38.5496 20.0276 38.6028 19.9513C38.7752 19.7073 38.9464 19.4621 39.1176 19.2181C39.1951 19.107 39.2714 18.996 39.3489 18.8861C39.4276 18.7751 39.6289 18.7184 39.755 18.7705C39.8198 18.7971 39.7851 18.8364 39.7631 18.8676C39.6786 18.9879 39.593 19.1082 39.5063 19.2273C39.2807 19.5396 39.0574 19.8518 38.8284 20.1606C38.7682 20.2416 38.7636 20.3063 38.8226 20.3908C39.1245 20.8233 39.4218 21.2605 39.7203 21.6953C39.7272 21.7057 39.7353 21.715 39.7411 21.7254C39.7619 21.767 39.8209 21.8029 39.7908 21.8538C39.7619 21.9012 39.7006 21.8757 39.6532 21.8815C39.6416 21.8827 39.6289 21.8815 39.5965 21.8815L39.5988 21.8827Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_8168",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "23.3153",
                        transform: "translate(0.962891 0.123047)",
                        width: "68.8631"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite2/LogoAceWhite2.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite2;
var _c;
$RefreshReg$(_c, "LogoAceWhite2");

  $parcel$ReactRefreshHelpers$b503.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"aowlu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite6", ()=>(0, _logoAceWhite6.LogoAceWhite6));
var _logoAceWhite6 = require("./LogoAceWhite6");

},{"./LogoAceWhite6":"iQgxL","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iQgxL":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$e73f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$e73f.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite6", ()=>LogoAceWhite6);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite6 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-6 ${className}`,
        fill: "none",
        height: "33",
        viewBox: "0 0 94 33",
        width: "94",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_8649)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M20.2253 0.509766C20.2915 0.703403 20.4237 0.857684 20.5293 1.02613C21.6032 2.73896 22.6819 4.44864 23.7621 6.15832C24.8345 7.85856 25.91 9.55721 26.9824 11.2574C28.0374 12.9293 29.0893 14.6028 30.1428 16.2763C30.9475 17.553 31.7553 18.8282 32.56 20.105C33.4277 21.4809 34.2922 22.8568 35.1598 24.2328C35.9645 25.5095 36.7723 26.7847 37.577 28.0614C38.421 29.398 39.2651 30.7361 40.1075 32.0743C40.1406 32.1262 40.1658 32.1813 40.1942 32.2364H18.2522C18.2916 32.1262 18.3562 32.0271 18.4144 31.9263C19.0443 30.8369 19.6773 29.7491 20.3072 28.6597C21.0095 27.4443 21.7103 26.229 22.411 25.0136C22.7701 24.3918 23.1259 23.7668 23.4881 23.1481C23.5511 23.0394 23.5417 22.9623 23.474 22.8615C23.3023 22.6081 23.1417 22.3468 22.9779 22.087C22.0756 20.6544 21.1733 19.2218 20.271 17.7892C20.1923 17.6632 20.1718 17.6632 20.0915 17.7892C19.7435 18.3402 19.3955 18.8912 19.0475 19.4422C18.5467 20.2325 18.0459 21.0228 17.5468 21.8146C16.887 22.86 16.2303 23.9085 15.5705 24.9538C15.0146 25.8354 14.4572 26.7138 13.9013 27.5954C13.2211 28.6738 12.5392 29.7522 11.8621 30.8322C11.5692 31.2997 11.2621 31.7579 10.9897 32.2364C7.42142 32.2364 3.85314 32.2364 0.284862 32.2333C0.242345 32.2333 0.141564 32.301 0.151012 32.1703C0.210851 32.1341 0.245494 32.0774 0.281712 32.0208C0.883249 31.0699 1.48321 30.1175 2.08475 29.1666C2.84533 27.9607 3.60591 26.7548 4.36807 25.5489C5.05464 24.461 5.74436 23.3748 6.43093 22.2854C7.25135 20.985 8.0702 19.6846 8.89062 18.3843C9.44649 17.5027 10.0039 16.6242 10.5598 15.7426C11.2322 14.6784 11.9015 13.6126 12.5738 12.5468C13.1171 11.6841 13.662 10.8229 14.2052 9.96023C14.8682 8.90861 15.528 7.85698 16.1909 6.80693C16.8004 5.84031 17.4098 4.87527 18.0192 3.90866C18.7325 2.77674 19.4443 1.6464 20.156 0.514488C20.1781 0.514488 20.2001 0.514488 20.2222 0.514488L20.2253 0.509766Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M93.8922 28.0882C92.9788 28.0882 92.0639 28.0898 91.1506 28.0913C91.1002 28.0913 91.0498 28.0929 90.9994 28.0913C90.8923 28.0882 90.8498 28.1338 90.8624 28.2456C90.8908 28.4833 90.9286 28.7195 91.0168 28.9446C91.3459 29.7837 92.2151 29.9805 92.8922 29.6027C93.0765 29.4987 93.1993 29.3319 93.2953 29.1445C93.3678 29.006 93.6371 28.9289 93.7709 29.0076C93.8465 29.0516 93.8119 29.1162 93.7914 29.1697C93.6875 29.4468 93.5221 29.6814 93.2922 29.8687C92.667 30.3756 91.6104 30.3536 91.0199 29.812C90.738 29.5523 90.5711 29.2185 90.4782 28.8501C90.2971 28.1228 90.3396 27.4144 90.6687 26.7343C91.2026 25.6323 92.6466 25.5614 93.3489 26.2069C93.6103 26.4462 93.7693 26.7516 93.8559 27.0932C93.867 27.1357 93.878 27.1798 93.889 27.2223V28.0913L93.8922 28.0882ZM92.1694 27.6537C92.5426 27.6537 92.9158 27.6553 93.2891 27.6537C93.4324 27.6537 93.4591 27.619 93.4434 27.4837C93.4198 27.2947 93.3757 27.1121 93.2953 26.9374C92.9741 26.2321 92.0088 26.0101 91.4104 26.5044C91.1034 26.7595 90.9853 27.1074 90.916 27.4805C90.8876 27.6364 90.9002 27.6537 91.0656 27.6537C91.4325 27.6553 91.801 27.6537 92.1679 27.6537H92.1694Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M82.1475 13.0281C82.1475 10.7155 82.1475 8.40445 82.1475 6.09181C82.1475 6.03042 82.1491 5.96902 82.1475 5.90762C82.1459 5.80214 82.1963 5.75334 82.3002 5.75649C82.3506 5.75649 82.401 5.75649 82.4514 5.75649C85.9079 5.75649 89.3659 5.75649 92.8224 5.75649C93.025 5.75649 93.1263 5.85724 93.1263 6.05875C93.1263 6.69319 93.1263 7.32921 93.1263 7.96365C93.1263 8.1683 93.0213 8.27063 92.8114 8.27063C90.3139 8.27063 87.8149 8.27063 85.3174 8.27063C85.1284 8.27063 85.0339 8.36509 85.0339 8.554C85.0339 9.56313 85.0339 10.5707 85.0339 11.5798C85.0339 11.754 85.1195 11.8411 85.2906 11.8411C87.4983 11.8411 89.7061 11.8411 91.9138 11.8411C92.1175 11.8411 92.2193 11.9435 92.2193 12.1481C92.2193 12.8282 92.2193 13.5067 92.2193 14.1868C92.2193 14.4104 92.2067 14.4214 91.9815 14.4214C89.7848 14.4214 87.5881 14.4214 85.3914 14.4214C85.3363 14.4214 85.2796 14.4214 85.2245 14.4214C85.0481 14.4245 85.0339 14.4356 85.0339 14.6134C85.0339 15.5942 85.0339 16.575 85.0339 17.5558C85.0339 17.7856 85.0339 17.7856 85.2686 17.7856C87.7834 17.7856 90.2982 17.7856 92.813 17.7856C93.0219 17.7856 93.1263 17.8885 93.1263 18.0942C93.1263 18.7633 93.1263 19.4308 93.1263 20.0999C93.1263 20.3234 93.1153 20.3344 92.8885 20.3344C89.3864 20.3344 85.8858 20.3344 82.3837 20.3344C82.1585 20.3344 82.1475 20.3234 82.1475 20.0983C82.1475 17.7416 82.1475 15.3849 82.1475 13.0281Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M61.5361 13.1388C61.5172 11.9124 61.7849 10.823 62.2998 9.79654C62.6163 9.16682 63.0132 8.59063 63.4872 8.06639C64.1344 7.34851 64.8949 6.78334 65.7516 6.35041C66.6618 5.89072 67.627 5.62466 68.649 5.54752C69.9261 5.45149 71.1481 5.66245 72.3228 6.15677C73.1621 6.51099 73.9133 7.00374 74.5778 7.63031C75.0785 8.1026 75.5226 8.62211 75.8738 9.2172C75.973 9.38565 75.9714 9.39824 75.7935 9.46908C75.0061 9.78079 74.2172 10.0894 73.4298 10.4042C73.3149 10.4499 73.2472 10.4231 73.1763 10.3271C72.6787 9.64698 72.0661 9.09598 71.3197 8.70083C70.7166 8.38125 70.0773 8.18918 69.3876 8.16557C68.1687 8.12306 67.1027 8.51979 66.1893 9.30378C65.1989 10.1539 64.602 11.2339 64.454 12.539C64.2887 13.992 64.7438 15.2515 65.6949 16.344C66.4098 17.1658 67.3074 17.6932 68.3766 17.8994C69.6316 18.1419 70.7749 17.8475 71.8205 17.1312C72.3512 16.7691 72.7968 16.3204 73.1684 15.7993C73.2487 15.686 73.3228 15.6702 73.4472 15.7206C74.2282 16.0339 75.0124 16.3409 75.795 16.651C75.9698 16.7203 75.9746 16.7392 75.8769 16.9045C75.1478 18.1277 74.1353 19.0502 72.8818 19.7177C72.0252 20.1743 71.1119 20.4545 70.1497 20.56C68.6774 20.7221 67.2601 20.5112 65.9169 19.8673C65.0477 19.4501 64.2682 18.9085 63.6116 18.2048C62.4494 16.9627 61.7377 15.5065 61.5644 13.8015C61.5392 13.5559 61.5392 13.3119 61.5361 13.1403V13.1388Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M56.2197 20.3344C55.7788 20.3344 55.3379 20.3281 54.8985 20.3375C54.7301 20.3422 54.6371 20.2887 54.5631 20.1344C54.2561 19.5031 53.9333 18.8797 53.6246 18.2484C53.5569 18.1099 53.4734 18.0548 53.316 18.0564C51.1366 18.0611 48.9556 18.0611 46.7762 18.0564C46.614 18.0564 46.5243 18.1099 46.455 18.2563C46.1558 18.8797 45.8424 19.4953 45.5448 20.1187C45.4708 20.2745 45.3763 20.3407 45.1984 20.3391C44.3118 20.3312 43.4253 20.3359 42.5387 20.3359C42.4946 20.3359 42.4489 20.3359 42.4048 20.3312C42.3387 20.3249 42.3182 20.2871 42.3434 20.2257C42.3608 20.1848 42.3812 20.1455 42.4017 20.1045C43.2016 18.5743 44 17.0441 44.8015 15.5123C45.1606 14.8259 45.5212 14.1411 45.8786 13.4547C46.7006 11.8804 47.5226 10.3046 48.3462 8.7287C48.7178 8.01712 49.0895 7.30712 49.4611 6.59711C49.5792 6.37041 49.702 6.14529 49.817 5.91544C49.8658 5.81626 49.9367 5.7832 50.0437 5.7832C50.1555 5.7832 50.2311 5.81311 50.2847 5.91859C50.5256 6.38931 50.7744 6.85687 51.0201 7.32601C51.6326 8.502 52.2436 9.678 52.8562 10.854C53.3711 11.8411 53.8876 12.8282 54.4041 13.8152C55.0592 15.0684 55.7142 16.3231 56.3709 17.5762C56.7992 18.3948 57.2323 19.2135 57.6622 20.0305C57.6936 20.0904 57.7236 20.1502 57.7519 20.21C57.7897 20.2887 57.7566 20.3265 57.6763 20.3297C57.6322 20.3312 57.5866 20.3312 57.5425 20.3312C57.1016 20.3312 56.6622 20.3312 56.2213 20.3312L56.2197 20.3344ZM50.0233 15.58C50.6531 15.58 51.2815 15.58 51.9113 15.58C52.1034 15.58 52.1097 15.5674 52.0247 15.3927C51.683 14.6858 51.3397 13.9805 50.9996 13.2737C50.8327 12.9273 50.672 12.5794 50.5067 12.2331C50.3697 11.9466 50.2296 11.6616 50.0926 11.3767C50.0626 11.3137 50.0359 11.3121 50.0044 11.3735C49.9918 11.3987 49.9792 11.4239 49.9681 11.4491C49.7351 11.9355 49.502 12.4236 49.2674 12.9084C48.8611 13.7444 48.4549 14.5803 48.047 15.4147C47.9714 15.5706 47.9762 15.58 48.1525 15.58C48.7761 15.58 49.3997 15.58 50.0233 15.58Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M86.8997 27.9433C86.8997 28.5274 86.9076 29.113 86.8966 29.6971C86.8903 30.0419 86.8682 30.3851 86.7674 30.7204C86.558 31.4146 86.0793 31.783 85.3754 31.8586C84.9817 31.9011 84.5833 31.8916 84.2101 31.72C83.7881 31.5264 83.5204 31.2021 83.4165 30.7487C83.3866 30.6165 83.4086 30.5929 83.5472 30.5866C83.6023 30.5834 83.659 30.5881 83.7141 30.5866C83.8102 30.5818 83.8684 30.6196 83.9046 30.7125C84.1078 31.2273 84.5156 31.4209 85.04 31.4257C85.1518 31.4257 85.2636 31.4272 85.3738 31.4115C85.8919 31.3312 86.2116 31.0352 86.3407 30.5236C86.4194 30.2072 86.4352 29.886 86.4289 29.5617C86.4289 29.5349 86.4383 29.4987 86.4068 29.4893C86.3753 29.4798 86.3643 29.516 86.347 29.5365C85.6022 30.4559 84.1424 30.3063 83.596 29.2327C83.1504 28.3574 83.1866 27.4584 83.6684 26.6099C83.9897 26.0447 84.5203 25.7818 85.1801 25.7991C85.4274 25.8054 85.6683 25.8354 85.8951 25.9424C86.0588 26.0195 86.2037 26.1187 86.3234 26.2557C86.347 26.2824 86.3612 26.3407 86.4068 26.3202C86.4462 26.3045 86.4273 26.251 86.4336 26.2132C86.4415 26.1644 86.4478 26.114 86.4541 26.0636C86.4635 25.9928 86.4572 25.9078 86.5517 25.892C86.6556 25.8731 86.7659 25.8527 86.8588 25.9172C86.9218 25.9597 86.9013 26.0384 86.9029 26.1046C86.9029 26.717 86.9029 27.3294 86.9029 27.9418H86.8997V27.9433ZM86.4289 27.9197C86.4431 27.671 86.421 27.4002 86.3549 27.1341C86.2368 26.6571 85.9533 26.347 85.4526 26.2683C85.3486 26.2525 85.2416 26.2541 85.136 26.2494C84.5739 26.2242 84.1645 26.5485 83.9739 27.0334C83.7519 27.5954 83.733 28.1732 83.9219 28.7494C84.0448 29.1225 84.2731 29.4169 84.6432 29.5822C84.8857 29.6908 85.1361 29.6971 85.3959 29.6562C85.8147 29.59 86.1139 29.3759 86.2746 28.9776C86.4084 28.6455 86.4383 28.2991 86.4289 27.9197Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M44.5088 30.1282C43.9687 30.1282 43.427 30.1282 42.8869 30.1282C42.6853 30.1282 42.668 30.1124 42.668 29.9078C42.668 28.0926 42.668 26.2775 42.668 24.4607C42.668 24.2466 42.6806 24.2356 42.8963 24.2356C43.9608 24.2356 45.0253 24.2356 46.0898 24.2356C46.1638 24.2356 46.263 24.2041 46.2961 24.297C46.337 24.4135 46.337 24.5379 46.2898 24.6559C46.274 24.6953 46.2284 24.7016 46.189 24.7047C46.1339 24.7079 46.0772 24.7095 46.0221 24.7095C45.1466 24.7095 44.2726 24.7095 43.3971 24.7095C43.1908 24.7095 43.1766 24.7221 43.1766 24.9267C43.1766 25.473 43.1766 26.0177 43.1766 26.564C43.1766 26.7671 43.1892 26.7765 43.3986 26.7781C44.2285 26.7781 45.0599 26.7781 45.8898 26.7797C45.9733 26.7797 46.0867 26.7403 46.1323 26.8395C46.1811 26.9465 46.1638 27.0693 46.1402 27.1843C46.1292 27.2346 46.0819 27.2472 46.0347 27.2504C45.9796 27.2535 45.9229 27.2535 45.8678 27.2535C45.0489 27.2535 44.2285 27.2535 43.4097 27.2535C43.1829 27.2535 43.1766 27.2598 43.1766 27.4897C43.1766 28.1351 43.1766 28.7822 43.1766 29.4276C43.1766 29.6433 43.186 29.6527 43.4034 29.6527C44.312 29.6527 45.2206 29.6527 46.1292 29.6527C46.1843 29.6527 46.241 29.6527 46.2961 29.6559C46.3292 29.6559 46.3685 29.6575 46.389 29.6874C46.4646 29.8007 46.3906 29.9125 46.3811 30.0259C46.3748 30.0983 46.315 30.1235 46.2473 30.1266C46.1969 30.1282 46.1465 30.1298 46.0961 30.1298C45.567 30.1298 45.0379 30.1298 44.5072 30.1298L44.5088 30.1282Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M72.7184 28.3715C72.7184 28.7052 72.7184 29.0405 72.7184 29.3743C72.7184 29.5412 72.7215 29.708 72.7451 29.8749C72.7766 30.1016 72.7451 30.1299 72.5231 30.1299C72.501 30.1299 72.479 30.1284 72.457 30.1299C72.3546 30.1331 72.3074 30.078 72.2885 29.9835C72.2648 29.8718 72.2885 29.7505 72.2176 29.6498C72.1389 29.7269 72.0633 29.8072 71.9814 29.8812C71.7436 30.0969 71.4523 30.1772 71.1421 30.2165C70.7956 30.2606 70.4618 30.2212 70.1484 30.067C69.6965 29.845 69.4445 29.3381 69.4871 28.8343C69.5375 28.2439 69.8681 27.907 70.4035 27.7291C70.6854 27.6347 70.9799 27.5969 71.2759 27.589C71.5436 27.5812 71.8113 27.5827 72.079 27.5875C72.2003 27.589 72.2522 27.5402 72.2475 27.419C72.2412 27.2632 72.2507 27.1073 72.2271 26.953C72.1672 26.5752 71.9436 26.3579 71.5783 26.2808C71.3137 26.2241 71.0476 26.2273 70.783 26.2887C70.5106 26.3501 70.3295 26.5106 70.2319 26.7735C70.1311 27.0412 70.1138 27.0459 69.8319 27.027C69.717 27.0191 69.6855 26.9672 69.7075 26.8649C69.791 26.4886 69.9721 26.1832 70.3232 25.9943C70.6067 25.8431 70.9137 25.7975 71.2287 25.8038C71.4617 25.8085 71.6948 25.8242 71.9216 25.9014C72.3609 26.0509 72.6066 26.3611 72.6884 26.8082C72.7136 26.9451 72.7247 27.0837 72.7231 27.2238C72.7199 27.6079 72.7231 27.992 72.7231 28.3778L72.7184 28.3715ZM71.6649 27.9936C71.5484 27.9936 71.4302 27.9873 71.3137 27.9936C71.0303 28.0109 70.7468 28.0361 70.4807 28.1526C70.1295 28.3069 69.9532 28.606 69.9799 28.9964C70.0067 29.3648 70.235 29.6419 70.5941 29.7427C70.8649 29.8182 71.1358 29.7946 71.4035 29.7269C71.7798 29.6309 72.0239 29.3932 72.1389 29.0216C72.2286 28.7304 72.2491 28.4313 72.2428 28.129C72.2412 28.0298 72.1924 27.9889 72.0963 27.9905C71.9515 27.992 71.8066 27.9905 71.6617 27.9905L71.6649 27.9936Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M62.7441 27.0235C62.7441 26.0821 62.7441 25.1423 62.7441 24.2008C62.7441 23.9222 62.8386 23.8498 63.1142 23.9127C63.1772 23.9269 63.2134 23.96 63.215 24.0261C63.2166 24.0765 63.2181 24.1269 63.2181 24.1757C63.2181 24.8668 63.2181 25.5563 63.2181 26.2474C63.2181 26.2868 63.215 26.3261 63.2181 26.3639C63.2213 26.3938 63.2008 26.4395 63.2433 26.4505C63.2701 26.4584 63.2843 26.419 63.3016 26.397C63.7205 25.8523 64.2873 25.7169 64.9283 25.835C65.5314 25.9467 65.9187 26.4237 65.9927 27.0897C66.0148 27.2896 66.0258 27.488 66.0258 27.6895C66.0227 28.4247 66.0258 29.1599 66.0242 29.8951C66.0242 29.9706 66.0479 30.0682 65.9597 30.1029C65.8447 30.1485 65.7188 30.1438 65.6007 30.1029C65.5597 30.0887 65.555 30.043 65.5534 30.0037C65.5518 29.9533 65.5503 29.9029 65.5503 29.8541C65.5503 29.0969 65.5503 28.3397 65.5503 27.5824C65.5503 27.3809 65.5251 27.1826 65.4715 26.9889C65.3408 26.5245 65.0164 26.2632 64.5314 26.26C63.8968 26.2553 63.4354 26.5182 63.278 27.2424C63.2386 27.4218 63.2197 27.6045 63.2197 27.7887C63.2213 28.4845 63.2213 29.1803 63.2197 29.8762C63.2197 29.9549 63.2559 30.0619 63.1646 30.1044C63.0528 30.1548 62.9252 30.1422 62.8056 30.1092C62.763 30.0981 62.7536 30.0541 62.7504 30.0131C62.7473 29.958 62.7457 29.9014 62.7457 29.8463C62.7457 28.9048 62.7457 27.965 62.7457 27.0235H62.7441Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M76.5554 28.0897C76.5554 27.589 76.5554 27.0868 76.5554 26.5862C76.5554 26.4193 76.5601 26.2525 76.5381 26.0856C76.5176 25.9266 76.5585 25.8888 76.7207 25.8825C76.7601 25.8825 76.7995 25.8825 76.8373 25.8825C76.9444 25.8825 77.001 25.9297 77.0058 26.0415C77.0121 26.1643 77.0373 26.2839 77.0325 26.4083C77.0325 26.4335 77.0231 26.4729 77.053 26.4807C77.0845 26.4902 77.0939 26.4508 77.1081 26.4288C77.3176 26.0998 77.612 25.8951 77.9963 25.8321C78.3758 25.7692 78.7521 25.7723 79.1048 25.9612C79.371 26.1029 79.5631 26.3139 79.6717 26.5941C79.7631 26.8287 79.8119 27.0742 79.8119 27.3293C79.8103 28.181 79.8119 29.0342 79.8103 29.8859C79.8103 29.9646 79.845 30.0717 79.7457 30.1079C79.6355 30.1488 79.5158 30.1394 79.4009 30.1095C79.3584 30.0985 79.3458 30.0575 79.3426 30.0166C79.3395 29.9615 79.3379 29.9048 79.3379 29.8497C79.3379 29.0531 79.3379 28.2565 79.3379 27.4599C79.3379 27.3151 79.3285 27.1719 79.297 27.0286C79.1678 26.4335 78.7505 26.2163 78.201 26.2635C77.6561 26.3091 77.3144 26.6146 77.1475 27.1262C77.0766 27.345 77.031 27.567 77.0325 27.7984C77.0341 28.4785 77.0325 29.157 77.0325 29.8371C77.0325 30.1173 76.9396 30.1882 76.6609 30.1236C76.5979 30.1095 76.5617 30.0764 76.5601 30.0103C76.5585 29.9552 76.557 29.8985 76.557 29.8434C76.557 29.2578 76.557 28.6737 76.557 28.0881L76.5554 28.0897Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M57.829 25.8007C58.5298 25.818 59.0683 26.2131 59.2746 26.9168C59.2872 26.9593 59.2967 27.0034 59.3045 27.0475C59.3218 27.1404 59.2825 27.1845 59.1896 27.186C59.1345 27.186 59.0778 27.1845 59.0227 27.1876C58.9045 27.1955 58.8416 27.1435 58.8038 27.0302C58.7124 26.7594 58.5613 26.528 58.3014 26.3879C57.67 26.0447 56.8905 26.295 56.5803 26.9704C56.2527 27.6819 56.259 28.414 56.6118 29.1161C56.9913 29.8734 57.8526 29.9285 58.366 29.5774C58.5644 29.442 58.6731 29.2452 58.7738 29.0374C58.8069 28.9697 58.8164 28.8753 58.9077 28.8579C59.0226 28.8375 59.1423 28.8343 59.2573 28.8595C59.325 28.8737 59.3077 28.9382 59.2919 28.9855C59.0919 29.5931 58.7329 30.0575 58.0511 30.1882C57.0842 30.374 56.2874 29.9033 55.9976 28.9634C55.7441 28.1401 55.7898 27.3293 56.2559 26.5831C56.5945 26.0384 57.111 25.7896 57.829 25.7991V25.8007Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M52.7443 30.1297C52.5837 30.1675 52.4766 30.0746 52.3774 29.9234C52.053 29.4307 51.716 28.9458 51.3822 28.4578C51.2956 28.3303 51.2909 28.3318 51.2027 28.4609C50.8657 28.96 50.5303 29.459 50.1933 29.9581C50.0925 30.1076 49.7918 30.1958 49.6327 30.1186C49.5492 30.0777 49.5996 30.0258 49.6296 29.9817C49.8091 29.7204 49.9917 29.4606 50.1728 29.1993C50.4342 28.8246 50.6941 28.4483 50.9586 28.0768C51.0216 27.9886 50.9948 27.9257 50.9429 27.8517C50.6421 27.4172 50.3413 26.9811 50.0421 26.545C49.9256 26.375 49.8075 26.2065 49.6941 26.0349C49.6264 25.9342 49.6437 25.8948 49.7618 25.8854C49.8563 25.8775 49.9508 25.8822 50.0453 25.8854C50.1476 25.8885 50.1996 25.9625 50.25 26.0381C50.5555 26.4962 50.8626 26.9559 51.1696 27.414C51.1885 27.4424 51.2058 27.4707 51.2247 27.4975C51.3019 27.6029 51.3161 27.6045 51.3885 27.5006C51.6231 27.1684 51.8562 26.8347 52.0892 26.5025C52.1947 26.3514 52.2987 26.2002 52.4042 26.0507C52.5113 25.8996 52.7853 25.8224 52.9569 25.8933C53.0451 25.9295 52.9978 25.983 52.9679 26.0255C52.853 26.1892 52.7364 26.3529 52.6183 26.5151C52.3113 26.9402 52.0074 27.3652 51.6956 27.7855C51.6137 27.8957 51.6074 27.9839 51.6877 28.0988C52.0987 28.6876 52.5034 29.2827 52.9097 29.8746C52.9191 29.8888 52.9301 29.9014 52.938 29.9156C52.9664 29.9722 53.0467 30.021 53.0057 30.0903C52.9664 30.1549 52.8829 30.1202 52.8183 30.1281C52.8026 30.1297 52.7853 30.1281 52.7412 30.1281L52.7443 30.1297Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_8649",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "31.7377",
                        transform: "translate(0.152344 0.509766)",
                        width: "93.739"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite6/LogoAceWhite6.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite6;
var _c;
$RefreshReg$(_c, "LogoAceWhite6");

  $parcel$ReactRefreshHelpers$e73f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"glK9r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite5", ()=>(0, _logoBinanceWhite5.LogoBinanceWhite5));
var _logoBinanceWhite5 = require("./LogoBinanceWhite5");

},{"./LogoBinanceWhite5":"9lQzo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9lQzo":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$76d6 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$76d6.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite5", ()=>LogoBinanceWhite5);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite5 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-5 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 119 24",
        width: "119",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10206)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M7.35009 10.1986L11.9389 5.61172L16.5295 10.2023L19.198 7.53192L11.9389 0.270996L4.67969 7.53005L7.35009 10.1986Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.124023 12.0845L2.79345 9.41509L5.46288 12.0845L2.79345 14.7539L0.124023 12.0845Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M7.3509 13.9701L11.9397 18.5588L16.5303 13.9683L19.2007 16.6349L19.1988 16.6368L11.9397 23.8977L4.68049 16.6405L4.67676 16.6368L7.3509 13.9701Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M18.4111 12.0854L21.0806 9.41606L23.75 12.0854L21.0806 14.7548L18.4111 12.0854Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M14.6467 12.0831L11.939 9.37354L9.93666 11.3758L9.70526 11.6054L9.23127 12.0794L9.22754 12.0831L9.23127 12.0887L11.939 14.7945L14.6467 12.085L14.6486 12.0831H14.6467Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M27.915 5.99609H33.7224C35.163 5.99609 36.2528 6.36931 36.9918 7.11574C37.2702 7.39147 37.4897 7.72089 37.6369 8.08401C37.7842 8.44713 37.8561 8.83639 37.8484 9.22815V9.2636C37.8534 9.58453 37.8087 9.90431 37.7159 10.2116C37.6332 10.4761 37.5132 10.7274 37.3594 10.958C37.2161 11.1754 37.0427 11.3715 36.8444 11.5402C36.6506 11.707 36.4384 11.851 36.2118 11.9694C36.8652 12.197 37.4528 12.5815 37.923 13.0891C38.3385 13.5618 38.5463 14.2149 38.5463 15.0485V15.0839C38.5581 15.6045 38.4448 16.1203 38.216 16.588C37.9942 17.0189 37.6692 17.3882 37.2699 17.6628C36.8184 17.9655 36.3157 18.1836 35.7863 18.3066C35.1573 18.4558 34.5125 18.5279 33.8661 18.5212H27.915V5.99609ZM33.1402 11.0606C33.6426 11.0849 34.1426 10.9768 34.5901 10.7471C34.7646 10.6452 34.9071 10.4964 35.0015 10.3177C35.0958 10.1389 35.1382 9.93732 35.1238 9.73572V9.70027C35.1331 9.51451 35.0953 9.32942 35.0141 9.1621C34.9329 8.99478 34.8108 8.85063 34.6592 8.74297C34.3494 8.52277 33.9021 8.41267 33.3174 8.41267H30.6004V11.0606H33.1402ZM33.8735 16.1084C34.3741 16.1364 34.8724 16.0219 35.3104 15.7781C35.4811 15.6684 35.6192 15.5151 35.7105 15.3339C35.8017 15.1527 35.8427 14.9504 35.8292 14.748V14.7126C35.8359 14.5202 35.7954 14.3291 35.7111 14.156C35.6269 13.9829 35.5015 13.8332 35.3459 13.7198C35.0249 13.471 34.5061 13.3466 33.7896 13.3466H30.6004V16.1084H33.8735Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M42.0059 5.99609H44.7621V18.525H42.0059V5.99609Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M48.9326 5.99609H51.4743L57.3488 13.7067V5.99609H60.0696V18.525H57.7239L51.6571 10.5605V18.525H48.9326V5.99609Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M68.4156 5.90674H70.9535L76.3223 18.5252H73.4448L72.299 15.7149H67.0011L65.8553 18.5252H63.0449L68.4156 5.90674ZM71.3155 13.2815L69.6472 9.21717L67.9864 13.2815H71.3155Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M79.3047 6.00391H81.8463L87.7171 13.7146V6.00391H90.4379V18.5328H88.0922L82.0255 10.5683V18.5328H79.3047V6.00391Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M100.356 18.7452C99.4774 18.7527 98.6065 18.5826 97.7955 18.2451C97.032 17.9299 96.3393 17.465 95.7583 16.8778C95.1772 16.2907 94.7196 15.5932 94.4123 14.8265C94.088 14.0244 93.9238 13.1667 93.9289 12.3016V12.2662C93.9145 10.561 94.5706 8.91843 95.7559 7.69242C96.339 7.09355 97.0373 6.61876 97.8086 6.29659C98.6476 5.94906 99.5485 5.77573 100.457 5.78715C100.994 5.78314 101.53 5.83126 102.058 5.93084C102.509 6.01624 102.951 6.14819 103.375 6.32458C103.76 6.48668 104.126 6.69069 104.467 6.93293C104.799 7.16918 105.111 7.43258 105.4 7.72041L103.648 9.74324C103.2 9.33016 102.698 8.98044 102.155 8.70384C101.622 8.44886 101.036 8.32111 100.445 8.33062C99.9536 8.32537 99.4663 8.42482 99.0158 8.62237C98.5654 8.81992 98.1621 9.11104 97.8328 9.47639C97.5064 9.84082 97.2507 10.2629 97.0789 10.7211C96.8991 11.2052 96.8087 11.718 96.8121 12.2345V12.2699C96.8103 12.7856 96.9007 13.2975 97.0789 13.7814C97.2485 14.2412 97.5016 14.6657 97.8254 15.0336C98.152 15.4035 98.5543 15.6989 99.0051 15.8998C99.4558 16.1007 99.9445 16.2024 100.438 16.198C101.066 16.2178 101.69 16.0826 102.254 15.8043C102.79 15.5118 103.287 15.1504 103.73 14.7294L105.484 16.5022C105.174 16.8384 104.839 17.1503 104.482 17.4352C104.131 17.7128 103.749 17.9501 103.345 18.1425C102.915 18.3452 102.461 18.495 101.994 18.5885C101.455 18.6966 100.906 18.7491 100.356 18.7452Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M108.736 5.99609H118.166V8.44813H111.448V10.9897H117.363V13.4418H111.457V16.0729H118.259V18.525H108.742L108.736 5.99609Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10206",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "23.6265",
                        transform: "translate(0.125 0.270996)",
                        width: "118.132"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite5/LogoBinanceWhite5.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite5;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite5");

  $parcel$ReactRefreshHelpers$76d6.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"7DEh3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite6", ()=>(0, _logoBinanceWhite6.LogoBinanceWhite6));
var _logoBinanceWhite6 = require("./LogoBinanceWhite6");

},{"./LogoBinanceWhite6":"f9Y03","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f9Y03":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$aa24 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$aa24.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite6", ()=>LogoBinanceWhite6);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite6 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-6 ${className}`,
        fill: "none",
        height: "31",
        viewBox: "0 0 155 31",
        width: "155",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7694)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M9.52934 13.0537L15.5353 7.05027L21.5438 13.0586L25.0365 9.56352L15.5353 0.0600586L6.03418 9.56107L9.52934 13.0537Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.0708008 15.5225L3.56468 12.0286L7.05856 15.5225L3.56468 19.0163L0.0708008 15.5225Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M9.52934 17.9897L15.5353 23.9957L21.5438 17.9873L25.039 21.4775L25.0365 21.48L15.5353 30.9834L6.03418 21.4849L6.0293 21.48L9.52934 17.9897Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M24.0063 15.5234L27.5002 12.0296L30.9941 15.5234L27.5002 19.0173L24.0063 15.5234Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M19.0792 15.5205L15.5352 11.9741L12.9145 14.5948L12.6116 14.8953L11.9912 15.5156L11.9863 15.5205L11.9912 15.5278L15.5352 19.0694L19.0792 15.523L19.0817 15.5205H19.0792Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M36.4453 7.55322H44.0462C45.9318 7.55322 47.3582 8.04171 48.3254 9.01867C48.6898 9.37956 48.9771 9.81072 49.1698 10.286C49.3625 10.7613 49.4567 11.2707 49.4465 11.7835V11.8299C49.4531 12.25 49.3946 12.6685 49.2731 13.0706C49.1649 13.4169 49.0078 13.7458 48.8066 14.0476C48.619 14.3322 48.3921 14.5888 48.1325 14.8097C47.8789 15.0279 47.6011 15.2164 47.3045 15.3714C48.1597 15.6693 48.9288 16.1725 49.5442 16.8369C50.0881 17.4556 50.36 18.3105 50.36 19.4014V19.4478C50.3755 20.1291 50.2272 20.8042 49.9277 21.4164C49.6375 21.9804 49.212 22.4638 48.6894 22.8232C48.0985 23.2194 47.4405 23.5049 46.7476 23.6659C45.9243 23.8611 45.0804 23.9554 44.2343 23.9467H36.4453V7.55322ZM43.2842 14.182C43.9418 14.2137 44.5962 14.0722 45.182 13.7716C45.4104 13.6382 45.5969 13.4435 45.7204 13.2095C45.8438 12.9756 45.8993 12.7117 45.8805 12.4478V12.4014C45.8926 12.1583 45.8432 11.916 45.7369 11.697C45.6306 11.478 45.4709 11.2894 45.2724 11.1485C44.8669 10.8603 44.2815 10.7162 43.5162 10.7162H39.96V14.182H43.2842ZM44.2441 20.7887C44.8993 20.8254 45.5514 20.6755 46.1248 20.3564C46.3481 20.2129 46.529 20.0121 46.6484 19.775C46.7678 19.5379 46.8215 19.2731 46.8038 19.0082V18.9618C46.8126 18.71 46.7595 18.4599 46.6492 18.2333C46.5389 18.0068 46.3748 17.8108 46.1712 17.6624C45.7511 17.3367 45.0721 17.1739 44.1342 17.1739H39.96V20.7887H44.2441Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M54.8882 7.55322H58.4957V23.9516H54.8882V7.55322Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M63.9546 7.55322H67.2812L74.9701 17.6453V7.55322H78.5312V23.9516H75.461L67.5206 13.5274V23.9516H63.9546V7.55322Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M89.4542 7.43604H92.7759L99.8029 23.9517H96.0366L94.537 20.2734H87.6028L86.1031 23.9517H82.4248L89.4542 7.43604ZM93.2498 17.0885L91.0662 11.7689L88.8924 17.0885H93.2498Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M103.706 7.56348H107.033L114.717 17.6556V7.56348H118.278V23.9619H115.208L107.267 13.5376V23.9619H103.706V7.56348Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M131.259 24.2402C130.109 24.25 128.969 24.0273 127.908 23.5856C126.908 23.173 126.002 22.5645 125.241 21.796C124.481 21.0276 123.882 20.1146 123.48 19.1111C123.055 18.0613 122.84 16.9387 122.847 15.8065V15.7601C122.828 13.5283 123.687 11.3784 125.238 9.7737C126.001 8.98987 126.915 8.36844 127.925 7.94677C129.023 7.4919 130.202 7.26504 131.391 7.27999C132.094 7.27474 132.796 7.33773 133.486 7.46806C134.077 7.57984 134.655 7.75254 135.211 7.98341C135.715 8.19556 136.194 8.46258 136.64 8.77964C137.074 9.08886 137.483 9.43361 137.861 9.81034L135.567 12.4579C134.981 11.9173 134.324 11.4595 133.613 11.0975C132.915 10.7638 132.15 10.5966 131.376 10.609C130.732 10.6021 130.095 10.7323 129.505 10.9909C128.915 11.2494 128.388 11.6305 127.957 12.1087C127.529 12.5856 127.195 13.1381 126.97 13.7377C126.735 14.3714 126.616 15.0426 126.621 15.7186V15.765C126.618 16.4399 126.737 17.1099 126.97 17.7433C127.192 18.3451 127.523 18.9007 127.947 19.3822C128.374 19.8663 128.901 20.2529 129.491 20.5159C130.081 20.7788 130.72 20.912 131.366 20.9063C132.189 20.9322 133.005 20.7552 133.743 20.3909C134.445 20.0081 135.095 19.5351 135.675 18.9841L137.971 21.3044C137.565 21.7444 137.127 22.1526 136.659 22.5256C136.2 22.8889 135.701 23.1994 135.172 23.4513C134.608 23.7166 134.014 23.9126 133.403 24.035C132.697 24.1765 131.979 24.2453 131.259 24.2402Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M142.228 7.55322H154.57V10.7626H145.777V14.0891H153.52V17.2985H145.789V20.7423H154.692V23.9516H142.235L142.228 7.55322Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7694",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "30.9235",
                        transform: "translate(0.0722656 0.0600586)",
                        width: "154.617"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite6/LogoBinanceWhite6.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite6;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite6");

  $parcel$ReactRefreshHelpers$aa24.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"4tXwY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite1", ()=>(0, _logoBitmexWhite1.LogoBitmexWhite1));
var _logoBitmexWhite1 = require("./LogoBitmexWhite1");

},{"./LogoBitmexWhite1":"dKaQm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dKaQm":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$650e = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$650e.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite1", ()=>LogoBitmexWhite1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-1 ${className}`,
        fill: "none",
        height: "16",
        viewBox: "0 0 90 16",
        width: "90",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10210)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M4.1781 1.38916L0.742188 15.166H4.18548L6.33339 6.55226H9.78038L11.0684 1.38916H7.6214H4.1781Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite1/LogoBitmexWhite1.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M17.9553 1.38916H14.512L13.224 6.55226L12.3641 9.99925H8.92082L7.63281 15.166H11.0761H14.5194L16.6673 6.55226L17.9553 1.38916Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite1/LogoBitmexWhite1.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M36.5415 2.22326C36.5442 2.35105 36.5192 2.47791 36.4682 2.59513C36.4173 2.71234 36.3415 2.81714 36.2462 2.90233C36.073 3.07272 35.8397 3.16821 35.5967 3.16821C35.3537 3.16821 35.1204 3.07272 34.9471 2.90233C34.7702 2.73255 34.6671 2.49997 34.6602 2.25482C34.6533 2.00967 34.7431 1.77165 34.9102 1.59218L34.9545 1.54421C35.1278 1.37381 35.361 1.27832 35.604 1.27832C35.8471 1.27832 36.0803 1.37381 36.2536 1.54421C36.3489 1.62896 36.4242 1.73386 36.474 1.85131C36.5238 1.96876 36.5469 2.09581 36.5415 2.22326ZM21.4102 1.3855H27.1084C28.6843 1.3855 29.9206 1.83944 30.7178 2.60708C31.0065 2.89782 31.2337 3.24372 31.3859 3.62415C31.538 4.00459 31.6121 4.41177 31.6035 4.82142V4.86203C31.6035 6.65565 30.4963 7.58198 29.4187 8.05068C31.0536 8.54521 32.3711 9.49 32.3711 11.3722V11.4128C32.3711 13.7748 30.3856 15.1735 27.3704 15.1735H21.4102V1.3855ZM26.8427 7.5303C28.7101 7.5303 30.0129 6.68146 30.0129 5.05761V5.02068C30.0129 3.65886 28.9278 2.77312 26.946 2.77312H22.9491V7.52657L26.8427 7.5303ZM27.3926 13.771C29.4814 13.771 30.7805 12.8484 30.7805 11.3021V11.2651C30.7805 9.76675 29.5183 8.89947 27.1158 8.89947H22.9491V13.771L27.3926 13.771ZM34.8364 4.98749H36.3569V15.1698H34.8364V4.98749ZM40.3723 11.9405V6.32717H38.0694V4.99856H40.3723V1.3855H41.8928V4.99856H46.0742V6.32717H41.9076V11.7449C41.9076 13.1141 42.5534 13.9851 43.7861 13.9593C44.5274 13.9738 45.2648 13.8486 45.9598 13.5902V14.9151C45.1594 15.244 44.296 15.3915 43.4318 15.3469C41.5939 15.3063 40.387 14.0109 40.387 11.9258L40.3723 11.9405ZM48.2775 1.3855H51.5473L55.1714 7.2129L58.7919 1.3855H62.0617V15.1698H59.0539V6.17217L55.1751 12.0771H55.0939L51.2558 6.24967V15.1808H48.2775V1.3855ZM64.7595 1.3855H75.1595V4.0833H67.7784V6.88075H73.9232V9.57855H67.7747V12.472H75.2555V15.1698H64.7595V1.3855ZM80.9279 8.15769L76.3184 1.3855H79.865L82.7584 5.85477L85.674 1.3855H89.121L84.5188 8.12078L89.3165 15.1698H85.7736L82.6735 10.4495L79.5624 15.1771H76.1154L80.9279 8.15769Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite1/LogoBitmexWhite1.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite1/LogoBitmexWhite1.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10210",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "14.9321",
                        transform: "translate(0.320312 0.850586)",
                        width: "89.4181"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite1/LogoBitmexWhite1.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite1/LogoBitmexWhite1.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite1/LogoBitmexWhite1.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite1/LogoBitmexWhite1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite1;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite1");

  $parcel$ReactRefreshHelpers$650e.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"6N1bv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite3", ()=>(0, _logoBitoproWhite3.LogoBitoproWhite3));
var _logoBitoproWhite3 = require("./LogoBitoproWhite3");

},{"./LogoBitoproWhite3":"lgOfc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lgOfc":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$a76f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$a76f.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite3", ()=>LogoBitoproWhite3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-3 ${className}`,
        fill: "none",
        height: "32",
        viewBox: "0 0 132 32",
        width: "132",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M48.0805 4.94529C48.0616 5.15366 47.9101 5.30521 47.7017 5.32415C47.607 5.30521 47.5123 5.26732 47.4365 5.19155C46.3569 4.05495 44.8983 3.42982 43.1178 3.24039C42.7958 3.18356 42.4928 3.16461 42.1707 3.18356C38.9507 3.18356 35.3707 4.75585 32.2453 7.29426L36.9618 7.33214H39.4431C41.7351 7.33214 43.3262 7.46475 44.3301 7.65418C45.7318 7.97622 46.6789 8.54452 47.3229 9.28331C47.8911 10.0979 48.0237 11.045 47.5691 12.1248C47.285 12.8825 46.8304 13.5456 46.2432 14.076C45.4855 14.739 44.6332 15.2883 43.705 15.7051C45.0309 16.2734 45.8644 16.8985 46.319 17.7131C46.6978 18.5276 46.6978 19.4748 46.319 20.5546C45.9401 21.6344 45.2393 22.5626 44.1596 23.4529C43.1368 24.3243 41.9434 24.9873 40.6554 25.4041C39.3863 25.8398 37.6626 26.0292 35.6927 26.0292H32.6241C32.5294 26.0671 32.4158 26.086 32.3021 26.086L28.6275 26.0482L28.6085 26.086V26.0482L27.2068 26.0292C26.6765 26.0292 26.2597 25.6125 26.2597 25.082C26.2597 24.5516 26.6765 24.1349 27.2068 24.1349L29.3094 24.1538L34.7835 9.16965L30.1807 9.13176H30.1617C28.4759 10.8556 27.0742 12.8068 25.9756 14.9474L28.7979 14.9852C29.3094 14.9852 29.745 15.3831 29.745 15.9135V15.9324C29.7261 16.4439 29.3094 16.8606 28.7979 16.8796L25.1232 16.8417C24.555 18.2814 24.1951 19.8158 24.0815 21.3502H20.7856C21.0129 19.1717 21.619 17.0311 22.5661 15.0421C26.184 7.16165 34.1395 1.23239 40.9395 1.23239C41.3184 1.21345 41.6972 1.25134 42.076 1.28922C44.6142 1.53549 46.6599 2.67209 47.9858 4.62325C48.0805 4.75585 48.1374 4.81268 48.0805 4.94529ZM42.7958 12.6363C42.9852 12.068 42.9284 11.5565 42.4738 11.2534C42.095 10.9314 41.3373 10.7419 40.2387 10.7419H38.0036L36.5451 14.72H38.5718C39.7083 14.72 40.6744 14.5306 41.3752 14.1517C42.0382 13.8297 42.5306 13.2993 42.7958 12.6363ZM33.647 22.6573H35.8821C37.852 22.6573 39.2537 22.4679 40.0872 22.089C40.8259 21.767 41.4131 21.1797 41.7351 20.4599C42.0571 19.6453 41.8677 19.0012 41.2237 18.5655C40.5796 18.1298 39.3106 17.8646 37.4732 17.8646H35.4465L33.647 22.6573ZM34.0258 1.66809C31.033 2.04696 27.794 3.67608 24.9907 6.21449C23.911 7.1806 22.945 8.22248 22.0736 9.35908H19.0809C22.9639 4.13072 28.6843 0.58832 33.9501 0.777754C34.1963 0.777754 34.3857 0.967186 34.3857 1.19451V1.21345C34.4236 1.45971 34.2531 1.64915 34.0258 1.66809ZM15.8987 8.60135C14.2507 10.7419 12.9059 13.2046 12.205 15.7809C11.2579 19.1149 11.2579 22.3921 12.1482 25.1768C12.6028 26.6543 13.3794 28.0183 14.4401 29.1549C14.6296 29.3443 14.6296 29.6474 14.4401 29.8558C14.3454 29.9694 14.2128 30.0452 14.0613 30.0452C13.9477 30.0641 13.834 30.0262 13.7393 29.9884C12.3187 29.0033 11.1822 27.6773 10.4435 26.1239C10.4056 26.1239 10.3487 26.1429 10.3109 26.1429L6.29523 26.086C5.76486 26.086 5.34814 25.6693 5.34814 25.1389C5.34814 24.6085 5.76486 24.1917 6.29523 24.1917L9.70473 24.2485C8.90918 21.5775 8.94706 18.4519 9.93203 15.2505C10.576 13.1099 11.561 11.1019 12.868 9.28331L11.7694 9.26436C11.239 9.26436 10.8223 8.84761 10.8223 8.3172C10.8223 7.78678 11.239 7.37003 11.7694 7.37003L14.1939 7.42686C14.2507 7.42686 14.3265 7.42686 14.3833 7.4458C16.2585 5.38098 18.5884 3.7708 21.1834 2.7668C21.4486 2.6342 21.7516 2.74786 21.8842 3.01307V3.03201C21.941 3.29721 21.9032 3.56242 21.7516 3.78974C19.5923 4.81268 17.5466 6.51758 15.8987 8.60135ZM7.05289 16.2923L1.97653 16.3492C1.38933 16.3681 0.877911 15.9135 0.858969 15.3262C0.840028 14.739 1.29463 14.2275 1.88182 14.2086C1.9197 14.2086 1.93864 14.2086 1.97653 14.2086L6.99607 14.1517C7.6022 14.1517 8.09468 14.6253 8.13257 15.2315C8.11363 15.7998 7.64009 16.2734 7.05289 16.2923ZM15.5198 16.6712C15.7092 16.0461 15.8987 15.3452 16.1449 14.72C16.5806 13.5077 17.1488 12.3332 17.8686 11.2534H20.7856C20.009 12.5605 19.3271 13.9434 18.7588 15.3452C18.6263 15.7809 18.4368 16.2166 18.3042 16.6712H15.5198ZM17.736 18.4898C17.2435 20.6493 17.2246 22.8846 17.6792 25.0442C18.3232 27.6962 19.7059 29.6474 21.7516 30.784C21.941 30.9166 22.0168 31.1439 21.941 31.3523C21.8653 31.5038 21.7327 31.5985 21.5622 31.5985H21.4296C19.024 30.9545 16.9973 29.2875 15.8987 27.0521C14.6864 24.6653 14.4401 21.6344 15.0084 18.4708L17.736 18.4898ZM24.233 23.2256C24.3277 24.438 24.6686 25.6314 25.2558 26.6922C26.3355 28.5866 28.1729 29.7232 30.5406 29.9694C30.8626 30.0262 31.1656 30.0452 31.4876 30.0262C33.2113 30.0262 35.0487 29.5906 36.9618 28.7002C37.1512 28.6244 37.3785 28.7002 37.4732 28.8896C37.5869 29.0412 37.549 29.2496 37.3974 29.3632C37.3785 29.3822 37.3596 29.3822 37.3406 29.4011C34.6698 30.9166 31.9991 31.7311 29.5177 31.7311C29.1389 31.7501 28.76 31.7122 28.3812 31.6743C25.5778 31.3523 23.4185 30.0452 22.0926 27.772C21.297 26.3891 20.8803 24.8168 20.8803 23.2256H24.233Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite3/LogoBitoproWhite3.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M91.4004 23.737C88.2561 23.737 86.1346 21.7669 86.1346 18.8307C86.1346 14.7011 89.1274 11.3292 93.5598 11.3292C96.8935 11.3292 98.8256 13.5077 98.8256 16.1976C98.8256 20.5546 95.7191 23.737 91.4004 23.737ZM93.0862 13.9812C90.9837 13.9812 89.904 16.9175 89.9419 18.755C89.9419 20.1378 90.6617 21.066 91.9308 21.066C93.9386 21.066 95.0562 18.2814 95.0562 16.2355C95.0372 15.1368 94.5447 13.9812 93.0862 13.9812ZM86.1157 14.2464H83.4639L82.6304 18.2814C82.5168 18.7739 82.441 19.2854 82.4221 19.7779C82.4221 20.3651 82.6683 20.7819 83.4639 20.7819C83.8048 20.7819 84.1458 20.7819 84.4867 20.7251L84.051 23.4718C83.5964 23.6423 82.6872 23.737 81.8917 23.737C79.7134 23.737 78.6716 22.6383 78.6716 21.1608C78.6906 20.422 78.7663 19.6832 78.9368 18.9633L80.8878 9.37801L84.6572 8.39296L84.0132 11.6133H86.665L86.1157 14.2464ZM76.1713 10.1168H76.1524C75.1674 10.1168 74.3908 9.45378 74.3908 8.4119C74.4097 7.21847 75.3758 6.42285 76.4933 6.42285C77.5541 6.42285 78.3307 7.10481 78.3307 8.14669C78.3307 9.39695 77.3457 10.1357 76.1713 10.1168ZM75.1864 23.4718H71.5306L73.8983 11.6133H77.5541L75.1864 23.4718ZM67.9696 14.8147C69.6175 15.3073 70.6593 16.5954 70.6593 18.3761C70.6593 20.1189 69.6743 21.407 68.3105 22.2595C66.871 23.1877 64.7116 23.5855 61.8514 23.5855C60.4118 23.6044 58.9533 23.5097 57.5327 23.2635L60.677 7.37002C62.1545 7.12375 63.6698 6.99115 65.1851 6.99115C66.9657 6.99115 68.2916 7.19953 69.4281 7.86254C70.5646 8.4119 71.417 9.47273 71.417 10.8556C71.417 12.9204 69.8069 14.2275 67.9696 14.739V14.8147ZM61.6052 20.7819C62.0787 20.8387 62.5333 20.8577 63.0069 20.8577C64.9957 20.8577 66.7952 20.0999 66.7952 18.2814C66.7952 16.6522 65.3746 16.1787 63.6698 16.1787H62.5333L61.6052 20.7819ZM65.2799 9.71899C64.8063 9.70005 64.3328 9.73793 63.8592 9.83265L63.1016 13.6213H64.3138C66.3216 13.6213 67.7044 12.7878 67.7044 11.4049C67.6855 10.2305 66.6815 9.71899 65.2799 9.71899Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite3/LogoBitoproWhite3.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M124.245 23.6419C121.12 23.6419 119.188 21.5771 119.188 18.7735C119.188 14.7764 122.105 11.2909 126.329 11.2909C129.662 11.2909 131.405 13.5641 131.405 16.1972C131.405 20.2132 128.45 23.6419 124.245 23.6419ZM125.969 13.4883C123.601 13.4883 122.237 16.5003 122.237 18.6977C122.237 20.3268 123.146 21.4634 124.643 21.4634C126.859 21.4634 128.336 18.5462 128.336 16.1972C128.336 14.9848 127.768 13.4883 125.969 13.4883ZM119.263 14.0755C117.161 14.0755 115.816 16.1214 115.323 18.6409L114.376 23.3957H111.422C111.422 23.3957 113.354 12.6548 113.505 11.575H116.271C116.1 12.3706 115.911 13.2041 115.778 14.0755H115.854C116.687 12.4654 118.032 11.3098 119.737 11.3098C119.945 11.3098 120.154 11.3288 120.362 11.3666L119.775 14.1324C119.623 14.0945 119.434 14.0755 119.263 14.0755ZM105.133 17.3149C104.603 17.2959 104.053 17.258 103.523 17.2012L102.311 23.3957H99.3936L102.595 7.31278C103.959 7.04757 105.341 6.91497 106.743 6.93391C108.315 6.93391 110.02 7.25594 111.118 8.08945C112.141 8.82824 112.691 9.88907 112.691 11.3477C112.691 13.0905 111.876 14.7196 110.512 15.7804C109.111 16.8034 107.16 17.3149 105.133 17.3149ZM106.724 9.18816C106.175 9.16922 105.625 9.22605 105.095 9.33971L103.977 14.8712C104.489 14.9659 105 15.0227 105.531 15.0227C108.05 15.0227 109.698 13.4883 109.698 11.5561C109.698 9.8133 108.41 9.18816 106.724 9.18816Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite3/LogoBitoproWhite3.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite3/LogoBitoproWhite3.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite3/LogoBitoproWhite3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite3;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite3");

  $parcel$ReactRefreshHelpers$a76f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"di59d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite4", ()=>(0, _logoBitoproWhite4.LogoBitoproWhite4));
var _logoBitoproWhite4 = require("./LogoBitoproWhite4");

},{"./LogoBitoproWhite4":"cq4cp","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cq4cp":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$671c = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$671c.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite4", ()=>LogoBitoproWhite4);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite4 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-4 ${className}`,
        fill: "none",
        height: "33",
        viewBox: "0 0 135 33",
        width: "135",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M48.959 4.78863C48.9396 5.0022 48.7843 5.15752 48.5708 5.17694C48.4737 5.15752 48.3766 5.11869 48.299 5.04103C47.1924 3.87609 45.6975 3.23538 43.8726 3.04122C43.5426 2.98298 43.2319 2.96356 42.9019 2.98297C39.6015 2.98297 35.9323 4.59447 32.729 7.19616L37.5631 7.23499H40.1063C42.4554 7.23499 44.0862 7.3709 45.1151 7.56506C46.5517 7.89513 47.5224 8.47759 48.1825 9.2348C48.7649 10.0697 48.9008 11.0405 48.4349 12.1471C48.1437 12.9238 47.6777 13.6033 47.0759 14.147C46.2993 14.8265 45.4257 15.3896 44.4744 15.8167C45.8334 16.3992 46.6876 17.0399 47.1536 17.8748C47.5418 18.7096 47.5418 19.6804 47.1536 20.7871C46.7653 21.8938 46.047 22.8451 44.9404 23.7577C43.892 24.6508 42.6689 25.3303 41.3488 25.7575C40.0481 26.204 38.2814 26.3982 36.2623 26.3982H33.1173C33.0202 26.437 32.9037 26.4565 32.7873 26.4565L29.021 26.4176L29.0015 26.4565V26.4176L27.5649 26.3982C27.0213 26.3982 26.5942 25.9711 26.5942 25.4274C26.5942 24.8838 27.0213 24.4566 27.5649 24.4566L29.7199 24.4761L35.3305 9.11831L30.6129 9.07948H30.5935C28.8656 10.8463 27.429 12.8461 26.303 15.0401L29.1957 15.0789C29.7199 15.0789 30.1664 15.4866 30.1664 16.0303V16.0497C30.147 16.5739 29.7199 17.001 29.1957 17.0205L25.4294 16.9816C24.847 18.4572 24.4781 20.0299 24.3616 21.6025H20.9836C21.2166 19.3698 21.8378 17.1758 22.8085 15.1371C26.5166 7.06025 34.6704 0.983166 41.64 0.983166C42.0283 0.96375 42.4166 1.00258 42.8048 1.04141C45.4063 1.29382 47.503 2.45875 48.862 4.45856C48.959 4.59447 49.0173 4.65272 48.959 4.78863ZM43.5426 12.6714C43.7367 12.0889 43.6785 11.5647 43.2125 11.254C42.8242 10.924 42.0477 10.7298 40.9217 10.7298H38.6308L37.136 14.8071H39.2133C40.3781 14.8071 41.3682 14.6129 42.0865 14.2246C42.766 13.8945 43.2708 13.3509 43.5426 12.6714ZM34.1656 22.9422H36.4565C38.4755 22.9422 39.9122 22.7481 40.7664 22.3598C41.5235 22.0297 42.1254 21.4278 42.4554 20.69C42.7854 19.8551 42.5913 19.195 41.9312 18.7485C41.2711 18.3019 39.9704 18.0301 38.0873 18.0301H36.01L34.1656 22.9422ZM34.5539 1.42973C31.4865 1.81804 28.1667 3.48778 25.2935 6.08947C24.1869 7.07967 23.1968 8.14753 22.3037 9.31247H19.2363C23.2162 3.95376 29.0792 0.323036 34.4763 0.517192C34.7286 0.517192 34.9228 0.711348 34.9228 0.944335V0.963752C34.9616 1.21615 34.7869 1.41031 34.5539 1.42973ZM15.9748 8.53584C14.2858 10.7298 12.9074 13.2538 12.1891 15.8944C11.2184 19.3115 11.2184 22.6704 12.1308 25.5245C12.5968 27.0389 13.3928 28.4368 14.4799 29.6018C14.6741 29.7959 14.6741 30.1066 14.4799 30.3202C14.3829 30.4367 14.247 30.5143 14.0917 30.5143C13.9752 30.5337 13.8587 30.4949 13.7616 30.4561C12.3056 29.4465 11.1407 28.0874 10.3836 26.4953C10.3448 26.4953 10.2865 26.5147 10.2477 26.5147L6.13195 26.4565C5.58836 26.4565 5.16125 26.0293 5.16125 25.4857C5.16125 24.942 5.58836 24.5149 6.13195 24.5149L9.62645 24.5731C8.81107 21.8355 8.8499 18.632 9.85942 15.3507C10.5195 13.1568 11.529 11.0987 12.8686 9.2348L11.7426 9.21539C11.199 9.21539 10.7719 8.78824 10.7719 8.24461C10.7719 7.70097 11.199 7.27383 11.7426 7.27383L14.2276 7.33207C14.2858 7.33207 14.3634 7.33207 14.4217 7.35149C16.3437 5.23519 18.7316 3.58486 21.3913 2.55583C21.6631 2.41992 21.9737 2.53642 22.1096 2.80824V2.82765C22.1678 3.09947 22.129 3.37129 21.9737 3.60427C19.7605 4.65272 17.6638 6.40012 15.9748 8.53584ZM6.90851 16.4186L1.70558 16.4768C1.10374 16.4962 0.579569 16.0303 0.560156 15.4284C0.540742 14.8265 1.00667 14.3023 1.60851 14.2829C1.64733 14.2829 1.66675 14.2829 1.70558 14.2829L6.85026 14.2246C7.47151 14.2246 7.97627 14.71 8.0151 15.3313C7.99568 15.9138 7.51034 16.3992 6.90851 16.4186ZM15.5865 16.8069C15.7807 16.1662 15.9748 15.4478 16.2272 14.8071C16.6737 13.5645 17.2561 12.3607 17.9939 11.254H20.9836C20.1876 12.5937 19.4887 14.011 18.9063 15.4478C18.7704 15.8944 18.5763 16.3409 18.4404 16.8069H15.5865ZM17.858 18.6708C17.3532 20.8842 17.3338 23.1752 17.7997 25.3886C18.4598 28.1068 19.877 30.1066 21.9737 31.2715C22.1678 31.4074 22.2455 31.6404 22.1678 31.854C22.0902 32.0093 21.9543 32.1064 21.7796 32.1064H21.6437C19.1781 31.4463 17.1008 29.7377 15.9748 27.4466C14.7323 25.0003 14.4799 21.8938 15.0623 18.6514L17.858 18.6708ZM24.5169 23.5247C24.614 24.7673 24.9634 25.9905 25.5653 27.0778C26.6719 29.0193 28.555 30.1842 30.9818 30.4367C31.3118 30.4949 31.6224 30.5143 31.9525 30.4949C33.7191 30.4949 35.6023 30.0483 37.5631 29.1358C37.7572 29.0581 37.9902 29.1358 38.0873 29.33C38.2037 29.4853 38.1649 29.6989 38.0096 29.8154C37.9902 29.8348 37.9708 29.8348 37.9514 29.8542C35.214 31.4074 32.4766 32.2423 29.9334 32.2423C29.5451 32.2617 29.1569 32.2229 28.7686 32.1841C25.8953 31.854 23.6821 30.5143 22.3232 28.1844C21.5078 26.7671 21.0807 25.1556 21.0807 23.5247H24.5169Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite4/LogoBitoproWhite4.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M93.3586 24.0486C90.1359 24.0486 87.9615 22.0294 87.9615 19.02C87.9615 14.7874 91.0289 11.3314 95.5718 11.3314C98.9886 11.3314 100.969 13.5642 100.969 16.3212C100.969 20.7868 97.7849 24.0486 93.3586 24.0486ZM95.0864 14.0496C92.9315 14.0496 91.8249 17.059 91.8637 18.9423C91.8637 20.3596 92.6014 21.311 93.9021 21.311C95.96 21.311 97.1054 18.4569 97.1054 16.36C97.086 15.2339 96.5813 14.0496 95.0864 14.0496ZM87.9421 14.3214H85.2241L84.3699 18.4569C84.2534 18.9617 84.1758 19.4859 84.1564 19.9907C84.1564 20.5926 84.4088 21.0198 85.2241 21.0198C85.5736 21.0198 85.923 21.0198 86.2725 20.9615L85.826 23.7768C85.36 23.9515 84.4282 24.0486 83.6128 24.0486C81.3802 24.0486 80.3124 22.9225 80.3124 21.4081C80.3318 20.6509 80.4095 19.8937 80.5842 19.1559L82.5838 9.33157L86.4472 8.32196L85.7871 11.6226H88.5051L87.9421 14.3214ZM77.7498 10.0888H77.7304C76.7208 10.0888 75.9249 9.40923 75.9249 8.34137C75.9443 7.11819 76.9344 6.30273 78.0798 6.30273C79.167 6.30273 79.963 7.00169 79.963 8.06955C79.963 9.35098 78.9534 10.1082 77.7498 10.0888ZM76.7403 23.7768H72.9934L75.4201 11.6226H79.167L76.7403 23.7768ZM69.3436 14.9038C71.0326 15.4087 72.1003 16.7289 72.1003 18.554C72.1003 20.3402 71.0908 21.6605 69.693 22.5342C68.2175 23.4856 66.0044 23.8933 63.0729 23.8933C61.5974 23.9127 60.1025 23.8156 58.6465 23.5632L61.8692 7.27352C63.3835 7.02111 64.9366 6.8852 66.4897 6.8852C68.3146 6.8852 69.6736 7.09877 70.8384 7.77832C72.0033 8.34137 72.8769 9.42865 72.8769 10.846C72.8769 12.9623 71.2267 14.302 69.3436 14.8262V14.9038ZM62.8205 21.0198C63.3058 21.078 63.7718 21.0974 64.2571 21.0974C66.2956 21.0974 68.1399 20.3208 68.1399 18.4569C68.1399 16.7872 66.6838 16.3018 64.9366 16.3018H63.7718L62.8205 21.0198ZM66.5868 9.68105C66.1014 9.66163 65.6161 9.70047 65.1307 9.79754L64.3542 13.6807H65.5967C67.6545 13.6807 69.0718 12.8264 69.0718 11.409C69.0523 10.2053 68.0234 9.68105 66.5868 9.68105Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite4/LogoBitoproWhite4.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M127.023 23.9516C123.82 23.9516 121.839 21.8353 121.839 18.9618C121.839 14.8651 124.829 11.2926 129.158 11.2926C132.575 11.2926 134.361 13.6225 134.361 16.3213C134.361 20.4374 131.333 23.9516 127.023 23.9516ZM128.789 13.5448C126.363 13.5448 124.965 16.6319 124.965 18.8841C124.965 20.5539 125.897 21.7188 127.431 21.7188C129.702 21.7188 131.216 18.7288 131.216 16.3213C131.216 15.0787 130.634 13.5448 128.789 13.5448ZM121.917 14.1467C119.762 14.1467 118.384 16.2436 117.879 18.8259L116.908 23.6992H113.88C113.88 23.6992 115.86 12.6905 116.015 11.5838H118.85C118.675 12.3993 118.481 13.2536 118.345 14.1467H118.422C119.277 12.4964 120.655 11.312 122.402 11.312C122.616 11.312 122.829 11.3314 123.043 11.3703L122.441 14.205C122.286 14.1661 122.092 14.1467 121.917 14.1467ZM107.434 17.4668C106.891 17.4474 106.328 17.4085 105.784 17.3503L104.542 23.6992H101.552L104.833 7.21533C106.231 6.94351 107.648 6.8076 109.084 6.82702C110.696 6.82702 112.443 7.15708 113.569 8.01137C114.617 8.76858 115.18 9.85586 115.18 11.3509C115.18 13.1371 114.346 14.8068 112.948 15.8941C111.511 16.9426 109.511 17.4668 107.434 17.4668ZM109.065 9.13748C108.502 9.11806 107.939 9.17631 107.395 9.2928L106.25 14.9622C106.774 15.0592 107.298 15.1175 107.842 15.1175C110.424 15.1175 112.113 13.5448 112.113 11.5644C112.113 9.7782 110.793 9.13748 109.065 9.13748Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite4/LogoBitoproWhite4.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite4/LogoBitoproWhite4.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite4/LogoBitoproWhite4.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite4;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite4");

  $parcel$ReactRefreshHelpers$671c.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"6psU4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite5", ()=>(0, _logoBitoproWhite5.LogoBitoproWhite5));
var _logoBitoproWhite5 = require("./LogoBitoproWhite5");

},{"./LogoBitoproWhite5":"fdsQn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fdsQn":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$b9de = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$b9de.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite5", ()=>LogoBitoproWhite5);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite5 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-5 ${className}`,
        fill: "none",
        height: "44",
        viewBox: "0 0 181 44",
        width: "181",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M65.9259 6.30738C65.8998 6.59507 65.6906 6.80431 65.4029 6.83046C65.2721 6.80431 65.1414 6.752 65.0368 6.64738C63.5461 5.07813 61.5324 4.21504 59.0741 3.9535C58.6296 3.87504 58.2111 3.84889 57.7666 3.87504C53.3207 3.87504 48.378 6.04584 44.063 9.55049L50.5748 9.6028H54.0007C57.1651 9.6028 59.3618 9.78588 60.7479 10.0474C62.6831 10.492 63.9907 11.2767 64.8799 12.2967C65.6644 13.4213 65.8475 14.729 65.2198 16.2198C64.8276 17.266 64.1999 18.1814 63.3892 18.9137C62.3431 19.8291 61.1663 20.5876 59.8849 21.1629C61.7155 21.9476 62.8662 22.8107 63.4938 23.9353C64.0169 25.0599 64.0169 26.3676 63.4938 27.8584C62.9708 29.3492 62.0032 30.6308 60.5125 31.86C59.1003 33.0631 57.4527 33.9785 55.6744 34.5539C53.9222 35.1554 51.5424 35.417 48.8226 35.417H44.586C44.4552 35.4693 44.2983 35.4954 44.1414 35.4954L39.068 35.4431L39.0418 35.4954V35.4431L37.1066 35.417C36.3743 35.417 35.799 34.8416 35.799 34.1093C35.799 33.3769 36.3743 32.8016 37.1066 32.8016L40.0094 32.8277L47.5673 12.1398L41.2124 12.0874H41.1863C38.8587 14.4675 36.9235 17.1614 35.4067 20.1168L39.3033 20.1691C40.0094 20.1691 40.6109 20.7183 40.6109 21.4506V21.4768C40.5848 22.183 40.0094 22.7583 39.3033 22.7845L34.2299 22.7322C33.4453 24.7199 32.9484 26.8384 32.7915 28.9569H28.2411C28.5549 25.9492 29.3918 22.9937 30.6994 20.2476C35.6944 9.36742 46.6782 1.18116 56.0667 1.18116C56.5897 1.15501 57.1128 1.20731 57.6358 1.25962C61.1401 1.59963 63.9646 3.16888 65.7952 5.86276C65.9259 6.04584 66.0044 6.1243 65.9259 6.30738ZM58.6296 16.926C58.8911 16.1413 58.8126 15.4352 58.185 15.0167C57.6619 14.5721 56.6159 14.3106 55.0991 14.3106H52.0131L49.9995 19.8029H52.7977C54.3668 19.8029 55.7006 19.5414 56.6682 19.0183C57.5835 18.5737 58.2634 17.8414 58.6296 16.926ZM45.9982 30.7615H49.0841C51.8039 30.7615 53.7392 30.5 54.8898 29.9769C55.9098 29.5323 56.7205 28.7215 57.1651 27.7276C57.6096 26.603 57.3481 25.7138 56.459 25.1122C55.5698 24.5107 53.8176 24.1445 51.2809 24.1445H48.4826L45.9982 30.7615ZM46.5212 1.78271C42.3892 2.30579 37.9173 4.55505 34.0468 8.05971C32.5561 9.39357 31.2224 10.8321 30.0194 12.4013H25.8874C31.2485 5.18275 39.1464 0.291919 46.4166 0.553461C46.7566 0.553461 47.0181 0.815002 47.0181 1.12885V1.15501C47.0704 1.49501 46.8351 1.75655 46.5212 1.78271ZM21.4939 11.3551C19.2187 14.3106 17.3619 17.7106 16.3943 21.2676C15.0867 25.8707 15.0867 30.3954 16.3158 34.24C16.9435 36.2801 18.0157 38.1632 19.4802 39.7324C19.7417 39.994 19.7417 40.4124 19.4802 40.7001C19.3494 40.857 19.1664 40.9616 18.9572 40.9616C18.8003 40.9878 18.6433 40.9355 18.5126 40.8832C16.5512 39.5232 14.9821 37.6924 13.9622 35.5477C13.9098 35.5477 13.8314 35.5739 13.7791 35.5739L8.23489 35.4954C7.50264 35.4954 6.9273 34.92 6.9273 34.1877C6.9273 33.4554 7.50264 32.88 8.23489 32.88L12.9422 32.9585C11.8439 29.2707 11.8962 24.9553 13.2561 20.5352C14.1452 17.5798 15.5051 14.8075 17.3096 12.2967L15.7928 12.2705C15.0605 12.2705 14.4852 11.6951 14.4852 10.9628C14.4852 10.2305 15.0605 9.65511 15.7928 9.65511L19.1402 9.73357C19.2187 9.73357 19.3233 9.73357 19.4017 9.75973C21.9908 6.90892 25.2075 4.68582 28.7903 3.29965C29.1564 3.11657 29.5748 3.2735 29.7579 3.63965V3.66581C29.8363 4.03196 29.784 4.39812 29.5748 4.71197C26.5935 6.1243 23.7691 8.47818 21.4939 11.3551ZM9.28097 21.9737L2.27226 22.0522C1.46156 22.0783 0.755456 21.4506 0.729304 20.6399C0.703152 19.8291 1.3308 19.1229 2.1415 19.0968C2.19381 19.0968 2.21996 19.0968 2.27226 19.0968L9.20251 19.0183C10.0394 19.0183 10.7193 19.6722 10.7716 20.5091C10.7455 21.2937 10.0917 21.9476 9.28097 21.9737ZM20.9709 22.4968C21.2324 21.6337 21.4939 20.666 21.8339 19.8029C22.4354 18.1291 23.2199 16.5075 24.2137 15.0167H28.2411C27.1689 16.8214 26.2274 18.7306 25.4428 20.666C25.2598 21.2676 24.9982 21.8691 24.8152 22.4968H20.9709ZM24.0306 25.0076C23.3507 27.9892 23.3245 31.0754 23.9522 34.057C24.8413 37.7185 26.7504 40.4124 29.5748 41.9817C29.8363 42.1647 29.941 42.4786 29.8363 42.7663C29.7317 42.9755 29.5487 43.1063 29.3133 43.1063H29.1302C25.809 42.2171 23.0107 39.9155 21.4939 36.8293C19.8202 33.5339 19.4802 29.3492 20.2648 24.9815L24.0306 25.0076ZM33.0007 31.5461C33.1315 33.22 33.6022 34.8677 34.4129 36.3324C35.9036 38.9478 38.4403 40.517 41.7093 40.857C42.1539 40.9355 42.5723 40.9617 43.0169 40.9355C45.3967 40.9355 47.9334 40.334 50.5748 39.1047C50.8363 39.0001 51.1501 39.1047 51.2809 39.3663C51.4378 39.5755 51.3855 39.8632 51.1763 40.0201C51.1501 40.0463 51.124 40.0463 51.0978 40.0724C47.4104 42.1647 43.723 43.2894 40.2971 43.2894C39.7741 43.3155 39.251 43.2632 38.728 43.2109C34.8575 42.7663 31.8762 40.9616 30.0456 37.8231C28.9472 35.9139 28.3718 33.7431 28.3718 31.5461H33.0007Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite5/LogoBitoproWhite5.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M125.736 32.2526C121.394 32.2526 118.465 29.5325 118.465 25.4786C118.465 19.777 122.597 15.1216 128.717 15.1216C133.32 15.1216 135.987 18.1293 135.987 21.8432C135.987 27.8587 131.698 32.2526 125.736 32.2526ZM128.063 18.7832C125.16 18.7832 123.67 22.8371 123.722 25.374C123.722 27.2833 124.716 28.5648 126.468 28.5648C129.24 28.5648 130.783 24.7202 130.783 21.8955C130.757 20.3786 130.077 18.7832 128.063 18.7832ZM118.439 19.1493H114.778L113.627 24.7202C113.47 25.4002 113.366 26.1063 113.34 26.7863C113.34 27.5971 113.68 28.1725 114.778 28.1725C115.249 28.1725 115.719 28.1725 116.19 28.0941L115.589 31.8864C114.961 32.1218 113.706 32.2526 112.607 32.2526C109.6 32.2526 108.162 30.7356 108.162 28.6956C108.188 27.6756 108.292 26.6556 108.528 25.6617L111.221 12.4277L116.426 11.0677L115.536 15.5139H119.198L118.439 19.1493ZM104.71 13.4477H104.683C103.323 13.4477 102.251 12.5323 102.251 11.0938C102.277 9.44613 103.611 8.34766 105.154 8.34766C106.619 8.34766 107.691 9.2892 107.691 10.7277C107.691 12.4539 106.331 13.4739 104.71 13.4477ZM103.35 31.8864H98.3023L101.571 15.5139H106.619L103.35 31.8864ZM93.3858 19.934C95.661 20.614 97.0993 22.3924 97.0993 24.8509C97.0993 27.2571 95.7394 29.0356 93.8565 30.2125C91.8689 31.4941 88.8876 32.0433 84.9387 32.0433C82.9512 32.0695 80.9375 31.9387 78.9761 31.5987L83.3173 9.65536C85.3571 9.31536 87.4493 9.13228 89.5414 9.13228C91.9997 9.13228 93.8303 9.41997 95.3995 10.3354C96.9686 11.0938 98.1454 12.5585 98.1454 14.4677C98.1454 17.3185 95.9225 19.1232 93.3858 19.8293V19.934ZM84.5987 28.1725C85.2525 28.251 85.8802 28.2771 86.534 28.2771C89.2799 28.2771 91.7643 27.231 91.7643 24.7202C91.7643 22.4709 89.803 21.8171 87.4493 21.8171H85.8802L84.5987 28.1725ZM89.6722 12.8985C89.0184 12.8723 88.3646 12.9246 87.7108 13.0554L86.6647 18.2862H88.3384C91.1105 18.2862 93.0196 17.1355 93.0196 15.2262C92.9935 13.6046 91.6074 12.8985 89.6722 12.8985Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite5/LogoBitoproWhite5.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M171.083 32.1217C166.768 32.1217 164.1 29.2709 164.1 25.4001C164.1 19.8815 168.128 15.0692 173.959 15.0692C178.562 15.0692 180.968 18.2077 180.968 21.8431C180.968 27.3878 176.888 32.1217 171.083 32.1217ZM173.463 18.1031C170.194 18.1031 168.311 22.2616 168.311 25.2955C168.311 27.5447 169.566 29.114 171.632 29.114C174.692 29.114 176.732 25.0862 176.732 21.8431C176.732 20.1693 175.947 18.1031 173.463 18.1031ZM164.205 18.9138C161.302 18.9138 159.445 21.7385 158.765 25.217L157.458 31.7817H153.378C153.378 31.7817 156.045 16.9523 156.255 15.4615H160.073C159.837 16.56 159.576 17.7108 159.393 18.9138H159.497C160.648 16.6907 162.505 15.0953 164.859 15.0953C165.146 15.0953 165.434 15.1215 165.722 15.1738L164.911 18.9923C164.702 18.94 164.44 18.9138 164.205 18.9138ZM144.696 23.3862C143.963 23.3601 143.205 23.3077 142.473 23.2293L140.799 31.7817H136.771L141.191 9.57681C143.074 9.21065 144.983 9.02757 146.918 9.05373C149.089 9.05373 151.443 9.49835 152.96 10.6491C154.372 11.6691 155.13 13.1338 155.13 15.1477C155.13 17.5538 154.006 19.8031 152.123 21.2677C150.187 22.68 147.494 23.3862 144.696 23.3862ZM146.892 12.1661C146.134 12.1399 145.375 12.2184 144.643 12.3753L143.1 20.0123C143.806 20.1431 144.512 20.2216 145.245 20.2216C148.723 20.2216 150.998 18.1031 150.998 15.4353C150.998 13.0292 149.22 12.1661 146.892 12.1661Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite5/LogoBitoproWhite5.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite5/LogoBitoproWhite5.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite5/LogoBitoproWhite5.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite5;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite5");

  $parcel$ReactRefreshHelpers$b9de.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"ejNmI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite31", ()=>(0, _logoToriiiWhite31.LogoToriiiWhite31));
var _logoToriiiWhite31 = require("./LogoToriiiWhite31");

},{"./LogoToriiiWhite31":"EPoVl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"EPoVl":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$34df = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$34df.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite31", ()=>LogoToriiiWhite31);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite31 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-3-1 ${className}`,
        fill: "none",
        height: "626",
        viewBox: "0 0 722 626",
        width: "722",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path-3",
            d: "M360.615 304.876C350.385 304.876 340.258 304.407 330.266 303.483L333.744 277.545C342.595 278.328 351.56 278.728 360.615 278.728C369.671 278.728 378.636 278.328 387.488 277.545L390.966 303.483C380.973 304.407 370.847 304.876 360.615 304.876ZM705.285 160.364C702.811 152.284 700.062 144.328 697.049 136.503C693.238 126.608 692.056 115.906 693.54 105.406C693.956 102.459 694.334 99.5003 694.675 96.5307C694.684 96.4521 694.693 96.3735 694.702 96.2949C696.306 82.0595 692.816 67.7265 685.012 55.7153C683.526 53.4274 682.017 51.1572 680.483 48.9032C679.294 54.2379 677.97 59.5239 676.522 64.7542C674.843 70.8019 673.002 76.7803 670.987 82.6897C664.499 101.766 656.298 120.06 646.564 137.373C646.522 137.446 646.481 137.518 646.441 137.591C638.887 151.03 637.092 166.935 641.517 181.703C645.924 196.406 649.207 211.594 651.265 227.173C652.952 239.88 653.827 252.838 653.827 266.007V266.077C653.827 363.963 605.898 450.648 532.236 503.925L526.596 478.154L506.561 386.66L501.487 363.459C530.35 350.121 556.999 332.809 580.737 312.227C617.644 280.227 631.817 229.157 616.698 182.698C616.618 182.453 616.538 182.207 616.458 181.962C581.607 225.445 535.897 259.854 483.446 281.073L477.763 255.127C529.045 233.489 573.091 198.071 605.274 153.51C610.704 145.992 615.8 138.214 620.53 130.198C624.617 123.288 628.431 116.189 631.958 108.936C640.418 91.566 647.256 73.274 652.281 54.2311C652.762 52.4177 653.524 49.0333 654.37 45.0607C657.729 29.2978 653.211 12.8532 642.165 1.12256L641.986 0.934112C640.692 5.37158 639.293 9.76162 637.781 14.1015C636.045 19.1353 634.17 24.1136 632.168 29.0146C625.681 44.9062 617.836 60.1053 608.781 74.4573C604.974 80.4981 600.95 86.3926 596.723 92.1271C591.797 98.8132 586.59 105.274 581.125 111.505C527.387 172.805 448.519 211.498 360.615 211.498C272.713 211.498 193.845 172.805 140.114 111.505C134.649 105.274 129.442 98.8132 124.515 92.1271C120.289 86.3926 116.257 80.4981 112.45 74.4491C103.394 60.0985 95.55 44.8995 89.0699 29.0065C87.062 24.1068 85.1937 19.1353 83.4568 14.1015C81.9462 9.76162 80.5467 5.37158 79.2515 0.934112C79.1919 0.996459 79.1322 1.06021 79.074 1.12256C68.0268 12.8532 63.5098 29.2979 66.8698 45.0594C67.7152 49.0293 68.4766 52.4109 68.9575 54.2244C73.9758 73.2659 80.819 91.566 89.2799 108.936C92.8065 116.189 96.6203 123.288 100.708 130.198C105.439 138.214 110.526 145.992 115.956 153.51C148.14 198.071 192.187 233.489 243.468 255.127L237.786 281.073C185.335 259.854 139.632 225.445 104.78 181.962C104.7 182.207 104.619 182.453 104.539 182.699C89.4208 229.159 103.592 280.23 140.5 312.23C164.237 332.811 190.886 350.121 219.745 363.459L214.671 386.66L194.636 478.154L188.995 503.918C115.333 450.641 67.4117 363.963 67.4117 266.077V266.022C67.4117 252.853 68.2856 239.88 69.9723 227.173C72.0316 211.593 75.3157 196.403 79.7216 181.699C84.1465 166.938 82.354 151.041 74.809 137.605C74.7643 137.525 74.7196 137.446 74.6749 137.366C64.9405 120.053 56.7384 101.76 50.2448 82.6829C48.2369 76.7803 46.3889 70.8019 44.7157 64.7542C43.2674 59.5239 41.9451 54.2379 40.7556 48.9032C39.2219 51.1558 37.7127 53.4261 36.2264 55.7139C28.4227 67.7265 24.9313 82.0622 26.5381 96.2976C26.5462 96.3708 26.5544 96.444 26.5638 96.5158C26.9039 99.4854 27.2819 102.444 27.6978 105.391C29.1814 115.892 28 126.595 24.1875 136.492C21.1703 144.321 18.4214 152.282 15.9475 160.364C5.71585 193.793 0.208496 229.294 0.208496 266.077C0.208496 457.425 149.204 613.957 337.459 625.901L341.693 579.114L343.519 558.903C327.592 557.993 312.007 555.808 296.863 552.44L300.062 528.582L315.339 414.72L318.432 391.694C332.252 393.43 346.333 394.319 360.615 394.319C374.906 394.319 388.985 393.43 402.807 391.694L405.893 414.72L421.177 528.582L424.375 552.44C409.232 555.801 393.646 557.993 377.719 558.903L379.546 579.114L383.779 625.901C572.034 613.951 721.022 457.418 721.022 266.077C721.022 229.294 715.515 193.793 705.285 160.364Z",
            fill: "white"
        }, void 0, false, {
            fileName: "src/icons/LogoToriiiWhite31/LogoToriiiWhite31.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoToriiiWhite31/LogoToriiiWhite31.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite31;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite31");

  $parcel$ReactRefreshHelpers$34df.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"c2myZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite33", ()=>(0, _logoToriiiWhite33.LogoToriiiWhite33));
var _logoToriiiWhite33 = require("./LogoToriiiWhite33");

},{"./LogoToriiiWhite33":"kOFwj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kOFwj":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f36c = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f36c.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite33", ()=>LogoToriiiWhite33);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite33 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-3-3 ${className}`,
        fill: "none",
        height: "864",
        viewBox: "0 0 997 864",
        width: "997",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path-3",
            d: "M498.541 420.251C484.416 420.251 470.434 419.604 456.639 418.327L461.441 382.516C473.661 383.598 486.038 384.15 498.541 384.15C511.044 384.15 523.421 383.598 535.643 382.516L540.445 418.327C526.648 419.604 512.667 420.251 498.541 420.251ZM974.41 220.73C970.994 209.574 967.199 198.589 963.039 187.786C957.777 174.124 956.146 159.348 958.194 144.852C958.768 140.783 959.29 136.698 959.761 132.598C959.775 132.49 959.786 132.381 959.799 132.273C962.014 112.619 957.195 92.8297 946.421 76.2464C944.369 73.0876 942.285 69.9532 940.168 66.8413C938.525 74.2067 936.698 81.5047 934.698 88.726C932.38 97.0757 929.838 105.33 927.057 113.489C918.099 139.827 906.777 165.084 893.337 188.988C893.279 189.089 893.223 189.188 893.167 189.289C882.738 207.843 880.26 229.802 886.369 250.192C892.454 270.492 896.986 291.461 899.828 312.97C902.156 330.513 903.365 348.405 903.365 366.586V366.683C903.365 501.83 837.191 621.512 735.489 695.068L727.702 659.488L700.041 533.166L693.036 501.134C732.886 482.718 769.679 458.816 802.453 430.401C853.408 386.22 872.976 315.71 852.103 251.566C851.992 251.227 851.882 250.888 851.771 250.549C803.654 310.584 740.544 358.091 668.128 387.387L660.281 351.565C731.084 321.69 791.896 272.79 836.33 211.267C843.827 200.887 850.862 190.148 857.392 179.081C863.036 169.541 868.301 159.74 873.171 149.726C884.852 125.744 894.293 100.489 901.23 74.1973C901.894 71.6935 902.946 67.0208 904.115 61.5361C908.752 39.773 902.514 17.0687 887.263 0.872714L887.016 0.612538C885.23 6.73914 883.298 12.8003 881.21 18.7921C878.814 25.7421 876.225 32.6154 873.46 39.3819C864.504 61.3228 853.674 82.3075 841.171 102.123C835.915 110.463 830.359 118.601 824.523 126.519C817.722 135.75 810.534 144.67 802.988 153.272C728.795 237.907 619.905 291.329 498.541 291.329C377.178 291.329 268.289 237.907 194.105 153.272C186.559 144.67 179.371 135.75 172.568 126.519C166.733 118.601 161.167 110.463 155.911 102.111C143.408 82.2981 132.577 61.3135 123.631 39.3708C120.858 32.6061 118.279 25.7421 115.881 18.7921C113.795 12.8003 111.863 6.73914 110.075 0.612538C109.993 0.698617 109.91 0.786635 109.83 0.872714C94.5774 17.0687 88.341 39.7731 92.98 61.5343C94.1472 67.0153 95.1984 71.6841 95.8625 74.1879C102.791 100.478 112.239 125.744 123.921 149.726C128.79 159.74 134.055 169.541 139.699 179.081C146.23 190.148 153.254 200.887 160.751 211.267C205.186 272.79 265.999 321.69 336.801 351.565L328.956 387.387C256.54 358.091 193.439 310.584 145.321 250.549C145.211 250.888 145.099 251.227 144.988 251.567C124.115 315.711 143.681 386.223 194.638 430.405C227.41 458.82 264.204 482.718 304.048 501.134L297.043 533.166L269.381 659.488L261.592 695.059C159.891 621.502 93.7282 501.83 93.7282 366.683V366.607C93.7282 348.425 94.9347 330.513 97.2635 312.97C100.107 291.46 104.641 270.488 110.724 250.186C116.833 229.806 114.358 207.858 103.941 189.308C103.88 189.197 103.818 189.089 103.756 188.978C90.3163 165.075 78.9921 139.818 70.0266 113.479C67.2545 105.33 64.703 97.0757 62.3929 88.726C60.3933 81.5047 58.5677 74.2067 56.9253 66.8413C54.8079 69.9513 52.7241 73.0857 50.6721 76.2445C39.8978 92.8297 35.0775 112.622 37.2959 132.276C37.3071 132.377 37.3183 132.479 37.3314 132.578C37.8009 136.678 38.3228 140.763 38.8971 144.831C40.9453 159.33 39.3142 174.107 34.0505 187.771C29.8848 198.58 26.0895 209.572 22.6739 220.73C8.5476 266.884 0.943848 315.899 0.943848 366.683C0.943848 630.868 206.654 846.985 466.57 863.475L472.415 798.878L474.937 770.974C452.946 769.718 431.43 766.701 410.521 762.051L414.937 729.111L436.029 571.908L440.3 540.116C459.381 542.514 478.822 543.741 498.541 543.741C518.271 543.741 537.71 542.514 556.793 540.116L561.054 571.908L582.156 729.111L586.57 762.051C565.663 766.692 544.145 769.718 522.155 770.974L524.678 798.878L530.521 863.475C790.437 846.976 996.138 630.859 996.138 366.683C996.138 315.899 988.534 266.884 974.41 220.73Z",
            fill: "white"
        }, void 0, false, {
            fileName: "src/icons/LogoToriiiWhite33/LogoToriiiWhite33.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoToriiiWhite33/LogoToriiiWhite33.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite33;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite33");

  $parcel$ReactRefreshHelpers$f36c.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8CODF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite48", ()=>(0, _logoToriiiWhite48.LogoToriiiWhite48));
var _logoToriiiWhite48 = require("./LogoToriiiWhite48");

},{"./LogoToriiiWhite48":"b3m4m","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b3m4m":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$31b3 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$31b3.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite48", ()=>LogoToriiiWhite48);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite48 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-4-8 ${className}`,
        fill: "none",
        height: "50",
        viewBox: "0 0 236 50",
        width: "236",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M23.6524 28.4264C22.981 28.4264 22.3164 28.3957 21.6606 28.335L21.8889 26.6335C22.4697 26.6849 23.0581 26.7111 23.6524 26.7111C24.2467 26.7111 24.835 26.6849 25.4159 26.6335L25.6442 28.335C24.9884 28.3957 24.3238 28.4264 23.6524 28.4264ZM46.2719 18.9464C46.1096 18.4163 45.9292 17.8944 45.7314 17.3811C45.4813 16.7319 45.4038 16.0299 45.5011 15.3411C45.5284 15.1478 45.5532 14.9537 45.5756 14.7589C45.5763 14.7537 45.5768 14.7486 45.5774 14.7434C45.6827 13.8096 45.4537 12.8693 44.9415 12.0814C44.844 11.9313 44.7449 11.7823 44.6443 11.6345C44.5662 11.9844 44.4794 12.3312 44.3843 12.6743C44.2741 13.071 44.1533 13.4632 44.0211 13.8509C43.5953 15.1023 43.0571 16.3024 42.4183 17.4382C42.4155 17.443 42.4128 17.4477 42.4102 17.4525C41.9145 18.334 41.7967 19.3774 42.0871 20.3462C42.3763 21.3108 42.5917 22.3071 42.7268 23.3291C42.8375 24.1626 42.8949 25.0127 42.8949 25.8766V25.8812C42.8949 32.3026 39.7495 37.9892 34.9153 41.4841L34.5451 39.7936L33.2303 33.7915L32.8973 32.2695C34.7915 31.3945 36.5404 30.2588 38.0983 28.9087C40.5203 26.8095 41.4505 23.4592 40.4583 20.4115C40.453 20.3954 40.4478 20.3793 40.4425 20.3632C38.1554 23.2157 35.1555 25.4729 31.7134 26.865L31.3404 25.1629C34.7059 23.7434 37.5964 21.4199 39.7086 18.4968C40.0649 18.0036 40.3993 17.4933 40.7097 16.9675C40.978 16.5142 41.2283 16.0485 41.4597 15.5727C42.015 14.4332 42.4637 13.2332 42.7935 11.984C42.825 11.865 42.875 11.643 42.9306 11.3824C43.151 10.3484 42.8545 9.26958 42.1296 8.50004L42.1178 8.48768C42.0329 8.77878 41.9411 9.06677 41.8418 9.35147C41.728 9.68169 41.6049 10.0083 41.4735 10.3298C41.0478 11.3723 40.533 12.3693 39.9387 13.3108C39.6888 13.7071 39.4248 14.0938 39.1474 14.47C38.8241 14.9086 38.4824 15.3324 38.1237 15.7412C34.5971 19.7625 29.4212 22.3008 23.6524 22.3008C17.8836 22.3008 12.7078 19.7625 9.18156 15.7412C8.82289 15.3324 8.4812 14.9086 8.15783 14.47C7.88051 14.0938 7.6159 13.7071 7.36606 13.3103C6.77177 12.3689 6.25696 11.3718 5.83169 10.3292C5.69992 10.0078 5.57731 9.68169 5.46333 9.35147C5.36419 9.06677 5.27234 8.77878 5.18734 8.48768C5.18343 8.49177 5.17952 8.49595 5.17569 8.50004C4.4507 9.26958 4.15427 10.3484 4.37477 11.3823C4.43025 11.6427 4.48022 11.8646 4.51178 11.9836C4.84112 13.2327 5.29021 14.4332 5.84547 15.5727C6.07691 16.0485 6.3272 16.5142 6.59545 16.9675C6.90593 17.4933 7.2398 18.0036 7.59616 18.4968C9.70828 21.4199 12.5989 23.7434 15.9644 25.1629L15.5915 26.865C12.1493 25.4729 9.14991 23.2157 6.86272 20.3632C6.85748 20.3793 6.85214 20.3954 6.8469 20.4116C5.85472 23.4593 6.78475 26.8096 9.20691 28.9089C10.7647 30.259 12.5136 31.3945 14.4075 32.2695L14.0745 33.7915L12.7597 39.7936L12.3894 41.4837C7.55526 37.9887 4.41034 32.3026 4.41034 25.8812V25.8776C4.41034 25.0137 4.46768 24.1626 4.57838 23.3291C4.71353 22.307 4.92905 21.3106 5.2182 20.346C5.50858 19.3776 5.39095 18.3348 4.8958 17.4534C4.89286 17.4481 4.88993 17.443 4.887 17.4377C4.24816 16.3019 3.70988 15.1019 3.28372 13.8504C3.15195 13.4632 3.03068 13.071 2.92087 12.6743C2.82582 12.3312 2.73904 11.9844 2.66098 11.6345C2.56033 11.7823 2.46128 11.9312 2.36374 12.0813C1.85161 12.8693 1.62248 13.8097 1.72793 14.7436C1.72846 14.7484 1.729 14.7532 1.72962 14.7579C1.75194 14.9527 1.77674 15.1468 1.80404 15.3401C1.9014 16.029 1.82387 16.7311 1.57367 17.3804C1.37566 17.8939 1.19525 18.4162 1.0329 18.9464C0.36143 21.1393 0 23.4682 0 25.8812C0 38.4337 9.77808 48.7023 22.1327 49.4858L22.4105 46.4166L22.5304 45.0907C21.4851 45.0311 20.4624 44.8877 19.4685 44.6668L19.6784 43.1016L20.681 35.6323L20.884 34.1217C21.791 34.2356 22.715 34.294 23.6524 34.294C24.5902 34.294 25.5142 34.2356 26.4213 34.1217L26.6238 35.6323L27.6268 43.1016L27.8367 44.6668C26.8429 44.8873 25.8201 45.0311 24.7748 45.0907L24.8947 46.4166L25.1725 49.4858C37.5271 48.7019 47.3047 38.4333 47.3047 25.8812C47.3047 23.4682 46.9433 21.1393 46.2719 18.9464Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M40.7652 7.15549C40.6963 7.44668 40.6197 7.73512 40.5356 8.02026C40.4387 8.35048 40.3326 8.67661 40.2169 8.99803C39.843 10.0415 39.3732 11.0395 38.8179 11.981C38.5842 12.3778 38.3352 12.764 38.0717 13.1397C37.7644 13.5787 37.4374 14.0031 37.0921 14.4118C37.0014 14.3054 36.9094 14.2001 36.8162 14.0959C36.3441 13.5683 36.3014 12.7861 36.708 12.2065C36.7732 12.1137 36.8374 12.0201 36.9005 11.9258C36.9031 11.922 36.9056 11.9183 36.9082 11.9145C37.3435 11.2653 37.2104 10.3888 36.6034 9.89632C33.7772 7.60335 30.331 6.04524 26.5552 5.5123V20.413C25.611 20.5696 24.6411 20.6514 23.6523 20.6514C22.6635 20.6514 21.6935 20.5696 20.7493 20.413V5.5123C16.974 6.04524 13.5278 7.60335 10.7016 9.89632C10.0945 10.3888 9.96142 11.2654 10.3969 11.9145C10.3994 11.9184 10.4019 11.9221 10.4045 11.9258C10.4676 12.0201 10.5317 12.1136 10.5968 12.2064C11.0035 12.7862 10.9604 13.5684 10.4881 14.096C10.395 14.2 10.3031 14.3051 10.2124 14.4114C9.86753 14.0031 9.5406 13.5787 9.23332 13.1397C8.96969 12.764 8.72074 12.3772 8.48698 11.9805C7.93172 11.039 7.462 10.0411 7.08812 8.99759C6.97236 8.67608 6.86584 8.35004 6.76937 8.01981C6.68535 7.73467 6.60861 7.44624 6.53979 7.15505C7.00179 6.73209 7.47987 6.32656 7.97218 5.9389C12.2878 2.54084 17.7333 0.513631 23.6523 0.513631C29.5716 0.513631 35.0171 2.54084 39.3328 5.93935C39.8256 6.32701 40.3032 6.73254 40.7652 7.15549Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 24,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M63.97 42.8975L63.9863 48.6552L61.3746 48.6626L61.3583 42.9049L56.4219 42.9185C56.5733 42.765 56.7163 42.6167 56.8509 42.4737C56.9856 42.3301 57.1275 42.205 57.2753 42.0982C57.4236 41.9915 57.5845 41.9058 57.7596 41.8422C57.9336 41.7785 58.1397 41.7465 58.3774 41.7459L58.6645 41.7449H58.7928L63.9569 41.7302L68.8933 41.7165C68.7419 41.8695 68.5988 42.0183 68.4642 42.1613C68.3296 42.3049 68.1882 42.43 68.0399 42.5368C67.8916 42.6435 67.7302 42.7292 67.5556 42.7929C67.381 42.8565 67.1754 42.8886 66.9378 42.8891L63.97 42.8975Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 30,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M72.1215 42.8648L72.1294 45.6348C72.274 45.4892 72.4086 45.3519 72.5337 45.2231C72.6584 45.0943 72.7919 44.9817 72.9334 44.8855C73.0748 44.7898 73.2299 44.713 73.3977 44.6568C73.5659 44.6005 73.7652 44.5716 73.9961 44.5711L79.0313 44.5569L79.0345 45.7242L72.1294 45.7437L72.1341 47.4552L78.5349 47.4368C78.7726 47.4363 78.9787 47.4683 79.1533 47.5335C79.3284 47.5982 79.4904 47.6845 79.6392 47.7917C79.7874 47.8995 79.9278 48.0231 80.0603 48.1635C80.1929 48.3039 80.3348 48.449 80.4873 48.5989L69.526 48.6299L69.5066 41.7048L80.4679 41.6738C80.3164 41.8263 80.1734 41.9735 80.0388 42.1155C79.9037 42.2575 79.7622 42.3831 79.6145 42.4925C79.4662 42.6019 79.3047 42.6897 79.1302 42.7559C78.9556 42.8227 78.7495 42.8558 78.5123 42.8569L72.1215 42.8648Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 36,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M91.7153 41.6227L91.1333 42.2079C90.7584 42.585 90.3004 42.7743 89.7598 42.7758L86.7227 42.7842L85.1894 42.7884L85.0905 42.789C84.8991 42.7895 84.7177 42.8331 84.5468 42.9189C84.3554 42.9988 84.1793 43.1097 84.0184 43.2517C83.857 43.3942 83.7176 43.5609 83.5993 43.7528C83.481 43.9442 83.3895 44.1556 83.3243 44.3864C83.2586 44.6178 83.2265 44.8586 83.227 45.1089C83.2281 45.3597 83.2617 45.6005 83.328 45.8309C83.3948 46.0617 83.4878 46.2725 83.6067 46.4634C83.726 46.6543 83.8664 46.8204 84.0289 46.9619C84.1908 47.1033 84.3675 47.2132 84.5589 47.2916C84.7303 47.3768 84.9123 47.4194 85.1037 47.4188L89.773 47.4057C90.3135 47.4041 90.7725 47.5908 91.1496 47.9657L91.7348 48.5478L84.0878 48.5693C83.613 48.5704 83.1655 48.481 82.7464 48.3006C82.3273 48.1208 81.9603 47.8742 81.6464 47.5619C81.332 47.2495 81.0838 46.8841 80.9013 46.466C80.7188 46.0475 80.6268 45.6011 80.6253 45.1262C80.6242 44.6514 80.7136 44.2045 80.8939 43.7849C81.0738 43.3658 81.3204 42.9988 81.6327 42.6849C81.9451 42.3709 82.31 42.1222 82.7285 41.9398C83.1471 41.7573 83.5935 41.6653 84.0683 41.6637L91.7153 41.6227Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 42,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M95.3163 41.632L95.3274 45.5694L95.8206 45.0735C96.1955 44.6965 96.6535 44.5072 97.194 44.5056L100.835 44.4951L100.826 41.6163L103.438 41.6094L103.458 48.534L100.846 48.5413L100.838 45.6624L95.3179 45.6782L95.3258 48.5571L92.714 48.5645L92.6946 41.6394L95.3063 41.632H95.3163Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 48,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M106.723 41.6104C107.066 41.6093 107.369 41.6498 107.634 41.7313C107.897 41.8133 108.142 41.9248 108.367 42.0657C108.591 42.2072 108.807 42.3696 109.016 42.5537C109.224 42.7377 109.444 42.9317 109.675 43.1352L113.444 46.4784L113.43 41.5914L114.706 41.5877L114.726 48.5028L111.649 48.5118L105.698 43.018L105.713 48.5281L104.437 48.5317L104.418 41.6167L106.723 41.6104Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 54,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M127.963 43.6526C127.78 43.234 127.533 42.8691 127.218 42.5563C126.904 42.2444 126.537 41.9978 126.118 41.818C125.699 41.6376 125.252 41.5483 124.777 41.5493L119.148 41.5651C118.673 41.5667 118.226 41.6587 117.808 41.8411C117.39 42.0236 117.023 42.2723 116.707 42.5857C116.392 42.9001 116.144 43.2672 115.964 43.6862C115.783 44.1059 115.694 44.5528 115.695 45.0276C115.696 45.5024 115.788 45.9489 115.971 46.3669C116.153 46.7854 116.402 47.1509 116.716 47.4632C117.03 47.7756 117.397 48.0222 117.816 48.202C118.235 48.3824 118.683 48.4717 119.157 48.4707L121.468 48.4639L121.326 48.11C121.139 47.6436 120.686 47.3381 120.183 47.3397C119.992 47.3402 119.81 47.2981 119.638 47.2129C119.447 47.1341 119.27 47.0242 119.108 46.8827C118.946 46.7413 118.806 46.5751 118.687 46.3848C118.567 46.1934 118.474 45.983 118.408 45.7522C118.341 45.5214 118.308 45.2805 118.307 45.0302C118.306 44.7794 118.339 44.5391 118.404 44.3078C118.469 44.0769 118.561 43.8656 118.679 43.6736C118.797 43.4822 118.937 43.315 119.098 43.173C119.259 43.0305 119.435 42.9196 119.626 42.8397C119.797 42.754 119.979 42.7103 120.17 42.7098L123.771 42.6998C123.955 42.6993 124.134 42.7419 124.306 42.8271C124.497 42.9054 124.674 43.0158 124.836 43.1567C124.998 43.2982 125.138 43.4644 125.258 43.6552C125.377 43.8466 125.47 44.057 125.537 44.2878C125.603 44.5186 125.637 44.7589 125.637 45.0097C125.638 45.26 125.605 45.5009 125.541 45.7322C125.475 45.9631 125.383 46.1744 125.265 46.3658C125.147 46.5578 125.007 46.7244 124.846 46.8669C124.685 47.0089 124.509 47.1199 124.318 47.1998C124.146 47.286 123.969 47.3291 123.784 47.3297H123.758C123.258 47.3312 122.809 47.6357 122.623 48.1L122.477 48.4612L124.796 48.4544C125.271 48.4533 125.717 48.3613 126.136 48.1789C126.554 47.9964 126.92 47.7477 127.232 47.4338C127.544 47.1199 127.791 46.7528 127.971 46.3332C128.151 45.9147 128.24 45.4672 128.239 44.9924C128.238 44.5176 128.146 44.0711 127.963 43.6526Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 60,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M131.688 47.2974L137.861 47.2801C138.098 47.2796 138.305 47.3101 138.48 47.3726C138.655 47.4347 138.817 47.5183 138.965 47.6235C139.114 47.7286 139.256 47.8501 139.391 47.9884C139.527 48.1261 139.671 48.2713 139.823 48.4222L129.08 48.4521L129.06 41.5276L131.672 41.5202L131.688 47.2974Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 66,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M151.636 43.5862C151.454 43.1677 151.206 42.8022 150.891 42.4899C150.577 42.1775 150.21 41.9315 149.791 41.7511C149.372 41.5713 148.925 41.4814 148.45 41.4829L142.821 41.4987C142.346 41.5003 141.9 41.5918 141.481 41.7748C141.063 41.9572 140.696 42.2054 140.38 42.5193C140.065 42.8338 139.817 43.2008 139.637 43.6193C139.456 44.0395 139.367 44.4859 139.368 44.9612C139.369 45.4361 139.461 45.8825 139.644 46.3005C139.826 46.7191 140.075 47.0845 140.39 47.3968C140.703 47.7092 141.07 47.9558 141.49 48.1356C141.909 48.316 142.356 48.4054 142.83 48.4038L145.142 48.3975L145.001 48.0452C144.813 47.5777 144.36 47.2717 143.856 47.2733C143.665 47.2738 143.484 47.2317 143.312 47.146C143.12 47.0677 142.943 46.9578 142.782 46.8163C142.62 46.6749 142.479 46.5087 142.36 46.3179C142.24 46.127 142.147 45.9161 142.081 45.6853C142.014 45.455 141.981 45.2142 141.98 44.9633C141.979 44.713 142.012 44.4722 142.077 44.2414C142.142 44.01 142.234 43.7986 142.352 43.6072C142.47 43.4158 142.61 43.2486 142.771 43.1061C142.932 42.9642 143.109 42.8532 143.299 42.7733C143.471 42.6876 143.652 42.6439 143.843 42.6434L147.444 42.6334C147.629 42.6329 147.807 42.6755 147.979 42.7602C148.17 42.839 148.347 42.9489 148.509 43.0904C148.671 43.2318 148.812 43.398 148.931 43.5888C149.05 43.7797 149.143 43.99 149.21 44.2209C149.276 44.4517 149.31 44.6925 149.311 44.9428C149.311 45.1937 149.279 45.4345 149.214 45.6653C149.148 45.8961 149.057 46.1075 148.938 46.2995C148.821 46.4914 148.68 46.6581 148.519 46.8C148.358 46.9425 148.182 47.0535 147.991 47.1329C147.82 47.2196 147.642 47.2622 147.457 47.2633H147.431C146.93 47.2649 146.48 47.5698 146.293 48.0352L146.149 48.3948L148.469 48.388C148.944 48.387 149.391 48.2949 149.809 48.1125C150.228 47.93 150.593 47.6813 150.905 47.3669C151.217 47.053 151.464 46.6865 151.644 46.2669C151.824 45.8478 151.913 45.4003 151.912 44.926C151.911 44.4512 151.819 44.0048 151.636 43.5862Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 72,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M157.406 42.6053C157.169 42.6059 156.938 42.6658 156.714 42.7852C156.49 42.904 156.291 43.0675 156.117 43.2752C155.943 43.4829 155.803 43.7253 155.699 44.0019C155.594 44.2785 155.542 44.5751 155.543 44.8911C155.544 45.2003 155.594 45.4931 155.694 45.7692C155.793 46.0453 155.931 46.2898 156.106 46.5032C156.281 46.7167 156.49 46.8855 156.731 47.0101C156.972 47.1342 157.234 47.1958 157.518 47.1952L162.207 47.1821L162.202 45.4605L157.405 45.4742C157.555 45.3222 157.699 45.1766 157.834 45.0378C157.968 44.899 158.11 44.7764 158.258 44.6708C158.406 44.5645 158.567 44.4799 158.742 44.4168C158.916 44.3537 159.122 44.3216 159.36 44.3211L164.811 44.3058L164.822 48.342L162.211 48.3494L156.393 48.3657C155.919 48.3673 155.472 48.2779 155.053 48.0975C154.633 47.9172 154.266 47.6711 153.952 47.3588C153.638 47.0464 153.389 46.681 153.207 46.2624C153.024 45.8444 152.932 45.398 152.931 44.9232C152.93 44.4478 153.019 44.0009 153.2 43.5818C153.379 43.1627 153.626 42.7957 153.938 42.4812C154.251 42.1673 154.616 41.9191 155.035 41.7367C155.453 41.5537 155.899 41.4622 156.374 41.4606L164.793 41.437C164.641 41.5894 164.498 41.7361 164.364 41.8781C164.229 42.0206 164.087 42.1463 163.939 42.2557C163.791 42.365 163.63 42.4528 163.455 42.5191C163.281 42.5854 163.075 42.619 162.837 42.6195L157.406 42.6053Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 78,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M177.891 41.4199C177.141 42.1802 176.363 42.9395 175.558 43.6967C174.751 44.4544 173.974 45.2131 173.224 45.974L172.947 45.9745L172.954 48.3486L170.342 48.356L170.336 45.9819H170.316C169.979 45.9829 169.695 45.8583 169.464 45.6085L169.156 45.2831L165.327 41.4356L168.651 41.4362L172.024 44.8792L174.816 42.2396C175.408 41.6838 176.11 41.4051 176.921 41.403L177.891 41.4199Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 84,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M196.182 41.3288L195.6 41.914C195.225 42.291 194.767 42.4803 194.227 42.4819L191.19 42.4903L189.656 42.4945L189.558 42.495C189.366 42.4956 189.185 42.5392 189.014 42.6249C188.822 42.7048 188.646 42.8158 188.485 42.9578C188.324 43.1002 188.185 43.2669 188.066 43.4589C187.948 43.6503 187.857 43.8616 187.791 44.0925C187.726 44.3238 187.694 44.5647 187.694 44.815C187.695 45.0658 187.729 45.3066 187.795 45.5369C187.862 45.7677 187.955 45.9786 188.074 46.1695C188.193 46.3603 188.334 46.5265 188.496 46.6679C188.658 46.8094 188.835 46.9193 189.026 46.9976C189.198 47.0828 189.379 47.1254 189.571 47.1249L194.24 47.1117C194.781 47.1102 195.24 47.2968 195.617 47.6717L196.202 48.2538L188.555 48.2754C188.08 48.2764 187.633 48.187 187.213 48.0067C186.794 47.8269 186.427 47.5802 186.113 47.2679C185.799 46.9556 185.551 46.5901 185.368 46.1721C185.186 45.7535 185.094 45.3071 185.092 44.8323C185.091 44.3575 185.181 43.9105 185.361 43.4909C185.541 43.0719 185.787 42.7048 186.1 42.3909C186.412 42.077 186.777 41.8283 187.196 41.6458C187.614 41.4634 188.061 41.3714 188.535 41.3698L196.182 41.3288Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 90,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M208.341 43.4265C208.158 43.008 207.91 42.643 207.596 42.3302C207.282 42.0184 206.915 41.7718 206.496 41.5919C206.077 41.4116 205.63 41.3222 205.155 41.3232L199.526 41.339C199.051 41.3406 198.604 41.4326 198.186 41.6151C197.768 41.7975 197.401 42.0462 197.085 42.3596C196.77 42.6741 196.522 43.0411 196.342 43.4602C196.161 43.8798 196.072 44.3267 196.074 44.8015C196.075 45.2764 196.167 45.7228 196.349 46.1408C196.531 46.5594 196.78 46.9248 197.094 47.2371C197.408 47.5495 197.775 47.7961 198.194 47.9759C198.613 48.1563 199.061 48.2457 199.536 48.2446L201.853 48.2378L201.713 47.8902C201.525 47.4196 201.068 47.112 200.561 47.1136C200.37 47.1141 200.189 47.072 200.017 46.9869C199.825 46.908 199.649 46.7981 199.487 46.6566C199.324 46.5152 199.184 46.349 199.064 46.1587C198.945 45.9673 198.852 45.757 198.786 45.5256C198.719 45.2953 198.686 45.0545 198.685 44.8042C198.684 44.5534 198.716 44.3125 198.781 44.0817C198.847 43.8509 198.939 43.6395 199.057 43.4476C199.175 43.2562 199.315 43.0889 199.476 42.9464C199.637 42.8045 199.813 42.6935 200.004 42.6136C200.175 42.5279 200.357 42.4843 200.548 42.4837L204.149 42.4737C204.334 42.4732 204.511 42.5158 204.684 42.6005C204.875 42.6793 205.052 42.7892 205.214 42.9307C205.376 43.0721 205.516 43.2383 205.636 43.4292C205.755 43.62 205.848 43.8309 205.915 44.0617C205.981 44.2925 206.015 44.5328 206.015 44.7831C206.016 45.034 205.984 45.2748 205.918 45.5061C205.853 45.737 205.761 45.9484 205.643 46.1398C205.525 46.3317 205.385 46.4984 205.224 46.6409C205.063 46.7828 204.887 46.8938 204.696 46.9737C204.525 47.0599 204.347 47.1031 204.162 47.1036H204.136C203.632 47.1052 203.178 47.4122 202.991 47.8802L202.848 48.2352L205.174 48.2283C205.649 48.2273 206.096 48.1352 206.514 47.9528C206.932 47.7703 207.298 47.5216 207.61 47.2077C207.922 46.8938 208.168 46.5268 208.349 46.1072C208.529 45.6881 208.619 45.2411 208.617 44.7663C208.616 44.2915 208.524 43.8451 208.341 43.4265Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 96,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M217.024 44.2284C217.275 44.2211 217.484 44.1317 217.652 43.9597C217.819 43.7878 217.903 43.5764 217.902 43.3256C217.901 43.0816 217.813 42.8724 217.638 42.6983C217.463 42.5243 217.25 42.437 217 42.438L212.033 42.4517L212.049 48.2094L209.438 48.2168L209.418 41.2917L218.44 41.2665C218.896 41.2654 219.275 41.3664 219.579 41.5699C219.883 41.7734 220.111 42.0284 220.264 42.335C220.416 42.641 220.493 42.9723 220.494 43.3282C220.495 43.6842 220.42 44.016 220.27 44.3231C220.118 44.6302 219.892 44.8868 219.589 45.0918C219.286 45.2974 218.907 45.4005 218.452 45.4016L217.255 45.4052L220.666 48.1852L218.223 48.1921C218.011 48.1926 217.813 48.1831 217.629 48.1642C217.444 48.1448 217.269 48.109 217.104 48.0569C216.939 48.0044 216.778 47.9355 216.619 47.8503C216.461 47.7651 216.299 47.6536 216.133 47.5154L213.615 45.4252L212.259 45.4289L212.831 44.8189C212.995 44.6454 213.185 44.5171 213.399 44.433C213.613 44.3494 213.839 44.2942 214.076 44.2668C214.314 44.2395 214.556 44.229 214.803 44.2348C215.051 44.2405 215.293 44.2432 215.53 44.2426L217.014 44.2384L217.024 44.2284Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 102,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M228.935 44.2243C229.034 44.2237 229.135 44.2053 229.237 44.1685C229.339 44.1317 229.43 44.0797 229.509 44.0124C229.587 43.9456 229.653 43.8672 229.706 43.7773C229.758 43.6869 229.791 43.5886 229.804 43.4818C229.817 43.3214 229.803 43.1768 229.763 43.047C229.723 42.9171 229.664 42.8051 229.584 42.712C229.505 42.6189 229.409 42.5474 229.297 42.498C229.184 42.4481 229.062 42.4233 228.93 42.4239L223.964 42.4375L223.981 48.1953L221.369 48.2026L221.349 41.2776L230.351 41.2523C230.807 41.2513 231.186 41.3528 231.49 41.5557C231.794 41.7598 232.022 42.0142 232.175 42.3208C232.327 42.6268 232.404 42.9581 232.405 43.3141C232.406 43.6706 232.331 44.0019 232.18 44.3089C232.029 44.6165 231.803 44.8726 231.5 45.0777C231.197 45.2833 230.818 45.3863 230.363 45.3874L228.652 45.3926L224.18 45.4047C224.331 45.2475 224.471 45.0971 224.599 44.9525C224.728 44.8085 224.862 44.6838 225.004 44.5787C225.145 44.4735 225.305 44.3899 225.483 44.3273C225.661 44.2648 225.872 44.2327 226.116 44.2322L227.442 44.2185L227.125 44.2295L228.915 44.2243H228.935Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M233.388 48.1694L233.383 46.0425L235.994 46.0351L236 48.1621L233.388 48.1694Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 114,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M149.09 21.0467C149.095 22.8518 148.754 24.5518 148.07 26.1456C147.384 27.7399 146.448 29.1344 145.261 30.328C144.073 31.5226 142.684 32.467 141.093 33.1606C139.503 33.8552 137.806 34.2043 136.001 34.2096L127.003 34.2348L127.487 33.0286C128.236 31.163 130.042 29.9383 132.052 29.9325L132.153 29.932C132.854 29.931 133.531 29.7664 134.182 29.4383C134.908 29.1344 135.578 28.7137 136.191 28.1721C136.804 27.6321 137.335 26.9974 137.785 26.2686C138.233 25.5404 138.583 24.7374 138.83 23.8583C139.079 22.9812 139.202 22.0657 139.198 21.1119C139.196 20.1596 139.067 19.2452 138.815 18.3682C138.561 17.4916 138.208 16.6903 137.755 15.9641C137.301 15.238 136.767 14.607 136.152 14.0696C135.535 13.5317 134.864 13.1136 134.135 12.8144C133.482 12.4916 132.805 12.3296 132.104 12.3323L118.414 12.3712C117.686 12.3722 116.998 12.5384 116.347 12.8649C115.621 13.1678 114.951 13.5895 114.339 14.1311C113.726 14.6711 113.195 15.3058 112.745 16.034C112.297 16.7628 111.948 17.5658 111.699 18.4439C111.451 19.3231 111.328 20.2375 111.331 21.1913C111.334 22.1436 111.462 23.058 111.714 23.9345C111.968 24.8116 112.321 25.6129 112.774 26.3391C113.228 27.0652 113.762 27.6957 114.379 28.2336C114.994 28.771 115.665 29.1896 116.394 29.4872C117.047 29.8116 117.737 29.9736 118.464 29.9709C120.485 29.9651 122.306 31.1919 123.059 33.068L123.531 34.2432L114.565 34.2685C112.76 34.2748 111.06 33.9346 109.465 33.25C107.872 32.5653 106.477 31.6278 105.283 30.441C104.089 29.2537 103.145 27.8645 102.451 26.2739C101.757 24.6833 101.408 22.9865 101.403 21.1813C101.397 19.3756 101.737 17.6762 102.422 16.0819C103.108 14.4881 104.05 13.0937 105.251 11.9C106.45 10.7054 107.845 9.76205 109.435 9.06744C111.026 8.37389 112.723 8.02316 114.528 8.01843L135.927 7.95901C137.733 7.95323 139.432 8.29344 141.026 8.97805C142.62 9.66372 144.014 10.5997 145.209 11.787C146.403 12.9753 147.346 14.3635 148.041 15.9541C148.734 17.5442 149.084 19.2416 149.09 21.0467Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 120,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M181.051 19.001C182.003 18.9737 182.798 18.633 183.436 17.9788C184.073 17.3258 184.391 16.5223 184.388 15.5695C184.385 14.642 184.051 13.8469 183.385 13.1839C182.718 12.5219 181.909 12.1917 180.956 12.1943L162.077 12.2474L162.138 34.1352L152.21 34.1631L152.136 7.83733L186.435 7.7411C188.164 7.73637 189.607 8.12127 190.763 8.89475C191.918 9.66876 192.785 10.6378 193.366 11.802C193.945 12.9662 194.238 14.2255 194.241 15.5795C194.245 16.933 193.96 18.1939 193.387 19.3612C192.813 20.5285 191.951 21.5029 190.8 22.2832C189.649 23.0641 188.209 23.4563 186.479 23.461L181.928 23.4737L194.895 34.0432L185.606 34.0695C184.803 34.0716 184.051 34.0358 183.349 33.9627C182.647 33.8897 181.982 33.754 181.355 33.5547C180.727 33.356 180.112 33.0941 179.509 32.7702C178.907 32.4463 178.291 32.0214 177.663 31.4966L168.089 23.5504L162.936 23.5646L165.111 21.2452C165.735 20.5864 166.455 20.0974 167.269 19.7793C168.083 19.4606 168.942 19.2503 169.844 19.1467C170.746 19.0431 171.667 19.0026 172.608 19.0247C173.548 19.0478 174.469 19.0573 175.372 19.0547L181.013 19.0389L181.051 19.001Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 126,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M198.693 34.1079L198.619 7.78215L208.548 7.75429L208.622 34.08L198.693 34.1079Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 132,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M212.382 34.0693L212.308 7.74358L222.237 7.71571L222.311 34.0415L212.382 34.0693Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M226.071 34.0308L225.997 7.70501L235.926 7.67714L236 34.0029L226.071 34.0308Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 144,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M85.1165 12.5809L85.178 34.4687L75.2495 34.4966L75.1879 12.6088L56.4214 12.6613C56.9966 12.0782 57.5398 11.514 58.053 10.9692C58.5646 10.424 59.1031 9.94863 59.6657 9.54164C60.2289 9.13623 60.842 8.8118 61.5056 8.5694C62.1697 8.32805 62.9526 8.205 63.8554 8.2029L64.946 8.19975L65.435 8.19817L85.066 8.14296L103.833 8.09037C103.257 8.67404 102.714 9.23824 102.201 9.78299C101.689 10.3283 101.151 10.8041 100.588 11.2101C100.026 11.616 99.4115 11.9404 98.7484 12.1823C98.0843 12.4247 97.3013 12.5467 96.399 12.5493L85.1165 12.5809Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
                lineNumber: 150,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoToriiiWhite48/LogoToriiiWhite48.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite48;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite48");

  $parcel$ReactRefreshHelpers$31b3.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"4rYPS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoWooxWhite1", ()=>(0, _logoWooxWhite1.LogoWooxWhite1));
var _logoWooxWhite1 = require("./LogoWooxWhite1");

},{"./LogoWooxWhite1":"5vZQh","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5vZQh":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$4c62 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$4c62.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoWooxWhite1", ()=>LogoWooxWhite1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoWooxWhite1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-woox-white-1 ${className}`,
        fill: "none",
        height: "16",
        viewBox: "0 0 71 16",
        width: "71",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M29.5141 0.422852C28.0701 0.422852 26.6567 0.853002 25.4584 1.6621C24.2602 2.47119 23.3179 3.61826 22.7649 4.95992C22.2118 6.30158 22.0684 7.78663 22.345 9.21022C22.6317 10.6338 23.3179 11.9448 24.3421 12.9792C25.3663 14.0033 26.6669 14.71 28.0803 14.9968C29.4937 15.2835 30.9685 15.1299 32.2999 14.5769C33.6313 14.0238 34.7784 13.0816 35.5772 11.8628C36.3761 10.6543 36.8062 9.23071 36.8062 7.77639C36.8062 5.82022 36.0381 3.95624 34.6657 2.57361C33.3036 1.20122 31.4498 0.422852 29.5141 0.422852ZM29.5141 11.7502C28.7358 11.7502 27.9779 11.5146 27.3327 11.0845C26.6874 10.6441 26.1856 10.0296 25.8886 9.3024C25.5916 8.57524 25.5096 7.78663 25.6633 7.0185C25.8169 6.25037 26.1856 5.5437 26.7386 4.99065C27.2917 4.4376 27.9881 4.05865 28.7563 3.90503C29.5141 3.7514 30.313 3.83333 31.0299 4.13034C31.7468 4.42735 32.3613 4.93944 32.7915 5.58466C33.2216 6.24013 33.4572 6.99802 33.4572 7.78663C33.4572 8.84152 33.0475 9.84521 32.3101 10.5929C31.5522 11.3303 30.5588 11.7502 29.5141 11.7502Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite1/LogoWooxWhite1.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M45.9721 0.422852C44.5281 0.422852 43.1147 0.853002 41.9164 1.6621C40.7182 2.47119 39.7759 3.61826 39.2229 4.95992C38.6698 6.30158 38.5264 7.78663 38.803 9.21022C39.0795 10.6338 39.7759 11.9448 40.8001 12.9792C41.8243 14.0033 43.125 14.71 44.5383 14.9968C45.9517 15.2835 47.4265 15.1299 48.7579 14.5769C50.0893 14.0238 51.2364 13.0816 52.0352 11.8628C52.8341 10.6543 53.2642 9.23071 53.2642 7.77639C53.2642 5.82022 52.4961 3.95624 51.1237 2.57361C49.7718 1.20122 47.9078 0.422852 45.9721 0.422852ZM45.9721 11.7502C45.1938 11.7502 44.4359 11.5146 43.7907 11.0845C43.1454 10.6441 42.6436 10.0296 42.3466 9.3024C42.0496 8.57524 41.9676 7.78663 42.1213 7.0185C42.2749 6.25037 42.6436 5.5437 43.1966 4.99065C43.7497 4.4376 44.4461 4.05865 45.2143 3.90503C45.9721 3.7514 46.771 3.83333 47.4879 4.13034C48.2048 4.42735 48.8193 4.93944 49.2495 5.58466C49.6796 6.24013 49.9152 6.99802 49.9152 7.78663C49.9152 8.84152 49.5055 9.84521 48.7681 10.5929C48.0205 11.3303 47.0168 11.7502 45.9721 11.7502Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite1/LogoWooxWhite1.jsx",
                lineNumber: 24,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M21.6076 0.545898H18.0537L16.415 5.94327H19.9177L21.6076 0.545898Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite1/LogoWooxWhite1.jsx",
                lineNumber: 30,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M13.4653 5.68723L15.2269 9.84536L15.8619 7.72532H19.3543L17.3879 14.1776C17.2343 14.6794 16.7631 15.0277 16.2306 15.0277H14.2437C13.7623 15.0277 13.3117 14.7306 13.1171 14.2595L10.9459 8.90312L8.7951 14.239C8.62099 14.6897 8.17036 15.0072 7.66851 15.0072H5.66114C5.12857 15.0072 4.65746 14.659 4.50383 14.1571L0.345703 0.545898H3.84836L6.61362 9.83511L8.44688 5.64626C8.84631 4.60161 9.84999 3.92566 10.9459 3.92566C12.0724 3.92566 13.0761 4.62209 13.4653 5.68723Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite1/LogoWooxWhite1.jsx",
                lineNumber: 36,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M60.9972 3.85397L58.488 0.545898H54.125L58.8157 6.73188L60.9972 3.85397Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite1/LogoWooxWhite1.jsx",
                lineNumber: 42,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M69.7839 0.556152H65.421L54.4316 15.0277H58.7946L69.7839 0.556152Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite1/LogoWooxWhite1.jsx",
                lineNumber: 48,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M65.7289 15.0273L63.2197 11.7192L65.4012 8.84131L70.0919 15.0273H65.7289Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite1/LogoWooxWhite1.jsx",
                lineNumber: 54,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoWooxWhite1/LogoWooxWhite1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoWooxWhite1;
var _c;
$RefreshReg$(_c, "LogoWooxWhite1");

  $parcel$ReactRefreshHelpers$4c62.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"6AKUI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoWooxWhite7", ()=>(0, _logoWooxWhite7.LogoWooxWhite7));
var _logoWooxWhite7 = require("./LogoWooxWhite7");

},{"./LogoWooxWhite7":"jDMat","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jDMat":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$24fd = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$24fd.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoWooxWhite7", ()=>LogoWooxWhite7);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoWooxWhite7 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-woox-white-7 ${className}`,
        fill: "none",
        height: "30",
        viewBox: "0 0 140 30",
        width: "140",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M58.4815 0.582031C55.5994 0.582031 52.7786 1.44054 50.387 3.05537C47.9954 4.67019 46.1149 6.95956 45.0111 9.6373C43.9072 12.315 43.6211 15.279 44.173 18.1202C44.7453 20.9615 46.1149 23.5779 48.1589 25.6425C50.203 27.6865 52.799 29.0969 55.6198 29.6693C58.4407 30.2416 61.3841 29.935 64.0414 28.8312C66.6987 27.7274 68.9881 25.8469 70.5825 23.4144C72.1769 21.0024 73.0354 18.1611 73.0354 15.2585C73.0354 11.3543 71.5023 7.63411 68.7633 4.8746C66.0446 2.13553 62.3449 0.582031 58.4815 0.582031ZM58.4815 23.1896C56.928 23.1896 55.4154 22.7194 54.1277 21.8609C52.8399 20.982 51.8383 19.7555 51.2455 18.3042C50.6527 16.8529 50.4892 15.279 50.7958 13.7459C51.1024 12.2128 51.8383 10.8024 52.9421 9.69863C54.0459 8.59483 55.4359 7.83852 56.9689 7.5319C58.4815 7.22529 60.0759 7.38881 61.5068 7.9816C62.9376 8.57438 64.1641 9.59642 65.0226 10.8842C65.8811 12.1924 66.3512 13.705 66.3512 15.279C66.3512 17.3844 65.5336 19.3876 64.0619 20.8797C62.5493 22.3515 60.5665 23.1896 58.4815 23.1896Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite7/LogoWooxWhite7.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M91.3299 0.582031C88.4478 0.582031 85.6269 1.44054 83.2354 3.05537C80.8438 4.67019 78.9632 6.95956 77.8594 9.6373C76.7556 12.315 76.4695 15.279 77.0214 18.1202C77.5733 20.9615 78.9632 23.5779 81.0073 25.6425C83.0514 27.6865 85.6474 29.0969 88.4682 29.6693C91.289 30.2416 94.2325 29.935 96.8898 28.8312C99.5471 27.7274 101.837 25.8469 103.431 23.4144C105.025 21.0024 105.884 18.1611 105.884 15.2585C105.884 11.3543 104.351 7.63411 101.612 4.8746C98.9135 2.13553 95.1932 0.582031 91.3299 0.582031ZM91.3299 23.1896C89.7764 23.1896 88.2638 22.7194 86.976 21.8609C85.6883 20.982 84.6867 19.7555 84.0939 18.3042C83.5011 16.8529 83.3376 15.279 83.6442 13.7459C83.9508 12.2128 84.6867 10.8024 85.7905 9.69863C86.8943 8.59483 88.2842 7.83852 89.8173 7.5319C91.3299 7.22529 92.9243 7.38881 94.3552 7.9816C95.786 8.57438 97.0125 9.59642 97.871 10.8842C98.7295 12.1924 99.1996 13.705 99.1996 15.279C99.1996 17.3844 98.382 19.3876 96.9103 20.8797C95.4181 22.3515 93.4149 23.1896 91.3299 23.1896Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite7/LogoWooxWhite7.jsx",
                lineNumber: 24,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M42.7014 0.827148H35.6084L32.3379 11.5995H39.3286L42.7014 0.827148Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite7/LogoWooxWhite7.jsx",
                lineNumber: 30,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M26.4508 11.0884L29.9666 19.3874L31.2339 15.1561H38.2042L34.2796 28.0339C33.973 29.0355 33.0327 29.7304 31.9698 29.7304H28.0043C27.0436 29.7304 26.1442 29.1377 25.7558 28.1974L21.4223 17.5068L17.1298 28.1565C16.7823 29.0559 15.8829 29.6896 14.8813 29.6896H10.8749C9.81197 29.6896 8.87169 28.9946 8.56508 27.993L0.266113 0.827148H7.25687L12.7759 19.367L16.4348 11.0067C17.232 8.92171 19.2352 7.57261 21.4223 7.57261C23.6708 7.57261 25.674 8.96259 26.4508 11.0884Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite7/LogoWooxWhite7.jsx",
                lineNumber: 36,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M121.316 7.42953L116.308 0.827148H107.601L116.962 13.1734L121.316 7.42953Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite7/LogoWooxWhite7.jsx",
                lineNumber: 42,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M138.855 0.847656H130.147L108.214 29.7305H116.922L138.855 0.847656Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite7/LogoWooxWhite7.jsx",
                lineNumber: 48,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M130.76 29.7305L125.752 23.1281L130.106 17.3843L139.468 29.7305H130.76Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite7/LogoWooxWhite7.jsx",
                lineNumber: 54,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoWooxWhite7/LogoWooxWhite7.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoWooxWhite7;
var _c;
$RefreshReg$(_c, "LogoWooxWhite7");

  $parcel$ReactRefreshHelpers$24fd.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}]},["gjUm6","1xC6H","d8Dch"], "d8Dch", "parcelRequire5861")

//# sourceMappingURL=index.b4b6dfad.js.map
