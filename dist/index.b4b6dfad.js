// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"gjUm6":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "022c1b16b4b6dfad";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && ![
        "localhost",
        "127.0.0.1",
        "0.0.0.0"
    ].includes(hostname) ? "wss" : "ws";
    var ws;
    if (HMR_USE_SSE) ws = new EventSource("/__parcel_hmr");
    else try {
        ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    } catch (err) {
        if (err.message) console.error(err.message);
        ws = {};
    }
    // Web extension context
    var extCtx = typeof browser === "undefined" ? typeof chrome === "undefined" ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    if (ws instanceof WebSocket) {
        ws.onerror = function(e) {
            if (e.message) console.error(e.message);
        };
        ws.onclose = function() {
            console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
        };
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"1xC6H":[function(require,module,exports) {
var Refresh = require("6d18d6bd340e7473");
var ErrorOverlay = require("74ad5ea14201648c");
Refresh.injectIntoGlobalHook(window);
window.$RefreshReg$ = function() {};
window.$RefreshSig$ = function() {
    return function(type) {
        return type;
    };
};
ErrorOverlay.setEditorHandler(function editorHandler(errorLocation) {
    let file = `${errorLocation.fileName}:${errorLocation.lineNumber || 1}:${errorLocation.colNumber || 1}`;
    fetch(`/__parcel_launch_editor?file=${encodeURIComponent(file)}`);
});
ErrorOverlay.startReportingRuntimeErrors({
    onError: function() {}
});
window.addEventListener("parcelhmraccept", ()=>{
    ErrorOverlay.dismissRuntimeErrors();
});

},{"6d18d6bd340e7473":"786KC","74ad5ea14201648c":"1dldy"}],"786KC":[function(require,module,exports) {
"use strict";
module.exports = require("96622d495519d4e");

},{"96622d495519d4e":"hdge7"}],"hdge7":[function(require,module,exports) {
/** @license React v0.9.0
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 0xeac7;
    var REACT_PORTAL_TYPE = 0xeaca;
    var REACT_FRAGMENT_TYPE = 0xeacb;
    var REACT_STRICT_MODE_TYPE = 0xeacc;
    var REACT_PROFILER_TYPE = 0xead2;
    var REACT_PROVIDER_TYPE = 0xeacd;
    var REACT_CONTEXT_TYPE = 0xeace;
    var REACT_FORWARD_REF_TYPE = 0xead0;
    var REACT_SUSPENSE_TYPE = 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = 0xead8;
    var REACT_MEMO_TYPE = 0xead3;
    var REACT_LAZY_TYPE = 0xead4;
    var REACT_BLOCK_TYPE = 0xead9;
    var REACT_SERVER_BLOCK_TYPE = 0xeada;
    var REACT_FUNDAMENTAL_TYPE = 0xead5;
    var REACT_SCOPE_TYPE = 0xead7;
    var REACT_OPAQUE_ID_TYPE = 0xeae0;
    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
    var REACT_OFFSCREEN_TYPE = 0xeae2;
    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;
    if (typeof Symbol === "function" && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor("react.element");
        REACT_PORTAL_TYPE = symbolFor("react.portal");
        REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
        REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
        REACT_PROFILER_TYPE = symbolFor("react.profiler");
        REACT_PROVIDER_TYPE = symbolFor("react.provider");
        REACT_CONTEXT_TYPE = symbolFor("react.context");
        REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
        REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
        REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
        REACT_MEMO_TYPE = symbolFor("react.memo");
        REACT_LAZY_TYPE = symbolFor("react.lazy");
        REACT_BLOCK_TYPE = symbolFor("react.block");
        REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
        REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
        REACT_SCOPE_TYPE = symbolFor("react.scope");
        REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
        REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
        REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
    }
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map; // We never remove these associations.
    // It's OK to reference families, but use WeakMap/Set for types.
    var allFamiliesByID = new Map();
    var allFamiliesByType = new PossiblyWeakMap();
    var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families
    // that have actually been edited here. This keeps checks fast.
    // $FlowIssue
    var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.
    // It is an array of [Family, NextType] tuples.
    var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.
    var helpersByRendererID = new Map();
    var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.
    var mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.
    var failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.
    // It needs to be weak because we do this even for roots that failed to mount.
    // If there is no WeakMap, we won't attempt to do retrying.
    // $FlowIssue
    var rootElements = typeof WeakMap === "function" ? new WeakMap() : null;
    var isPerformingRefresh = false;
    function computeFullKey(signature) {
        if (signature.fullKey !== null) return signature.fullKey;
        var fullKey = signature.ownKey;
        var hooks;
        try {
            hooks = signature.getCustomHooks();
        } catch (err) {
            // This can happen in an edge case, e.g. if expression like Foo.useSomething
            // depends on Foo which is lazily initialized during rendering.
            // In that case just assume we'll have to remount.
            signature.forceReset = true;
            signature.fullKey = fullKey;
            return fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if (typeof hook !== "function") {
                // Something's wrong. Assume we need to remount.
                signature.forceReset = true;
                signature.fullKey = fullKey;
                return fullKey;
            }
            var nestedHookSignature = allSignaturesByType.get(hook);
            if (nestedHookSignature === undefined) continue;
            var nestedHookKey = computeFullKey(nestedHookSignature);
            if (nestedHookSignature.forceReset) signature.forceReset = true;
            fullKey += "\n---\n" + nestedHookKey;
        }
        signature.fullKey = fullKey;
        return fullKey;
    }
    function haveEqualSignatures(prevType, nextType) {
        var prevSignature = allSignaturesByType.get(prevType);
        var nextSignature = allSignaturesByType.get(nextType);
        if (prevSignature === undefined && nextSignature === undefined) return true;
        if (prevSignature === undefined || nextSignature === undefined) return false;
        if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) return false;
        if (nextSignature.forceReset) return false;
        return true;
    }
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function canPreserveStateBetween(prevType, nextType) {
        if (isReactClass(prevType) || isReactClass(nextType)) return false;
        if (haveEqualSignatures(prevType, nextType)) return true;
        return false;
    }
    function resolveFamily(type) {
        // Only check updated types to keep lookups fast.
        return updatedFamiliesByType.get(type);
    } // If we didn't care about IE11, we could use new Map/Set(iterable).
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function performReactRefresh() {
        if (pendingUpdates.length === 0) return null;
        if (isPerformingRefresh) return null;
        isPerformingRefresh = true;
        try {
            var staleFamilies = new Set();
            var updatedFamilies = new Set();
            var updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0], nextType = _ref[1];
                // Now that we got a real edit, we can create associations
                // that will be read by the React reconciler.
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(nextType, family);
                family.current = nextType; // Determine whether this should be a re-render or a re-mount.
                if (canPreserveStateBetween(prevType, nextType)) updatedFamilies.add(family);
                else staleFamilies.add(family);
            }); // TODO: rename these fields to something more meaningful.
            var update = {
                updatedFamilies: updatedFamilies,
                // Families that will re-render preserving state
                staleFamilies: staleFamilies // Families that will be remounted
            };
            helpersByRendererID.forEach(function(helpers) {
                // Even if there are no roots, set the handler on first update.
                // This ensures that if *new* roots are mounted, they'll use the resolve handler.
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = false;
            var firstError = null; // We snapshot maps and sets that are mutated during commits.
            // If we don't do this, there is a risk they will be mutated while
            // we iterate over them. For example, trying to recover a failed root
            // may cause another root to be added to the failed list -- an infinite loop.
            var failedRootsSnapshot = cloneSet(failedRoots);
            var mountedRootsSnapshot = cloneSet(mountedRoots);
            var helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
                failedRoots.has(root);
                if (rootElements === null) return;
                if (!rootElements.has(root)) return;
                var element = rootElements.get(root);
                try {
                    helpers.scheduleRoot(root, element);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = false;
        }
    }
    function register(type, id) {
        if (type === null) return;
        if (typeof type !== "function" && typeof type !== "object") return;
         // This can happen in an edge case, e.g. if we register
        // return value of a HOC but it returns a cached component.
        // Ignore anything but the first registration for each type.
        if (allFamiliesByType.has(type)) return;
         // Create family or remember to update it.
        // None of this bookkeeping affects reconciliation
        // until the first performReactRefresh() call above.
        var family = allFamiliesByID.get(id);
        if (family === undefined) {
            family = {
                current: type
            };
            allFamiliesByID.set(id, family);
        } else pendingUpdates.push([
            family,
            type
        ]);
        allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.
        if (typeof type === "object" && type !== null) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                register(type.render, id + "$render");
                break;
            case REACT_MEMO_TYPE:
                register(type.type, id + "$type");
                break;
        }
    }
    function setSignature(type, key) {
        var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;
        allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
    } // This is lazily called during first render for a type.
    // It captures Hook list at that time so inline requires don't break comparisons.
    function collectCustomHooksForSignature(type) {
        var signature = allSignaturesByType.get(type);
        if (signature !== undefined) computeFullKey(signature);
    }
    function getFamilyByID(id) {
        return allFamiliesByID.get(id);
    }
    function getFamilyByType(type) {
        return allFamiliesByType.get(type);
    }
    function findAffectedHostInstances(families) {
        var affectedInstances = new Set();
        mountedRoots.forEach(function(root) {
            var helpers = helpersByRoot.get(root);
            if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
            var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);
            instancesForRoot.forEach(function(inst) {
                affectedInstances.add(inst);
            });
        });
        return affectedInstances;
    }
    function injectIntoGlobalHook(globalObject) {
        // For React Native, the global hook will be set up by require('react-devtools-core').
        // That code will run before us. So we need to monkeypatch functions on existing hook.
        // For React Web, the global hook will be set up by the extension.
        // This will also run before us.
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook === undefined) {
            // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.
            // Note that in this case it's important that renderer code runs *after* this method call.
            // Otherwise, the renderer will think that there is no global hook, and won't do the injection.
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: true,
                inject: function(injected) {
                    return nextID++;
                },
                onScheduleFiberRoot: function(id, root, children) {},
                onCommitFiberRoot: function(id, root, maybePriorityLevel, didError) {},
                onCommitFiberUnmount: function() {}
            };
        } // Here, we just want to get a reference to scheduleRefresh.
        var oldInject = hook.inject;
        hook.inject = function(injected) {
            var id = oldInject.apply(this, arguments);
            if (typeof injected.scheduleRefresh === "function" && typeof injected.setRefreshHandler === "function") // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
            return id;
        }; // Do the same for any already injected roots.
        // This is useful if ReactDOM has already been initialized.
        // https://github.com/facebook/react/issues/17626
        hook.renderers.forEach(function(injected, id) {
            if (typeof injected.scheduleRefresh === "function" && typeof injected.setRefreshHandler === "function") // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
        }); // We also want to track currently mounted roots.
        var oldOnCommitFiberRoot = hook.onCommitFiberRoot;
        var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
        hook.onScheduleFiberRoot = function(id, root, children) {
            if (!isPerformingRefresh) {
                // If it was intentionally scheduled, don't attempt to restore.
                // This includes intentionally scheduled unmounts.
                failedRoots.delete(root);
                if (rootElements !== null) rootElements.set(root, children);
            }
            return oldOnScheduleFiberRoot.apply(this, arguments);
        };
        hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
            var helpers = helpersByRendererID.get(id);
            if (helpers === undefined) return;
            helpersByRoot.set(root, helpers);
            var current = root.current;
            var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.
            // This logic is copy-pasted from similar logic in the DevTools backend.
            // If this breaks with some refactoring, you'll want to update DevTools too.
            if (alternate !== null) {
                var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;
                var isMounted = current.memoizedState != null && current.memoizedState.element != null;
                if (!wasMounted && isMounted) {
                    // Mount a new root.
                    mountedRoots.add(root);
                    failedRoots.delete(root);
                } else if (wasMounted && isMounted) ;
                else if (wasMounted && !isMounted) {
                    // Unmount an existing root.
                    mountedRoots.delete(root);
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                    else helpersByRoot.delete(root);
                } else if (!wasMounted && !isMounted) {
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                }
            } else // Mount a new root.
            mountedRoots.add(root);
            return oldOnCommitFiberRoot.apply(this, arguments);
        };
    }
    function hasUnrecoverableErrors() {
        // TODO: delete this after removing dependency in RN.
        return false;
    } // Exposed for testing.
    function _getMountedRootCount() {
        return mountedRoots.size;
    } // This is a wrapper over more primitive functions for setting signature.
    // Signatures let us decide whether the Hook order has changed on refresh.
    //
    // This function is intended to be used as a transform target, e.g.:
    // var _s = createSignatureFunctionForTransform()
    //
    // function Hello() {
    //   const [foo, setFoo] = useState(0);
    //   const value = useCustomHook();
    //   _s(); /* Second call triggers collecting the custom Hook list.
    //          * This doesn't happen during the module evaluation because we
    //          * don't want to change the module order with inline requires.
    //          * Next calls are noops. */
    //   return <h1>Hi</h1>;
    // }
    //
    // /* First call specifies the signature: */
    // _s(
    //   Hello,
    //   'useState{[foo, setFoo]}(0)',
    //   () => [useCustomHook], /* Lazy to avoid triggering inline requires */
    // );
    function createSignatureFunctionForTransform() {
        // We'll fill in the signature in two steps.
        // First, we'll know the signature itself. This happens outside the component.
        // Then, we'll know the references to custom Hooks. This happens inside the component.
        // After that, the returned function will be a fast path no-op.
        var status = "needsSignature";
        var savedType;
        var hasCustomHooks;
        return function(type, key, forceReset, getCustomHooks) {
            switch(status){
                case "needsSignature":
                    if (type !== undefined) {
                        // If we received an argument, this is the initial registration call.
                        savedType = type;
                        hasCustomHooks = typeof getCustomHooks === "function";
                        setSignature(type, key, forceReset, getCustomHooks); // The next call we expect is from inside a function, to fill in the custom Hooks.
                        status = "needsCustomHooks";
                    }
                    break;
                case "needsCustomHooks":
                    if (hasCustomHooks) collectCustomHooksForSignature(savedType);
                    status = "resolved";
                    break;
            }
            return type;
        };
    }
    function isLikelyComponentType(type) {
        switch(typeof type){
            case "function":
                // First, deal with classes.
                if (type.prototype != null) {
                    if (type.prototype.isReactComponent) // React class.
                    return true;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (ownNames.length > 1 || ownNames[0] !== "constructor") // This looks like a class.
                    return false;
                     // eslint-disable-next-line no-proto
                    if (type.prototype.__proto__ !== Object.prototype) // It has a superclass.
                    return false;
                     // Pass through.
                // This looks like a regular function with empty prototype.
                } // For plain functions and arrows, use name as a heuristic.
                var name = type.name || type.displayName;
                return typeof name === "string" && /^[A-Z]/.test(name);
            case "object":
                if (type != null) switch(type.$$typeof){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        // Definitely React components.
                        return true;
                    default:
                        return false;
                }
                return false;
            default:
                return false;
        }
    }
    exports._getMountedRootCount = _getMountedRootCount;
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;
    exports.findAffectedHostInstances = findAffectedHostInstances;
    exports.getFamilyByID = getFamilyByID;
    exports.getFamilyByType = getFamilyByType;
    exports.hasUnrecoverableErrors = hasUnrecoverableErrors;
    exports.injectIntoGlobalHook = injectIntoGlobalHook;
    exports.isLikelyComponentType = isLikelyComponentType;
    exports.performReactRefresh = performReactRefresh;
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"1dldy":[function(require,module,exports) {
var process = require("d1546958eb39fdcf");
!function(e, t) {
    module.exports = t();
}(window, function() {
    return function(e) {
        var t = {};
        function r(n) {
            if (t[n]) return t[n].exports;
            var o = t[n] = {
                i: n,
                l: !1,
                exports: {}
            };
            return e[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports;
        }
        return r.m = e, r.c = t, r.d = function(e, t, n) {
            r.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: n
            });
        }, r.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }, r.t = function(e, t) {
            if (1 & t && (e = r(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var n = Object.create(null);
            if (r.r(n), Object.defineProperty(n, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e) for(var o in e)r.d(n, o, (function(t) {
                return e[t];
            }).bind(null, o));
            return n;
        }, r.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default;
            } : function() {
                return e;
            };
            return r.d(t, "a", t), t;
        }, r.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }, r.p = "", r(r.s = 15);
    }([
        function(e, t, r) {
            e.exports = r(8);
        },
        function(e, t) {
            t.getArg = function(e, t, r) {
                if (t in e) return e[t];
                if (3 === arguments.length) return r;
                throw new Error('"' + t + '" is a required argument.');
            };
            var r = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/, n = /^data:.+\,.+$/;
            function o(e) {
                var t = e.match(r);
                return t ? {
                    scheme: t[1],
                    auth: t[2],
                    host: t[3],
                    port: t[4],
                    path: t[5]
                } : null;
            }
            function a(e) {
                var t = "";
                return e.scheme && (t += e.scheme + ":"), t += "//", e.auth && (t += e.auth + "@"), e.host && (t += e.host), e.port && (t += ":" + e.port), e.path && (t += e.path), t;
            }
            function i(e) {
                var r = e, n = o(e);
                if (n) {
                    if (!n.path) return e;
                    r = n.path;
                }
                for(var i, l = t.isAbsolute(r), u = r.split(/\/+/), c = 0, s = u.length - 1; s >= 0; s--)"." === (i = u[s]) ? u.splice(s, 1) : ".." === i ? c++ : c > 0 && ("" === i ? (u.splice(s + 1, c), c = 0) : (u.splice(s, 2), c--));
                return "" === (r = u.join("/")) && (r = l ? "/" : "."), n ? (n.path = r, a(n)) : r;
            }
            t.urlParse = o, t.urlGenerate = a, t.normalize = i, t.join = function(e, t) {
                "" === e && (e = "."), "" === t && (t = ".");
                var r = o(t), l = o(e);
                if (l && (e = l.path || "/"), r && !r.scheme) return l && (r.scheme = l.scheme), a(r);
                if (r || t.match(n)) return t;
                if (l && !l.host && !l.path) return l.host = t, a(l);
                var u = "/" === t.charAt(0) ? t : i(e.replace(/\/+$/, "") + "/" + t);
                return l ? (l.path = u, a(l)) : u;
            }, t.isAbsolute = function(e) {
                return "/" === e.charAt(0) || !!e.match(r);
            }, t.relative = function(e, t) {
                "" === e && (e = "."), e = e.replace(/\/$/, "");
                for(var r = 0; 0 !== t.indexOf(e + "/");){
                    var n = e.lastIndexOf("/");
                    if (n < 0) return t;
                    if ((e = e.slice(0, n)).match(/^([^\/]+:\/)?\/*$/)) return t;
                    ++r;
                }
                return Array(r + 1).join("../") + t.substr(e.length + 1);
            };
            var l = !("__proto__" in Object.create(null));
            function u(e) {
                return e;
            }
            function c(e) {
                if (!e) return !1;
                var t = e.length;
                if (t < 9) return !1;
                if (95 !== e.charCodeAt(t - 1) || 95 !== e.charCodeAt(t - 2) || 111 !== e.charCodeAt(t - 3) || 116 !== e.charCodeAt(t - 4) || 111 !== e.charCodeAt(t - 5) || 114 !== e.charCodeAt(t - 6) || 112 !== e.charCodeAt(t - 7) || 95 !== e.charCodeAt(t - 8) || 95 !== e.charCodeAt(t - 9)) return !1;
                for(var r = t - 10; r >= 0; r--)if (36 !== e.charCodeAt(r)) return !1;
                return !0;
            }
            function s(e, t) {
                return e === t ? 0 : e > t ? 1 : -1;
            }
            t.toSetString = l ? u : function(e) {
                return c(e) ? "$" + e : e;
            }, t.fromSetString = l ? u : function(e) {
                return c(e) ? e.slice(1) : e;
            }, t.compareByOriginalPositions = function(e, t, r) {
                var n = e.source - t.source;
                return 0 !== n ? n : 0 !== (n = e.originalLine - t.originalLine) ? n : 0 !== (n = e.originalColumn - t.originalColumn) || r ? n : 0 !== (n = e.generatedColumn - t.generatedColumn) ? n : 0 !== (n = e.generatedLine - t.generatedLine) ? n : e.name - t.name;
            }, t.compareByGeneratedPositionsDeflated = function(e, t, r) {
                var n = e.generatedLine - t.generatedLine;
                return 0 !== n ? n : 0 !== (n = e.generatedColumn - t.generatedColumn) || r ? n : 0 !== (n = e.source - t.source) ? n : 0 !== (n = e.originalLine - t.originalLine) ? n : 0 !== (n = e.originalColumn - t.originalColumn) ? n : e.name - t.name;
            }, t.compareByGeneratedPositionsInflated = function(e, t) {
                var r = e.generatedLine - t.generatedLine;
                return 0 !== r ? r : 0 !== (r = e.generatedColumn - t.generatedColumn) ? r : 0 !== (r = s(e.source, t.source)) ? r : 0 !== (r = e.originalLine - t.originalLine) ? r : 0 !== (r = e.originalColumn - t.originalColumn) ? r : s(e.name, t.name);
            };
        },
        function(e, t) {
            function r(e, t) {
                for(var r = 0, n = e.length - 1; n >= 0; n--){
                    var o = e[n];
                    "." === o ? e.splice(n, 1) : ".." === o ? (e.splice(n, 1), r++) : r && (e.splice(n, 1), r--);
                }
                if (t) for(; r--; r)e.unshift("..");
                return e;
            }
            function n(e, t) {
                if (e.filter) return e.filter(t);
                for(var r = [], n = 0; n < e.length; n++)t(e[n], n, e) && r.push(e[n]);
                return r;
            }
            t.resolve = function() {
                for(var e = "", t = !1, o = arguments.length - 1; o >= -1 && !t; o--){
                    var a = o >= 0 ? arguments[o] : process.cwd();
                    if ("string" != typeof a) throw new TypeError("Arguments to path.resolve must be strings");
                    a && (e = a + "/" + e, t = "/" === a.charAt(0));
                }
                return (t ? "/" : "") + (e = r(n(e.split("/"), function(e) {
                    return !!e;
                }), !t).join("/")) || ".";
            }, t.normalize = function(e) {
                var a = t.isAbsolute(e), i = "/" === o(e, -1);
                return (e = r(n(e.split("/"), function(e) {
                    return !!e;
                }), !a).join("/")) || a || (e = "."), e && i && (e += "/"), (a ? "/" : "") + e;
            }, t.isAbsolute = function(e) {
                return "/" === e.charAt(0);
            }, t.join = function() {
                var e = Array.prototype.slice.call(arguments, 0);
                return t.normalize(n(e, function(e, t) {
                    if ("string" != typeof e) throw new TypeError("Arguments to path.join must be strings");
                    return e;
                }).join("/"));
            }, t.relative = function(e, r) {
                function n(e) {
                    for(var t = 0; t < e.length && "" === e[t]; t++);
                    for(var r = e.length - 1; r >= 0 && "" === e[r]; r--);
                    return t > r ? [] : e.slice(t, r - t + 1);
                }
                e = t.resolve(e).substr(1), r = t.resolve(r).substr(1);
                for(var o = n(e.split("/")), a = n(r.split("/")), i = Math.min(o.length, a.length), l = i, u = 0; u < i; u++)if (o[u] !== a[u]) {
                    l = u;
                    break;
                }
                var c = [];
                for(u = l; u < o.length; u++)c.push("..");
                return (c = c.concat(a.slice(l))).join("/");
            }, t.sep = "/", t.delimiter = ":", t.dirname = function(e) {
                if ("string" != typeof e && (e += ""), 0 === e.length) return ".";
                for(var t = e.charCodeAt(0), r = 47 === t, n = -1, o = !0, a = e.length - 1; a >= 1; --a)if (47 === (t = e.charCodeAt(a))) {
                    if (!o) {
                        n = a;
                        break;
                    }
                } else o = !1;
                return -1 === n ? r ? "/" : "." : r && 1 === n ? "/" : e.slice(0, n);
            }, t.basename = function(e, t) {
                var r = function(e) {
                    "string" != typeof e && (e += "");
                    var t, r = 0, n = -1, o = !0;
                    for(t = e.length - 1; t >= 0; --t)if (47 === e.charCodeAt(t)) {
                        if (!o) {
                            r = t + 1;
                            break;
                        }
                    } else -1 === n && (o = !1, n = t + 1);
                    return -1 === n ? "" : e.slice(r, n);
                }(e);
                return t && r.substr(-1 * t.length) === t && (r = r.substr(0, r.length - t.length)), r;
            }, t.extname = function(e) {
                "string" != typeof e && (e += "");
                for(var t = -1, r = 0, n = -1, o = !0, a = 0, i = e.length - 1; i >= 0; --i){
                    var l = e.charCodeAt(i);
                    if (47 !== l) -1 === n && (o = !1, n = i + 1), 46 === l ? -1 === t ? t = i : 1 !== a && (a = 1) : -1 !== t && (a = -1);
                    else if (!o) {
                        r = i + 1;
                        break;
                    }
                }
                return -1 === t || -1 === n || 0 === a || 1 === a && t === n - 1 && t === r + 1 ? "" : e.slice(t, n);
            };
            var o = "b" === "ab".substr(-1) ? function(e, t, r) {
                return e.substr(t, r);
            } : function(e, t, r) {
                return t < 0 && (t = e.length + t), e.substr(t, r);
            };
        },
        function(e, t, r) {
            t.SourceMapGenerator = r(4).SourceMapGenerator, t.SourceMapConsumer = r(11).SourceMapConsumer, t.SourceNode = r(14).SourceNode;
        },
        function(e, t, r) {
            var n = r(5), o = r(1), a = r(6).ArraySet, i = r(10).MappingList;
            function l(e) {
                e || (e = {}), this._file = o.getArg(e, "file", null), this._sourceRoot = o.getArg(e, "sourceRoot", null), this._skipValidation = o.getArg(e, "skipValidation", !1), this._sources = new a, this._names = new a, this._mappings = new i, this._sourcesContents = null;
            }
            l.prototype._version = 3, l.fromSourceMap = function(e) {
                var t = e.sourceRoot, r = new l({
                    file: e.file,
                    sourceRoot: t
                });
                return e.eachMapping(function(e) {
                    var n = {
                        generated: {
                            line: e.generatedLine,
                            column: e.generatedColumn
                        }
                    };
                    null != e.source && (n.source = e.source, null != t && (n.source = o.relative(t, n.source)), n.original = {
                        line: e.originalLine,
                        column: e.originalColumn
                    }, null != e.name && (n.name = e.name)), r.addMapping(n);
                }), e.sources.forEach(function(t) {
                    var n = e.sourceContentFor(t);
                    null != n && r.setSourceContent(t, n);
                }), r;
            }, l.prototype.addMapping = function(e) {
                var t = o.getArg(e, "generated"), r = o.getArg(e, "original", null), n = o.getArg(e, "source", null), a = o.getArg(e, "name", null);
                this._skipValidation || this._validateMapping(t, r, n, a), null != n && (n = String(n), this._sources.has(n) || this._sources.add(n)), null != a && (a = String(a), this._names.has(a) || this._names.add(a)), this._mappings.add({
                    generatedLine: t.line,
                    generatedColumn: t.column,
                    originalLine: null != r && r.line,
                    originalColumn: null != r && r.column,
                    source: n,
                    name: a
                });
            }, l.prototype.setSourceContent = function(e, t) {
                var r = e;
                null != this._sourceRoot && (r = o.relative(this._sourceRoot, r)), null != t ? (this._sourcesContents || (this._sourcesContents = Object.create(null)), this._sourcesContents[o.toSetString(r)] = t) : this._sourcesContents && (delete this._sourcesContents[o.toSetString(r)], 0 === Object.keys(this._sourcesContents).length && (this._sourcesContents = null));
            }, l.prototype.applySourceMap = function(e, t, r) {
                var n = t;
                if (null == t) {
                    if (null == e.file) throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');
                    n = e.file;
                }
                var i = this._sourceRoot;
                null != i && (n = o.relative(i, n));
                var l = new a, u = new a;
                this._mappings.unsortedForEach(function(t) {
                    if (t.source === n && null != t.originalLine) {
                        var a = e.originalPositionFor({
                            line: t.originalLine,
                            column: t.originalColumn
                        });
                        null != a.source && (t.source = a.source, null != r && (t.source = o.join(r, t.source)), null != i && (t.source = o.relative(i, t.source)), t.originalLine = a.line, t.originalColumn = a.column, null != a.name && (t.name = a.name));
                    }
                    var c = t.source;
                    null == c || l.has(c) || l.add(c);
                    var s = t.name;
                    null == s || u.has(s) || u.add(s);
                }, this), this._sources = l, this._names = u, e.sources.forEach(function(t) {
                    var n = e.sourceContentFor(t);
                    null != n && (null != r && (t = o.join(r, t)), null != i && (t = o.relative(i, t)), this.setSourceContent(t, n));
                }, this);
            }, l.prototype._validateMapping = function(e, t, r, n) {
                if (t && "number" != typeof t.line && "number" != typeof t.column) throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");
                if ((!(e && "line" in e && "column" in e && e.line > 0 && e.column >= 0) || t || r || n) && !(e && "line" in e && "column" in e && t && "line" in t && "column" in t && e.line > 0 && e.column >= 0 && t.line > 0 && t.column >= 0 && r)) throw new Error("Invalid mapping: " + JSON.stringify({
                    generated: e,
                    source: r,
                    original: t,
                    name: n
                }));
            }, l.prototype._serializeMappings = function() {
                for(var e, t, r, a, i = 0, l = 1, u = 0, c = 0, s = 0, f = 0, d = "", p = this._mappings.toArray(), h = 0, g = p.length; h < g; h++){
                    if (e = "", (t = p[h]).generatedLine !== l) for(i = 0; t.generatedLine !== l;)e += ";", l++;
                    else if (h > 0) {
                        if (!o.compareByGeneratedPositionsInflated(t, p[h - 1])) continue;
                        e += ",";
                    }
                    e += n.encode(t.generatedColumn - i), i = t.generatedColumn, null != t.source && (a = this._sources.indexOf(t.source), e += n.encode(a - f), f = a, e += n.encode(t.originalLine - 1 - c), c = t.originalLine - 1, e += n.encode(t.originalColumn - u), u = t.originalColumn, null != t.name && (r = this._names.indexOf(t.name), e += n.encode(r - s), s = r)), d += e;
                }
                return d;
            }, l.prototype._generateSourcesContent = function(e, t) {
                return e.map(function(e) {
                    if (!this._sourcesContents) return null;
                    null != t && (e = o.relative(t, e));
                    var r = o.toSetString(e);
                    return Object.prototype.hasOwnProperty.call(this._sourcesContents, r) ? this._sourcesContents[r] : null;
                }, this);
            }, l.prototype.toJSON = function() {
                var e = {
                    version: this._version,
                    sources: this._sources.toArray(),
                    names: this._names.toArray(),
                    mappings: this._serializeMappings()
                };
                return null != this._file && (e.file = this._file), null != this._sourceRoot && (e.sourceRoot = this._sourceRoot), this._sourcesContents && (e.sourcesContent = this._generateSourcesContent(e.sources, e.sourceRoot)), e;
            }, l.prototype.toString = function() {
                return JSON.stringify(this.toJSON());
            }, t.SourceMapGenerator = l;
        },
        function(e, t, r) {
            var n = r(9);
            t.encode = function(e) {
                var t, r = "", o = function(e) {
                    return e < 0 ? 1 + (-e << 1) : 0 + (e << 1);
                }(e);
                do t = 31 & o, (o >>>= 5) > 0 && (t |= 32), r += n.encode(t);
                while (o > 0);
                return r;
            }, t.decode = function(e, t, r) {
                var o, a, i, l, u = e.length, c = 0, s = 0;
                do {
                    if (t >= u) throw new Error("Expected more digits in base 64 VLQ value.");
                    if (-1 === (a = n.decode(e.charCodeAt(t++)))) throw new Error("Invalid base64 digit: " + e.charAt(t - 1));
                    o = !!(32 & a), c += (a &= 31) << s, s += 5;
                }while (o);
                r.value = (l = (i = c) >> 1, 1 == (1 & i) ? -l : l), r.rest = t;
            };
        },
        function(e, t, r) {
            var n = r(1), o = Object.prototype.hasOwnProperty, a = "undefined" != typeof Map;
            function i() {
                this._array = [], this._set = a ? new Map : Object.create(null);
            }
            i.fromArray = function(e, t) {
                for(var r = new i, n = 0, o = e.length; n < o; n++)r.add(e[n], t);
                return r;
            }, i.prototype.size = function() {
                return a ? this._set.size : Object.getOwnPropertyNames(this._set).length;
            }, i.prototype.add = function(e, t) {
                var r = a ? e : n.toSetString(e), i = a ? this.has(e) : o.call(this._set, r), l = this._array.length;
                i && !t || this._array.push(e), i || (a ? this._set.set(e, l) : this._set[r] = l);
            }, i.prototype.has = function(e) {
                if (a) return this._set.has(e);
                var t = n.toSetString(e);
                return o.call(this._set, t);
            }, i.prototype.indexOf = function(e) {
                if (a) {
                    var t = this._set.get(e);
                    if (t >= 0) return t;
                } else {
                    var r = n.toSetString(e);
                    if (o.call(this._set, r)) return this._set[r];
                }
                throw new Error('"' + e + '" is not in the set.');
            }, i.prototype.at = function(e) {
                if (e >= 0 && e < this._array.length) return this._array[e];
                throw new Error("No element indexed by " + e);
            }, i.prototype.toArray = function() {
                return this._array.slice();
            }, t.ArraySet = i;
        },
        function(e, t, r) {
            "use strict";
            function n(e) {
                return Array.isArray(e) || (e = [
                    e
                ]), Promise.all(e.map(function(e) {
                    return e.then(function(e) {
                        return {
                            isFulfilled: !0,
                            isRejected: !1,
                            value: e
                        };
                    }).catch(function(e) {
                        return {
                            isFulfilled: !1,
                            isRejected: !0,
                            reason: e
                        };
                    });
                }));
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.settle = n, t.default = n;
        },
        function(e, t, r) {
            var n = function(e) {
                "use strict";
                var t, r = Object.prototype, n = r.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, a = o.iterator || "@@iterator", i = o.asyncIterator || "@@asyncIterator", l = o.toStringTag || "@@toStringTag";
                function u(e, t, r) {
                    return Object.defineProperty(e, t, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }), e[t];
                }
                try {
                    u({}, "");
                } catch (e) {
                    u = function(e, t, r) {
                        return e[t] = r;
                    };
                }
                function c(e, t, r, n) {
                    var o = t && t.prototype instanceof m ? t : m, a = Object.create(o.prototype), i = new T(n || []);
                    return a._invoke = function(e, t, r) {
                        var n = f;
                        return function(o, a) {
                            if (n === p) throw new Error("Generator is already running");
                            if (n === h) {
                                if ("throw" === o) throw a;
                                return L();
                            }
                            for(r.method = o, r.arg = a;;){
                                var i = r.delegate;
                                if (i) {
                                    var l = _(i, r);
                                    if (l) {
                                        if (l === g) continue;
                                        return l;
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if (n === f) throw n = h, r.arg;
                                    r.dispatchException(r.arg);
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = p;
                                var u = s(e, t, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? h : d, u.arg === g) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    };
                                }
                                "throw" === u.type && (n = h, r.method = "throw", r.arg = u.arg);
                            }
                        };
                    }(e, r, i), a;
                }
                function s(e, t, r) {
                    try {
                        return {
                            type: "normal",
                            arg: e.call(t, r)
                        };
                    } catch (e) {
                        return {
                            type: "throw",
                            arg: e
                        };
                    }
                }
                e.wrap = c;
                var f = "suspendedStart", d = "suspendedYield", p = "executing", h = "completed", g = {};
                function m() {}
                function v() {}
                function y() {}
                var b = {};
                b[a] = function() {
                    return this;
                };
                var w = Object.getPrototypeOf, k = w && w(w(P([])));
                k && k !== r && n.call(k, a) && (b = k);
                var E = y.prototype = m.prototype = Object.create(b);
                function S(e) {
                    [
                        "next",
                        "throw",
                        "return"
                    ].forEach(function(t) {
                        u(e, t, function(e) {
                            return this._invoke(t, e);
                        });
                    });
                }
                function x(e, t) {
                    var r;
                    this._invoke = function(o, a) {
                        function i() {
                            return new t(function(r, i) {
                                !function r(o, a, i, l) {
                                    var u = s(e[o], e, a);
                                    if ("throw" !== u.type) {
                                        var c = u.arg, f = c.value;
                                        return f && "object" == typeof f && n.call(f, "__await") ? t.resolve(f.__await).then(function(e) {
                                            r("next", e, i, l);
                                        }, function(e) {
                                            r("throw", e, i, l);
                                        }) : t.resolve(f).then(function(e) {
                                            c.value = e, i(c);
                                        }, function(e) {
                                            return r("throw", e, i, l);
                                        });
                                    }
                                    l(u.arg);
                                }(o, a, r, i);
                            });
                        }
                        return r = r ? r.then(i, i) : i();
                    };
                }
                function _(e, r) {
                    var n = e.iterator[r.method];
                    if (n === t) {
                        if (r.delegate = null, "throw" === r.method) {
                            if (e.iterator.return && (r.method = "return", r.arg = t, _(e, r), "throw" === r.method)) return g;
                            r.method = "throw", r.arg = new TypeError("The iterator does not provide a 'throw' method");
                        }
                        return g;
                    }
                    var o = s(n, e.iterator, r.arg);
                    if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, g;
                    var a = o.arg;
                    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, g) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, g);
                }
                function C(e) {
                    var t = {
                        tryLoc: e[0]
                    };
                    1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t);
                }
                function O(e) {
                    var t = e.completion || {};
                    t.type = "normal", delete t.arg, e.completion = t;
                }
                function T(e) {
                    this.tryEntries = [
                        {
                            tryLoc: "root"
                        }
                    ], e.forEach(C, this), this.reset(!0);
                }
                function P(e) {
                    if (e) {
                        var r = e[a];
                        if (r) return r.call(e);
                        if ("function" == typeof e.next) return e;
                        if (!isNaN(e.length)) {
                            var o = -1, i = function r() {
                                for(; ++o < e.length;)if (n.call(e, o)) return r.value = e[o], r.done = !1, r;
                                return r.value = t, r.done = !0, r;
                            };
                            return i.next = i;
                        }
                    }
                    return {
                        next: L
                    };
                }
                function L() {
                    return {
                        value: t,
                        done: !0
                    };
                }
                return v.prototype = E.constructor = y, y.constructor = v, v.displayName = u(y, l, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name));
                }, e.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, y) : (e.__proto__ = y, u(e, l, "GeneratorFunction")), e.prototype = Object.create(E), e;
                }, e.awrap = function(e) {
                    return {
                        __await: e
                    };
                }, S(x.prototype), x.prototype[i] = function() {
                    return this;
                }, e.AsyncIterator = x, e.async = function(t, r, n, o, a) {
                    void 0 === a && (a = Promise);
                    var i = new x(c(t, r, n, o), a);
                    return e.isGeneratorFunction(r) ? i : i.next().then(function(e) {
                        return e.done ? e.value : i.next();
                    });
                }, S(E), u(E, l, "Generator"), E[a] = function() {
                    return this;
                }, E.toString = function() {
                    return "[object Generator]";
                }, e.keys = function(e) {
                    var t = [];
                    for(var r in e)t.push(r);
                    return t.reverse(), function r() {
                        for(; t.length;){
                            var n = t.pop();
                            if (n in e) return r.value = n, r.done = !1, r;
                        }
                        return r.done = !0, r;
                    };
                }, e.values = P, T.prototype = {
                    constructor: T,
                    reset: function(e) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(O), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type) throw e.arg;
                        return this.rval;
                    },
                    dispatchException: function(e) {
                        if (this.done) throw e;
                        var r = this;
                        function o(n, o) {
                            return l.type = "throw", l.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
                        }
                        for(var a = this.tryEntries.length - 1; a >= 0; --a){
                            var i = this.tryEntries[a], l = i.completion;
                            if ("root" === i.tryLoc) return o("end");
                            if (i.tryLoc <= this.prev) {
                                var u = n.call(i, "catchLoc"), c = n.call(i, "finallyLoc");
                                if (u && c) {
                                    if (this.prev < i.catchLoc) return o(i.catchLoc, !0);
                                    if (this.prev < i.finallyLoc) return o(i.finallyLoc);
                                } else if (u) {
                                    if (this.prev < i.catchLoc) return o(i.catchLoc, !0);
                                } else {
                                    if (!c) throw new Error("try statement without catch or finally");
                                    if (this.prev < i.finallyLoc) return o(i.finallyLoc);
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for(var r = this.tryEntries.length - 1; r >= 0; --r){
                            var o = this.tryEntries[r];
                            if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                var a = o;
                                break;
                            }
                        }
                        a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                        var i = a ? a.completion : {};
                        return i.type = e, i.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, g) : this.complete(i);
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), g;
                    },
                    finish: function(e) {
                        for(var t = this.tryEntries.length - 1; t >= 0; --t){
                            var r = this.tryEntries[t];
                            if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), O(r), g;
                        }
                    },
                    catch: function(e) {
                        for(var t = this.tryEntries.length - 1; t >= 0; --t){
                            var r = this.tryEntries[t];
                            if (r.tryLoc === e) {
                                var n = r.completion;
                                if ("throw" === n.type) {
                                    var o = n.arg;
                                    O(r);
                                }
                                return o;
                            }
                        }
                        throw new Error("illegal catch attempt");
                    },
                    delegateYield: function(e, r, n) {
                        return this.delegate = {
                            iterator: P(e),
                            resultName: r,
                            nextLoc: n
                        }, "next" === this.method && (this.arg = t), g;
                    }
                }, e;
            }(e.exports);
            try {
                regeneratorRuntime = n;
            } catch (e) {
                Function("r", "regeneratorRuntime = r")(n);
            }
        },
        function(e, t) {
            var r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
            t.encode = function(e) {
                if (0 <= e && e < r.length) return r[e];
                throw new TypeError("Must be between 0 and 63: " + e);
            }, t.decode = function(e) {
                return 65 <= e && e <= 90 ? e - 65 : 97 <= e && e <= 122 ? e - 97 + 26 : 48 <= e && e <= 57 ? e - 48 + 52 : 43 == e ? 62 : 47 == e ? 63 : -1;
            };
        },
        function(e, t, r) {
            var n = r(1);
            function o() {
                this._array = [], this._sorted = !0, this._last = {
                    generatedLine: -1,
                    generatedColumn: 0
                };
            }
            o.prototype.unsortedForEach = function(e, t) {
                this._array.forEach(e, t);
            }, o.prototype.add = function(e) {
                var t, r, o, a, i, l;
                t = this._last, r = e, o = t.generatedLine, a = r.generatedLine, i = t.generatedColumn, l = r.generatedColumn, a > o || a == o && l >= i || n.compareByGeneratedPositionsInflated(t, r) <= 0 ? (this._last = e, this._array.push(e)) : (this._sorted = !1, this._array.push(e));
            }, o.prototype.toArray = function() {
                return this._sorted || (this._array.sort(n.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
            }, t.MappingList = o;
        },
        function(e, t, r) {
            var n = r(1), o = r(12), a = r(6).ArraySet, i = r(5), l = r(13).quickSort;
            function u(e) {
                var t = e;
                return "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, ""))), null != t.sections ? new f(t) : new c(t);
            }
            function c(e) {
                var t = e;
                "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, "")));
                var r = n.getArg(t, "version"), o = n.getArg(t, "sources"), i = n.getArg(t, "names", []), l = n.getArg(t, "sourceRoot", null), u = n.getArg(t, "sourcesContent", null), c = n.getArg(t, "mappings"), s = n.getArg(t, "file", null);
                if (r != this._version) throw new Error("Unsupported version: " + r);
                o = o.map(String).map(n.normalize).map(function(e) {
                    return l && n.isAbsolute(l) && n.isAbsolute(e) ? n.relative(l, e) : e;
                }), this._names = a.fromArray(i.map(String), !0), this._sources = a.fromArray(o, !0), this.sourceRoot = l, this.sourcesContent = u, this._mappings = c, this.file = s;
            }
            function s() {
                this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
            }
            function f(e) {
                var t = e;
                "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, "")));
                var r = n.getArg(t, "version"), o = n.getArg(t, "sections");
                if (r != this._version) throw new Error("Unsupported version: " + r);
                this._sources = new a, this._names = new a;
                var i = {
                    line: -1,
                    column: 0
                };
                this._sections = o.map(function(e) {
                    if (e.url) throw new Error("Support for url field in sections not implemented.");
                    var t = n.getArg(e, "offset"), r = n.getArg(t, "line"), o = n.getArg(t, "column");
                    if (r < i.line || r === i.line && o < i.column) throw new Error("Section offsets must be ordered and non-overlapping.");
                    return i = t, {
                        generatedOffset: {
                            generatedLine: r + 1,
                            generatedColumn: o + 1
                        },
                        consumer: new u(n.getArg(e, "map"))
                    };
                });
            }
            u.fromSourceMap = function(e) {
                return c.fromSourceMap(e);
            }, u.prototype._version = 3, u.prototype.__generatedMappings = null, Object.defineProperty(u.prototype, "_generatedMappings", {
                get: function() {
                    return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
                }
            }), u.prototype.__originalMappings = null, Object.defineProperty(u.prototype, "_originalMappings", {
                get: function() {
                    return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
                }
            }), u.prototype._charIsMappingSeparator = function(e, t) {
                var r = e.charAt(t);
                return ";" === r || "," === r;
            }, u.prototype._parseMappings = function(e, t) {
                throw new Error("Subclasses must implement _parseMappings");
            }, u.GENERATED_ORDER = 1, u.ORIGINAL_ORDER = 2, u.GREATEST_LOWER_BOUND = 1, u.LEAST_UPPER_BOUND = 2, u.prototype.eachMapping = function(e, t, r) {
                var o, a = t || null;
                switch(r || u.GENERATED_ORDER){
                    case u.GENERATED_ORDER:
                        o = this._generatedMappings;
                        break;
                    case u.ORIGINAL_ORDER:
                        o = this._originalMappings;
                        break;
                    default:
                        throw new Error("Unknown order of iteration.");
                }
                var i = this.sourceRoot;
                o.map(function(e) {
                    var t = null === e.source ? null : this._sources.at(e.source);
                    return null != t && null != i && (t = n.join(i, t)), {
                        source: t,
                        generatedLine: e.generatedLine,
                        generatedColumn: e.generatedColumn,
                        originalLine: e.originalLine,
                        originalColumn: e.originalColumn,
                        name: null === e.name ? null : this._names.at(e.name)
                    };
                }, this).forEach(e, a);
            }, u.prototype.allGeneratedPositionsFor = function(e) {
                var t = n.getArg(e, "line"), r = {
                    source: n.getArg(e, "source"),
                    originalLine: t,
                    originalColumn: n.getArg(e, "column", 0)
                };
                if (null != this.sourceRoot && (r.source = n.relative(this.sourceRoot, r.source)), !this._sources.has(r.source)) return [];
                r.source = this._sources.indexOf(r.source);
                var a = [], i = this._findMapping(r, this._originalMappings, "originalLine", "originalColumn", n.compareByOriginalPositions, o.LEAST_UPPER_BOUND);
                if (i >= 0) {
                    var l = this._originalMappings[i];
                    if (void 0 === e.column) for(var u = l.originalLine; l && l.originalLine === u;)a.push({
                        line: n.getArg(l, "generatedLine", null),
                        column: n.getArg(l, "generatedColumn", null),
                        lastColumn: n.getArg(l, "lastGeneratedColumn", null)
                    }), l = this._originalMappings[++i];
                    else for(var c = l.originalColumn; l && l.originalLine === t && l.originalColumn == c;)a.push({
                        line: n.getArg(l, "generatedLine", null),
                        column: n.getArg(l, "generatedColumn", null),
                        lastColumn: n.getArg(l, "lastGeneratedColumn", null)
                    }), l = this._originalMappings[++i];
                }
                return a;
            }, t.SourceMapConsumer = u, c.prototype = Object.create(u.prototype), c.prototype.consumer = u, c.fromSourceMap = function(e) {
                var t = Object.create(c.prototype), r = t._names = a.fromArray(e._names.toArray(), !0), o = t._sources = a.fromArray(e._sources.toArray(), !0);
                t.sourceRoot = e._sourceRoot, t.sourcesContent = e._generateSourcesContent(t._sources.toArray(), t.sourceRoot), t.file = e._file;
                for(var i = e._mappings.toArray().slice(), u = t.__generatedMappings = [], f = t.__originalMappings = [], d = 0, p = i.length; d < p; d++){
                    var h = i[d], g = new s;
                    g.generatedLine = h.generatedLine, g.generatedColumn = h.generatedColumn, h.source && (g.source = o.indexOf(h.source), g.originalLine = h.originalLine, g.originalColumn = h.originalColumn, h.name && (g.name = r.indexOf(h.name)), f.push(g)), u.push(g);
                }
                return l(t.__originalMappings, n.compareByOriginalPositions), t;
            }, c.prototype._version = 3, Object.defineProperty(c.prototype, "sources", {
                get: function() {
                    return this._sources.toArray().map(function(e) {
                        return null != this.sourceRoot ? n.join(this.sourceRoot, e) : e;
                    }, this);
                }
            }), c.prototype._parseMappings = function(e, t) {
                for(var r, o, a, u, c, f = 1, d = 0, p = 0, h = 0, g = 0, m = 0, v = e.length, y = 0, b = {}, w = {}, k = [], E = []; y < v;)if (";" === e.charAt(y)) f++, y++, d = 0;
                else if ("," === e.charAt(y)) y++;
                else {
                    for((r = new s).generatedLine = f, u = y; u < v && !this._charIsMappingSeparator(e, u); u++);
                    if (a = b[o = e.slice(y, u)]) y += o.length;
                    else {
                        for(a = []; y < u;)i.decode(e, y, w), c = w.value, y = w.rest, a.push(c);
                        if (2 === a.length) throw new Error("Found a source, but no line and column");
                        if (3 === a.length) throw new Error("Found a source and line, but no column");
                        b[o] = a;
                    }
                    r.generatedColumn = d + a[0], d = r.generatedColumn, a.length > 1 && (r.source = g + a[1], g += a[1], r.originalLine = p + a[2], p = r.originalLine, r.originalLine += 1, r.originalColumn = h + a[3], h = r.originalColumn, a.length > 4 && (r.name = m + a[4], m += a[4])), E.push(r), "number" == typeof r.originalLine && k.push(r);
                }
                l(E, n.compareByGeneratedPositionsDeflated), this.__generatedMappings = E, l(k, n.compareByOriginalPositions), this.__originalMappings = k;
            }, c.prototype._findMapping = function(e, t, r, n, a, i) {
                if (e[r] <= 0) throw new TypeError("Line must be greater than or equal to 1, got " + e[r]);
                if (e[n] < 0) throw new TypeError("Column must be greater than or equal to 0, got " + e[n]);
                return o.search(e, t, a, i);
            }, c.prototype.computeColumnSpans = function() {
                for(var e = 0; e < this._generatedMappings.length; ++e){
                    var t = this._generatedMappings[e];
                    if (e + 1 < this._generatedMappings.length) {
                        var r = this._generatedMappings[e + 1];
                        if (t.generatedLine === r.generatedLine) {
                            t.lastGeneratedColumn = r.generatedColumn - 1;
                            continue;
                        }
                    }
                    t.lastGeneratedColumn = 1 / 0;
                }
            }, c.prototype.originalPositionFor = function(e) {
                var t = {
                    generatedLine: n.getArg(e, "line"),
                    generatedColumn: n.getArg(e, "column")
                }, r = this._findMapping(t, this._generatedMappings, "generatedLine", "generatedColumn", n.compareByGeneratedPositionsDeflated, n.getArg(e, "bias", u.GREATEST_LOWER_BOUND));
                if (r >= 0) {
                    var o = this._generatedMappings[r];
                    if (o.generatedLine === t.generatedLine) {
                        var a = n.getArg(o, "source", null);
                        null !== a && (a = this._sources.at(a), null != this.sourceRoot && (a = n.join(this.sourceRoot, a)));
                        var i = n.getArg(o, "name", null);
                        return null !== i && (i = this._names.at(i)), {
                            source: a,
                            line: n.getArg(o, "originalLine", null),
                            column: n.getArg(o, "originalColumn", null),
                            name: i
                        };
                    }
                }
                return {
                    source: null,
                    line: null,
                    column: null,
                    name: null
                };
            }, c.prototype.hasContentsOfAllSources = function() {
                return !!this.sourcesContent && this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(e) {
                    return null == e;
                });
            }, c.prototype.sourceContentFor = function(e, t) {
                if (!this.sourcesContent) return null;
                if (null != this.sourceRoot && (e = n.relative(this.sourceRoot, e)), this._sources.has(e)) return this.sourcesContent[this._sources.indexOf(e)];
                var r;
                if (null != this.sourceRoot && (r = n.urlParse(this.sourceRoot))) {
                    var o = e.replace(/^file:\/\//, "");
                    if ("file" == r.scheme && this._sources.has(o)) return this.sourcesContent[this._sources.indexOf(o)];
                    if ((!r.path || "/" == r.path) && this._sources.has("/" + e)) return this.sourcesContent[this._sources.indexOf("/" + e)];
                }
                if (t) return null;
                throw new Error('"' + e + '" is not in the SourceMap.');
            }, c.prototype.generatedPositionFor = function(e) {
                var t = n.getArg(e, "source");
                if (null != this.sourceRoot && (t = n.relative(this.sourceRoot, t)), !this._sources.has(t)) return {
                    line: null,
                    column: null,
                    lastColumn: null
                };
                var r = {
                    source: t = this._sources.indexOf(t),
                    originalLine: n.getArg(e, "line"),
                    originalColumn: n.getArg(e, "column")
                }, o = this._findMapping(r, this._originalMappings, "originalLine", "originalColumn", n.compareByOriginalPositions, n.getArg(e, "bias", u.GREATEST_LOWER_BOUND));
                if (o >= 0) {
                    var a = this._originalMappings[o];
                    if (a.source === r.source) return {
                        line: n.getArg(a, "generatedLine", null),
                        column: n.getArg(a, "generatedColumn", null),
                        lastColumn: n.getArg(a, "lastGeneratedColumn", null)
                    };
                }
                return {
                    line: null,
                    column: null,
                    lastColumn: null
                };
            }, t.BasicSourceMapConsumer = c, f.prototype = Object.create(u.prototype), f.prototype.constructor = u, f.prototype._version = 3, Object.defineProperty(f.prototype, "sources", {
                get: function() {
                    for(var e = [], t = 0; t < this._sections.length; t++)for(var r = 0; r < this._sections[t].consumer.sources.length; r++)e.push(this._sections[t].consumer.sources[r]);
                    return e;
                }
            }), f.prototype.originalPositionFor = function(e) {
                var t = {
                    generatedLine: n.getArg(e, "line"),
                    generatedColumn: n.getArg(e, "column")
                }, r = o.search(t, this._sections, function(e, t) {
                    var r = e.generatedLine - t.generatedOffset.generatedLine;
                    return r || e.generatedColumn - t.generatedOffset.generatedColumn;
                }), a = this._sections[r];
                return a ? a.consumer.originalPositionFor({
                    line: t.generatedLine - (a.generatedOffset.generatedLine - 1),
                    column: t.generatedColumn - (a.generatedOffset.generatedLine === t.generatedLine ? a.generatedOffset.generatedColumn - 1 : 0),
                    bias: e.bias
                }) : {
                    source: null,
                    line: null,
                    column: null,
                    name: null
                };
            }, f.prototype.hasContentsOfAllSources = function() {
                return this._sections.every(function(e) {
                    return e.consumer.hasContentsOfAllSources();
                });
            }, f.prototype.sourceContentFor = function(e, t) {
                for(var r = 0; r < this._sections.length; r++){
                    var n = this._sections[r].consumer.sourceContentFor(e, !0);
                    if (n) return n;
                }
                if (t) return null;
                throw new Error('"' + e + '" is not in the SourceMap.');
            }, f.prototype.generatedPositionFor = function(e) {
                for(var t = 0; t < this._sections.length; t++){
                    var r = this._sections[t];
                    if (-1 !== r.consumer.sources.indexOf(n.getArg(e, "source"))) {
                        var o = r.consumer.generatedPositionFor(e);
                        if (o) return {
                            line: o.line + (r.generatedOffset.generatedLine - 1),
                            column: o.column + (r.generatedOffset.generatedLine === o.line ? r.generatedOffset.generatedColumn - 1 : 0)
                        };
                    }
                }
                return {
                    line: null,
                    column: null
                };
            }, f.prototype._parseMappings = function(e, t) {
                this.__generatedMappings = [], this.__originalMappings = [];
                for(var r = 0; r < this._sections.length; r++)for(var o = this._sections[r], a = o.consumer._generatedMappings, i = 0; i < a.length; i++){
                    var u = a[i], c = o.consumer._sources.at(u.source);
                    null !== o.consumer.sourceRoot && (c = n.join(o.consumer.sourceRoot, c)), this._sources.add(c), c = this._sources.indexOf(c);
                    var s = o.consumer._names.at(u.name);
                    this._names.add(s), s = this._names.indexOf(s);
                    var f = {
                        source: c,
                        generatedLine: u.generatedLine + (o.generatedOffset.generatedLine - 1),
                        generatedColumn: u.generatedColumn + (o.generatedOffset.generatedLine === u.generatedLine ? o.generatedOffset.generatedColumn - 1 : 0),
                        originalLine: u.originalLine,
                        originalColumn: u.originalColumn,
                        name: s
                    };
                    this.__generatedMappings.push(f), "number" == typeof f.originalLine && this.__originalMappings.push(f);
                }
                l(this.__generatedMappings, n.compareByGeneratedPositionsDeflated), l(this.__originalMappings, n.compareByOriginalPositions);
            }, t.IndexedSourceMapConsumer = f;
        },
        function(e, t) {
            t.GREATEST_LOWER_BOUND = 1, t.LEAST_UPPER_BOUND = 2, t.search = function(e, r, n, o) {
                if (0 === r.length) return -1;
                var a = function e(r, n, o, a, i, l) {
                    var u = Math.floor((n - r) / 2) + r, c = i(o, a[u], !0);
                    return 0 === c ? u : c > 0 ? n - u > 1 ? e(u, n, o, a, i, l) : l == t.LEAST_UPPER_BOUND ? n < a.length ? n : -1 : u : u - r > 1 ? e(r, u, o, a, i, l) : l == t.LEAST_UPPER_BOUND ? u : r < 0 ? -1 : r;
                }(-1, r.length, e, r, n, o || t.GREATEST_LOWER_BOUND);
                if (a < 0) return -1;
                for(; a - 1 >= 0 && 0 === n(r[a], r[a - 1], !0);)--a;
                return a;
            };
        },
        function(e, t) {
            function r(e, t, r) {
                var n = e[t];
                e[t] = e[r], e[r] = n;
            }
            function n(e, t, o, a) {
                if (o < a) {
                    var i = o - 1;
                    r(e, (s = o, f = a, Math.round(s + Math.random() * (f - s))), a);
                    for(var l = e[a], u = o; u < a; u++)t(e[u], l) <= 0 && r(e, i += 1, u);
                    r(e, i + 1, u);
                    var c = i + 1;
                    n(e, t, o, c - 1), n(e, t, c + 1, a);
                }
                var s, f;
            }
            t.quickSort = function(e, t) {
                n(e, t, 0, e.length - 1);
            };
        },
        function(e, t, r) {
            var n = r(4).SourceMapGenerator, o = r(1), a = /(\r?\n)/, i = "$$$isSourceNode$$$";
            function l(e, t, r, n, o) {
                this.children = [], this.sourceContents = {}, this.line = null == e ? null : e, this.column = null == t ? null : t, this.source = null == r ? null : r, this.name = null == o ? null : o, this[i] = !0, null != n && this.add(n);
            }
            l.fromStringWithSourceMap = function(e, t, r) {
                var n = new l, i = e.split(a), u = 0, c = function() {
                    return e() + (e() || "");
                    function e() {
                        return u < i.length ? i[u++] : void 0;
                    }
                }, s = 1, f = 0, d = null;
                return t.eachMapping(function(e) {
                    if (null !== d) {
                        if (!(s < e.generatedLine)) {
                            var t = (r = i[u]).substr(0, e.generatedColumn - f);
                            return i[u] = r.substr(e.generatedColumn - f), f = e.generatedColumn, p(d, t), void (d = e);
                        }
                        p(d, c()), s++, f = 0;
                    }
                    for(; s < e.generatedLine;)n.add(c()), s++;
                    if (f < e.generatedColumn) {
                        var r = i[u];
                        n.add(r.substr(0, e.generatedColumn)), i[u] = r.substr(e.generatedColumn), f = e.generatedColumn;
                    }
                    d = e;
                }, this), u < i.length && (d && p(d, c()), n.add(i.splice(u).join(""))), t.sources.forEach(function(e) {
                    var a = t.sourceContentFor(e);
                    null != a && (null != r && (e = o.join(r, e)), n.setSourceContent(e, a));
                }), n;
                function p(e, t) {
                    if (null === e || void 0 === e.source) n.add(t);
                    else {
                        var a = r ? o.join(r, e.source) : e.source;
                        n.add(new l(e.originalLine, e.originalColumn, a, t, e.name));
                    }
                }
            }, l.prototype.add = function(e) {
                if (Array.isArray(e)) e.forEach(function(e) {
                    this.add(e);
                }, this);
                else {
                    if (!e[i] && "string" != typeof e) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e);
                    e && this.children.push(e);
                }
                return this;
            }, l.prototype.prepend = function(e) {
                if (Array.isArray(e)) for(var t = e.length - 1; t >= 0; t--)this.prepend(e[t]);
                else {
                    if (!e[i] && "string" != typeof e) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e);
                    this.children.unshift(e);
                }
                return this;
            }, l.prototype.walk = function(e) {
                for(var t, r = 0, n = this.children.length; r < n; r++)(t = this.children[r])[i] ? t.walk(e) : "" !== t && e(t, {
                    source: this.source,
                    line: this.line,
                    column: this.column,
                    name: this.name
                });
            }, l.prototype.join = function(e) {
                var t, r, n = this.children.length;
                if (n > 0) {
                    for(t = [], r = 0; r < n - 1; r++)t.push(this.children[r]), t.push(e);
                    t.push(this.children[r]), this.children = t;
                }
                return this;
            }, l.prototype.replaceRight = function(e, t) {
                var r = this.children[this.children.length - 1];
                return r[i] ? r.replaceRight(e, t) : "string" == typeof r ? this.children[this.children.length - 1] = r.replace(e, t) : this.children.push("".replace(e, t)), this;
            }, l.prototype.setSourceContent = function(e, t) {
                this.sourceContents[o.toSetString(e)] = t;
            }, l.prototype.walkSourceContents = function(e) {
                for(var t = 0, r = this.children.length; t < r; t++)this.children[t][i] && this.children[t].walkSourceContents(e);
                var n = Object.keys(this.sourceContents);
                for(t = 0, r = n.length; t < r; t++)e(o.fromSetString(n[t]), this.sourceContents[n[t]]);
            }, l.prototype.toString = function() {
                var e = "";
                return this.walk(function(t) {
                    e += t;
                }), e;
            }, l.prototype.toStringWithSourceMap = function(e) {
                var t = {
                    code: "",
                    line: 1,
                    column: 0
                }, r = new n(e), o = !1, a = null, i = null, l = null, u = null;
                return this.walk(function(e, n) {
                    t.code += e, null !== n.source && null !== n.line && null !== n.column ? (a === n.source && i === n.line && l === n.column && u === n.name || r.addMapping({
                        source: n.source,
                        original: {
                            line: n.line,
                            column: n.column
                        },
                        generated: {
                            line: t.line,
                            column: t.column
                        },
                        name: n.name
                    }), a = n.source, i = n.line, l = n.column, u = n.name, o = !0) : o && (r.addMapping({
                        generated: {
                            line: t.line,
                            column: t.column
                        }
                    }), a = null, o = !1);
                    for(var c = 0, s = e.length; c < s; c++)10 === e.charCodeAt(c) ? (t.line++, t.column = 0, c + 1 === s ? (a = null, o = !1) : o && r.addMapping({
                        source: n.source,
                        original: {
                            line: n.line,
                            column: n.column
                        },
                        generated: {
                            line: t.line,
                            column: t.column
                        },
                        name: n.name
                    })) : t.column++;
                }), this.walkSourceContents(function(e, t) {
                    r.setSourceContent(e, t);
                }), {
                    code: t.code,
                    map: r
                };
            }, t.SourceNode = l;
        },
        function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, "setEditorHandler", function() {
                return ue;
            }), r.d(t, "reportBuildError", function() {
                return ce;
            }), r.d(t, "reportRuntimeError", function() {
                return se;
            }), r.d(t, "dismissBuildError", function() {
                return fe;
            }), r.d(t, "startReportingRuntimeErrors", function() {
                return de;
            }), r.d(t, "dismissRuntimeErrors", function() {
                return he;
            }), r.d(t, "stopReportingRuntimeErrors", function() {
                return ge;
            });
            var n = null;
            function o(e, t) {
                if (t.error) {
                    var r = t.error;
                    r instanceof Error ? e(r) : e(new Error(r));
                }
            }
            function a(e, t) {
                null === n && (n = o.bind(void 0, t), e.addEventListener("error", n));
            }
            var i = null;
            function l(e, t) {
                if (null == t || null == t.reason) return e(new Error("Unknown"));
                var r = t.reason;
                return r instanceof Error ? e(r) : e(new Error(r));
            }
            function u(e, t) {
                null === i && (i = l.bind(void 0, t), e.addEventListener("unhandledrejection", i));
            }
            var c = !1, s = 10, f = 50;
            var d = [], p = function() {
                "undefined" != typeof console && (console.reactStack = function(e) {
                    return d.push(e);
                }, console.reactStackEnd = function(e) {
                    return d.pop();
                });
            }, h = function() {
                "undefined" != typeof console && (console.reactStack = void 0, console.reactStackEnd = void 0);
            }, g = function(e, t) {
                if ("undefined" != typeof console) {
                    var r = console[e];
                    "function" == typeof r && (console[e] = function() {
                        try {
                            var e = arguments[0];
                            "string" == typeof e && d.length > 0 && t(e, d[d.length - 1]);
                        } catch (e) {
                            setTimeout(function() {
                                throw e;
                            });
                        }
                        return r.apply(this, arguments);
                    });
                }
            };
            function m(e, t) {
                return (m = Object.setPrototypeOf || function(e, t) {
                    return e.__proto__ = t, e;
                })(e, t);
            }
            function v(e, t, r) {
                return (v = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (e) {
                        return !1;
                    }
                }() ? Reflect.construct : function(e, t, r) {
                    var n = [
                        null
                    ];
                    n.push.apply(n, t);
                    var o = new (Function.bind.apply(e, n));
                    return r && m(o, r.prototype), o;
                }).apply(null, arguments);
            }
            function y(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for(var r = 0, n = new Array(t); r < t; r++)n[r] = e[r];
                return n;
            }
            function b(e) {
                return function(e) {
                    if (Array.isArray(e)) return y(e);
                }(e) || function(e) {
                    if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
                }(e) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e) return y(e, t);
                        var r = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? y(e, t) : void 0;
                    }
                }(e) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }();
            }
            function w(e, t) {
                for(var r = 0; r < t.length; r++){
                    var n = t[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
                }
            }
            function k(e, t, r) {
                return t && w(e.prototype, t), r && w(e, r), e;
            }
            function E(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
            }
            var S = function e(t, r) {
                var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                E(this, e), this.lineNumber = t, this.content = r, this.highlight = n;
            }, x = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null, i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null, l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null, u = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null, c = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null, s = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : null;
                    E(this, e), t && 0 === t.indexOf("Object.") && (t = t.slice(7)), "friendlySyntaxErrorLabel" !== t && "exports.__esModule" !== t && "<anonymous>" !== t && t || (t = null), this.functionName = t, this.fileName = r, this.lineNumber = n, this.columnNumber = o, this._originalFunctionName = i, this._originalFileName = l, this._originalLineNumber = u, this._originalColumnNumber = c, this._scriptCode = a, this._originalScriptCode = s;
                }
                return k(e, [
                    {
                        key: "getFunctionName",
                        value: function() {
                            return this.functionName || "(anonymous function)";
                        }
                    },
                    {
                        key: "getSource",
                        value: function() {
                            var e = "";
                            return null != this.fileName && (e += this.fileName + ":"), null != this.lineNumber && (e += this.lineNumber + ":"), null != this.columnNumber && (e += this.columnNumber + ":"), e.slice(0, -1);
                        }
                    },
                    {
                        key: "toString",
                        value: function() {
                            var e = this.getFunctionName(), t = this.getSource();
                            return "".concat(e).concat(t ? " (".concat(t, ")") : "");
                        }
                    }
                ]), e;
            }(), _ = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;
            function C(e) {
                return _.exec(e).slice(1).map(function(e) {
                    var t = Number(e);
                    return isNaN(t) ? e : t;
                });
            }
            var O = /^\s*(at|in)\s.+(:\d+)/, T = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;
            function P(e) {
                return e.filter(function(e) {
                    return O.test(e) || T.test(e);
                }).map(function(e) {
                    if (T.test(e)) {
                        var t = !1;
                        / > (eval|Function)/.test(e) && (e = e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g, ":$1"), t = !0);
                        var r = e.split(/[@]/g), n = r.pop();
                        return v(x, [
                            r.join("@") || (t ? "eval" : null)
                        ].concat(b(C(n))));
                    }
                    -1 !== e.indexOf("(eval ") && (e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, "")), -1 !== e.indexOf("(at ") && (e = e.replace(/\(at /, "("));
                    var o = e.trim().split(/\s+/g).slice(1), a = o.pop();
                    return v(x, [
                        o.join(" ") || null
                    ].concat(b(C(a))));
                });
            }
            function L(e) {
                if (null == e) throw new Error("You cannot pass a null object.");
                if ("string" == typeof e) return P(e.split("\n"));
                if (Array.isArray(e)) return P(e);
                if ("string" == typeof e.stack) return P(e.stack.split("\n"));
                throw new Error("The error you provided does not contain a stack trace.");
            }
            var R = r(0), A = r.n(R);
            function N(e, t, r, n, o, a, i) {
                try {
                    var l = e[a](i), u = l.value;
                } catch (e) {
                    return void r(e);
                }
                l.done ? t(u) : Promise.resolve(u).then(n, o);
            }
            function j(e) {
                return function() {
                    var t = this, r = arguments;
                    return new Promise(function(n, o) {
                        var a = e.apply(t, r);
                        function i(e) {
                            N(a, n, o, i, l, "next", e);
                        }
                        function l(e) {
                            N(a, n, o, i, l, "throw", e);
                        }
                        i(void 0);
                    });
                };
            }
            var M = r(3), I = function() {
                function e(t) {
                    E(this, e), this.__source_map = t;
                }
                return k(e, [
                    {
                        key: "getOriginalPosition",
                        value: function(e, t) {
                            var r = this.__source_map.originalPositionFor({
                                line: e,
                                column: t
                            });
                            return {
                                line: r.line,
                                column: r.column,
                                source: r.source
                            };
                        }
                    },
                    {
                        key: "getGeneratedPosition",
                        value: function(e, t, r) {
                            var n = this.__source_map.generatedPositionFor({
                                source: e,
                                line: t,
                                column: r
                            });
                            return {
                                line: n.line,
                                column: n.column
                            };
                        }
                    },
                    {
                        key: "getSource",
                        value: function(e) {
                            return this.__source_map.sourceContentFor(e);
                        }
                    },
                    {
                        key: "getSources",
                        value: function() {
                            return this.__source_map.sources;
                        }
                    }
                ]), e;
            }();
            function D(e, t) {
                for(var r = /\/\/[#@] ?sourceMappingURL=([^\s'"]+)\s*$/gm, n = null;;){
                    var o = r.exec(t);
                    if (null == o) break;
                    n = o;
                }
                return n && n[1] ? Promise.resolve(n[1].toString()) : Promise.reject("Cannot find a source map directive for ".concat(e, "."));
            }
            function z(e, t) {
                return q.apply(this, arguments);
            }
            function q() {
                return (q = j(A.a.mark(function e(t, r) {
                    var n, o, a, i, l, u;
                    return A.a.wrap(function(e) {
                        for(;;)switch(e.prev = e.next){
                            case 0:
                                return e.next = 2, D(t, r);
                            case 2:
                                if (0 !== (n = e.sent).indexOf("data:")) {
                                    e.next = 14;
                                    break;
                                }
                                if (o = /^data:application\/json;([\w=:"-]+;)*base64,/, a = n.match(o)) {
                                    e.next = 8;
                                    break;
                                }
                                throw new Error("Sorry, non-base64 inline source-map encoding is not supported.");
                            case 8:
                                return n = n.substring(a[0].length), n = window.atob(n), n = JSON.parse(n), e.abrupt("return", new I(new M.SourceMapConsumer(n)));
                            case 14:
                                return i = t.lastIndexOf("/"), l = t.substring(0, i + 1) + n, e.next = 18, fetch(l).then(function(e) {
                                    return e.json();
                                });
                            case 18:
                                return u = e.sent, e.abrupt("return", new I(new M.SourceMapConsumer(u)));
                            case 20:
                            case "end":
                                return e.stop();
                        }
                    }, e);
                }))).apply(this, arguments);
            }
            function F(e, t, r) {
                "string" == typeof r && (r = r.split("\n"));
                for(var n = [], o = Math.max(0, e - 1 - t); o <= Math.min(r.length - 1, e - 1 + t); ++o)n.push(new S(o + 1, r[o], o === e - 1));
                return n;
            }
            var U = r(7);
            function B(e) {
                return H.apply(this, arguments);
            }
            function H() {
                return (H = j(A.a.mark(function e(t) {
                    var r, n, o, a = arguments;
                    return A.a.wrap(function(e) {
                        for(;;)switch(e.prev = e.next){
                            case 0:
                                return r = a.length > 1 && void 0 !== a[1] ? a[1] : 3, n = {}, o = [], t.forEach(function(e) {
                                    var t = e.fileName;
                                    null != t && -1 === o.indexOf(t) && o.push(t);
                                }), e.next = 6, Object(U.settle)(o.map(function() {
                                    var e = j(A.a.mark(function e(t) {
                                        var r, o, a;
                                        return A.a.wrap(function(e) {
                                            for(;;)switch(e.prev = e.next){
                                                case 0:
                                                    return r = 0 === t.indexOf("webpack-internal:") ? "/__get-internal-source?fileName=".concat(encodeURIComponent(t)) : t, e.next = 3, fetch(r).then(function(e) {
                                                        return e.text();
                                                    });
                                                case 3:
                                                    return o = e.sent, e.next = 6, z(t, o);
                                                case 6:
                                                    a = e.sent, n[t] = {
                                                        fileSource: o,
                                                        map: a
                                                    };
                                                case 8:
                                                case "end":
                                                    return e.stop();
                                            }
                                        }, e);
                                    }));
                                    return function(t) {
                                        return e.apply(this, arguments);
                                    };
                                }()));
                            case 6:
                                return e.abrupt("return", t.map(function(e) {
                                    var t = e.functionName, o = e.fileName, a = e.lineNumber, i = e.columnNumber, l = n[o] || {}, u = l.map, c = l.fileSource;
                                    if (null == u || null == a) return e;
                                    var s = u.getOriginalPosition(a, i), f = s.source, d = s.line, p = s.column, h = null == f ? [] : u.getSource(f);
                                    return new x(t, o, a, i, F(a, r, c), t, f, d, p, F(d, r, h));
                                }));
                            case 7:
                            case "end":
                                return e.stop();
                        }
                    }, e);
                }))).apply(this, arguments);
            }
            var $ = r(2), V = r.n($);
            function W(e, t) {
                var r = -1, n = -1;
                do ++r, n = t.indexOf(e, n + 1);
                while (-1 !== n);
                return r;
            }
            function G(e, t) {
                return Q.apply(this, arguments);
            }
            function Q() {
                return (Q = j(A.a.mark(function e(t, r) {
                    var n, o, a, i, l = arguments;
                    return A.a.wrap(function(e) {
                        for(;;)switch(e.prev = e.next){
                            case 0:
                                if (n = l.length > 2 && void 0 !== l[2] ? l[2] : 3, o = "object" == typeof t ? t.contents : null, a = "object" == typeof t ? t.uri : t, null != o) {
                                    e.next = 7;
                                    break;
                                }
                                return e.next = 6, fetch(a).then(function(e) {
                                    return e.text();
                                });
                            case 6:
                                o = e.sent;
                            case 7:
                                return e.next = 9, z(a, o);
                            case 9:
                                return i = e.sent, e.abrupt("return", r.map(function(e) {
                                    var t = e.functionName, r = e.lineNumber, l = e.columnNumber;
                                    if (null != e._originalLineNumber) return e;
                                    var u = e.fileName;
                                    if (u && (u = V.a.normalize(u.replace(/[\\]+/g, "/"))), null == u) return e;
                                    var c = u, s = i.getSources().map(function(e) {
                                        return e.replace(/[\\]+/g, "/");
                                    }).filter(function(e) {
                                        var t = (e = V.a.normalize(e)).lastIndexOf(c);
                                        return -1 !== t && t === e.length - c.length;
                                    }).map(function(e) {
                                        return {
                                            token: e,
                                            seps: W(V.a.sep, V.a.normalize(e)),
                                            penalties: W("node_modules", e) + W("~", e)
                                        };
                                    }).sort(function(e, t) {
                                        var r = Math.sign(e.seps - t.seps);
                                        return 0 !== r ? r : Math.sign(e.penalties - t.penalties);
                                    });
                                    if (s.length < 1 || null == r) return new x(null, null, null, null, null, t, c, r, l, null);
                                    var f = s[0].token, d = i.getGeneratedPosition(f, r, l), p = d.line, h = d.column, g = i.getSource(f);
                                    return new x(t, a, p, h || null, F(p, n, o || []), t, c, r, l, F(r, n, g));
                                }));
                            case 11:
                            case "end":
                                return e.stop();
                        }
                    }, e);
                }))).apply(this, arguments);
            }
            var Y = function(e) {
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 3, r = L(e);
                return (e.__unmap_source ? G(e.__unmap_source, r, t) : B(r, t)).then(function(e) {
                    return 0 === e.map(function(e) {
                        return e._originalFileName;
                    }).filter(function(e) {
                        return null != e && -1 === e.indexOf("node_modules");
                    }).length ? null : e.filter(function(e) {
                        var t = e.functionName;
                        return null == t || -1 === t.indexOf("__stack_frame_overlay_proxy_console__");
                    });
                });
            }, X = function(e) {
                return function(t) {
                    var r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    Y(t, r, 3).then(function(n) {
                        null != n && e({
                            error: t,
                            unhandledRejection: r,
                            contextSize: 3,
                            stackFrames: n
                        });
                    }).catch(function(e) {
                        console.log("Could not get the stack frames of error:", e);
                    });
                };
            };
            function K(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "/static/js/bundle.js", r = X(e);
                return a(window, function(e) {
                    return r(e, !1);
                }), u(window, function(e) {
                    return r(e, !0);
                }), function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : f;
                    if (!c) try {
                        s = Error.stackTraceLimit, Error.stackTraceLimit = e, c = !0;
                    } catch (e) {}
                }(), p(), g("error", function(e, n) {
                    var o = function(e, t) {
                        for(var r, n, o = function(e) {
                            return e.split("\n").filter(function(e) {
                                return !e.match(/^\s*in/);
                            }).join("\n");
                        }(e), a = "", i = 0; i < t.length; ++i){
                            var l = t[i], u = l.fileName, c = l.lineNumber;
                            if (null != u && null != c && !(u === r && "number" == typeof c && "number" == typeof n && Math.abs(c - n) < 3)) {
                                r = u, n = c;
                                var s = t[i].name;
                                a += "in ".concat(s = s || "(anonymous function)", " (at ").concat(u, ":").concat(c, ")\n");
                            }
                        }
                        return {
                            message: o,
                            stack: a
                        };
                    }(e, n);
                    r({
                        message: o.message,
                        stack: o.stack,
                        __unmap_source: t
                    }, !1);
                }), function() {
                    var e;
                    !function() {
                        if (c) try {
                            Error.stackTraceLimit = s, c = !1;
                        } catch (e) {}
                    }(), e = window, null !== i && (e.removeEventListener("unhandledrejection", i), i = null), function(e) {
                        null !== n && (e.removeEventListener("error", n), n = null);
                    }(window), h();
                };
            }
            var J = {
                position: "fixed",
                top: "0",
                left: "0",
                width: "100%",
                height: "100%",
                border: "none",
                "z-index": 2147483647
            };
            var Z = '/*! For license information please see iframe-bundle.js.LICENSE.txt */\n!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=208)}([function(e,t,r){"use strict";e.exports=r(183)},function(e,t,r){var n=r(8),o=r(35).f,a=r(18),i=r(21),l=r(38),u=r(60),c=r(64);e.exports=function(e,t){var r,s,f,d,p,h=e.target,g=e.global,v=e.stat;if(r=g?n:v?n[h]||l(h,{}):(n[h]||{}).prototype)for(s in t){if(d=t[s],f=e.noTargetGet?(p=o(r,s))&&p.value:r[s],!c(g?s:h+(v?".":"#")+s,e.forced)&&void 0!==f){if(typeof d===typeof f)continue;u(d,f)}(e.sham||f&&f.sham)&&a(d,"sham",!0),i(r,s,d,e)}}},function(e,t,r){var n=r(13);e.exports=function(e){if(!n(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t){e.exports=!1},function(e,t,r){var n=r(2),o=r(66),a=r(26),i=r(7),l=r(45),u=r(69),c=function(e,t){this.stopped=e,this.result=t};e.exports=function(e,t,r){var s,f,d,p,h,g,v,m=r&&r.that,y=!(!r||!r.AS_ENTRIES),b=!(!r||!r.IS_ITERATOR),w=!(!r||!r.INTERRUPTED),k=i(t,m,1+y+w),E=function(e){return s&&u(s),new c(!0,e)},x=function(e){return y?(n(e),w?k(e[0],e[1],E):k(e[0],e[1])):w?k(e,E):k(e)};if(b)s=e;else{if("function"!=typeof(f=l(e)))throw TypeError("Target is not iterable");if(o(f)){for(d=0,p=a(e.length);p>d;d++)if((h=x(e[d]))&&h instanceof c)return h;return new c(!1)}s=f.call(e)}for(g=s.next;!(v=g.call(s)).done;){try{h=x(v.value)}catch(e){throw u(s),e}if("object"==typeof h&&h&&h instanceof c)return h}return new c(!1)}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,r){var n=r(8),o=r(40),a=r(11),i=r(31),l=r(44),u=r(67),c=o("wks"),s=n.Symbol,f=u?s:s&&s.withoutSetter||i;e.exports=function(e){return a(c,e)||(l&&a(s,e)?c[e]=s[e]:c[e]=f("Symbol."+e)),c[e]}},function(e,t,r){var n=r(5);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 0:return function(){return e.call(t)};case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t,r){(function(t){var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof t&&t)||function(){return this}()||Function("return this")()}).call(this,r(34))},function(e,t,r){var n=r(61),o=r(11),a=r(82),i=r(14).f;e.exports=function(e){var t=n.Symbol||(n.Symbol={});o(t,e)||i(t,e,{value:a.f(e)})}},function(e,t,r){var n=r(61),o=r(8),a=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?a(n[e])||a(o[e]):n[e]&&n[e][t]||o[e]&&o[e][t]}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e){return"object"===typeof e?null!==e:"function"===typeof e}},function(e,t,r){var n=r(16),o=r(57),a=r(2),i=r(29),l=Object.defineProperty;t.f=n?l:function(e,t,r){if(a(e),t=i(t,!0),a(r),o)try{return l(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(3),o=r(48);e.exports=n?o:function(e){return Map.prototype.entries.call(e)}},function(e,t,r){var n=r(12);e.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,r){var n=r(2),o=r(5),a=r(6)("species");e.exports=function(e,t){var r,i=n(e).constructor;return void 0===i||void 0==(r=n(i)[a])?t:o(r)}},function(e,t,r){var n=r(16),o=r(14),a=r(23);e.exports=n?function(e,t,r){return o.f(e,t,a(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(3),o=r(48);e.exports=n?o:function(e){return Set.prototype.values.call(e)}},function(e,t,r){var n=r(56),o=r(37);e.exports=function(e){return n(o(e))}},function(e,t,r){var n=r(8),o=r(18),a=r(11),i=r(38),l=r(59),u=r(24),c=u.get,s=u.enforce,f=String(String).split("String");(e.exports=function(e,t,r,l){var u,c=!!l&&!!l.unsafe,d=!!l&&!!l.enumerable,p=!!l&&!!l.noTargetGet;"function"==typeof r&&("string"!=typeof t||a(r,"name")||o(r,"name",t),(u=s(r)).source||(u.source=f.join("string"==typeof t?t:""))),e!==n?(c?!p&&e[t]&&(d=!0):delete e[t],d?e[t]=r:o(e,t,r)):d?e[t]=r:i(t,r)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||l(this)}))},function(e,t,r){var n=r(14).f,o=r(11),a=r(6)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,a)&&n(e,a,{configurable:!0,value:t})}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,r){var n,o,a,i=r(92),l=r(8),u=r(13),c=r(18),s=r(11),f=r(39),d=r(30),p=r(25),h=l.WeakMap;if(i){var g=f.state||(f.state=new h),v=g.get,m=g.has,y=g.set;n=function(e,t){return t.facade=e,y.call(g,e,t),t},o=function(e){return v.call(g,e)||{}},a=function(e){return m.call(g,e)}}else{var b=d("state");p[b]=!0,n=function(e,t){return t.facade=e,c(e,b,t),t},o=function(e){return s(e,b)?e[b]:{}},a=function(e){return s(e,b)}}e.exports={set:n,get:o,has:a,enforce:function(e){return a(e)?o(e):n(e,{})},getterFor:function(e){return function(t){var r;if(!u(t)||(r=o(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return r}}}},function(e,t){e.exports={}},function(e,t,r){var n=r(42),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t){e.exports={}},function(e,t,r){var n=r(37);e.exports=function(e){return Object(n(e))}},function(e,t,r){var n=r(13);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can\'t convert object to primitive value")}},function(e,t,r){var n=r(40),o=r(31),a=n("keys");e.exports=function(e){return a[e]||(a[e]=o(e))}},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++r+n).toString(36)}},function(e,t,r){var n,o=r(2),a=r(99),i=r(43),l=r(25),u=r(100),c=r(58),s=r(30),f=s("IE_PROTO"),d=function(){},p=function(e){return"<script>"+e+"</"+"script>"},h=function(){try{n=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;h=n?function(e){e.write(p("")),e.close();var t=e.parentWindow.Object;return e=null,t}(n):((t=c("iframe")).style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(p("document.F=Object")),e.close(),e.F);for(var r=i.length;r--;)delete h.prototype[i[r]];return h()};l[f]=!0,e.exports=Object.create||function(e,t){var r;return null!==e?(d.prototype=o(e),r=new d,d.prototype=null,r[f]=e):r=h(),void 0===t?r:a(r,t)}},function(e,t,r){"use strict";var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();var o=[[{color:"0, 0, 0",class:"ansi-black"},{color:"187, 0, 0",class:"ansi-red"},{color:"0, 187, 0",class:"ansi-green"},{color:"187, 187, 0",class:"ansi-yellow"},{color:"0, 0, 187",class:"ansi-blue"},{color:"187, 0, 187",class:"ansi-magenta"},{color:"0, 187, 187",class:"ansi-cyan"},{color:"255,255,255",class:"ansi-white"}],[{color:"85, 85, 85",class:"ansi-bright-black"},{color:"255, 85, 85",class:"ansi-bright-red"},{color:"0, 255, 0",class:"ansi-bright-green"},{color:"255, 255, 85",class:"ansi-bright-yellow"},{color:"85, 85, 255",class:"ansi-bright-blue"},{color:"255, 85, 255",class:"ansi-bright-magenta"},{color:"85, 255, 255",class:"ansi-bright-cyan"},{color:"255, 255, 255",class:"ansi-bright-white"}]],a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.fg=this.bg=this.fg_truecolor=this.bg_truecolor=null,this.bright=0}return n(e,null,[{key:"escapeForHtml",value:function(t){return(new e).escapeForHtml(t)}},{key:"linkify",value:function(t){return(new e).linkify(t)}},{key:"ansiToHtml",value:function(t,r){return(new e).ansiToHtml(t,r)}},{key:"ansiToJson",value:function(t,r){return(new e).ansiToJson(t,r)}},{key:"ansiToText",value:function(t){return(new e).ansiToText(t)}}]),n(e,[{key:"setupPalette",value:function(){this.PALETTE_COLORS=[];for(var e=0;e<2;++e)for(var t=0;t<8;++t)this.PALETTE_COLORS.push(o[e][t].color);for(var r=[0,95,135,175,215,255],n=function(e,t,n){return r[e]+", "+r[t]+", "+r[n]},a=0;a<6;++a)for(var i=0;i<6;++i)for(var l=0;l<6;++l)this.PALETTE_COLORS.push(n(a,i,l));for(var u=8,c=0;c<24;++c,u+=10)this.PALETTE_COLORS.push(n(u,u,u))}},{key:"escapeForHtml",value:function(e){return e.replace(/[&<>]/gm,(function(e){return"&"==e?"&amp;":"<"==e?"&lt;":">"==e?"&gt;":""}))}},{key:"linkify",value:function(e){return e.replace(/(https?:\\/\\/[^\\s]+)/gm,(function(e){return\'<a href="\'+e+\'">\'+e+"</a>"}))}},{key:"ansiToHtml",value:function(e,t){return this.process(e,t,!0)}},{key:"ansiToJson",value:function(e,t){return(t=t||{}).json=!0,t.clearLine=!1,this.process(e,t,!0)}},{key:"ansiToText",value:function(e){return this.process(e,{},!1)}},{key:"process",value:function(e,t,r){var n=this,o=e.split(/\\033\\[/),a=o.shift();void 0!==t&&null!==t||(t={}),t.clearLine=/\\r/.test(e);var i=o.map((function(e){return n.processChunk(e,t,r)}));if(t&&t.json){var l=this.processChunkJson("");return l.content=a,l.clearLine=t.clearLine,i.unshift(l),t.remove_empty&&(i=i.filter((function(e){return!e.isEmpty()}))),i}return i.unshift(a),i.join("")}},{key:"processChunkJson",value:function(e,t,r){var n=(t="undefined"==typeof t?{}:t).use_classes="undefined"!=typeof t.use_classes&&t.use_classes,a=t.key=n?"class":"color",i={content:e,fg:null,bg:null,fg_truecolor:null,bg_truecolor:null,clearLine:t.clearLine,decoration:null,was_processed:!1,isEmpty:function(){return!i.content}},l=e.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);if(!l)return i;i.content=l[4];var u=l[2].split(";");if(""!==l[1]||"m"!==l[3])return i;if(!r)return i;var c=this;for(c.decoration=null;u.length>0;){var s=u.shift(),f=parseInt(s);if(isNaN(f)||0===f)c.fg=c.bg=c.decoration=null;else if(1===f)c.decoration="bold";else if(2===f)c.decoration="dim";else if(3==f)c.decoration="italic";else if(4==f)c.decoration="underline";else if(5==f)c.decoration="blink";else if(7===f)c.decoration="reverse";else if(8===f)c.decoration="hidden";else if(9===f)c.decoration="strikethrough";else if(39==f)c.fg=null;else if(49==f)c.bg=null;else if(f>=30&&f<38)c.fg=o[0][f%10][a];else if(f>=90&&f<98)c.fg=o[1][f%10][a];else if(f>=40&&f<48)c.bg=o[0][f%10][a];else if(f>=100&&f<108)c.bg=o[1][f%10][a];else if(38===f||48===f){var d=38===f;if(u.length>=1){var p=u.shift();if("5"===p&&u.length>=1){var h=parseInt(u.shift());if(h>=0&&h<=255)if(n){var g=h>=16?"ansi-palette-"+h:o[h>7?1:0][h%8].class;d?c.fg=g:c.bg=g}else this.PALETTE_COLORS||c.setupPalette(),d?c.fg=this.PALETTE_COLORS[h]:c.bg=this.PALETTE_COLORS[h]}else if("2"===p&&u.length>=3){var v=parseInt(u.shift()),m=parseInt(u.shift()),y=parseInt(u.shift());if(v>=0&&v<=255&&m>=0&&m<=255&&y>=0&&y<=255){var b=v+", "+m+", "+y;n?d?(c.fg="ansi-truecolor",c.fg_truecolor=b):(c.bg="ansi-truecolor",c.bg_truecolor=b):d?c.fg=b:c.bg=b}}}}}if(null===c.fg&&null===c.bg&&null===c.decoration)return i;return i.fg=c.fg,i.bg=c.bg,i.fg_truecolor=c.fg_truecolor,i.bg_truecolor=c.bg_truecolor,i.decoration=c.decoration,i.was_processed=!0,i}},{key:"processChunk",value:function(e,t,r){var n=this;t=t||{};var o=this.processChunkJson(e,t,r);if(t.json)return o;if(o.isEmpty())return"";if(!o.was_processed)return o.content;var a=t.use_classes,i=[],l=[],u={},c=function(e){var t=[],r=void 0;for(r in e)e.hasOwnProperty(r)&&t.push("data-"+r+\'="\'+n.escapeForHtml(e[r])+\'"\');return t.length>0?" "+t.join(" "):""};return o.fg&&(a?(l.push(o.fg+"-fg"),null!==o.fg_truecolor&&(u["ansi-truecolor-fg"]=o.fg_truecolor,o.fg_truecolor=null)):i.push("color:rgb("+o.fg+")")),o.bg&&(a?(l.push(o.bg+"-bg"),null!==o.bg_truecolor&&(u["ansi-truecolor-bg"]=o.bg_truecolor,o.bg_truecolor=null)):i.push("background-color:rgb("+o.bg+")")),o.decoration&&(a?l.push("ansi-"+o.decoration):"bold"===o.decoration?i.push("font-weight:bold"):"dim"===o.decoration?i.push("opacity:0.5"):"italic"===o.decoration?i.push("font-style:italic"):"reverse"===o.decoration?i.push("filter:invert(100%)"):"hidden"===o.decoration?i.push("visibility:hidden"):"strikethrough"===o.decoration?i.push("text-decoration:line-through"):i.push("text-decoration:"+o.decoration)),a?\'<span class="\'+l.join(" ")+\'"\'+c(u)+">"+o.content+"</span>":\'<span style="\'+i.join(";")+\'"\'+c(u)+">"+o.content+"</span>"}}]),e}();e.exports=a},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"===typeof window&&(r=window)}e.exports=r},function(e,t,r){var n=r(16),o=r(55),a=r(23),i=r(20),l=r(29),u=r(11),c=r(57),s=Object.getOwnPropertyDescriptor;t.f=n?s:function(e,t){if(e=i(e),t=l(t,!0),c)try{return s(e,t)}catch(e){}if(u(e,t))return a(!o.f.call(e,t),e[t])}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can\'t call method on "+e);return e}},function(e,t,r){var n=r(8),o=r(18);e.exports=function(e,t){try{o(n,e,t)}catch(r){n[e]=t}return t}},function(e,t,r){var n=r(8),o=r(38),a="__core-js_shared__",i=n[a]||o(a,{});e.exports=i},function(e,t,r){var n=r(3),o=r(39);(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.8.3",mode:n?"pure":"global",copyright:"\xa9 2021 Denis Pushkarev (zloirock.ru)"})},function(e,t,r){var n=r(62),o=r(43).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,r){var n=r(12);e.exports=!!Object.getOwnPropertySymbols&&!n((function(){return!String(Symbol())}))},function(e,t,r){var n=r(68),o=r(27),a=r(6)("iterator");e.exports=function(e){if(void 0!=e)return e[a]||e["@@iterator"]||o[n(e)]}},function(e,t,r){var n={};n[r(6)("toStringTag")]="z",e.exports="[object z]"===String(n)},function(e,t,r){"use strict";var n=r(1),o=r(102),a=r(76),i=r(72),l=r(22),u=r(18),c=r(21),s=r(6),f=r(3),d=r(27),p=r(75),h=p.IteratorPrototype,g=p.BUGGY_SAFARI_ITERATORS,v=s("iterator"),m="keys",y="values",b="entries",w=function(){return this};e.exports=function(e,t,r,s,p,k,E){o(r,t,s);var x,S,_,T=function(e){if(e===p&&N)return N;if(!g&&e in P)return P[e];switch(e){case m:case y:case b:return function(){return new r(this,e)}}return function(){return new r(this)}},C=t+" Iterator",O=!1,P=e.prototype,R=P[v]||P["@@iterator"]||p&&P[p],N=!g&&R||T(p),L="Array"==t&&P.entries||R;if(L&&(x=a(L.call(new e)),h!==Object.prototype&&x.next&&(f||a(x)===h||(i?i(x,h):"function"!=typeof x[v]&&u(x,v,w)),l(x,C,!0,!0),f&&(d[C]=w))),p==y&&R&&R.name!==y&&(O=!0,N=function(){return R.call(this)}),f&&!E||P[v]===N||u(P,v,N),d[t]=N,p)if(S={values:T(y),keys:k?N:T(m),entries:T(b)},E)for(_ in S)(g||O||!(_ in P))&&c(P,_,S[_]);else n({target:t,proto:!0,forced:g||O},S);return S}},function(e,t,r){var n=r(2),o=r(45);e.exports=function(e){var t=o(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return n(t.call(e))}},function(e,t,r){var n=r(36);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){"use strict";var n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var r,l,u=i(e),c=1;c<arguments.length;c++){for(var s in r=Object(arguments[c]))o.call(r,s)&&(u[s]=r[s]);if(n){l=n(r);for(var f=0;f<l.length;f++)a.call(r,l[f])&&(u[l[f]]=r[l[f]])}}return u}},function(e,t){var r,n,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function l(e){if(r===setTimeout)return setTimeout(e,0);if((r===a||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"===typeof setTimeout?setTimeout:a}catch(e){r=a}try{n="function"===typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var u,c=[],s=!1,f=-1;function d(){s&&u&&(s=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!s){var e=l(d);s=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,s=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function g(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new h(e,t)),1!==c.length||s||l(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=g,o.addListener=g,o.once=g,o.off=g,o.removeListener=g,o.removeAllListeners=g,o.emit=g,o.prependListener=g,o.prependOnceListener=g,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,r){var n=r(191);e.exports=function(e,t){var r;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=n(e))||t&&e&&"number"===typeof e.length){r&&(e=r);var o=0,a=function(){};return{s:a,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return l=e.done,e},e:function(e){u=!0,i=e},f:function(){try{l||null==r.return||r.return()}finally{if(u)throw i}}}}},function(e,t,r){"use strict";!function e(){if("undefined"!==typeof{}&&"function"===typeof{}.checkDCE)try{({}).checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(184)},function(e,t,r){"use strict";var n=r(1),o=r(8),a=r(64),i=r(21),l=r(65),u=r(4),c=r(70),s=r(13),f=r(12),d=r(71),p=r(22),h=r(97);e.exports=function(e,t,r){var g=-1!==e.indexOf("Map"),v=-1!==e.indexOf("Weak"),m=g?"set":"add",y=o[e],b=y&&y.prototype,w=y,k={},E=function(e){var t=b[e];i(b,e,"add"==e?function(e){return t.call(this,0===e?0:e),this}:"delete"==e?function(e){return!(v&&!s(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return v&&!s(e)?void 0:t.call(this,0===e?0:e)}:"has"==e?function(e){return!(v&&!s(e))&&t.call(this,0===e?0:e)}:function(e,r){return t.call(this,0===e?0:e,r),this})};if(a(e,"function"!=typeof y||!(v||b.forEach&&!f((function(){(new y).entries().next()})))))w=r.getConstructor(t,e,g,m),l.REQUIRED=!0;else if(a(e,!0)){var x=new w,S=x[m](v?{}:-0,1)!=x,_=f((function(){x.has(1)})),T=d((function(e){new y(e)})),C=!v&&f((function(){for(var e=new y,t=5;t--;)e[m](t,t);return!e.has(-0)}));T||((w=t((function(t,r){c(t,w,e);var n=h(new y,t,w);return void 0!=r&&u(r,n[m],{that:n,AS_ENTRIES:g}),n}))).prototype=b,b.constructor=w),(_||C)&&(E("delete"),E("has"),g&&E("get")),(C||S)&&E(m),v&&b.clear&&delete b.clear}return k[e]=w,n({global:!0,forced:w!=y},k),p(w,e),v||r.setStrong(w,e,g),w}},function(e,t,r){"use strict";var n={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,a=o&&!n.call({1:2},1);t.f=a?function(e){var t=o(this,e);return!!t&&t.enumerable}:n},function(e,t,r){var n=r(12),o=r(36),a="".split;e.exports=n((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==o(e)?a.call(e,""):Object(e)}:Object},function(e,t,r){var n=r(16),o=r(12),a=r(58);e.exports=!n&&!o((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(e,t,r){var n=r(8),o=r(13),a=n.document,i=o(a)&&o(a.createElement);e.exports=function(e){return i?a.createElement(e):{}}},function(e,t,r){var n=r(39),o=Function.toString;"function"!=typeof n.inspectSource&&(n.inspectSource=function(e){return o.call(e)}),e.exports=n.inspectSource},function(e,t,r){var n=r(11),o=r(93),a=r(35),i=r(14);e.exports=function(e,t){for(var r=o(t),l=i.f,u=a.f,c=0;c<r.length;c++){var s=r[c];n(e,s)||l(e,s,u(t,s))}}},function(e,t,r){var n=r(8);e.exports=n},function(e,t,r){var n=r(11),o=r(20),a=r(94).indexOf,i=r(25);e.exports=function(e,t){var r,l=o(e),u=0,c=[];for(r in l)!n(i,r)&&n(l,r)&&c.push(r);for(;t.length>u;)n(l,r=t[u++])&&(~a(c,r)||c.push(r));return c}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(12),o=/#|\\.prototype\\./,a=function(e,t){var r=l[i(e)];return r==c||r!=u&&("function"==typeof t?n(t):!!t)},i=a.normalize=function(e){return String(e).replace(o,".").toLowerCase()},l=a.data={},u=a.NATIVE="N",c=a.POLYFILL="P";e.exports=a},function(e,t,r){var n=r(25),o=r(13),a=r(11),i=r(14).f,l=r(31),u=r(96),c=l("meta"),s=0,f=Object.isExtensible||function(){return!0},d=function(e){i(e,c,{value:{objectID:"O"+ ++s,weakData:{}}})},p=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,c)){if(!f(e))return"F";if(!t)return"E";d(e)}return e[c].objectID},getWeakData:function(e,t){if(!a(e,c)){if(!f(e))return!0;if(!t)return!1;d(e)}return e[c].weakData},onFreeze:function(e){return u&&p.REQUIRED&&f(e)&&!a(e,c)&&d(e),e}};n[c]=!0},function(e,t,r){var n=r(6),o=r(27),a=n("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||i[a]===e)}},function(e,t,r){var n=r(44);e.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,r){var n=r(46),o=r(36),a=r(6)("toStringTag"),i="Arguments"==o(function(){return arguments}());e.exports=n?o:function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),a))?r:i?o(t):"Object"==(n=o(t))&&"function"==typeof t.callee?"Arguments":n}},function(e,t,r){var n=r(2);e.exports=function(e){var t=e.return;if(void 0!==t)return n(t.call(e)).value}},function(e,t){e.exports=function(e,t,r){if(!(e instanceof t))throw TypeError("Incorrect "+(r?r+" ":"")+"invocation");return e}},function(e,t,r){var n=r(6)("iterator"),o=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){o=!0}};i[n]=function(){return this},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var a={};a[n]=function(){return{next:function(){return{done:r=!0}}}},e(a)}catch(e){}return r}},function(e,t,r){var n=r(2),o=r(98);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(r,[]),t=r instanceof Array}catch(e){}return function(r,a){return n(r),o(a),t?e.call(r,a):r.__proto__=a,r}}():void 0)},function(e,t,r){"use strict";var n=r(14).f,o=r(32),a=r(101),i=r(7),l=r(70),u=r(4),c=r(47),s=r(104),f=r(16),d=r(65).fastKey,p=r(24),h=p.set,g=p.getterFor;e.exports={getConstructor:function(e,t,r,c){var s=e((function(e,n){l(e,s,t),h(e,{type:t,index:o(null),first:void 0,last:void 0,size:0}),f||(e.size=0),void 0!=n&&u(n,e[c],{that:e,AS_ENTRIES:r})})),p=g(t),v=function(e,t,r){var n,o,a=p(e),i=m(e,t);return i?i.value=r:(a.last=i={index:o=d(t,!0),key:t,value:r,previous:n=a.last,next:void 0,removed:!1},a.first||(a.first=i),n&&(n.next=i),f?a.size++:e.size++,"F"!==o&&(a.index[o]=i)),e},m=function(e,t){var r,n=p(e),o=d(t);if("F"!==o)return n.index[o];for(r=n.first;r;r=r.next)if(r.key==t)return r};return a(s.prototype,{clear:function(){for(var e=p(this),t=e.index,r=e.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete t[r.index],r=r.next;e.first=e.last=void 0,f?e.size=0:this.size=0},delete:function(e){var t=this,r=p(t),n=m(t,e);if(n){var o=n.next,a=n.previous;delete r.index[n.index],n.removed=!0,a&&(a.next=o),o&&(o.previous=a),r.first==n&&(r.first=o),r.last==n&&(r.last=a),f?r.size--:t.size--}return!!n},forEach:function(e){for(var t,r=p(this),n=i(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.next:r.first;)for(n(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!m(this,e)}}),a(s.prototype,r?{get:function(e){var t=m(this,e);return t&&t.value},set:function(e,t){return v(this,0===e?0:e,t)}}:{add:function(e){return v(this,e=0===e?0:e,e)}}),f&&n(s.prototype,"size",{get:function(){return p(this).size}}),s},setStrong:function(e,t,r){var n=t+" Iterator",o=g(t),a=g(n);c(e,t,(function(e,t){h(this,{type:n,target:e,state:o(e),kind:t,last:void 0})}),(function(){for(var e=a(this),t=e.kind,r=e.last;r&&r.removed;)r=r.previous;return e.target&&(e.last=r=r?r.next:e.state.first)?"keys"==t?{value:r.key,done:!1}:"values"==t?{value:r.value,done:!1}:{value:[r.key,r.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),r?"entries":"values",!r,!0),s(t)}}},function(e,t,r){var n=r(62),o=r(43);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t,r){"use strict";var n,o,a,i=r(12),l=r(76),u=r(18),c=r(11),s=r(6),f=r(3),d=s("iterator"),p=!1;[].keys&&("next"in(a=[].keys())?(o=l(l(a)))!==Object.prototype&&(n=o):p=!0);var h=void 0==n||i((function(){var e={};return n[d].call(e)!==e}));h&&(n={}),f&&!h||c(n,d)||u(n,d,(function(){return this})),e.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:p}},function(e,t,r){var n=r(11),o=r(28),a=r(30),i=r(103),l=a("IE_PROTO"),u=Object.prototype;e.exports=i?Object.getPrototypeOf:function(e){return e=o(e),n(e,l)?e[l]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?u:null}},function(e,t,r){var n=r(46),o=r(21),a=r(105);n||o(Object.prototype,"toString",a,{unsafe:!0})},function(e,t,r){"use strict";var n=r(107).charAt,o=r(24),a=r(47),i="String Iterator",l=o.set,u=o.getterFor(i);a(String,"String",(function(e){l(this,{type:i,string:String(e),index:0})}),(function(){var e,t=u(this),r=t.string,o=t.index;return o>=r.length?{value:void 0,done:!0}:(e=n(r,o),t.index+=e.length,{value:e,done:!1})}))},function(e,t,r){"use strict";var n=r(2),o=r(5);e.exports=function(){for(var e,t=n(this),r=o(t.delete),a=!0,i=0,l=arguments.length;i<l;i++)e=r.call(t,arguments[i]),a=a&&e;return!!a}},function(e,t,r){"use strict";var n=r(5),o=r(7),a=r(4);e.exports=function(e){var t,r,i,l,u=arguments.length,c=u>1?arguments[1]:void 0;return n(this),(t=void 0!==c)&&n(c),void 0==e?new this:(r=[],t?(i=0,l=o(c,u>2?arguments[2]:void 0,2),a(e,(function(e){r.push(l(e,i++))}))):a(e,r.push,{that:r}),new this(r))}},function(e,t,r){"use strict";e.exports=function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}},function(e,t,r){var n=r(6);t.f=n},function(e,t,r){var n=r(13),o=r(49),a=r(6)("species");e.exports=function(e,t){var r;return o(e)&&("function"!=typeof(r=e.constructor)||r!==Array&&!o(r.prototype)?n(r)&&null===(r=r[a])&&(r=void 0):r=void 0),new(void 0===r?Array:r)(0===t?0:t)}},function(e,t,r){"use strict";var n=r(29),o=r(14),a=r(23);e.exports=function(e,t,r){var i=n(t);i in e?o.f(e,i,a(0,r)):e[i]=r}},function(e,t,r){var n,o,a=r(8),i=r(168),l=a.process,u=l&&l.versions,c=u&&u.v8;c?o=(n=c.split("."))[0]+n[1]:i&&(!(n=i.match(/Edge\\/(\\d+)/))||n[1]>=74)&&(n=i.match(/Chrome\\/(\\d+)/))&&(o=n[1]),e.exports=o&&+o},function(e,t,r){"use strict";var n=r(178);function o(){}var a=null,i={};function l(e){if("object"!==typeof this)throw new TypeError("Promises must be constructed via new");if("function"!==typeof e)throw new TypeError("Promise constructor\'s argument is not a function");this._U=0,this._V=0,this._W=null,this._X=null,e!==o&&p(e,this)}function u(e,t){for(;3===e._V;)e=e._W;if(l._Y&&l._Y(e),0===e._V)return 0===e._U?(e._U=1,void(e._X=t)):1===e._U?(e._U=2,void(e._X=[e._X,t])):void e._X.push(t);!function(e,t){n((function(){var r=1===e._V?t.onFulfilled:t.onRejected;if(null!==r){var n=function(e,t){try{return e(t)}catch(e){return a=e,i}}(r,e._W);n===i?s(t.promise,a):c(t.promise,n)}else 1===e._V?c(t.promise,e._W):s(t.promise,e._W)}))}(e,t)}function c(e,t){if(t===e)return s(e,new TypeError("A promise cannot be resolved with itself."));if(t&&("object"===typeof t||"function"===typeof t)){var r=function(e){try{return e.then}catch(e){return a=e,i}}(t);if(r===i)return s(e,a);if(r===e.then&&t instanceof l)return e._V=3,e._W=t,void f(e);if("function"===typeof r)return void p(r.bind(t),e)}e._V=1,e._W=t,f(e)}function s(e,t){e._V=2,e._W=t,l._Z&&l._Z(e,t),f(e)}function f(e){if(1===e._U&&(u(e,e._X),e._X=null),2===e._U){for(var t=0;t<e._X.length;t++)u(e,e._X[t]);e._X=null}}function d(e,t,r){this.onFulfilled="function"===typeof e?e:null,this.onRejected="function"===typeof t?t:null,this.promise=r}function p(e,t){var r=!1,n=function(e,t,r){try{e(t,r)}catch(e){return a=e,i}}(e,(function(e){r||(r=!0,c(t,e))}),(function(e){r||(r=!0,s(t,e))}));r||n!==i||(r=!0,s(t,a))}e.exports=l,l._Y=null,l._Z=null,l._0=o,l.prototype.then=function(e,t){if(this.constructor!==l)return function(e,t,r){return new e.constructor((function(n,a){var i=new l(o);i.then(n,a),u(e,new d(t,r,i))}))}(this,e,t);var r=new l(o);return u(this,new d(e,t,r)),r}},function(e,t,r){var n=r(204),o={};for(var a in n)n.hasOwnProperty(a)&&(o[n[a]]=a);var i=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var l in i)if(i.hasOwnProperty(l)){if(!("channels"in i[l]))throw new Error("missing channels property: "+l);if(!("labels"in i[l]))throw new Error("missing channel labels property: "+l);if(i[l].labels.length!==i[l].channels)throw new Error("channel and label counts mismatch: "+l);var u=i[l].channels,c=i[l].labels;delete i[l].channels,delete i[l].labels,Object.defineProperty(i[l],"channels",{value:u}),Object.defineProperty(i[l],"labels",{value:c})}i.rgb.hsl=function(e){var t,r,n=e[0]/255,o=e[1]/255,a=e[2]/255,i=Math.min(n,o,a),l=Math.max(n,o,a),u=l-i;return l===i?t=0:n===l?t=(o-a)/u:o===l?t=2+(a-n)/u:a===l&&(t=4+(n-o)/u),(t=Math.min(60*t,360))<0&&(t+=360),r=(i+l)/2,[t,100*(l===i?0:r<=.5?u/(l+i):u/(2-l-i)),100*r]},i.rgb.hsv=function(e){var t,r,n,o,a,i=e[0]/255,l=e[1]/255,u=e[2]/255,c=Math.max(i,l,u),s=c-Math.min(i,l,u),f=function(e){return(c-e)/6/s+.5};return 0===s?o=a=0:(a=s/c,t=f(i),r=f(l),n=f(u),i===c?o=n-r:l===c?o=1/3+t-n:u===c&&(o=2/3+r-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*a,100*c]},i.rgb.hwb=function(e){var t=e[0],r=e[1],n=e[2];return[i.rgb.hsl(e)[0],100*(1/255*Math.min(t,Math.min(r,n))),100*(n=1-1/255*Math.max(t,Math.max(r,n)))]},i.rgb.cmyk=function(e){var t,r=e[0]/255,n=e[1]/255,o=e[2]/255;return[100*((1-r-(t=Math.min(1-r,1-n,1-o)))/(1-t)||0),100*((1-n-t)/(1-t)||0),100*((1-o-t)/(1-t)||0),100*t]},i.rgb.keyword=function(e){var t=o[e];if(t)return t;var r,a,i,l=1/0;for(var u in n)if(n.hasOwnProperty(u)){var c=n[u],s=(a=e,i=c,Math.pow(a[0]-i[0],2)+Math.pow(a[1]-i[1],2)+Math.pow(a[2]-i[2],2));s<l&&(l=s,r=u)}return r},i.keyword.rgb=function(e){return n[e]},i.rgb.xyz=function(e){var t=e[0]/255,r=e[1]/255,n=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)+.1805*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)),100*(.2126*t+.7152*r+.0722*n),100*(.0193*t+.1192*r+.9505*n)]},i.rgb.lab=function(e){var t=i.rgb.xyz(e),r=t[0],n=t[1],o=t[2];return n/=100,o/=108.883,r=(r/=95.047)>.008856?Math.pow(r,1/3):7.787*r+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(r-n),200*(n-(o=o>.008856?Math.pow(o,1/3):7.787*o+16/116))]},i.hsl.rgb=function(e){var t,r,n,o,a,i=e[0]/360,l=e[1]/100,u=e[2]/100;if(0===l)return[a=255*u,a,a];t=2*u-(r=u<.5?u*(1+l):u+l-u*l),o=[0,0,0];for(var c=0;c<3;c++)(n=i+1/3*-(c-1))<0&&n++,n>1&&n--,a=6*n<1?t+6*(r-t)*n:2*n<1?r:3*n<2?t+(r-t)*(2/3-n)*6:t,o[c]=255*a;return o},i.hsl.hsv=function(e){var t=e[0],r=e[1]/100,n=e[2]/100,o=r,a=Math.max(n,.01);return r*=(n*=2)<=1?n:2-n,o*=a<=1?a:2-a,[t,100*(0===n?2*o/(a+o):2*r/(n+r)),100*((n+r)/2)]},i.hsv.rgb=function(e){var t=e[0]/60,r=e[1]/100,n=e[2]/100,o=Math.floor(t)%6,a=t-Math.floor(t),i=255*n*(1-r),l=255*n*(1-r*a),u=255*n*(1-r*(1-a));switch(n*=255,o){case 0:return[n,u,i];case 1:return[l,n,i];case 2:return[i,n,u];case 3:return[i,l,n];case 4:return[u,i,n];case 5:return[n,i,l]}},i.hsv.hsl=function(e){var t,r,n,o=e[0],a=e[1]/100,i=e[2]/100,l=Math.max(i,.01);return n=(2-a)*i,r=a*l,[o,100*(r=(r/=(t=(2-a)*l)<=1?t:2-t)||0),100*(n/=2)]},i.hwb.rgb=function(e){var t,r,n,o,a,i,l,u=e[0]/360,c=e[1]/100,s=e[2]/100,f=c+s;switch(f>1&&(c/=f,s/=f),n=6*u-(t=Math.floor(6*u)),0!==(1&t)&&(n=1-n),o=c+n*((r=1-s)-c),t){default:case 6:case 0:a=r,i=o,l=c;break;case 1:a=o,i=r,l=c;break;case 2:a=c,i=r,l=o;break;case 3:a=c,i=o,l=r;break;case 4:a=o,i=c,l=r;break;case 5:a=r,i=c,l=o}return[255*a,255*i,255*l]},i.cmyk.rgb=function(e){var t=e[0]/100,r=e[1]/100,n=e[2]/100,o=e[3]/100;return[255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o))]},i.xyz.rgb=function(e){var t,r,n,o=e[0]/100,a=e[1]/100,i=e[2]/100;return r=-.9689*o+1.8758*a+.0415*i,n=.0557*o+-.204*a+1.057*i,t=(t=3.2406*o+-1.5372*a+-.4986*i)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,[255*(t=Math.min(Math.max(0,t),1)),255*(r=Math.min(Math.max(0,r),1)),255*(n=Math.min(Math.max(0,n),1))]},i.xyz.lab=function(e){var t=e[0],r=e[1],n=e[2];return r/=100,n/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116)-16,500*(t-r),200*(r-(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116))]},i.lab.xyz=function(e){var t,r,n,o=e[0];t=e[1]/500+(r=(o+16)/116),n=r-e[2]/200;var a=Math.pow(r,3),i=Math.pow(t,3),l=Math.pow(n,3);return r=a>.008856?a:(r-16/116)/7.787,t=i>.008856?i:(t-16/116)/7.787,n=l>.008856?l:(n-16/116)/7.787,[t*=95.047,r*=100,n*=108.883]},i.lab.lch=function(e){var t,r=e[0],n=e[1],o=e[2];return(t=360*Math.atan2(o,n)/2/Math.PI)<0&&(t+=360),[r,Math.sqrt(n*n+o*o),t]},i.lch.lab=function(e){var t,r=e[0],n=e[1];return t=e[2]/360*2*Math.PI,[r,n*Math.cos(t),n*Math.sin(t)]},i.rgb.ansi16=function(e){var t=e[0],r=e[1],n=e[2],o=1 in arguments?arguments[1]:i.rgb.hsv(e)[2];if(0===(o=Math.round(o/50)))return 30;var a=30+(Math.round(n/255)<<2|Math.round(r/255)<<1|Math.round(t/255));return 2===o&&(a+=60),a},i.hsv.ansi16=function(e){return i.rgb.ansi16(i.hsv.rgb(e),e[2])},i.rgb.ansi256=function(e){var t=e[0],r=e[1],n=e[2];return t===r&&r===n?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(r/255*5)+Math.round(n/255*5)},i.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var r=.5*(1+~~(e>50));return[(1&t)*r*255,(t>>1&1)*r*255,(t>>2&1)*r*255]},i.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var r;return e-=16,[Math.floor(e/36)/5*255,Math.floor((r=e%36)/6)/5*255,r%6/5*255]},i.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},i.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var r=t[0];3===t[0].length&&(r=r.split("").map((function(e){return e+e})).join(""));var n=parseInt(r,16);return[n>>16&255,n>>8&255,255&n]},i.rgb.hcg=function(e){var t,r=e[0]/255,n=e[1]/255,o=e[2]/255,a=Math.max(Math.max(r,n),o),i=Math.min(Math.min(r,n),o),l=a-i;return t=l<=0?0:a===r?(n-o)/l%6:a===n?2+(o-r)/l:4+(r-n)/l+4,t/=6,[360*(t%=1),100*l,100*(l<1?i/(1-l):0)]},i.hsl.hcg=function(e){var t=e[1]/100,r=e[2]/100,n=1,o=0;return(n=r<.5?2*t*r:2*t*(1-r))<1&&(o=(r-.5*n)/(1-n)),[e[0],100*n,100*o]},i.hsv.hcg=function(e){var t=e[1]/100,r=e[2]/100,n=t*r,o=0;return n<1&&(o=(r-n)/(1-n)),[e[0],100*n,100*o]},i.hcg.rgb=function(e){var t=e[0]/360,r=e[1]/100,n=e[2]/100;if(0===r)return[255*n,255*n,255*n];var o,a=[0,0,0],i=t%1*6,l=i%1,u=1-l;switch(Math.floor(i)){case 0:a[0]=1,a[1]=l,a[2]=0;break;case 1:a[0]=u,a[1]=1,a[2]=0;break;case 2:a[0]=0,a[1]=1,a[2]=l;break;case 3:a[0]=0,a[1]=u,a[2]=1;break;case 4:a[0]=l,a[1]=0,a[2]=1;break;default:a[0]=1,a[1]=0,a[2]=u}return o=(1-r)*n,[255*(r*a[0]+o),255*(r*a[1]+o),255*(r*a[2]+o)]},i.hcg.hsv=function(e){var t=e[1]/100,r=t+e[2]/100*(1-t),n=0;return r>0&&(n=t/r),[e[0],100*n,100*r]},i.hcg.hsl=function(e){var t=e[1]/100,r=e[2]/100*(1-t)+.5*t,n=0;return r>0&&r<.5?n=t/(2*r):r>=.5&&r<1&&(n=t/(2*(1-r))),[e[0],100*n,100*r]},i.hcg.hwb=function(e){var t=e[1]/100,r=t+e[2]/100*(1-t);return[e[0],100*(r-t),100*(1-r)]},i.hwb.hcg=function(e){var t=e[1]/100,r=1-e[2]/100,n=r-t,o=0;return n<1&&(o=(r-n)/(1-n)),[e[0],100*n,100*o]},i.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},i.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},i.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},i.gray.hsl=i.gray.hsv=function(e){return[0,0,e[0]]},i.gray.hwb=function(e){return[0,100,e[0]]},i.gray.cmyk=function(e){return[0,0,0,e[0]]},i.gray.lab=function(e){return[e[0],0,0]},i.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),r=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(r.length)+r},i.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(187);t.XmlEntities=n.XmlEntities;var o=r(188);t.Html4Entities=o.Html4Entities;var a=r(189);t.Html5Entities=a.Html5Entities,t.AllHtmlEntities=a.Html5Entities},function(e,t,r){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0}),t.codeFrameColumns=c,t.default=function(t,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!a){a=!0;var i="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";if(e.emitWarning)e.emitWarning(i,"DeprecationWarning");else{var l=new Error(i);l.name="DeprecationWarning",console.warn(new Error(i))}}var u={start:{column:n=Math.max(n,0),line:r}};return c(t,u,o)};var n=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=n?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}r.default=e,t&&t.set(e,r);return r}(r(190));function o(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}var a=!1;function i(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}var l=/\\r\\n|[\\n\\r\\u2028\\u2029]/;function u(e,t,r){var n=Object.assign({column:0,line:-1},e.start),o=Object.assign({},n,e.end),a=r||{},i=a.linesAbove,l=void 0===i?2:i,u=a.linesBelow,c=void 0===u?3:u,s=n.line,f=n.column,d=o.line,p=o.column,h=Math.max(s-(l+1),0),g=Math.min(t.length,d+c);-1===s&&(h=0),-1===d&&(g=t.length);var v=d-s,m={};if(v)for(var y=0;y<=v;y++){var b=y+s;if(f)if(0===y){var w=t[b-1].length;m[b]=[f,w-f+1]}else if(y===v)m[b]=[0,p];else{var k=t[b-y].length;m[b]=[0,k]}else m[b]=!0}else m[s]=f===p?!f||[f,0]:[f,p-f];return{start:h,end:g,markerLines:m}}function c(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=(r.highlightCode||r.forceColor)&&(0,n.shouldHighlight)(r),a=(0,n.getChalk)(r),c=i(a),s=function(e,t){return o?e(t):t},f=e.split(l),d=u(t,f,r),p=d.start,h=d.end,g=d.markerLines,v=t.start&&"number"===typeof t.start.column,m=String(h).length,y=o?(0,n.default)(e,r):e,b=y.split(l).slice(p,h).map((function(e,t){var n=p+1+t,o=" ".concat(n).slice(-m),a=" ".concat(o," | "),i=g[n],l=!g[n+1];if(i){var u="";if(Array.isArray(i)){var f=e.slice(0,Math.max(i[0]-1,0)).replace(/[^\\t]/g," "),d=i[1]||1;u=["\\n ",s(c.gutter,a.replace(/\\d/g," ")),f,s(c.marker,"^").repeat(d)].join(""),l&&r.message&&(u+=" "+s(c.message,r.message))}return[s(c.marker,">"),s(c.gutter,a),e,u].join("")}return" ".concat(s(c.gutter,a)).concat(e)})).join("\\n");return r.message&&!v&&(b="".concat(" ".repeat(m+1)).concat(r.message,"\\n").concat(b)),o?a.reset(b):b}}).call(this,r(51))},function(e,t,r){"use strict";r(91),r(77),r(106),r(78),r(108),r(109),r(110),r(111),r(112),r(113),r(114),r(115),r(117),r(118),r(119),r(120),r(121),r(122),r(123),r(124),r(125),r(126),r(128),r(129),r(130),r(131),r(132),r(133),r(134),r(135),r(136),r(137),r(138),r(139),r(140),r(141),r(142),r(143),r(144),r(145),r(149),r(181).polyfill()},function(e,t,r){"use strict";var n=r(54),o=r(73);e.exports=n("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),o)},function(e,t,r){var n=r(8),o=r(59),a=n.WeakMap;e.exports="function"===typeof a&&/native code/.test(o(a))},function(e,t,r){var n=r(10),o=r(41),a=r(63),i=r(2);e.exports=n("Reflect","ownKeys")||function(e){var t=o.f(i(e)),r=a.f;return r?t.concat(r(e)):t}},function(e,t,r){var n=r(20),o=r(26),a=r(95),i=function(e){return function(t,r,i){var l,u=n(t),c=o(u.length),s=a(i,c);if(e&&r!=r){for(;c>s;)if((l=u[s++])!=l)return!0}else for(;c>s;s++)if((e||s in u)&&u[s]===r)return e||s||0;return!e&&-1}};e.exports={includes:i(!0),indexOf:i(!1)}},function(e,t,r){var n=r(42),o=Math.max,a=Math.min;e.exports=function(e,t){var r=n(e);return r<0?o(r+t,0):a(r,t)}},function(e,t,r){var n=r(12);e.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,r){var n=r(13),o=r(72);e.exports=function(e,t,r){var a,i;return o&&"function"==typeof(a=t.constructor)&&a!==r&&n(i=a.prototype)&&i!==r.prototype&&o(e,i),e}},function(e,t,r){var n=r(13);e.exports=function(e){if(!n(e)&&null!==e)throw TypeError("Can\'t set "+String(e)+" as a prototype");return e}},function(e,t,r){var n=r(16),o=r(14),a=r(2),i=r(74);e.exports=n?Object.defineProperties:function(e,t){a(e);for(var r,n=i(t),l=n.length,u=0;l>u;)o.f(e,r=n[u++],t[r]);return e}},function(e,t,r){var n=r(10);e.exports=n("document","documentElement")},function(e,t,r){var n=r(21);e.exports=function(e,t,r){for(var o in t)n(e,o,t[o],r);return e}},function(e,t,r){"use strict";var n=r(75).IteratorPrototype,o=r(32),a=r(23),i=r(22),l=r(27),u=function(){return this};e.exports=function(e,t,r){var c=t+" Iterator";return e.prototype=o(n,{next:a(1,r)}),i(e,c,!1,!0),l[c]=u,e}},function(e,t,r){var n=r(12);e.exports=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,r){"use strict";var n=r(10),o=r(14),a=r(6),i=r(16),l=a("species");e.exports=function(e){var t=n(e),r=o.f;i&&t&&!t[l]&&r(t,l,{configurable:!0,get:function(){return this}})}},function(e,t,r){"use strict";var n=r(46),o=r(68);e.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},function(e,t,r){"use strict";var n=r(54),o=r(73);e.exports=n("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),o)},function(e,t,r){var n=r(42),o=r(37),a=function(e){return function(t,r){var a,i,l=String(o(t)),u=n(r),c=l.length;return u<0||u>=c?e?"":void 0:(a=l.charCodeAt(u))<55296||a>56319||u+1===c||(i=l.charCodeAt(u+1))<56320||i>57343?e?l.charAt(u):a:e?l.slice(u,u+2):i-56320+(a-55296<<10)+65536}};e.exports={codeAt:a(!1),charAt:a(!0)}},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(79);n({target:"Map",proto:!0,real:!0,forced:o},{deleteAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{every:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return!u(r,(function(e,r,o){if(!n(r,e,t))return o()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{filter:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){n(r,e,t)&&d.call(o,e,r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{find:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o(r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{findKey:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o(e)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){r(1)({target:"Map",stat:!0},{from:r(80)})},function(e,t,r){"use strict";var n=r(1),o=r(4),a=r(5);n({target:"Map",stat:!0},{groupBy:function(e,t){var r=new this;a(t);var n=a(r.has),i=a(r.get),l=a(r.set);return o(e,(function(e){var o=t(e);n.call(r,o)?i.call(r,o).push(e):l.call(r,o,[e])})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(15),l=r(116),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{includes:function(e){return u(i(a(this)),(function(t,r,n){if(l(r,e))return n()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,r){"use strict";var n=r(1),o=r(4),a=r(5);n({target:"Map",stat:!0},{keyBy:function(e,t){var r=new this;a(t);var n=a(r.set);return o(e,(function(e){n.call(r,t(e),e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(15),l=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{keyOf:function(e){return l(i(a(this)),(function(t,r,n){if(r===e)return n(t)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{mapKeys:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){d.call(o,n(r,e,t),r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{mapValues:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){d.call(o,e,n(r,e,t))}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{merge:function(e){for(var t=a(this),r=i(t.set),n=0;n<arguments.length;)l(arguments[n++],r,{that:t,AS_ENTRIES:!0});return t}})},function(e,t,r){r(1)({target:"Map",stat:!0},{of:r(81)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{reduce:function(e){var t=a(this),r=l(t),n=arguments.length<2,o=n?void 0:arguments[1];if(i(e),u(r,(function(r,a){n?(n=!1,o=a):o=e(o,a,r,t)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),n)throw TypeError("Reduce of empty map with no initial value");return o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{some:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5);n({target:"Map",proto:!0,real:!0,forced:o},{update:function(e,t){var r=a(this),n=arguments.length;i(t);var o=r.has(e);if(!o&&n<3)throw TypeError("Updating absent value");var l=o?r.get(e):i(n>2?arguments[2]:void 0)(e,r);return r.set(e,t(l,e,r)),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(127);n({target:"Set",proto:!0,real:!0,forced:o},{addAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(2),o=r(5);e.exports=function(){for(var e=n(this),t=o(e.add),r=0,a=arguments.length;r<a;r++)t.call(e,arguments[r]);return e}},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(79);n({target:"Set",proto:!0,real:!0,forced:o},{deleteAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{difference:function(e){var t=i(this),r=new(u(t,a("Set")))(t),n=l(r.delete);return c(e,(function(e){n.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{every:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return!u(r,(function(e,r){if(!n(e,e,t))return r()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(19),f=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{filter:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Set"))),d=l(o.add);return f(r,(function(e){n(e,e,t)&&d.call(o,e)}),{IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{find:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r){if(n(e,e,t))return r(e)}),{IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){r(1)({target:"Set",stat:!0},{from:r(80)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{intersection:function(e){var t=i(this),r=new(u(t,a("Set"))),n=l(t.has),o=l(r.add);return c(e,(function(e){n.call(t,e)&&o.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isDisjointFrom:function(e){var t=a(this),r=i(t.has);return!l(e,(function(e,n){if(!0===r.call(t,e))return n()}),{INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(48),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isSubsetOf:function(e){var t=u(this),r=i(e),n=r.has;return"function"!=typeof n&&(r=new(a("Set"))(e),n=l(r.has)),!c(t,(function(e,t){if(!1===n.call(r,e))return t()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isSupersetOf:function(e){var t=a(this),r=i(t.has);return!l(e,(function(e,n){if(!1===r.call(t,e))return n()}),{INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(19),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{join:function(e){var t=a(this),r=i(t),n=void 0===e?",":String(e),o=[];return l(r,o.push,{that:o,IS_ITERATOR:!0}),o.join(n)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(19),f=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{map:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Set"))),d=l(o.add);return f(r,(function(e){d.call(o,n(e,e,t))}),{IS_ITERATOR:!0}),o}})},function(e,t,r){r(1)({target:"Set",stat:!0},{of:r(81)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{reduce:function(e){var t=a(this),r=l(t),n=arguments.length<2,o=n?void 0:arguments[1];if(i(e),u(r,(function(r){n?(n=!1,o=r):o=e(o,r,r,t)}),{IS_ITERATOR:!0}),n)throw TypeError("Reduce of empty set with no initial value");return o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{some:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r){if(n(e,e,t))return r()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{symmetricDifference:function(e){var t=i(this),r=new(u(t,a("Set")))(t),n=l(r.delete),o=l(r.add);return c(e,(function(e){n.call(r,e)||o.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{union:function(e){var t=i(this),r=new(u(t,a("Set")))(t);return c(e,l(r.add),{that:r}),r}})},function(e,t,r){var n=r(8),o=r(146),a=r(147),i=r(18),l=r(6),u=l("iterator"),c=l("toStringTag"),s=a.values;for(var f in o){var d=n[f],p=d&&d.prototype;if(p){if(p[u]!==s)try{i(p,u,s)}catch(e){p[u]=s}if(p[c]||i(p,c,f),o[f])for(var h in a)if(p[h]!==a[h])try{i(p,h,a[h])}catch(e){p[h]=a[h]}}}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,r){"use strict";var n=r(20),o=r(148),a=r(27),i=r(24),l=r(47),u="Array Iterator",c=i.set,s=i.getterFor(u);e.exports=l(Array,"Array",(function(e,t){c(this,{type:u,target:n(e),index:0,kind:t})}),(function(){var e=s(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:n,done:!1}:"values"==r?{value:t[n],done:!1}:{value:[n,t[n]],done:!1}}),"values"),a.Arguments=a.Array,o("keys"),o("values"),o("entries")},function(e,t,r){var n=r(6),o=r(32),a=r(14),i=n("unscopables"),l=Array.prototype;void 0==l[i]&&a.f(l,i,{configurable:!0,value:o(null)}),e.exports=function(e){l[i][e]=!0}},function(e,t,r){"use strict";r(150),r(153),r(154),r(155),r(156),r(157),r(158),r(159),r(160),r(161),r(162),r(163),r(164),r(165),r(166),r(169),r(172),r(173),r(77),r(78),r(174),r(175),r(176),"undefined"===typeof Promise&&(r(177).enable(),self.Promise=r(179)),"undefined"!==typeof window&&r(180),Object.assign=r(50)},function(e,t,r){"use strict";var n=r(1),o=r(8),a=r(10),i=r(3),l=r(16),u=r(44),c=r(67),s=r(12),f=r(11),d=r(49),p=r(13),h=r(2),g=r(28),v=r(20),m=r(29),y=r(23),b=r(32),w=r(74),k=r(41),E=r(151),x=r(63),S=r(35),_=r(14),T=r(55),C=r(18),O=r(21),P=r(40),R=r(30),N=r(25),L=r(31),A=r(6),I=r(82),j=r(9),M=r(22),D=r(24),q=r(152).forEach,z=R("hidden"),U="Symbol",F=A("toPrimitive"),B=D.set,V=D.getterFor(U),H=Object.prototype,W=o.Symbol,$=a("JSON","stringify"),G=S.f,Q=_.f,Y=E.f,K=T.f,X=P("symbols"),J=P("op-symbols"),Z=P("string-to-symbol-registry"),ee=P("symbol-to-string-registry"),te=P("wks"),re=o.QObject,ne=!re||!re.prototype||!re.prototype.findChild,oe=l&&s((function(){return 7!=b(Q({},"a",{get:function(){return Q(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=G(H,t);n&&delete H[t],Q(e,t,r),n&&e!==H&&Q(H,t,n)}:Q,ae=function(e,t){var r=X[e]=b(W.prototype);return B(r,{type:U,tag:e,description:t}),l||(r.description=t),r},ie=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof W},le=function(e,t,r){e===H&&le(J,t,r),h(e);var n=m(t,!0);return h(r),f(X,n)?(r.enumerable?(f(e,z)&&e[z][n]&&(e[z][n]=!1),r=b(r,{enumerable:y(0,!1)})):(f(e,z)||Q(e,z,y(1,{})),e[z][n]=!0),oe(e,n,r)):Q(e,n,r)},ue=function(e,t){h(e);var r=v(t),n=w(r).concat(de(r));return q(n,(function(t){l&&!ce.call(r,t)||le(e,t,r[t])})),e},ce=function(e){var t=m(e,!0),r=K.call(this,t);return!(this===H&&f(X,t)&&!f(J,t))&&(!(r||!f(this,t)||!f(X,t)||f(this,z)&&this[z][t])||r)},se=function(e,t){var r=v(e),n=m(t,!0);if(r!==H||!f(X,n)||f(J,n)){var o=G(r,n);return!o||!f(X,n)||f(r,z)&&r[z][n]||(o.enumerable=!0),o}},fe=function(e){var t=Y(v(e)),r=[];return q(t,(function(e){f(X,e)||f(N,e)||r.push(e)})),r},de=function(e){var t=e===H,r=Y(t?J:v(e)),n=[];return q(r,(function(e){!f(X,e)||t&&!f(H,e)||n.push(X[e])})),n};(u||(O((W=function(){if(this instanceof W)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=L(e),r=function e(r){this===H&&e.call(J,r),f(this,z)&&f(this[z],t)&&(this[z][t]=!1),oe(this,t,y(1,r))};return l&&ne&&oe(H,t,{configurable:!0,set:r}),ae(t,e)}).prototype,"toString",(function(){return V(this).tag})),O(W,"withoutSetter",(function(e){return ae(L(e),e)})),T.f=ce,_.f=le,S.f=se,k.f=E.f=fe,x.f=de,I.f=function(e){return ae(A(e),e)},l&&(Q(W.prototype,"description",{configurable:!0,get:function(){return V(this).description}}),i||O(H,"propertyIsEnumerable",ce,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:W}),q(w(te),(function(e){j(e)})),n({target:U,stat:!0,forced:!u},{for:function(e){var t=String(e);if(f(Z,t))return Z[t];var r=W(t);return Z[t]=r,ee[r]=t,r},keyFor:function(e){if(!ie(e))throw TypeError(e+" is not a symbol");if(f(ee,e))return ee[e]},useSetter:function(){ne=!0},useSimple:function(){ne=!1}}),n({target:"Object",stat:!0,forced:!u,sham:!l},{create:function(e,t){return void 0===t?b(e):ue(b(e),t)},defineProperty:le,defineProperties:ue,getOwnPropertyDescriptor:se}),n({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:fe,getOwnPropertySymbols:de}),n({target:"Object",stat:!0,forced:s((function(){x.f(1)}))},{getOwnPropertySymbols:function(e){return x.f(g(e))}}),$)&&n({target:"JSON",stat:!0,forced:!u||s((function(){var e=W();return"[null]"!=$([e])||"{}"!=$({a:e})||"{}"!=$(Object(e))}))},{stringify:function(e,t,r){for(var n,o=[e],a=1;arguments.length>a;)o.push(arguments[a++]);if(n=t,(p(t)||void 0!==e)&&!ie(e))return d(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!ie(t))return t}),o[1]=t,$.apply(null,o)}});W.prototype[F]||C(W.prototype,F,W.prototype.valueOf),M(W,U),N[z]=!0},function(e,t,r){var n=r(20),o=r(41).f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==a.call(e)?function(e){try{return o(e)}catch(e){return i.slice()}}(e):o(n(e))}},function(e,t,r){var n=r(7),o=r(56),a=r(28),i=r(26),l=r(83),u=[].push,c=function(e){var t=1==e,r=2==e,c=3==e,s=4==e,f=6==e,d=7==e,p=5==e||f;return function(h,g,v,m){for(var y,b,w=a(h),k=o(w),E=n(g,v,3),x=i(k.length),S=0,_=m||l,T=t?_(h,x):r||d?_(h,0):void 0;x>S;S++)if((p||S in k)&&(b=E(y=k[S],S,w),e))if(t)T[S]=b;else if(b)switch(e){case 3:return!0;case 5:return y;case 6:return S;case 2:u.call(T,y)}else switch(e){case 4:return!1;case 7:u.call(T,y)}return f?-1:c||s?s:T}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterOut:c(7)}},function(e,t,r){"use strict";var n=r(1),o=r(16),a=r(8),i=r(11),l=r(13),u=r(14).f,c=r(60),s=a.Symbol;if(o&&"function"==typeof s&&(!("description"in s.prototype)||void 0!==s().description)){var f={},d=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof d?new s(e):void 0===e?s():s(e);return""===e&&(f[t]=!0),t};c(d,s);var p=d.prototype=s.prototype;p.constructor=d;var h=p.toString,g="Symbol(test)"==String(s("test")),v=/^Symbol\\((.*)\\)[^)]+$/;u(p,"description",{configurable:!0,get:function(){var e=l(this)?this.valueOf():this,t=h.call(e);if(i(f,e))return"";var r=g?t.slice(7,-1):t.replace(v,"$1");return""===r?void 0:r}}),n({global:!0,forced:!0},{Symbol:d})}},function(e,t,r){r(9)("asyncIterator")},function(e,t,r){r(9)("hasInstance")},function(e,t,r){r(9)("isConcatSpreadable")},function(e,t,r){r(9)("iterator")},function(e,t,r){r(9)("match")},function(e,t,r){r(9)("replace")},function(e,t,r){r(9)("search")},function(e,t,r){r(9)("species")},function(e,t,r){r(9)("split")},function(e,t,r){r(9)("toPrimitive")},function(e,t,r){r(9)("toStringTag")},function(e,t,r){r(9)("unscopables")},function(e,t,r){"use strict";var n=r(1),o=r(12),a=r(49),i=r(13),l=r(28),u=r(26),c=r(84),s=r(83),f=r(167),d=r(6),p=r(85),h=d("isConcatSpreadable"),g=9007199254740991,v="Maximum allowed index exceeded",m=p>=51||!o((function(){var e=[];return e[h]=!1,e.concat()[0]!==e})),y=f("concat"),b=function(e){if(!i(e))return!1;var t=e[h];return void 0!==t?!!t:a(e)};n({target:"Array",proto:!0,forced:!m||!y},{concat:function(e){var t,r,n,o,a,i=l(this),f=s(i,0),d=0;for(t=-1,n=arguments.length;t<n;t++)if(b(a=-1===t?i:arguments[t])){if(d+(o=u(a.length))>g)throw TypeError(v);for(r=0;r<o;r++,d++)r in a&&c(f,d,a[r])}else{if(d>=g)throw TypeError(v);c(f,d++,a)}return f.length=d,f}})},function(e,t,r){var n=r(12),o=r(6),a=r(85),i=o("species");e.exports=function(e){return a>=51||!n((function(){var t=[];return(t.constructor={})[i]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,r){var n=r(10);e.exports=n("navigator","userAgent")||""},function(e,t,r){var n=r(1),o=r(170);n({target:"Array",stat:!0,forced:!r(71)((function(e){Array.from(e)}))},{from:o})},function(e,t,r){"use strict";var n=r(7),o=r(28),a=r(171),i=r(66),l=r(26),u=r(84),c=r(45);e.exports=function(e){var t,r,s,f,d,p,h=o(e),g="function"==typeof this?this:Array,v=arguments.length,m=v>1?arguments[1]:void 0,y=void 0!==m,b=c(h),w=0;if(y&&(m=n(m,v>2?arguments[2]:void 0,2)),void 0==b||g==Array&&i(b))for(r=new g(t=l(h.length));t>w;w++)p=y?m(h[w],w):h[w],u(r,w,p);else for(d=(f=b.call(h)).next,r=new g;!(s=d.call(f)).done;w++)p=y?a(f,m,[s.value,w],!0):s.value,u(r,w,p);return r.length=w,r}},function(e,t,r){var n=r(2),o=r(69);e.exports=function(e,t,r,a){try{return a?t(n(r)[0],r[1]):t(r)}catch(t){throw o(e),t}}},function(e,t,r){var n=r(8);r(22)(n.JSON,"JSON",!0)},function(e,t,r){r(22)(Math,"Math",!0)},function(e,t,r){r(9)("dispose")},function(e,t,r){r(9)("observable")},function(e,t,r){r(9)("patternMatch")},function(e,t,r){"use strict";var n=r(86),o=[ReferenceError,TypeError,RangeError],a=!1;function i(){a=!1,n._Y=null,n._Z=null}function l(e,t){return t.some((function(t){return e instanceof t}))}t.disable=i,t.enable=function(e){e=e||{},a&&i();a=!0;var t=0,r=0,u={};function c(t){(e.allRejections||l(u[t].error,e.whitelist||o))&&(u[t].displayId=r++,e.onUnhandled?(u[t].logged=!0,e.onUnhandled(u[t].displayId,u[t].error)):(u[t].logged=!0,function(e,t){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):"),((t&&(t.stack||t))+"").split("\\n").forEach((function(e){console.warn("  "+e)}))}(u[t].displayId,u[t].error)))}n._Y=function(t){2===t._V&&u[t._1]&&(u[t._1].logged?function(t){u[t].logged&&(e.onHandled?e.onHandled(u[t].displayId,u[t].error):u[t].onUnhandled||(console.warn("Promise Rejection Handled (id: "+u[t].displayId+"):"),console.warn(\'  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id \'+u[t].displayId+".")))}(t._1):clearTimeout(u[t._1].timeout),delete u[t._1])},n._Z=function(e,r){0===e._U&&(e._1=t++,u[e._1]={displayId:null,error:r,timeout:setTimeout(c.bind(null,e._1),l(r,o)?100:2e3),logged:!1})}}},function(e,t,r){"use strict";(function(t){function r(e){o.length||(n(),!0),o[o.length]=e}e.exports=r;var n,o=[],a=0;function i(){for(;a<o.length;){var e=a;if(a+=1,o[e].call(),a>1024){for(var t=0,r=o.length-a;t<r;t++)o[t]=o[t+a];o.length-=a,a=0}}o.length=0,a=0,!1}var l,u,c,s="undefined"!==typeof t?t:self,f=s.MutationObserver||s.WebKitMutationObserver;function d(e){return function(){var t=setTimeout(n,0),r=setInterval(n,50);function n(){clearTimeout(t),clearInterval(r),e()}}}"function"===typeof f?(l=1,u=new f(i),c=document.createTextNode(""),u.observe(c,{characterData:!0}),n=function(){l=-l,c.data=l}):n=d(i),r.requestFlush=n,r.makeRequestCallFromTimer=d}).call(this,r(34))},function(e,t,r){"use strict";var n=r(86);e.exports=n;var o=s(!0),a=s(!1),i=s(null),l=s(void 0),u=s(0),c=s("");function s(e){var t=new n(n._0);return t._V=1,t._W=e,t}n.resolve=function(e){if(e instanceof n)return e;if(null===e)return i;if(void 0===e)return l;if(!0===e)return o;if(!1===e)return a;if(0===e)return u;if(""===e)return c;if("object"===typeof e||"function"===typeof e)try{var t=e.then;if("function"===typeof t)return new n(t.bind(e))}catch(e){return new n((function(t,r){r(e)}))}return s(e)};var f=function(e){return"function"===typeof Array.from?(f=Array.from,Array.from(e)):(f=function(e){return Array.prototype.slice.call(e)},Array.prototype.slice.call(e))};n.all=function(e){var t=f(e);return new n((function(e,r){if(0===t.length)return e([]);var o=t.length;function a(i,l){if(l&&("object"===typeof l||"function"===typeof l)){if(l instanceof n&&l.then===n.prototype.then){for(;3===l._V;)l=l._W;return 1===l._V?a(i,l._W):(2===l._V&&r(l._W),void l.then((function(e){a(i,e)}),r))}var u=l.then;if("function"===typeof u)return void new n(u.bind(l)).then((function(e){a(i,e)}),r)}t[i]=l,0===--o&&e(t)}for(var i=0;i<t.length;i++)a(i,t[i])}))},n.reject=function(e){return new n((function(t,r){r(e)}))},n.race=function(e){return new n((function(t,r){f(e).forEach((function(e){n.resolve(e).then(t,r)}))}))},n.prototype.catch=function(e){return this.then(null,e)}},function(e,t,r){"use strict";r.r(t),r.d(t,"Headers",(function(){return h})),r.d(t,"Request",(function(){return k})),r.d(t,"Response",(function(){return x})),r.d(t,"DOMException",(function(){return _})),r.d(t,"fetch",(function(){return T}));var n="undefined"!==typeof globalThis&&globalThis||"undefined"!==typeof self&&self||"undefined"!==typeof n&&n,o="URLSearchParams"in n,a="Symbol"in n&&"iterator"in Symbol,i="FileReader"in n&&"Blob"in n&&function(){try{return new Blob,!0}catch(e){return!1}}(),l="FormData"in n,u="ArrayBuffer"in n;if(u)var c=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=ArrayBuffer.isView||function(e){return e&&c.indexOf(Object.prototype.toString.call(e))>-1};function f(e){if("string"!==typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&\'*+.^_`|~!]/i.test(e)||""===e)throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function d(e){return"string"!==typeof e&&(e=String(e)),e}function p(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return a&&(t[Symbol.iterator]=function(){return t}),t}function h(e){this.map={},e instanceof h?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function g(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function v(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function m(e){var t=new FileReader,r=v(t);return t.readAsArrayBuffer(e),r}function y(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(e){var t;this.bodyUsed=this.bodyUsed,this._bodyInit=e,e?"string"===typeof e?this._bodyText=e:i&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:l&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:o&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():u&&i&&((t=e)&&DataView.prototype.isPrototypeOf(t))?(this._bodyArrayBuffer=y(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):u&&(ArrayBuffer.prototype.isPrototypeOf(e)||s(e))?this._bodyArrayBuffer=y(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"===typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):o&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},i&&(this.blob=function(){var e=g(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){if(this._bodyArrayBuffer){var e=g(this);return e||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}return this.blob().then(m)}),this.text=function(){var e,t,r,n=g(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,t=new FileReader,r=v(t),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},l&&(this.formData=function(){return this.text().then(E)}),this.json=function(){return this.text().then(JSON.parse)},this}h.prototype.append=function(e,t){e=f(e),t=d(t);var r=this.map[e];this.map[e]=r?r+", "+t:t},h.prototype.delete=function(e){delete this.map[f(e)]},h.prototype.get=function(e){return e=f(e),this.has(e)?this.map[e]:null},h.prototype.has=function(e){return this.map.hasOwnProperty(f(e))},h.prototype.set=function(e,t){this.map[f(e)]=d(t)},h.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},h.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),p(e)},h.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),p(e)},h.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),p(e)},a&&(h.prototype[Symbol.iterator]=h.prototype.entries);var w=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function k(e,t){if(!(this instanceof k))throw new TypeError(\'Please use the "new" operator, this DOM object constructor cannot be called as a function.\');var r,n,o=(t=t||{}).body;if(e instanceof k){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new h(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,o||null==e._bodyInit||(o=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",!t.headers&&this.headers||(this.headers=new h(t.headers)),this.method=(r=t.method||this.method||"GET",n=r.toUpperCase(),w.indexOf(n)>-1?n:r),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(o),("GET"===this.method||"HEAD"===this.method)&&("no-store"===t.cache||"no-cache"===t.cache)){var a=/([?&])_=[^&]*/;if(a.test(this.url))this.url=this.url.replace(a,"$1_="+(new Date).getTime());else{this.url+=(/\\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}}function E(e){var t=new FormData;return e.trim().split("&").forEach((function(e){if(e){var r=e.split("="),n=r.shift().replace(/\\+/g," "),o=r.join("=").replace(/\\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(o))}})),t}function x(e,t){if(!(this instanceof x))throw new TypeError(\'Please use the "new" operator, this DOM object constructor cannot be called as a function.\');t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"",this.headers=new h(t.headers),this.url=t.url||"",this._initBody(e)}k.prototype.clone=function(){return new k(this,{body:this._bodyInit})},b.call(k.prototype),b.call(x.prototype),x.prototype.clone=function(){return new x(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new h(this.headers),url:this.url})},x.error=function(){var e=new x(null,{status:0,statusText:""});return e.type="error",e};var S=[301,302,303,307,308];x.redirect=function(e,t){if(-1===S.indexOf(t))throw new RangeError("Invalid status code");return new x(null,{status:t,headers:{location:e}})};var _=n.DOMException;try{new _}catch(e){(_=function(e,t){this.message=e,this.name=t;var r=Error(e);this.stack=r.stack}).prototype=Object.create(Error.prototype),_.prototype.constructor=_}function T(e,t){return new Promise((function(r,o){var a=new k(e,t);if(a.signal&&a.signal.aborted)return o(new _("Aborted","AbortError"));var l=new XMLHttpRequest;function c(){l.abort()}l.onload=function(){var e,t,n={status:l.status,statusText:l.statusText,headers:(e=l.getAllResponseHeaders()||"",t=new h,e.replace(/\\r?\\n[\\t ]+/g," ").split("\\r").map((function(e){return 0===e.indexOf("\\n")?e.substr(1,e.length):e})).forEach((function(e){var r=e.split(":"),n=r.shift().trim();if(n){var o=r.join(":").trim();t.append(n,o)}})),t)};n.url="responseURL"in l?l.responseURL:n.headers.get("X-Request-URL");var o="response"in l?l.response:l.responseText;setTimeout((function(){r(new x(o,n))}),0)},l.onerror=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},l.ontimeout=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},l.onabort=function(){setTimeout((function(){o(new _("Aborted","AbortError"))}),0)},l.open(a.method,function(e){try{return""===e&&n.location.href?n.location.href:e}catch(t){return e}}(a.url),!0),"include"===a.credentials?l.withCredentials=!0:"omit"===a.credentials&&(l.withCredentials=!1),"responseType"in l&&(i?l.responseType="blob":u&&a.headers.get("Content-Type")&&-1!==a.headers.get("Content-Type").indexOf("application/octet-stream")&&(l.responseType="arraybuffer")),!t||"object"!==typeof t.headers||t.headers instanceof h?a.headers.forEach((function(e,t){l.setRequestHeader(t,e)})):Object.getOwnPropertyNames(t.headers).forEach((function(e){l.setRequestHeader(e,d(t.headers[e]))})),a.signal&&(a.signal.addEventListener("abort",c),l.onreadystatechange=function(){4===l.readyState&&a.signal.removeEventListener("abort",c)}),l.send("undefined"===typeof a._bodyInit?null:a._bodyInit)}))}T.polyfill=!0,n.fetch||(n.fetch=T,n.Headers=h,n.Request=k,n.Response=x)},function(e,t,r){(function(t){for(var n=r(182),o="undefined"===typeof window?t:window,a=["moz","webkit"],i="AnimationFrame",l=o["request"+i],u=o["cancel"+i]||o["cancelRequest"+i],c=0;!l&&c<a.length;c++)l=o[a[c]+"Request"+i],u=o[a[c]+"Cancel"+i]||o[a[c]+"CancelRequest"+i];if(!l||!u){var s=0,f=0,d=[];l=function(e){if(0===d.length){var t=n(),r=Math.max(0,16.666666666666668-(t-s));s=r+t,setTimeout((function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(s)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(r))}return d.push({handle:++f,callback:e,cancelled:!1}),f},u=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}e.exports=function(e){return l.call(o,e)},e.exports.cancel=function(){u.apply(o,arguments)},e.exports.polyfill=function(e){e||(e=o),e.requestAnimationFrame=l,e.cancelAnimationFrame=u}}).call(this,r(34))},function(e,t,r){(function(t){(function(){var r,n,o,a,i,l;"undefined"!==typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!==typeof t&&null!==t&&t.hrtime?(e.exports=function(){return(r()-i)/1e6},n=t.hrtime,a=(r=function(){var e;return 1e9*(e=n())[0]+e[1]})(),l=1e9*t.uptime(),i=a-l):Date.now?(e.exports=function(){return Date.now()-o},o=Date.now()):(e.exports=function(){return(new Date).getTime()-o},o=(new Date).getTime())}).call(this)}).call(this,r(51))},function(e,t,r){"use strict";var n=r(50),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"===typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"===typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function v(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||h}function m(){}function y(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},m.prototype=v.prototype;var b=y.prototype=new m;b.constructor=y,n(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,r){var n,a={},i=null,l=null;if(null!=t)for(n in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,n)&&!E.hasOwnProperty(n)&&(a[n]=t[n]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(n in u=e.defaultProps)void 0===a[n]&&(a[n]=u[n]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:w.current}}function S(e){return"object"===typeof e&&null!==e&&e.$$typeof===o}var _=/\\/+/g;function T(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,r,n,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return i=i(u=e),e=""===n?"."+T(u,0):n,Array.isArray(i)?(r="",null!=e&&(r=e.replace(_,"$&/")+"/"),C(i,t,r,"",(function(e){return e}))):null!=i&&(S(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,r+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(_,"$&/")+"/")+e)),t.push(i)),1;if(u=0,n=""===n?".":n+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=n+T(l=e[c],c);u+=C(l,t,r,s,i)}else if("function"===typeof(s=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(l=e.next()).done;)u+=C(l=l.value,t,r,s=n+T(l,c++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function O(e,t,r){if(null==e)return e;var n=[],o=0;return C(e,n,"","",(function(e){return t.call(r,e,o++)})),n}function P(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var R={current:null};function N(){var e=R.current;if(null===e)throw Error(p(321));return e}var L={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:n};t.Children={map:O,forEach:function(e,t,r){O(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error(p(267,e));var a=n({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return N().useCallback(e,t)},t.useContext=function(e,t){return N().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return N().useEffect(e,t)},t.useImperativeHandle=function(e,t,r){return N().useImperativeHandle(e,t,r)},t.useLayoutEffect=function(e,t){return N().useLayoutEffect(e,t)},t.useMemo=function(e,t){return N().useMemo(e,t)},t.useReducer=function(e,t,r){return N().useReducer(e,t,r)},t.useRef=function(e){return N().useRef(e)},t.useState=function(e){return N().useState(e)},t.version="17.0.1"},function(e,t,r){"use strict";var n=r(0),o=r(50),a=r(185);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!n)throw Error(i(227));var l=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},g={};function v(e,t,r,n,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=o,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];m[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,r,n){var o=m.hasOwnProperty(t)?m[t]:null;(null!==o?0===o.type:!n&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,r,n){if(null===t||"undefined"===typeof t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,o,n)&&(r=null),n||null===o?function(e){return!!p.call(g,e)||!p.call(h,e)&&(d.test(e)?g[e]=!0:(h[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):o.mustUseProperty?e[o.propertyName]=null===r?3!==o.type&&"":r:(t=o.attributeName,n=o.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(o=o.type)||4===o&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,x=60106,S=60107,_=60108,T=60114,C=60109,O=60110,P=60112,R=60113,N=60120,L=60115,A=60116,I=60121,j=60128,M=60129,D=60130,q=60131;if("function"===typeof Symbol&&Symbol.for){var z=Symbol.for;E=z("react.element"),x=z("react.portal"),S=z("react.fragment"),_=z("react.strict_mode"),T=z("react.profiler"),C=z("react.provider"),O=z("react.context"),P=z("react.forward_ref"),R=z("react.suspense"),N=z("react.suspense_list"),L=z("react.memo"),A=z("react.lazy"),I=z("react.block"),z("react.scope"),j=z("react.opaque.id"),M=z("react.debug_trace_mode"),D=z("react.offscreen"),q=z("react.legacy_hidden")}var U,F="function"===typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=F&&e[F]||e["@@iterator"])?e:null}function V(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\\n( *(at )?)/);U=t&&t[1]||""}return"\\n"+U+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(e){if(e&&n&&"string"===typeof e.stack){for(var o=e.stack.split("\\n"),a=n.stack.split("\\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l])return"\\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{H=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?V(e):""}function $(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 22:return e=W(e.type._render,!1);case 1:return e=W(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case x:return"Portal";case T:return"Profiler";case _:return"StrictMode";case R:return"Suspense";case N:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case P:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case L:return G(e.type);case I:return G(e._render);case A:t=e._payload,e=e._init;try{return G(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof r&&"function"===typeof r.get&&"function"===typeof r.set){var o=r.get,a=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){n=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=Y(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function J(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var r=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function ee(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=Q(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function re(e,t){te(e,t);var r=Q(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,r):t.hasOwnProperty("defaultValue")&&oe(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ne(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function oe(e,t,r){"number"===t&&J(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return n.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,r,n){if(e=e.options,t){t={};for(var o=0;o<r.length;o++)t["$"+r[o]]=!0;for(r=0;r<e.length;r++)o=t.hasOwnProperty("$"+e[r].value),e[r].selected!==o&&(e[r].selected=o),o&&n&&(e[r].defaultSelected=!0)}else{for(r=""+Q(r),t=null,o=0;o<e.length;o++){if(e[o].value===r)return e[o].selected=!0,void(n&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(i(92));if(Array.isArray(r)){if(!(1>=r.length))throw Error(i(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:Q(r)}}function ce(e,t){var r=Q(t.value),n=Q(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml",de="http://www.w3.org/2000/svg";function pe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?pe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ge,ve,me=(ve=function(e,t){if(e.namespaceURI!==de||"innerHTML"in e)e.innerHTML=t;else{for((ge=ge||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ge.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction((function(){return ve(e,t)}))}:ve);function ye(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var be={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},we=["Webkit","ms","Moz","O"];function ke(e,t,r){return null==t||"boolean"===typeof t||""===t?"":r||"number"!==typeof t||0===t||be.hasOwnProperty(e)&&be[e]?(""+t).trim():t+"px"}function Ee(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),o=ke(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,o):e[r]=o}}Object.keys(be).forEach((function(e){we.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),be[t]=be[e]}))}));var xe=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(xe[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function _e(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Te(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Oe=null,Pe=null;function Re(e){if(e=eo(e)){if("function"!==typeof Ce)throw Error(i(280));var t=e.stateNode;t&&(t=ro(t),Ce(e.stateNode,e.type,t))}}function Ne(e){Oe?Pe?Pe.push(e):Pe=[e]:Oe=e}function Le(){if(Oe){var e=Oe,t=Pe;if(Pe=Oe=null,Re(e),t)for(e=0;e<t.length;e++)Re(t[e])}}function Ae(e,t){return e(t)}function Ie(e,t,r,n,o){return e(t,r,n,o)}function je(){}var Me=Ae,De=!1,qe=!1;function ze(){null===Oe&&null===Pe||(je(),Le())}function Ue(e,t){var r=e.stateNode;if(null===r)return null;var n=ro(r);if(null===n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!==typeof r)throw Error(i(231,t,typeof r));return r}var Fe=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(ve){Fe=!1}function Ve(e,t,r,n,o,a,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(r,c)}catch(e){this.onError(e)}}var He=!1,We=null,$e=!1,Ge=null,Qe={onError:function(e){He=!0,We=e}};function Ye(e,t,r,n,o,a,i,l,u){He=!1,We=null,Ve.apply(Qe,arguments)}function Ke(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Je(e){if(Ke(e)!==e)throw Error(i(188))}function Ze(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ke(e)))throw Error(i(188));return t!==e?null:e}for(var r=e,n=t;;){var o=r.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(n=o.return)){r=n;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===r)return Je(o),e;if(a===n)return Je(o),t;a=a.sibling}throw Error(i(188))}if(r.return!==n.return)r=o,n=a;else{for(var l=!1,u=o.child;u;){if(u===r){l=!0,r=o,n=a;break}if(u===n){l=!0,n=o,r=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===r){l=!0,r=a,n=o;break}if(u===n){l=!0,n=a,r=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(r.alternate!==n)throw Error(i(190))}if(3!==r.tag)throw Error(i(188));return r.stateNode.current===r?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){for(var r=e.alternate;null!==t;){if(t===e||t===r)return!0;t=t.return}return!1}var tt,rt,nt,ot,at=!1,it=[],lt=null,ut=null,ct=null,st=new Map,ft=new Map,dt=[],pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ht(e,t,r,n,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|r,nativeEvent:o,targetContainers:[n]}}function gt(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":ut=null;break;case"mouseover":case"mouseout":ct=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ft.delete(t.pointerId)}}function vt(e,t,r,n,o,a){return null===e||e.nativeEvent!==a?(e=ht(t,r,n,o,a),null!==t&&(null!==(t=eo(t))&&rt(t)),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function mt(e){var t=Zn(e.target);if(null!==t){var r=Ke(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=Xe(r)))return e.blockedOn=t,void ot(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(r)}))}))}else if(3===t&&r.stateNode.hydrate)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=eo(r))&&rt(t),e.blockedOn=r,!1;t.shift()}return!0}function bt(e,t,r){yt(e)&&r.delete(t)}function wt(){for(at=!1;0<it.length;){var e=it[0];if(null!==e.blockedOn){null!==(e=eo(e.blockedOn))&&tt(e);break}for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r){e.blockedOn=r;break}t.shift()}null===e.blockedOn&&it.shift()}null!==lt&&yt(lt)&&(lt=null),null!==ut&&yt(ut)&&(ut=null),null!==ct&&yt(ct)&&(ct=null),st.forEach(bt),ft.forEach(bt)}function kt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,wt)))}function Et(e){function t(t){return kt(t,e)}if(0<it.length){kt(it[0],e);for(var r=1;r<it.length;r++){var n=it[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==lt&&kt(lt,e),null!==ut&&kt(ut,e),null!==ct&&kt(ct,e),st.forEach(t),ft.forEach(t),r=0;r<dt.length;r++)(n=dt[r]).blockedOn===e&&(n.blockedOn=null);for(;0<dt.length&&null===(r=dt[0]).blockedOn;)mt(r),null===r.blockedOn&&dt.shift()}function xt(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var St={animationend:xt("Animation","AnimationEnd"),animationiteration:xt("Animation","AnimationIteration"),animationstart:xt("Animation","AnimationStart"),transitionend:xt("Transition","TransitionEnd")},_t={},Tt={};function Ct(e){if(_t[e])return _t[e];if(!St[e])return e;var t,r=St[e];for(t in r)if(r.hasOwnProperty(t)&&t in Tt)return _t[e]=r[t];return e}f&&(Tt=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Ot=Ct("animationend"),Pt=Ct("animationiteration"),Rt=Ct("animationstart"),Nt=Ct("transitionend"),Lt=new Map,At=new Map,It=["abort","abort",Ot,"animationEnd",Pt,"animationIteration",Rt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Nt,"transitionEnd","waiting","waiting"];function jt(e,t){for(var r=0;r<e.length;r+=2){var n=e[r],o=e[r+1];o="on"+(o[0].toUpperCase()+o.slice(1)),At.set(n,t),Lt.set(n,o),c(o,[n])}}(0,a.unstable_now)();var Mt=8;function Dt(e){if(0!==(1&e))return Mt=15,1;if(0!==(2&e))return Mt=14,2;if(0!==(4&e))return Mt=13,4;var t=24&e;return 0!==t?(Mt=12,t):0!==(32&e)?(Mt=11,32):0!==(t=192&e)?(Mt=10,t):0!==(256&e)?(Mt=9,256):0!==(t=3584&e)?(Mt=8,t):0!==(4096&e)?(Mt=7,4096):0!==(t=4186112&e)?(Mt=6,t):0!==(t=62914560&e)?(Mt=5,t):67108864&e?(Mt=4,67108864):0!==(134217728&e)?(Mt=3,134217728):0!==(t=805306368&e)?(Mt=2,t):0!==(1073741824&e)?(Mt=1,1073741824):(Mt=8,e)}function qt(e,t){var r=e.pendingLanes;if(0===r)return Mt=0;var n=0,o=0,a=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==a)n=a,o=Mt=15;else if(0!==(a=134217727&r)){var u=a&~i;0!==u?(n=Dt(u),o=Mt):0!==(l&=a)&&(n=Dt(l),o=Mt)}else 0!==(a=r&~i)?(n=Dt(a),o=Mt):0!==l&&(n=Dt(l),o=Mt);if(0===n)return 0;if(n=r&((0>(n=31-Ht(n))?0:1<<n)<<1)-1,0!==t&&t!==n&&0===(t&i)){if(Dt(t),o<=Mt)return t;Mt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)o=1<<(r=31-Ht(t)),n|=e[r],t&=~o;return n}function zt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ut(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ft(24&~t))?Ut(10,t):e;case 10:return 0===(e=Ft(192&~t))?Ut(8,t):e;case 8:return 0===(e=Ft(3584&~t))&&(0===(e=Ft(4186112&~t))&&(e=512)),e;case 2:return 0===(t=Ft(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Ft(e){return e&-e}function Bt(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function Vt(e,t,r){e.pendingLanes|=t;var n=t-1;e.suspendedLanes&=n,e.pingedLanes&=n,(e=e.eventTimes)[t=31-Ht(t)]=r}var Ht=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Wt(e)/$t|0)|0},Wt=Math.log,$t=Math.LN2;var Gt=a.unstable_UserBlockingPriority,Qt=a.unstable_runWithPriority,Yt=!0;function Kt(e,t,r,n){De||je();var o=Jt,a=De;De=!0;try{Ie(o,e,t,r,n)}finally{(De=a)||ze()}}function Xt(e,t,r,n){Qt(Gt,Jt.bind(null,e,t,r,n))}function Jt(e,t,r,n){var o;if(Yt)if((o=0===(4&t))&&0<it.length&&-1<pt.indexOf(e))e=ht(null,e,t,r,n),it.push(e);else{var a=Zt(e,t,r,n);if(null===a)o&&gt(e,n);else{if(o){if(-1<pt.indexOf(e))return e=ht(a,e,t,r,n),void it.push(e);if(function(e,t,r,n,o){switch(t){case"focusin":return lt=vt(lt,e,t,r,n,o),!0;case"dragenter":return ut=vt(ut,e,t,r,n,o),!0;case"mouseover":return ct=vt(ct,e,t,r,n,o),!0;case"pointerover":var a=o.pointerId;return st.set(a,vt(st.get(a)||null,e,t,r,n,o)),!0;case"gotpointercapture":return a=o.pointerId,ft.set(a,vt(ft.get(a)||null,e,t,r,n,o)),!0}return!1}(a,e,t,r,n))return;gt(e,n)}Ln(e,t,n,null,r)}}}function Zt(e,t,r,n){var o=Te(n);if(null!==(o=Zn(o))){var a=Ke(o);if(null===a)o=null;else{var i=a.tag;if(13===i){if(null!==(o=Xe(a)))return o;o=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Ln(e,t,n,o,r),null}var er=null,tr=null,rr=null;function nr(){if(rr)return rr;var e,t,r=tr,n=r.length,o="value"in er?er.value:er.textContent,a=o.length;for(e=0;e<n&&r[e]===o[e];e++);var i=n-e;for(t=1;t<=i&&r[n-t]===o[a-t];t++);return rr=o.slice(e,1<t?1-t:void 0)}function or(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function ar(){return!0}function ir(){return!1}function lr(e){function t(t,r,n,o,a){for(var i in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?ar:ir,this.isPropagationStopped=ir,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ar)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ar)},persist:function(){},isPersistent:ar}),t}var ur,cr,sr,fr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dr=lr(fr),pr=o({},fr,{view:0,detail:0}),hr=lr(pr),gr=o({},pr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Tr,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sr&&(sr&&"mousemove"===e.type?(ur=e.screenX-sr.screenX,cr=e.screenY-sr.screenY):cr=ur=0,sr=e),ur)},movementY:function(e){return"movementY"in e?e.movementY:cr}}),vr=lr(gr),mr=lr(o({},gr,{dataTransfer:0})),yr=lr(o({},pr,{relatedTarget:0})),br=lr(o({},fr,{animationName:0,elapsedTime:0,pseudoElement:0})),wr=lr(o({},fr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kr=lr(o({},fr,{data:0})),Er={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _r(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sr[e])&&!!t[e]}function Tr(){return _r}var Cr=lr(o({},pr,{key:function(e){if(e.key){var t=Er[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=or(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Tr,charCode:function(e){return"keypress"===e.type?or(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?or(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Or=lr(o({},gr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pr=lr(o({},pr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Tr})),Rr=lr(o({},fr,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nr=lr(o({},gr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Lr=[9,13,27,32],Ar=f&&"CompositionEvent"in window,Ir=null;f&&"documentMode"in document&&(Ir=document.documentMode);var jr=f&&"TextEvent"in window&&!Ir,Mr=f&&(!Ar||Ir&&8<Ir&&11>=Ir),Dr=String.fromCharCode(32),qr=!1;function zr(e,t){switch(e){case"keyup":return-1!==Lr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ur(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Fr=!1;var Br={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Br[e.type]:"textarea"===t}function Hr(e,t,r,n){Ne(n),0<(t=In(t,"onChange")).length&&(r=new dr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var Wr=null,$r=null;function Gr(e){Tn(e,0)}function Qr(e){if(X(to(e)))return e}function Yr(e,t){if("change"===e)return t}var Kr=!1;if(f){var Xr;if(f){var Jr="oninput"in document;if(!Jr){var Zr=document.createElement("div");Zr.setAttribute("oninput","return;"),Jr="function"===typeof Zr.oninput}Xr=Jr}else Xr=!1;Kr=Xr&&(!document.documentMode||9<document.documentMode)}function en(){Wr&&(Wr.detachEvent("onpropertychange",tn),$r=Wr=null)}function tn(e){if("value"===e.propertyName&&Qr($r)){var t=[];if(Hr(t,$r,e,Te(e)),e=Gr,De)e(t);else{De=!0;try{Ae(e,t)}finally{De=!1,ze()}}}}function rn(e,t,r){"focusin"===e?(en(),$r=r,(Wr=t).attachEvent("onpropertychange",tn)):"focusout"===e&&en()}function nn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qr($r)}function on(e,t){if("click"===e)return Qr(t)}function an(e,t){if("input"===e||"change"===e)return Qr(t)}var ln="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},un=Object.prototype.hasOwnProperty;function cn(e,t){if(ln(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++)if(!un.call(t,r[n])||!ln(e[r[n]],t[r[n]]))return!1;return!0}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var r,n=sn(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=sn(n)}}function dn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pn(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var r="string"===typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=J((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var gn=f&&"documentMode"in document&&11>=document.documentMode,vn=null,mn=null,yn=null,bn=!1;function wn(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;bn||null==vn||vn!==J(n)||("selectionStart"in(n=vn)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},yn&&cn(yn,n)||(yn=n,0<(n=In(mn,"onSelect")).length&&(t=new dr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=vn)))}jt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),jt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),jt(It,2);for(var kn="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),En=0;En<kn.length;En++)At.set(kn[En],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var xn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sn=new Set("cancel close invalid load scroll toggle".split(" ").concat(xn));function _n(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,o,a,l,u,c){if(Ye.apply(this,arguments),He){if(!He)throw Error(i(198));var s=We;He=!1,We=null,$e||($e=!0,Ge=s)}}(n,t,void 0,e),e.currentTarget=null}function Tn(e,t){t=0!==(4&t);for(var r=0;r<e.length;r++){var n=e[r],o=n.event;n=n.listeners;e:{var a=void 0;if(t)for(var i=n.length-1;0<=i;i--){var l=n[i],u=l.instance,c=l.currentTarget;if(l=l.listener,u!==a&&o.isPropagationStopped())break e;_n(o,l,c),a=u}else for(i=0;i<n.length;i++){if(u=(l=n[i]).instance,c=l.currentTarget,l=l.listener,u!==a&&o.isPropagationStopped())break e;_n(o,l,c),a=u}}}if($e)throw e=Ge,$e=!1,Ge=null,e}function Cn(e,t){var r=no(t),n=e+"__bubble";r.has(n)||(Nn(t,e,2,!1),r.add(n))}var On="_reactListening"+Math.random().toString(36).slice(2);function Pn(e){e[On]||(e[On]=!0,l.forEach((function(t){Sn.has(t)||Rn(t,!1,e,null),Rn(t,!0,e,null)})))}function Rn(e,t,r,n){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=r;if("selectionchange"===e&&9!==r.nodeType&&(a=r.ownerDocument),null!==n&&!t&&Sn.has(e)){if("scroll"!==e)return;o|=2,a=n}var i=no(a),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(o|=4),Nn(a,e,o,t),i.add(l))}function Nn(e,t,r,n){var o=At.get(t);switch(void 0===o?2:o){case 0:o=Kt;break;case 1:o=Xt;break;default:o=Jt}r=o.bind(null,t,r,e),o=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),n?void 0!==o?e.addEventListener(t,r,{capture:!0,passive:o}):e.addEventListener(t,r,!0):void 0!==o?e.addEventListener(t,r,{passive:o}):e.addEventListener(t,r,!1)}function Ln(e,t,r,n,o){var a=n;if(0===(1&t)&&0===(2&t)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var l=n.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=n.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=Zn(l)))return;if(5===(u=i.tag)||6===u){n=a=i;continue e}l=l.parentNode}}n=n.return}!function(e,t,r){if(qe)return e(t,r);qe=!0;try{Me(e,t,r)}finally{qe=!1,ze()}}((function(){var n=a,o=Te(r),i=[];e:{var l=Lt.get(e);if(void 0!==l){var u=dr,c=e;switch(e){case"keypress":if(0===or(r))break e;case"keydown":case"keyup":u=Cr;break;case"focusin":c="focus",u=yr;break;case"focusout":c="blur",u=yr;break;case"beforeblur":case"afterblur":u=yr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pr;break;case Ot:case Pt:case Rt:u=br;break;case Nt:u=Rr;break;case"scroll":u=hr;break;case"wheel":u=Nr;break;case"copy":case"cut":case"paste":u=wr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Or}var s=0!==(4&t),f=!s&&"scroll"===e,d=s?null!==l?l+"Capture":null:l;s=[];for(var p,h=n;null!==h;){var g=(p=h).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==d&&(null!=(g=Ue(h,d))&&s.push(An(h,g,p)))),f)break;h=h.return}0<s.length&&(l=new u(l,c,null,r,o),i.push({event:l,listeners:s}))}}if(0===(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!==(16&t)||!(c=r.relatedTarget||r.fromElement)||!Zn(c)&&!c[Xn])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=n,null!==(c=(c=r.relatedTarget||r.toElement)?Zn(c):null)&&(c!==(f=Ke(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=n),u!==c)){if(s=vr,g="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Or,g="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:to(u),p=null==c?l:to(c),(l=new s(g,h+"leave",u,r,o)).target=f,l.relatedTarget=p,g=null,Zn(o)===n&&((s=new s(d,h+"enter",c,r,o)).target=p,s.relatedTarget=f,g=s),f=g,u&&c)e:{for(d=c,h=0,p=s=u;p;p=jn(p))h++;for(p=0,g=d;g;g=jn(g))p++;for(;0<h-p;)s=jn(s),h--;for(;0<p-h;)d=jn(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=jn(s),d=jn(d)}s=null}else s=null;null!==u&&Mn(i,l,u,s,!1),null!==c&&null!==f&&Mn(i,f,c,s,!0)}if("select"===(u=(l=n?to(n):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var v=Yr;else if(Vr(l))if(Kr)v=an;else{v=nn;var m=rn}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(v=on);switch(v&&(v=v(e,n))?Hr(i,v,r,o):(m&&m(e,l,n),"focusout"===e&&(m=l._wrapperState)&&m.controlled&&"number"===l.type&&oe(l,"number",l.value)),m=n?to(n):window,e){case"focusin":(Vr(m)||"true"===m.contentEditable)&&(vn=m,mn=n,yn=null);break;case"focusout":yn=mn=vn=null;break;case"mousedown":bn=!0;break;case"contextmenu":case"mouseup":case"dragend":bn=!1,wn(i,r,o);break;case"selectionchange":if(gn)break;case"keydown":case"keyup":wn(i,r,o)}var y;if(Ar)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Fr?zr(e,r)&&(b="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(b="onCompositionStart");b&&(Mr&&"ko"!==r.locale&&(Fr||"onCompositionStart"!==b?"onCompositionEnd"===b&&Fr&&(y=nr()):(tr="value"in(er=o)?er.value:er.textContent,Fr=!0)),0<(m=In(n,b)).length&&(b=new kr(b,e,null,r,o),i.push({event:b,listeners:m}),y?b.data=y:null!==(y=Ur(r))&&(b.data=y))),(y=jr?function(e,t){switch(e){case"compositionend":return Ur(t);case"keypress":return 32!==t.which?null:(qr=!0,Dr);case"textInput":return(e=t.data)===Dr&&qr?null:e;default:return null}}(e,r):function(e,t){if(Fr)return"compositionend"===e||!Ar&&zr(e,t)?(e=nr(),rr=tr=er=null,Fr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Mr&&"ko"!==t.locale?null:t.data;default:return null}}(e,r))&&(0<(n=In(n,"onBeforeInput")).length&&(o=new kr("onBeforeInput","beforeinput",null,r,o),i.push({event:o,listeners:n}),o.data=y))}Tn(i,t)}))}function An(e,t,r){return{instance:e,listener:t,currentTarget:r}}function In(e,t){for(var r=t+"Capture",n=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Ue(e,r))&&n.unshift(An(e,a,o)),null!=(a=Ue(e,t))&&n.push(An(e,a,o))),e=e.return}return n}function jn(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Mn(e,t,r,n,o){for(var a=t._reactName,i=[];null!==r&&r!==n;){var l=r,u=l.alternate,c=l.stateNode;if(null!==u&&u===n)break;5===l.tag&&null!==c&&(l=c,o?null!=(u=Ue(r,a))&&i.unshift(An(r,u,l)):o||null!=(u=Ue(r,a))&&i.push(An(r,u,l))),r=r.return}0!==i.length&&e.push({event:t,listeners:i})}function Dn(){}var qn=null,zn=null;function Un(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Fn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Bn="function"===typeof setTimeout?setTimeout:void 0,Vn="function"===typeof clearTimeout?clearTimeout:void 0;function Hn(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Wn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function $n(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var Gn=0;var Qn=Math.random().toString(36).slice(2),Yn="__reactFiber$"+Qn,Kn="__reactProps$"+Qn,Xn="__reactContainer$"+Qn,Jn="__reactEvents$"+Qn;function Zn(e){var t=e[Yn];if(t)return t;for(var r=e.parentNode;r;){if(t=r[Xn]||r[Yn]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=$n(e);null!==e;){if(r=e[Yn])return r;e=$n(e)}return t}r=(e=r).parentNode}return null}function eo(e){return!(e=e[Yn]||e[Xn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function to(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ro(e){return e[Kn]||null}function no(e){var t=e[Jn];return void 0===t&&(t=e[Jn]=new Set),t}var oo=[],ao=-1;function io(e){return{current:e}}function lo(e){0>ao||(e.current=oo[ao],oo[ao]=null,ao--)}function uo(e,t){ao++,oo[ao]=e.current,e.current=t}var co={},so=io(co),fo=io(!1),po=co;function ho(e,t){var r=e.type.contextTypes;if(!r)return co;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in r)a[o]=t[o];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function go(e){return null!==(e=e.childContextTypes)&&void 0!==e}function vo(){lo(fo),lo(so)}function mo(e,t,r){if(so.current!==co)throw Error(i(168));uo(so,t),uo(fo,r)}function yo(e,t,r){var n=e.stateNode;if(e=t.childContextTypes,"function"!==typeof n.getChildContext)return r;for(var a in n=n.getChildContext())if(!(a in e))throw Error(i(108,G(t)||"Unknown",a));return o({},r,n)}function bo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||co,po=so.current,uo(so,e),uo(fo,fo.current),!0}function wo(e,t,r){var n=e.stateNode;if(!n)throw Error(i(169));r?(e=yo(e,t,po),n.__reactInternalMemoizedMergedChildContext=e,lo(fo),lo(so),uo(so,e)):lo(fo),uo(fo,r)}var ko=null,Eo=null,xo=a.unstable_runWithPriority,So=a.unstable_scheduleCallback,_o=a.unstable_cancelCallback,To=a.unstable_shouldYield,Co=a.unstable_requestPaint,Oo=a.unstable_now,Po=a.unstable_getCurrentPriorityLevel,Ro=a.unstable_ImmediatePriority,No=a.unstable_UserBlockingPriority,Lo=a.unstable_NormalPriority,Ao=a.unstable_LowPriority,Io=a.unstable_IdlePriority,jo={},Mo=void 0!==Co?Co:function(){},Do=null,qo=null,zo=!1,Uo=Oo(),Fo=1e4>Uo?Oo:function(){return Oo()-Uo};function Bo(){switch(Po()){case Ro:return 99;case No:return 98;case Lo:return 97;case Ao:return 96;case Io:return 95;default:throw Error(i(332))}}function Vo(e){switch(e){case 99:return Ro;case 98:return No;case 97:return Lo;case 96:return Ao;case 95:return Io;default:throw Error(i(332))}}function Ho(e,t){return e=Vo(e),xo(e,t)}function Wo(e,t,r){return e=Vo(e),So(e,t,r)}function $o(){if(null!==qo){var e=qo;qo=null,_o(e)}Go()}function Go(){if(!zo&&null!==Do){zo=!0;var e=0;try{var t=Do;Ho(99,(function(){for(;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}})),Do=null}catch(t){throw null!==Do&&(Do=Do.slice(e+1)),So(Ro,$o),t}finally{zo=!1}}}var Qo=k.ReactCurrentBatchConfig;function Yo(e,t){if(e&&e.defaultProps){for(var r in t=o({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var Ko=io(null),Xo=null,Jo=null,Zo=null;function ea(){Zo=Jo=Xo=null}function ta(e){var t=Ko.current;lo(Ko),e.type._context._currentValue=t}function ra(e,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)===t){if(null===r||(r.childLanes&t)===t)break;r.childLanes|=t}else e.childLanes|=t,null!==r&&(r.childLanes|=t);e=e.return}}function na(e,t){Xo=e,Zo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(Ii=!0),e.firstContext=null)}function oa(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Jo){if(null===Xo)throw Error(i(308));Jo=t,Xo.dependencies={lanes:0,firstContext:t,responders:null}}else Jo=Jo.next=t;return e._currentValue}var aa=!1;function ia(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function la(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ua(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ca(e,t){if(null!==(e=e.updateQueue)){var r=(e=e.shared).pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}}function sa(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var o=null,a=null;if(null!==(r=r.firstBaseUpdate)){do{var i={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===a?o=a=i:a=a.next=i,r=r.next}while(null!==r);null===a?o=a=t:a=a.next=t}else o=a=t;return r={baseState:n.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:n.shared,effects:n.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function fa(e,t,r,n){var a=e.updateQueue;aa=!1;var i=a.firstBaseUpdate,l=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var c=u,s=c.next;c.next=null,null===l?i=s:l.next=s,l=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==i){for(d=a.baseState,l=0,f=s=c=null;;){u=i.lane;var p=i.eventTime;if((n&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,g=i;switch(u=t,p=r,g.tag){case 1:if("function"===typeof(h=g.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null===(u="function"===typeof(h=g.payload)?h.call(p,d,u):h)||void 0===u)break e;d=o({},d,u);break e;case 2:aa=!0}}null!==i.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=a.shared.pending))break;i=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(c=d),a.baseState=c,a.firstBaseUpdate=s,a.lastBaseUpdate=f,ql|=l,e.lanes=l,e.memoizedState=d}}function da(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],o=n.callback;if(null!==o){if(n.callback=null,n=r,"function"!==typeof o)throw Error(i(191,o));o.call(n)}}}var pa=(new n.Component).refs;function ha(e,t,r,n){r=null===(r=r(n,t=e.memoizedState))||void 0===r?t:o({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var ga={isMounted:function(e){return!!(e=e._reactInternals)&&Ke(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=cu(),o=su(e),a=ua(n,o);a.payload=t,void 0!==r&&null!==r&&(a.callback=r),ca(e,a),fu(e,o,n)},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=cu(),o=su(e),a=ua(n,o);a.tag=1,a.payload=t,void 0!==r&&null!==r&&(a.callback=r),ca(e,a),fu(e,o,n)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=cu(),n=su(e),o=ua(r,n);o.tag=2,void 0!==t&&null!==t&&(o.callback=t),ca(e,o),fu(e,n,r)}};function va(e,t,r,n,o,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!cn(r,n)||!cn(o,a))}function ma(e,t,r){var n=!1,o=co,a=t.contextType;return"object"===typeof a&&null!==a?a=oa(a):(o=go(t)?po:so.current,a=(n=null!==(n=t.contextTypes)&&void 0!==n)?ho(e,o):co),t=new t(r,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ga,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ya(e,t,r,n){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&ga.enqueueReplaceState(t,t.state,null)}function ba(e,t,r,n){var o=e.stateNode;o.props=r,o.state=e.memoizedState,o.refs=pa,ia(e);var a=t.contextType;"object"===typeof a&&null!==a?o.context=oa(a):(a=go(t)?po:so.current,o.context=ho(e,a)),fa(e,r,o,n),o.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(ha(e,t,a,r),o.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof o.getSnapshotBeforeUpdate||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||(t=o.state,"function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ga.enqueueReplaceState(o,o.state,null),fa(e,r,o,n),o.state=e.memoizedState),"function"===typeof o.componentDidMount&&(e.flags|=4)}var wa=Array.isArray;function ka(e,t,r){if(null!==(e=r.ref)&&"function"!==typeof e&&"object"!==typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(i(309));var n=r.stateNode}if(!n)throw Error(i(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=n.refs;t===pa&&(t=n.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!==typeof e)throw Error(i(284));if(!r._owner)throw Error(i(290,e))}return e}function Ea(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function xa(e){function t(t,r){if(e){var n=t.lastEffect;null!==n?(n.nextEffect=r,t.lastEffect=r):t.firstEffect=t.lastEffect=r,r.nextEffect=null,r.flags=8}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Vu(e,t)).index=0,e.sibling=null,e}function a(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.flags=2,r):n:(t.flags=2,r):r}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,r,n){return null===t||6!==t.tag?((t=Gu(r,e.mode,n)).return=e,t):((t=o(t,r)).return=e,t)}function c(e,t,r,n){return null!==t&&t.elementType===r.type?((n=o(t,r.props)).ref=ka(e,t,r),n.return=e,n):((n=Hu(r.type,r.key,r.props,null,e.mode,n)).ref=ka(e,t,r),n.return=e,n)}function s(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Qu(r,e.mode,n)).return=e,t):((t=o(t,r.children||[])).return=e,t)}function f(e,t,r,n,a){return null===t||7!==t.tag?((t=Wu(r,e.mode,n,a)).return=e,t):((t=o(t,r)).return=e,t)}function d(e,t,r){if("string"===typeof t||"number"===typeof t)return(t=Gu(""+t,e.mode,r)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case E:return(r=Hu(t.type,t.key,t.props,null,e.mode,r)).ref=ka(e,null,t),r.return=e,r;case x:return(t=Qu(t,e.mode,r)).return=e,t}if(wa(t)||B(t))return(t=Wu(t,e.mode,r,null)).return=e,t;Ea(e,t)}return null}function p(e,t,r,n){var o=null!==t?t.key:null;if("string"===typeof r||"number"===typeof r)return null!==o?null:u(e,t,""+r,n);if("object"===typeof r&&null!==r){switch(r.$$typeof){case E:return r.key===o?r.type===S?f(e,t,r.props.children,n,o):c(e,t,r,n):null;case x:return r.key===o?s(e,t,r,n):null}if(wa(r)||B(r))return null!==o?null:f(e,t,r,n,null);Ea(e,r)}return null}function h(e,t,r,n,o){if("string"===typeof n||"number"===typeof n)return u(t,e=e.get(r)||null,""+n,o);if("object"===typeof n&&null!==n){switch(n.$$typeof){case E:return e=e.get(null===n.key?r:n.key)||null,n.type===S?f(t,e,n.props.children,o,n.key):c(t,e,n,o);case x:return s(t,e=e.get(null===n.key?r:n.key)||null,n,o)}if(wa(n)||B(n))return f(t,e=e.get(r)||null,n,o,null);Ea(t,n)}return null}function g(o,i,l,u){for(var c=null,s=null,f=i,g=i=0,v=null;null!==f&&g<l.length;g++){f.index>g?(v=f,f=null):v=f.sibling;var m=p(o,f,l[g],u);if(null===m){null===f&&(f=v);break}e&&f&&null===m.alternate&&t(o,f),i=a(m,i,g),null===s?c=m:s.sibling=m,s=m,f=v}if(g===l.length)return r(o,f),c;if(null===f){for(;g<l.length;g++)null!==(f=d(o,l[g],u))&&(i=a(f,i,g),null===s?c=f:s.sibling=f,s=f);return c}for(f=n(o,f);g<l.length;g++)null!==(v=h(f,o,g,l[g],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?g:v.key),i=a(v,i,g),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,l,u,c){var s=B(u);if("function"!==typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var f=s=null,g=l,v=l=0,m=null,y=u.next();null!==g&&!y.done;v++,y=u.next()){g.index>v?(m=g,g=null):m=g.sibling;var b=p(o,g,y.value,c);if(null===b){null===g&&(g=m);break}e&&g&&null===b.alternate&&t(o,g),l=a(b,l,v),null===f?s=b:f.sibling=b,f=b,g=m}if(y.done)return r(o,g),s;if(null===g){for(;!y.done;v++,y=u.next())null!==(y=d(o,y.value,c))&&(l=a(y,l,v),null===f?s=y:f.sibling=y,f=y);return s}for(g=n(o,g);!y.done;v++,y=u.next())null!==(y=h(g,o,v,y.value,c))&&(e&&null!==y.alternate&&g.delete(null===y.key?v:y.key),l=a(y,l,v),null===f?s=y:f.sibling=y,f=y);return e&&g.forEach((function(e){return t(o,e)})),s}return function(e,n,a,u){var c="object"===typeof a&&null!==a&&a.type===S&&null===a.key;c&&(a=a.props.children);var s="object"===typeof a&&null!==a;if(s)switch(a.$$typeof){case E:e:{for(s=a.key,c=n;null!==c;){if(c.key===s){switch(c.tag){case 7:if(a.type===S){r(e,c.sibling),(n=o(c,a.props.children)).return=e,e=n;break e}break;default:if(c.elementType===a.type){r(e,c.sibling),(n=o(c,a.props)).ref=ka(e,c,a),n.return=e,e=n;break e}}r(e,c);break}t(e,c),c=c.sibling}a.type===S?((n=Wu(a.props.children,e.mode,u,a.key)).return=e,e=n):((u=Hu(a.type,a.key,a.props,null,e.mode,u)).ref=ka(e,n,a),u.return=e,e=u)}return l(e);case x:e:{for(c=a.key;null!==n;){if(n.key===c){if(4===n.tag&&n.stateNode.containerInfo===a.containerInfo&&n.stateNode.implementation===a.implementation){r(e,n.sibling),(n=o(n,a.children||[])).return=e,e=n;break e}r(e,n);break}t(e,n),n=n.sibling}(n=Qu(a,e.mode,u)).return=e,e=n}return l(e)}if("string"===typeof a||"number"===typeof a)return a=""+a,null!==n&&6===n.tag?(r(e,n.sibling),(n=o(n,a)).return=e,e=n):(r(e,n),(n=Gu(a,e.mode,u)).return=e,e=n),l(e);if(wa(a))return g(e,n,a,u);if(B(a))return v(e,n,a,u);if(s&&Ea(e,a),"undefined"===typeof a&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,G(e.type)||"Component"))}return r(e,n)}}var Sa=xa(!0),_a=xa(!1),Ta={},Ca=io(Ta),Oa=io(Ta),Pa=io(Ta);function Ra(e){if(e===Ta)throw Error(i(174));return e}function Na(e,t){switch(uo(Pa,t),uo(Oa,e),uo(Ca,Ta),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:he(null,"");break;default:t=he(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}lo(Ca),uo(Ca,t)}function La(){lo(Ca),lo(Oa),lo(Pa)}function Aa(e){Ra(Pa.current);var t=Ra(Ca.current),r=he(t,e.type);t!==r&&(uo(Oa,e),uo(Ca,r))}function Ia(e){Oa.current===e&&(lo(Ca),lo(Oa))}var ja=io(0);function Ma(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Da=null,qa=null,za=!1;function Ua(e,t){var r=Fu(5,null,null,0);r.elementType="DELETED",r.type="DELETED",r.stateNode=t,r.return=e,r.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=r,e.lastEffect=r):e.firstEffect=e.lastEffect=r}function Fa(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ba(e){if(za){var t=qa;if(t){var r=t;if(!Fa(e,t)){if(!(t=Wn(r.nextSibling))||!Fa(e,t))return e.flags=-1025&e.flags|2,za=!1,void(Da=e);Ua(Da,r)}Da=e,qa=Wn(t.firstChild)}else e.flags=-1025&e.flags|2,za=!1,Da=e}}function Va(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Da=e}function Ha(e){if(e!==Da)return!1;if(!za)return Va(e),za=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Fn(t,e.memoizedProps))for(t=qa;t;)Ua(e,t),t=Wn(t.nextSibling);if(Va(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){qa=Wn(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}qa=null}}else qa=Da?Wn(e.stateNode.nextSibling):null;return!0}function Wa(){qa=Da=null,za=!1}var $a=[];function Ga(){for(var e=0;e<$a.length;e++)$a[e]._workInProgressVersionPrimary=null;$a.length=0}var Qa=k.ReactCurrentDispatcher,Ya=k.ReactCurrentBatchConfig,Ka=0,Xa=null,Ja=null,Za=null,ei=!1,ti=!1;function ri(){throw Error(i(321))}function ni(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!ln(e[r],t[r]))return!1;return!0}function oi(e,t,r,n,o,a){if(Ka=a,Xa=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Qa.current=null===e||null===e.memoizedState?Ri:Ni,e=r(n,o),ti){a=0;do{if(ti=!1,!(25>a))throw Error(i(301));a+=1,Za=Ja=null,t.updateQueue=null,Qa.current=Li,e=r(n,o)}while(ti)}if(Qa.current=Pi,t=null!==Ja&&null!==Ja.next,Ka=0,Za=Ja=Xa=null,ei=!1,t)throw Error(i(300));return e}function ai(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Za?Xa.memoizedState=Za=e:Za=Za.next=e,Za}function ii(){if(null===Ja){var e=Xa.alternate;e=null!==e?e.memoizedState:null}else e=Ja.next;var t=null===Za?Xa.memoizedState:Za.next;if(null!==t)Za=t,Ja=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Ja=e).memoizedState,baseState:Ja.baseState,baseQueue:Ja.baseQueue,queue:Ja.queue,next:null},null===Za?Xa.memoizedState=Za=e:Za=Za.next=e}return Za}function li(e,t){return"function"===typeof t?t(e):t}function ui(e){var t=ii(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=Ja,o=n.baseQueue,a=r.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}n.baseQueue=o=a,r.pending=null}if(null!==o){o=o.next,n=n.baseState;var u=l=a=null,c=o;do{var s=c.lane;if((Ka&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),n=c.eagerReducer===e?c.eagerState:e(n,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,a=n):u=u.next=f,Xa.lanes|=s,ql|=s}c=c.next}while(null!==c&&c!==o);null===u?a=n:u.next=l,ln(n,t.memoizedState)||(Ii=!0),t.memoizedState=n,t.baseState=a,t.baseQueue=u,r.lastRenderedState=n}return[t.memoizedState,r.dispatch]}function ci(e){var t=ii(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=r.dispatch,o=r.pending,a=t.memoizedState;if(null!==o){r.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);ln(a,t.memoizedState)||(Ii=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),r.lastRenderedState=a}return[a,n]}function si(e,t,r){var n=t._getVersion;n=n(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===n:(e=e.mutableReadLanes,(e=(Ka&e)===e)&&(t._workInProgressVersionPrimary=n,$a.push(t))),e)return r(t._source);throw $a.push(t),Error(i(350))}function fi(e,t,r,n){var o=Rl;if(null===o)throw Error(i(349));var a=t._getVersion,l=a(t._source),u=Qa.current,c=u.useState((function(){return si(o,t,r)})),s=c[1],f=c[0];c=Za;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,g=d.source;d=d.subscribe;var v=Xa;return e.memoizedState={refs:p,source:t,subscribe:n},u.useEffect((function(){p.getSnapshot=r,p.setSnapshot=s;var e=a(t._source);if(!ln(l,e)){e=r(t._source),ln(f,e)||(s(e),e=su(v),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var n=o.entanglements,i=e;0<i;){var u=31-Ht(i),c=1<<u;n[u]|=e,i&=~c}}}),[r,t,n]),u.useEffect((function(){return n(t._source,(function(){var e=p.getSnapshot,r=p.setSnapshot;try{r(e(t._source));var n=su(v);o.mutableReadLanes|=n&o.pendingLanes}catch(e){r((function(){throw e}))}}))}),[t,n]),ln(h,r)&&ln(g,t)&&ln(d,n)||((e={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:f}).dispatch=s=Oi.bind(null,Xa,e),c.queue=e,c.baseQueue=null,f=si(o,t,r),c.memoizedState=c.baseState=f),f}function di(e,t,r){return fi(ii(),e,t,r)}function pi(e){var t=ai();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:e}).dispatch=Oi.bind(null,Xa,e),[t.memoizedState,e]}function hi(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=Xa.updateQueue)?(t={lastEffect:null},Xa.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function gi(e){return e={current:e},ai().memoizedState=e}function vi(){return ii().memoizedState}function mi(e,t,r,n){var o=ai();Xa.flags|=e,o.memoizedState=hi(1|t,r,void 0,void 0===n?null:n)}function yi(e,t,r,n){var o=ii();n=void 0===n?null:n;var a=void 0;if(null!==Ja){var i=Ja.memoizedState;if(a=i.destroy,null!==n&&ni(n,i.deps))return void hi(t,r,a,n)}Xa.flags|=e,o.memoizedState=hi(1|t,r,a,n)}function bi(e,t){return mi(516,4,e,t)}function wi(e,t){return yi(516,4,e,t)}function ki(e,t){return yi(4,2,e,t)}function Ei(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function xi(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,yi(4,2,Ei.bind(null,t,e),r)}function Si(){}function _i(e,t){var r=ii();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ni(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function Ti(e,t){var r=ii();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ni(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function Ci(e,t){var r=Bo();Ho(98>r?98:r,(function(){e(!0)})),Ho(97<r?97:r,(function(){var r=Ya.transition;Ya.transition=1;try{e(!1),t()}finally{Ya.transition=r}}))}function Oi(e,t,r){var n=cu(),o=su(e),a={lane:o,action:r,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===Xa||null!==i&&i===Xa)ti=ei=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,r);if(a.eagerReducer=i,a.eagerState=u,ln(u,l))return}catch(e){}fu(e,o,n)}}var Pi={readContext:oa,useCallback:ri,useContext:ri,useEffect:ri,useImperativeHandle:ri,useLayoutEffect:ri,useMemo:ri,useReducer:ri,useRef:ri,useState:ri,useDebugValue:ri,useDeferredValue:ri,useTransition:ri,useMutableSource:ri,useOpaqueIdentifier:ri,unstable_isNewReconciler:!1},Ri={readContext:oa,useCallback:function(e,t){return ai().memoizedState=[e,void 0===t?null:t],e},useContext:oa,useEffect:bi,useImperativeHandle:function(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,mi(4,2,Ei.bind(null,t,e),r)},useLayoutEffect:function(e,t){return mi(4,2,e,t)},useMemo:function(e,t){var r=ai();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=ai();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Oi.bind(null,Xa,e),[n.memoizedState,e]},useRef:gi,useState:pi,useDebugValue:Si,useDeferredValue:function(e){var t=pi(e),r=t[0],n=t[1];return bi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=pi(!1),t=e[0];return gi(e=Ci.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,r){var n=ai();return n.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:r},fi(n,e,t,r)},useOpaqueIdentifier:function(){if(za){var e=!1,t=function(e){return{$$typeof:j,toString:e,valueOf:e}}((function(){throw e||(e=!0,r("r:"+(Gn++).toString(36))),Error(i(355))})),r=pi(t)[1];return 0===(2&Xa.mode)&&(Xa.flags|=516,hi(5,(function(){r("r:"+(Gn++).toString(36))}),void 0,null)),t}return pi(t="r:"+(Gn++).toString(36)),t},unstable_isNewReconciler:!1},Ni={readContext:oa,useCallback:_i,useContext:oa,useEffect:wi,useImperativeHandle:xi,useLayoutEffect:ki,useMemo:Ti,useReducer:ui,useRef:vi,useState:function(){return ui(li)},useDebugValue:Si,useDeferredValue:function(e){var t=ui(li),r=t[0],n=t[1];return wi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=ui(li)[0];return[vi().current,e]},useMutableSource:di,useOpaqueIdentifier:function(){return ui(li)[0]},unstable_isNewReconciler:!1},Li={readContext:oa,useCallback:_i,useContext:oa,useEffect:wi,useImperativeHandle:xi,useLayoutEffect:ki,useMemo:Ti,useReducer:ci,useRef:vi,useState:function(){return ci(li)},useDebugValue:Si,useDeferredValue:function(e){var t=ci(li),r=t[0],n=t[1];return wi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=ci(li)[0];return[vi().current,e]},useMutableSource:di,useOpaqueIdentifier:function(){return ci(li)[0]},unstable_isNewReconciler:!1},Ai=k.ReactCurrentOwner,Ii=!1;function ji(e,t,r,n){t.child=null===e?_a(t,null,r,n):Sa(t,e.child,r,n)}function Mi(e,t,r,n,o){r=r.render;var a=t.ref;return na(t,o),n=oi(e,t,r,n,a,o),null===e||Ii?(t.flags|=1,ji(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,rl(e,t,o))}function Di(e,t,r,n,o,a){if(null===e){var i=r.type;return"function"!==typeof i||Bu(i)||void 0!==i.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Hu(r.type,null,n,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,qi(e,t,i,n,o,a))}return i=e.child,0===(o&a)&&(o=i.memoizedProps,(r=null!==(r=r.compare)?r:cn)(o,n)&&e.ref===t.ref)?rl(e,t,a):(t.flags|=1,(e=Vu(i,n)).ref=t.ref,e.return=t,t.child=e)}function qi(e,t,r,n,o,a){if(null!==e&&cn(e.memoizedProps,n)&&e.ref===t.ref){if(Ii=!1,0===(a&o))return t.lanes=e.lanes,rl(e,t,a);0!==(16384&e.flags)&&(Ii=!0)}return Fi(e,t,r,n,a)}function zi(e,t,r){var n=t.pendingProps,o=n.children,a=null!==e?e.memoizedState:null;if("hidden"===n.mode||"unstable-defer-without-hiding"===n.mode)if(0===(4&t.mode))t.memoizedState={baseLanes:0},bu(t,r);else{if(0===(1073741824&r))return e=null!==a?a.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},bu(t,e),null;t.memoizedState={baseLanes:0},bu(t,null!==a?a.baseLanes:r)}else null!==a?(n=a.baseLanes|r,t.memoizedState=null):n=r,bu(t,n);return ji(e,t,o,r),t.child}function Ui(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=128)}function Fi(e,t,r,n,o){var a=go(r)?po:so.current;return a=ho(t,a),na(t,o),r=oi(e,t,r,n,a,o),null===e||Ii?(t.flags|=1,ji(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,rl(e,t,o))}function Bi(e,t,r,n,o){if(go(r)){var a=!0;bo(t)}else a=!1;if(na(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ma(t,r,n),ba(t,r,n,o),n=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=r.contextType;"object"===typeof c&&null!==c?c=oa(c):c=ho(t,c=go(r)?po:so.current);var s=r.getDerivedStateFromProps,f="function"===typeof s||"function"===typeof i.getSnapshotBeforeUpdate;f||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==n||u!==c)&&ya(t,i,n,c),aa=!1;var d=t.memoizedState;i.state=d,fa(t,n,i,o),u=t.memoizedState,l!==n||d!==u||fo.current||aa?("function"===typeof s&&(ha(t,r,s,n),u=t.memoizedState),(l=aa||va(t,r,l,n,d,u,c))?(f||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4)):("function"===typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=n,t.memoizedState=u),i.props=n,i.state=u,i.context=c,n=l):("function"===typeof i.componentDidMount&&(t.flags|=4),n=!1)}else{i=t.stateNode,la(e,t),l=t.memoizedProps,c=t.type===t.elementType?l:Yo(t.type,l),i.props=c,f=t.pendingProps,d=i.context,"object"===typeof(u=r.contextType)&&null!==u?u=oa(u):u=ho(t,u=go(r)?po:so.current);var p=r.getDerivedStateFromProps;(s="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==f||d!==u)&&ya(t,i,n,u),aa=!1,d=t.memoizedState,i.state=d,fa(t,n,i,o);var h=t.memoizedState;l!==f||d!==h||fo.current||aa?("function"===typeof p&&(ha(t,r,p,n),h=t.memoizedState),(c=aa||va(t,r,c,n,d,h,u))?(s||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(n,h,u),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,h,u)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=n,t.memoizedState=h),i.props=n,i.state=h,i.context=u,n=c):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),n=!1)}return Vi(e,t,r,n,a,o)}function Vi(e,t,r,n,o,a){Ui(e,t);var i=0!==(64&t.flags);if(!n&&!i)return o&&wo(t,r,!1),rl(e,t,a);n=t.stateNode,Ai.current=t;var l=i&&"function"!==typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&i?(t.child=Sa(t,e.child,null,a),t.child=Sa(t,null,l,a)):ji(e,t,l,a),t.memoizedState=n.state,o&&wo(t,r,!0),t.child}function Hi(e){var t=e.stateNode;t.pendingContext?mo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&mo(0,t.context,!1),Na(e,t.containerInfo)}var Wi,$i,Gi,Qi={dehydrated:null,retryLane:0};function Yi(e,t,r){var n,o=t.pendingProps,a=ja.current,i=!1;return(n=0!==(64&t.flags))||(n=(null===e||null!==e.memoizedState)&&0!==(2&a)),n?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),uo(ja,1&a),null===e?(void 0!==o.fallback&&Ba(t),e=o.children,a=o.fallback,i?(e=Ki(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Qi,e):"number"===typeof o.unstable_expectedLoadTime?(e=Ki(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Qi,t.lanes=33554432,e):((r=$u({mode:"visible",children:e},t.mode,r,null)).return=t,t.child=r)):(e.memoizedState,i?(o=Ji(e,t,o.children,o.fallback,r),i=t.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:r}:{baseLanes:a.baseLanes|r},i.childLanes=e.childLanes&~r,t.memoizedState=Qi,o):(r=Xi(e,t,o.children,r),t.memoizedState=null,r))}function Ki(e,t,r,n){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0===(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=$u(t,o,0,null),r=Wu(r,o,n,null),a.return=e,r.return=e,a.sibling=r,e.child=a,r}function Xi(e,t,r,n){var o=e.child;return e=o.sibling,r=Vu(o,{mode:"visible",children:r}),0===(2&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=r}function Ji(e,t,r,n,o){var a=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:r};return 0===(2&a)&&t.child!==i?((r=t.child).childLanes=0,r.pendingProps=l,null!==(i=r.lastEffect)?(t.firstEffect=r.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):r=Vu(i,l),null!==e?n=Vu(e,n):(n=Wu(n,a,o,null)).flags|=2,n.return=t,r.return=t,r.sibling=n,t.child=r,n}function Zi(e,t){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),ra(e.return,t)}function el(e,t,r,n,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:o,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=n,i.tail=r,i.tailMode=o,i.lastEffect=a)}function tl(e,t,r){var n=t.pendingProps,o=n.revealOrder,a=n.tail;if(ji(e,t,n.children,r),0!==(2&(n=ja.current)))n=1&n|2,t.flags|=64;else{if(null!==e&&0!==(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Zi(e,r);else if(19===e.tag)Zi(e,r);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(uo(ja,n),0===(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(r=t.child,o=null;null!==r;)null!==(e=r.alternate)&&null===Ma(e)&&(o=r),r=r.sibling;null===(r=o)?(o=t.child,t.child=null):(o=r.sibling,r.sibling=null),el(t,!1,o,r,a,t.lastEffect);break;case"backwards":for(r=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Ma(e)){t.child=o;break}e=o.sibling,o.sibling=r,r=o,o=e}el(t,!0,r,null,a,t.lastEffect);break;case"together":el(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function rl(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),ql|=t.lanes,0!==(r&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(r=Vu(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Vu(e,e.pendingProps)).return=t;r.sibling=null}return t.child}return null}function nl(e,t){if(!za)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function ol(e,t,r){var n=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return go(t.type)&&vo(),null;case 3:return La(),lo(fo),lo(so),Ga(),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(Ha(t)?t.flags|=4:n.hydrate||(t.flags|=256)),null;case 5:Ia(t);var a=Ra(Pa.current);if(r=t.type,null!==e&&null!=t.stateNode)$i(e,t,r,n),e.ref!==t.ref&&(t.flags|=128);else{if(!n){if(null===t.stateNode)throw Error(i(166));return null}if(e=Ra(Ca.current),Ha(t)){n=t.stateNode,r=t.type;var l=t.memoizedProps;switch(n[Yn]=t,n[Kn]=l,r){case"dialog":Cn("cancel",n),Cn("close",n);break;case"iframe":case"object":case"embed":Cn("load",n);break;case"video":case"audio":for(e=0;e<xn.length;e++)Cn(xn[e],n);break;case"source":Cn("error",n);break;case"img":case"image":case"link":Cn("error",n),Cn("load",n);break;case"details":Cn("toggle",n);break;case"input":ee(n,l),Cn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!l.multiple},Cn("invalid",n);break;case"textarea":ue(n,l),Cn("invalid",n)}for(var c in Se(r,l),e=null,l)l.hasOwnProperty(c)&&(a=l[c],"children"===c?"string"===typeof a?n.textContent!==a&&(e=["children",a]):"number"===typeof a&&n.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(c)&&null!=a&&"onScroll"===c&&Cn("scroll",n));switch(r){case"input":K(n),ne(n,l,!0);break;case"textarea":K(n),se(n);break;case"select":case"option":break;default:"function"===typeof l.onClick&&(n.onclick=Dn)}n=e,t.updateQueue=n,null!==n&&(t.flags|=4)}else{switch(c=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=pe(r)),e===fe?"script"===r?((e=c.createElement("div")).innerHTML="<script><\\/script>",e=e.removeChild(e.firstChild)):"string"===typeof n.is?e=c.createElement(r,{is:n.is}):(e=c.createElement(r),"select"===r&&(c=e,n.multiple?c.multiple=!0:n.size&&(c.size=n.size))):e=c.createElementNS(e,r),e[Yn]=t,e[Kn]=n,Wi(e,t),t.stateNode=e,c=_e(r,n),r){case"dialog":Cn("cancel",e),Cn("close",e),a=n;break;case"iframe":case"object":case"embed":Cn("load",e),a=n;break;case"video":case"audio":for(a=0;a<xn.length;a++)Cn(xn[a],e);a=n;break;case"source":Cn("error",e),a=n;break;case"img":case"image":case"link":Cn("error",e),Cn("load",e),a=n;break;case"details":Cn("toggle",e),a=n;break;case"input":ee(e,n),a=Z(e,n),Cn("invalid",e);break;case"option":a=ae(e,n);break;case"select":e._wrapperState={wasMultiple:!!n.multiple},a=o({},n,{value:void 0}),Cn("invalid",e);break;case"textarea":ue(e,n),a=le(e,n),Cn("invalid",e);break;default:a=n}Se(r,a);var s=a;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?Ee(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&me(e,f):"children"===l?"string"===typeof f?("textarea"!==r||""!==f)&&ye(e,f):"number"===typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Cn("scroll",e):null!=f&&w(e,l,f,c))}switch(r){case"input":K(e),ne(e,n,!1);break;case"textarea":K(e),se(e);break;case"option":null!=n.value&&e.setAttribute("value",""+Q(n.value));break;case"select":e.multiple=!!n.multiple,null!=(l=n.value)?ie(e,!!n.multiple,l,!1):null!=n.defaultValue&&ie(e,!!n.multiple,n.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=Dn)}Un(r,n)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Gi(0,t,e.memoizedProps,n);else{if("string"!==typeof n&&null===t.stateNode)throw Error(i(166));r=Ra(Pa.current),Ra(Ca.current),Ha(t)?(n=t.stateNode,r=t.memoizedProps,n[Yn]=t,n.nodeValue!==r&&(t.flags|=4)):((n=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[Yn]=t,t.stateNode=n)}return null;case 13:return lo(ja),n=t.memoizedState,0!==(64&t.flags)?(t.lanes=r,t):(n=null!==n,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ha(t):r=null!==e.memoizedState,n&&!r&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&ja.current)?0===jl&&(jl=3):(0!==jl&&3!==jl||(jl=4),null===Rl||0===(134217727&ql)&&0===(134217727&zl)||gu(Rl,Ll))),(n||r)&&(t.flags|=4),null);case 4:return La(),null===e&&Pn(t.stateNode.containerInfo),null;case 10:return ta(t),null;case 17:return go(t.type)&&vo(),null;case 19:if(lo(ja),null===(n=t.memoizedState))return null;if(l=0!==(64&t.flags),null===(c=n.rendering))if(l)nl(n,!1);else{if(0!==jl||null!==e&&0!==(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Ma(e))){for(t.flags|=64,nl(n,!1),null!==(l=c.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===n.lastEffect&&(t.firstEffect=null),t.lastEffect=n.lastEffect,n=r,r=t.child;null!==r;)e=n,(l=r).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(c=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=c.childLanes,l.lanes=c.lanes,l.child=c.child,l.memoizedProps=c.memoizedProps,l.memoizedState=c.memoizedState,l.updateQueue=c.updateQueue,l.type=c.type,e=c.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return uo(ja,1&ja.current|2),t.child}e=e.sibling}null!==n.tail&&Fo()>Vl&&(t.flags|=64,l=!0,nl(n,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Ma(c))){if(t.flags|=64,l=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),nl(n,!0),null===n.tail&&"hidden"===n.tailMode&&!c.alternate&&!za)return null!==(t=t.lastEffect=n.lastEffect)&&(t.nextEffect=null),null}else 2*Fo()-n.renderingStartTime>Vl&&1073741824!==r&&(t.flags|=64,l=!0,nl(n,!1),t.lanes=33554432);n.isBackwards?(c.sibling=t.child,t.child=c):(null!==(r=n.last)?r.sibling=c:t.child=c,n.last=c)}return null!==n.tail?(r=n.tail,n.rendering=r,n.tail=r.sibling,n.lastEffect=t.lastEffect,n.renderingStartTime=Fo(),r.sibling=null,t=ja.current,uo(ja,l?1&t|2:1&t),r):null;case 23:case 24:return wu(),null!==e&&null!==e.memoizedState!==(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==n.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function al(e){switch(e.tag){case 1:go(e.type)&&vo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(La(),lo(fo),lo(so),Ga(),0!==(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Ia(e),null;case 13:return lo(ja),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return lo(ja),null;case 4:return La(),null;case 10:return ta(e),null;case 23:case 24:return wu(),null;default:return null}}function il(e,t){try{var r="",n=t;do{r+=$(n),n=n.return}while(n);var o=r}catch(e){o="\\nError generating stack: "+e.message+"\\n"+e.stack}return{value:e,source:t,stack:o}}function ll(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Wi=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},$i=function(e,t,r,n){var a=e.memoizedProps;if(a!==n){e=t.stateNode,Ra(Ca.current);var i,l=null;switch(r){case"input":a=Z(e,a),n=Z(e,n),l=[];break;case"option":a=ae(e,a),n=ae(e,n),l=[];break;case"select":a=o({},a,{value:void 0}),n=o({},n,{value:void 0}),l=[];break;case"textarea":a=le(e,a),n=le(e,n),l=[];break;default:"function"!==typeof a.onClick&&"function"===typeof n.onClick&&(e.onclick=Dn)}for(f in Se(r,n),r=null,a)if(!n.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var c=a[f];for(i in c)c.hasOwnProperty(i)&&(r||(r={}),r[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in n){var s=n[f];if(c=null!=a?a[f]:void 0,n.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(i in c)!c.hasOwnProperty(i)||s&&s.hasOwnProperty(i)||(r||(r={}),r[i]="");for(i in s)s.hasOwnProperty(i)&&c[i]!==s[i]&&(r||(r={}),r[i]=s[i])}else r||(l||(l=[]),l.push(f,r)),r=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(l=l||[]).push(f,s)):"children"===f?"string"!==typeof s&&"number"!==typeof s||(l=l||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Cn("scroll",e),l||c===s||(l=[])):"object"===typeof s&&null!==s&&s.$$typeof===j?s.toString():(l=l||[]).push(f,s))}r&&(l=l||[]).push("style",r);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Gi=function(e,t,r,n){r!==n&&(t.flags|=4)};var ul="function"===typeof WeakMap?WeakMap:Map;function cl(e,t,r){(r=ua(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){Gl||(Gl=!0,Ql=n),ll(0,t)},r}function sl(e,t,r){(r=ua(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"===typeof n){var o=t.value;r.payload=function(){return ll(0,t),n(o)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(r.callback=function(){"function"!==typeof n&&(null===Yl?Yl=new Set([this]):Yl.add(this),ll(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}var fl="function"===typeof WeakSet?WeakSet:Set;function dl(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(t){Du(e,t)}else t.current=null}function pl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var r=e.memoizedProps,n=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?r:Yo(t.type,r),n),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Hn(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function hl(e,t,r){switch(r.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3===(3&e.tag)){var n=e.create;e.destroy=n()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;n=o.next,0!==(4&(o=o.tag))&&0!==(1&o)&&(Iu(r,e),Au(r,e)),e=n}while(e!==t)}return;case 1:return e=r.stateNode,4&r.flags&&(null===t?e.componentDidMount():(n=r.elementType===r.type?t.memoizedProps:Yo(r.type,t.memoizedProps),e.componentDidUpdate(n,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=r.updateQueue)&&da(r,t,e));case 3:if(null!==(t=r.updateQueue)){if(e=null,null!==r.child)switch(r.child.tag){case 5:e=r.child.stateNode;break;case 1:e=r.child.stateNode}da(r,t,e)}return;case 5:return e=r.stateNode,void(null===t&&4&r.flags&&Un(r.type,r.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===r.memoizedState&&(r=r.alternate,null!==r&&(r=r.memoizedState,null!==r&&(r=r.dehydrated,null!==r&&Et(r)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function gl(e,t){for(var r=e;;){if(5===r.tag){var n=r.stateNode;if(t)"function"===typeof(n=n.style).setProperty?n.setProperty("display","none","important"):n.display="none";else{n=r.stateNode;var o=r.memoizedProps.style;o=void 0!==o&&null!==o&&o.hasOwnProperty("display")?o.display:null,n.style.display=ke("display",o)}}else if(6===r.tag)r.stateNode.nodeValue=t?"":r.memoizedProps;else if((23!==r.tag&&24!==r.tag||null===r.memoizedState||r===e)&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===e)break;for(;null===r.sibling;){if(null===r.return||r.return===e)return;r=r.return}r.sibling.return=r.return,r=r.sibling}}function vl(e,t){if(Eo&&"function"===typeof Eo.onCommitFiberUnmount)try{Eo.onCommitFiberUnmount(ko,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var n=r,o=n.destroy;if(n=n.tag,void 0!==o)if(0!==(4&n))Iu(t,r);else{n=t;try{o()}catch(e){Du(n,e)}}r=r.next}while(r!==e)}break;case 1:if(dl(t),"function"===typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Du(t,e)}break;case 5:dl(t);break;case 4:El(e,t)}}function ml(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function yl(e){return 5===e.tag||3===e.tag||4===e.tag}function bl(e){e:{for(var t=e.return;null!==t;){if(yl(t))break e;t=t.return}throw Error(i(160))}var r=t;switch(t=r.stateNode,r.tag){case 5:var n=!1;break;case 3:case 4:t=t.containerInfo,n=!0;break;default:throw Error(i(161))}16&r.flags&&(ye(t,""),r.flags&=-17);e:t:for(r=e;;){for(;null===r.sibling;){if(null===r.return||yl(r.return)){r=null;break e}r=r.return}for(r.sibling.return=r.return,r=r.sibling;5!==r.tag&&6!==r.tag&&18!==r.tag;){if(2&r.flags)continue t;if(null===r.child||4===r.tag)continue t;r.child.return=r,r=r.child}if(!(2&r.flags)){r=r.stateNode;break e}}n?wl(e,r,t):kl(e,r,t)}function wl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!==(r=r._reactRootContainer)&&void 0!==r||null!==t.onclick||(t.onclick=Dn));else if(4!==n&&null!==(e=e.child))for(wl(e,t,r),e=e.sibling;null!==e;)wl(e,t,r),e=e.sibling}function kl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==n&&null!==(e=e.child))for(kl(e,t,r),e=e.sibling;null!==e;)kl(e,t,r),e=e.sibling}function El(e,t){for(var r,n,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(i(160));switch(r=a.stateNode,a.tag){case 5:n=!1;break e;case 3:case 4:r=r.containerInfo,n=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,c=u;;)if(vl(l,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}n?(l=r,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,n=!0,o.child.return=o,o=o.child;continue}}else if(vl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function xl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var n=r=r.next;do{3===(3&n.tag)&&(e=n.destroy,n.destroy=void 0,void 0!==e&&e()),n=n.next}while(n!==r)}return;case 1:return;case 5:if(null!=(r=t.stateNode)){n=t.memoizedProps;var o=null!==e?e.memoizedProps:n;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(r[Kn]=n,"input"===e&&"radio"===n.type&&null!=n.name&&te(r,n),_e(e,o),t=_e(e,n),o=0;o<a.length;o+=2){var l=a[o],u=a[o+1];"style"===l?Ee(r,u):"dangerouslySetInnerHTML"===l?me(r,u):"children"===l?ye(r,u):w(r,l,u,t)}switch(e){case"input":re(r,n);break;case"textarea":ce(r,n);break;case"select":e=r._wrapperState.wasMultiple,r._wrapperState.wasMultiple=!!n.multiple,null!=(a=n.value)?ie(r,!!n.multiple,a,!1):e!==!!n.multiple&&(null!=n.defaultValue?ie(r,!!n.multiple,n.defaultValue,!0):ie(r,!!n.multiple,n.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((r=t.stateNode).hydrate&&(r.hydrate=!1,Et(r.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Bl=Fo(),gl(t.child,!0)),void Sl(t);case 19:return void Sl(t);case 17:return;case 23:case 24:return void gl(t,null!==t.memoizedState)}throw Error(i(163))}function Sl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new fl),t.forEach((function(t){var n=zu.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}function _l(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var Tl=Math.ceil,Cl=k.ReactCurrentDispatcher,Ol=k.ReactCurrentOwner,Pl=0,Rl=null,Nl=null,Ll=0,Al=0,Il=io(0),jl=0,Ml=null,Dl=0,ql=0,zl=0,Ul=0,Fl=null,Bl=0,Vl=1/0;function Hl(){Vl=Fo()+500}var Wl,$l=null,Gl=!1,Ql=null,Yl=null,Kl=!1,Xl=null,Jl=90,Zl=[],eu=[],tu=null,ru=0,nu=null,ou=-1,au=0,iu=0,lu=null,uu=!1;function cu(){return 0!==(48&Pl)?Fo():-1!==ou?ou:ou=Fo()}function su(e){if(0===(2&(e=e.mode)))return 1;if(0===(4&e))return 99===Bo()?1:2;if(0===au&&(au=Dl),0!==Qo.transition){0!==iu&&(iu=null!==Fl?Fl.pendingLanes:0),e=au;var t=4186112&~iu;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=Bo(),0!==(4&Pl)&&98===e?e=Ut(12,au):e=Ut(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),au),e}function fu(e,t,r){if(50<ru)throw ru=0,nu=null,Error(i(185));if(null===(e=du(e,t)))return null;Vt(e,t,r),e===Rl&&(zl|=t,4===jl&&gu(e,Ll));var n=Bo();1===t?0!==(8&Pl)&&0===(48&Pl)?vu(e):(pu(e,r),0===Pl&&(Hl(),$o())):(0===(4&Pl)||98!==n&&99!==n||(null===tu?tu=new Set([e]):tu.add(e)),pu(e,r)),Fl=e}function du(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}function pu(e,t){for(var r=e.callbackNode,n=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Ht(l),c=1<<u,s=a[u];if(-1===s){if(0===(c&n)||0!==(c&o)){s=t,Dt(c);var f=Mt;a[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);l&=~c}if(n=qt(e,e===Rl?Ll:0),t=Mt,0===n)null!==r&&(r!==jo&&_o(r),e.callbackNode=null,e.callbackPriority=0);else{if(null!==r){if(e.callbackPriority===t)return;r!==jo&&_o(r)}15===t?(r=vu.bind(null,e),null===Do?(Do=[r],qo=So(Ro,Go)):Do.push(r),r=jo):14===t?r=Wo(99,vu.bind(null,e)):r=Wo(r=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),hu.bind(null,e)),e.callbackPriority=t,e.callbackNode=r}}function hu(e){if(ou=-1,iu=au=0,0!==(48&Pl))throw Error(i(327));var t=e.callbackNode;if(Lu()&&e.callbackNode!==t)return null;var r=qt(e,e===Rl?Ll:0);if(0===r)return null;var n=r,o=Pl;Pl|=16;var a=xu();for(Rl===e&&Ll===n||(Hl(),ku(e,n));;)try{Tu();break}catch(t){Eu(e,t)}if(ea(),Cl.current=a,Pl=o,null!==Nl?n=0:(Rl=null,Ll=0,n=jl),0!==(Dl&zl))ku(e,0);else if(0!==n){if(2===n&&(Pl|=64,e.hydrate&&(e.hydrate=!1,Hn(e.containerInfo)),0!==(r=zt(e))&&(n=Su(e,r))),1===n)throw t=Ml,ku(e,0),gu(e,r),pu(e,Fo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=r,n){case 0:case 1:throw Error(i(345));case 2:Pu(e);break;case 3:if(gu(e,r),(62914560&r)===r&&10<(n=Bl+500-Fo())){if(0!==qt(e,0))break;if(((o=e.suspendedLanes)&r)!==r){cu(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Bn(Pu.bind(null,e),n);break}Pu(e);break;case 4:if(gu(e,r),(4186112&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var l=31-Ht(r);a=1<<l,(l=n[l])>o&&(o=l),r&=~a}if(r=o,10<(r=(120>(r=Fo()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Tl(r/1960))-r)){e.timeoutHandle=Bn(Pu.bind(null,e),r);break}Pu(e);break;case 5:Pu(e);break;default:throw Error(i(329))}}return pu(e,Fo()),e.callbackNode===t?hu.bind(null,e):null}function gu(e,t){for(t&=~Ul,t&=~zl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-Ht(t),n=1<<r;e[r]=-1,t&=~n}}function vu(e){if(0!==(48&Pl))throw Error(i(327));if(Lu(),e===Rl&&0!==(e.expiredLanes&Ll)){var t=Ll,r=Su(e,t);0!==(Dl&zl)&&(r=Su(e,t=qt(e,t)))}else r=Su(e,t=qt(e,0));if(0!==e.tag&&2===r&&(Pl|=64,e.hydrate&&(e.hydrate=!1,Hn(e.containerInfo)),0!==(t=zt(e))&&(r=Su(e,t))),1===r)throw r=Ml,ku(e,0),gu(e,t),pu(e,Fo()),r;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Pu(e),pu(e,Fo()),null}function mu(e,t){var r=Pl;Pl|=1;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}}function yu(e,t){var r=Pl;Pl&=-2,Pl|=8;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}}function bu(e,t){uo(Il,Al),Al|=t,Dl|=t}function wu(){Al=Il.current,lo(Il)}function ku(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,Vn(r)),null!==Nl)for(r=Nl.return;null!==r;){var n=r;switch(n.tag){case 1:null!==(n=n.type.childContextTypes)&&void 0!==n&&vo();break;case 3:La(),lo(fo),lo(so),Ga();break;case 5:Ia(n);break;case 4:La();break;case 13:case 19:lo(ja);break;case 10:ta(n);break;case 23:case 24:wu()}r=r.return}Rl=e,Nl=Vu(e.current,null),Ll=Al=Dl=t,jl=0,Ml=null,Ul=zl=ql=0}function Eu(e,t){for(;;){var r=Nl;try{if(ea(),Qa.current=Pi,ei){for(var n=Xa.memoizedState;null!==n;){var o=n.queue;null!==o&&(o.pending=null),n=n.next}ei=!1}if(Ka=0,Za=Ja=Xa=null,ti=!1,Ol.current=null,null===r||null===r.return){jl=1,Ml=t,Nl=null;break}e:{var a=e,i=r.return,l=r,u=t;if(t=Ll,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u;if(0===(2&l.mode)){var s=l.alternate;s?(l.updateQueue=s.updateQueue,l.memoizedState=s.memoizedState,l.lanes=s.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!==(1&ja.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var g=d.memoizedProps;p=void 0!==g.fallback&&(!0!==g.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var m=new Set;m.add(c),d.updateQueue=m}else v.add(c);if(0===(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=ua(-1,1);y.tag=2,ca(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new ul,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(l)){u.add(l);var w=qu.bind(null,a,c,l);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((G(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==jl&&(jl=2),u=il(u,l),d=i;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,sa(d,cl(0,a,t));break e;case 1:a=u;var k=d.type,E=d.stateNode;if(0===(64&d.flags)&&("function"===typeof k.getDerivedStateFromError||null!==E&&"function"===typeof E.componentDidCatch&&(null===Yl||!Yl.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,sa(d,sl(d,a,t));break e}}d=d.return}while(null!==d)}Ou(r)}catch(e){t=e,Nl===r&&null!==r&&(Nl=r=r.return);continue}break}}function xu(){var e=Cl.current;return Cl.current=Pi,null===e?Pi:e}function Su(e,t){var r=Pl;Pl|=16;var n=xu();for(Rl===e&&Ll===t||ku(e,t);;)try{_u();break}catch(t){Eu(e,t)}if(ea(),Pl=r,Cl.current=n,null!==Nl)throw Error(i(261));return Rl=null,Ll=0,jl}function _u(){for(;null!==Nl;)Cu(Nl)}function Tu(){for(;null!==Nl&&!To();)Cu(Nl)}function Cu(e){var t=Wl(e.alternate,e,Al);e.memoizedProps=e.pendingProps,null===t?Ou(e):Nl=t,Ol.current=null}function Ou(e){var t=e;do{var r=t.alternate;if(e=t.return,0===(2048&t.flags)){if(null!==(r=ol(r,t,Al)))return void(Nl=r);if(24!==(r=t).tag&&23!==r.tag||null===r.memoizedState||0!==(1073741824&Al)||0===(4&r.mode)){for(var n=0,o=r.child;null!==o;)n|=o.lanes|o.childLanes,o=o.sibling;r.childLanes=n}null!==e&&0===(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(r=al(t)))return r.flags&=2047,void(Nl=r);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Nl=t);Nl=t=e}while(null!==t);0===jl&&(jl=5)}function Pu(e){var t=Bo();return Ho(99,Ru.bind(null,e,t)),null}function Ru(e,t){do{Lu()}while(null!==Xl);if(0!==(48&Pl))throw Error(i(327));var r=e.finishedWork;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(i(177));e.callbackNode=null;var n=r.lanes|r.childLanes,o=n,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<a;){var c=31-Ht(a),s=1<<c;o[c]=0,l[c]=-1,u[c]=-1,a&=~s}if(null!==tu&&0===(24&n)&&tu.has(e)&&tu.delete(e),e===Rl&&(Nl=Rl=null,Ll=0),1<r.flags?null!==r.lastEffect?(r.lastEffect.nextEffect=r,n=r.firstEffect):n=r:n=r.firstEffect,null!==n){if(o=Pl,Pl|=32,Ol.current=null,qn=Yt,hn(l=pn())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,a=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,g=0,v=l,m=null;t:for(;;){for(var y;v!==u||0!==a&&3!==v.nodeType||(d=f+a),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(y=v.firstChild);)m=v,v=y;for(;;){if(v===l)break t;if(m===u&&++h===a&&(d=f),m===c&&++g===s&&(p=f),null!==(y=v.nextSibling))break;m=(v=m).parentNode}v=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;zn={focusedElem:l,selectionRange:u},Yt=!1,lu=null,uu=!1,$l=n;do{try{Nu()}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);lu=null,$l=n;do{try{for(l=e;null!==$l;){var b=$l.flags;if(16&b&&ye($l.stateNode,""),128&b){var w=$l.alternate;if(null!==w){var k=w.ref;null!==k&&("function"===typeof k?k(null):k.current=null)}}switch(1038&b){case 2:bl($l),$l.flags&=-3;break;case 6:bl($l),$l.flags&=-3,xl($l.alternate,$l);break;case 1024:$l.flags&=-1025;break;case 1028:$l.flags&=-1025,xl($l.alternate,$l);break;case 4:xl($l.alternate,$l);break;case 8:El(l,u=$l);var E=u.alternate;ml(u),null!==E&&ml(E)}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);if(k=zn,w=pn(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&dn(b.ownerDocument.documentElement,b)){null!==l&&hn(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(l.start,u),l=void 0===l.end?E:Math.min(l.end,u),!k.extend&&E>l&&(u=l,l=E,E=u),u=fn(b,E),a=fn(b,l),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>l?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"===typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Yt=!!qn,zn=qn=null,e.current=r,$l=n;do{try{for(b=e;null!==$l;){var x=$l.flags;if(36&x&&hl(b,$l.alternate,$l),128&x){w=void 0;var S=$l.ref;if(null!==S){var _=$l.stateNode;switch($l.tag){case 5:w=_;break;default:w=_}"function"===typeof S?S(w):S.current=w}}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);$l=null,Mo(),Pl=o}else e.current=r;if(Kl)Kl=!1,Xl=e,Jl=t;else for($l=n;null!==$l;)t=$l.nextEffect,$l.nextEffect=null,8&$l.flags&&((x=$l).sibling=null,x.stateNode=null),$l=t;if(0===(n=e.pendingLanes)&&(Yl=null),1===n?e===nu?ru++:(ru=0,nu=e):ru=0,r=r.stateNode,Eo&&"function"===typeof Eo.onCommitFiberRoot)try{Eo.onCommitFiberRoot(ko,r,void 0,64===(64&r.current.flags))}catch(e){}if(pu(e,Fo()),Gl)throw Gl=!1,e=Ql,Ql=null,e;return 0!==(8&Pl)||$o(),null}function Nu(){for(;null!==$l;){var e=$l.alternate;uu||null===lu||(0!==(8&$l.flags)?et($l,lu)&&(uu=!0):13===$l.tag&&_l(e,$l)&&et($l,lu)&&(uu=!0));var t=$l.flags;0!==(256&t)&&pl(e,$l),0===(512&t)||Kl||(Kl=!0,Wo(97,(function(){return Lu(),null}))),$l=$l.nextEffect}}function Lu(){if(90!==Jl){var e=97<Jl?97:Jl;return Jl=90,Ho(e,ju)}return!1}function Au(e,t){Zl.push(t,e),Kl||(Kl=!0,Wo(97,(function(){return Lu(),null})))}function Iu(e,t){eu.push(t,e),Kl||(Kl=!0,Wo(97,(function(){return Lu(),null})))}function ju(){if(null===Xl)return!1;var e=Xl;if(Xl=null,0!==(48&Pl))throw Error(i(331));var t=Pl;Pl|=32;var r=eu;eu=[];for(var n=0;n<r.length;n+=2){var o=r[n],a=r[n+1],l=o.destroy;if(o.destroy=void 0,"function"===typeof l)try{l()}catch(e){if(null===a)throw Error(i(330));Du(a,e)}}for(r=Zl,Zl=[],n=0;n<r.length;n+=2){o=r[n],a=r[n+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(i(330));Du(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Pl=t,$o(),!0}function Mu(e,t,r){ca(e,t=cl(0,t=il(r,t),1)),t=cu(),null!==(e=du(e,1))&&(Vt(e,1,t),pu(e,t))}function Du(e,t){if(3===e.tag)Mu(e,e,t);else for(var r=e.return;null!==r;){if(3===r.tag){Mu(r,e,t);break}if(1===r.tag){var n=r.stateNode;if("function"===typeof r.type.getDerivedStateFromError||"function"===typeof n.componentDidCatch&&(null===Yl||!Yl.has(n))){var o=sl(r,e=il(t,e),1);if(ca(r,o),o=cu(),null!==(r=du(r,1)))Vt(r,1,o),pu(r,o);else if("function"===typeof n.componentDidCatch&&(null===Yl||!Yl.has(n)))try{n.componentDidCatch(t,e)}catch(e){}break}}r=r.return}}function qu(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=cu(),e.pingedLanes|=e.suspendedLanes&r,Rl===e&&(Ll&r)===r&&(4===jl||3===jl&&(62914560&Ll)===Ll&&500>Fo()-Bl?ku(e,0):Ul|=r),pu(e,t)}function zu(e,t){var r=e.stateNode;null!==r&&r.delete(t),0===(t=0)&&(0===(2&(t=e.mode))?t=1:0===(4&t)?t=99===Bo()?1:2:(0===au&&(au=Dl),0===(t=Ft(62914560&~au))&&(t=4194304))),r=cu(),null!==(e=du(e,t))&&(Vt(e,t,r),pu(e,r))}function Uu(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Fu(e,t,r,n){return new Uu(e,t,r,n)}function Bu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Vu(e,t){var r=e.alternate;return null===r?((r=Fu(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Hu(e,t,r,n,o,a){var l=2;if(n=e,"function"===typeof e)Bu(e)&&(l=1);else if("string"===typeof e)l=5;else e:switch(e){case S:return Wu(r.children,o,a,t);case M:l=8,o|=16;break;case _:l=8,o|=1;break;case T:return(e=Fu(12,r,t,8|o)).elementType=T,e.type=T,e.lanes=a,e;case R:return(e=Fu(13,r,t,o)).type=R,e.elementType=R,e.lanes=a,e;case N:return(e=Fu(19,r,t,o)).elementType=N,e.lanes=a,e;case D:return $u(r,o,a,t);case q:return(e=Fu(24,r,t,o)).elementType=q,e.lanes=a,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case C:l=10;break e;case O:l=9;break e;case P:l=11;break e;case L:l=14;break e;case A:l=16,n=null;break e;case I:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Fu(l,r,t,o)).elementType=e,t.type=n,t.lanes=a,t}function Wu(e,t,r,n){return(e=Fu(7,e,n,t)).lanes=r,e}function $u(e,t,r,n){return(e=Fu(23,e,n,t)).elementType=D,e.lanes=r,e}function Gu(e,t,r){return(e=Fu(6,e,null,t)).lanes=r,e}function Qu(e,t,r){return(t=Fu(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Yu(e,t,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=r,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function Ku(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==n?null:""+n,children:e,containerInfo:t,implementation:r}}function Xu(e,t,r,n){var o=t.current,a=cu(),l=su(o);e:if(r){t:{if(Ke(r=r._reactInternals)!==r||1!==r.tag)throw Error(i(170));var u=r;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(go(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===r.tag){var c=r.type;if(go(c)){r=yo(r,c,u);break e}}r=u}else r=co;return null===t.context?t.context=r:t.pendingContext=r,(t=ua(a,l)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),ca(o,t),fu(o,l,a),l}function Ju(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Zu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function ec(e,t){Zu(e,t),(e=e.alternate)&&Zu(e,t)}function tc(e,t,r){var n=null!=r&&null!=r.hydrationOptions&&r.hydrationOptions.mutableSources||null;if(r=new Yu(e,t,null!=r&&!0===r.hydrate),t=Fu(3,null,null,2===t?7:1===t?3:0),r.current=t,t.stateNode=r,ia(t),e[Xn]=r.current,Pn(8===e.nodeType?e.parentNode:e),n)for(e=0;e<n.length;e++){var o=(t=n[e])._getVersion;o=o(t._source),null==r.mutableSourceEagerHydrationData?r.mutableSourceEagerHydrationData=[t,o]:r.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=r}function rc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function nc(e,t,r,n,o){var a=r._reactRootContainer;if(a){var i=a._internalRoot;if("function"===typeof o){var l=o;o=function(){var e=Ju(i);l.call(e)}}Xu(t,i,e,o)}else{if(a=r._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var r;r=e.lastChild;)e.removeChild(r);return new tc(e,0,t?{hydrate:!0}:void 0)}(r,n),i=a._internalRoot,"function"===typeof o){var u=o;o=function(){var e=Ju(i);u.call(e)}}yu((function(){Xu(t,i,e,o)}))}return Ju(i)}function oc(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rc(t))throw Error(i(200));return Ku(e,t,null,r)}Wl=function(e,t,r){var n=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||fo.current)Ii=!0;else{if(0===(r&n)){switch(Ii=!1,t.tag){case 3:Hi(t),Wa();break;case 5:Aa(t);break;case 1:go(t.type)&&bo(t);break;case 4:Na(t,t.stateNode.containerInfo);break;case 10:n=t.memoizedProps.value;var o=t.type._context;uo(Ko,o._currentValue),o._currentValue=n;break;case 13:if(null!==t.memoizedState)return 0!==(r&t.child.childLanes)?Yi(e,t,r):(uo(ja,1&ja.current),null!==(t=rl(e,t,r))?t.sibling:null);uo(ja,1&ja.current);break;case 19:if(n=0!==(r&t.childLanes),0!==(64&e.flags)){if(n)return tl(e,t,r);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),uo(ja,ja.current),n)break;return null;case 23:case 24:return t.lanes=0,zi(e,t,r)}return rl(e,t,r)}Ii=0!==(16384&e.flags)}else Ii=!1;switch(t.lanes=0,t.tag){case 2:if(n=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=ho(t,so.current),na(t,r),o=oi(null,t,n,e,o,r),t.flags|=1,"object"===typeof o&&null!==o&&"function"===typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,go(n)){var a=!0;bo(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ia(t);var l=n.getDerivedStateFromProps;"function"===typeof l&&ha(t,n,l,e),o.updater=ga,t.stateNode=o,o._reactInternals=t,ba(t,n,e,r),t=Vi(null,t,n,!0,a,r)}else t.tag=0,ji(null,t,o,r),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"===typeof e)return Bu(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===P)return 11;if(e===L)return 14}return 2}(o),e=Yo(o,e),a){case 0:t=Fi(null,t,o,e,r);break e;case 1:t=Bi(null,t,o,e,r);break e;case 11:t=Mi(null,t,o,e,r);break e;case 14:t=Di(null,t,o,Yo(o.type,e),n,r);break e}throw Error(i(306,o,""))}return t;case 0:return n=t.type,o=t.pendingProps,Fi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 1:return n=t.type,o=t.pendingProps,Bi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 3:if(Hi(t),n=t.updateQueue,null===e||null===n)throw Error(i(282));if(n=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,la(e,t),fa(t,n,null,r),(n=t.memoizedState.element)===o)Wa(),t=rl(e,t,r);else{if((a=(o=t.stateNode).hydrate)&&(qa=Wn(t.stateNode.containerInfo.firstChild),Da=t,a=za=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],$a.push(a);for(r=_a(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|1024,r=r.sibling}else ji(e,t,n,r),Wa();t=t.child}return t;case 5:return Aa(t),null===e&&Ba(t),n=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Fn(n,o)?l=null:null!==a&&Fn(n,a)&&(t.flags|=16),Ui(e,t),ji(e,t,l,r),t.child;case 6:return null===e&&Ba(t),null;case 13:return Yi(e,t,r);case 4:return Na(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=Sa(t,null,n,r):ji(e,t,n,r),t.child;case 11:return n=t.type,o=t.pendingProps,Mi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 7:return ji(e,t,t.pendingProps,r),t.child;case 8:case 12:return ji(e,t,t.pendingProps.children,r),t.child;case 10:e:{n=t.type._context,o=t.pendingProps,l=t.memoizedProps,a=o.value;var u=t.type._context;if(uo(Ko,u._currentValue),u._currentValue=a,null!==l)if(u=l.value,0===(a=ln(u,a)?0:0|("function"===typeof n._calculateChangedBits?n._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!fo.current){t=rl(e,t,r);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===n&&0!==(s.observedBits&a)){1===u.tag&&((s=ua(-1,r&-r)).tag=2,ca(u,s)),u.lanes|=r,null!==(s=u.alternate)&&(s.lanes|=r),ra(u.return,r),c.lanes|=r;break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}ji(e,t,o.children,r),t=t.child}return t;case 9:return o=t.type,n=(a=t.pendingProps).children,na(t,r),n=n(o=oa(o,a.unstable_observedBits)),t.flags|=1,ji(e,t,n,r),t.child;case 14:return a=Yo(o=t.type,t.pendingProps),Di(e,t,o,a=Yo(o.type,a),n,r);case 15:return qi(e,t,t.type,t.pendingProps,n,r);case 17:return n=t.type,o=t.pendingProps,o=t.elementType===n?o:Yo(n,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,go(n)?(e=!0,bo(t)):e=!1,na(t,r),ma(t,n,o),ba(t,n,o,r),Vi(null,t,n,!0,e,r);case 19:return tl(e,t,r);case 23:case 24:return zi(e,t,r)}throw Error(i(156,t.tag))},tc.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Xn]=null}))},tt=function(e){13===e.tag&&(fu(e,4,cu()),ec(e,4))},rt=function(e){13===e.tag&&(fu(e,67108864,cu()),ec(e,67108864))},nt=function(e){if(13===e.tag){var t=cu(),r=su(e);fu(e,r,t),ec(e,r)}},ot=function(e,t){return t()},Ce=function(e,t,r){switch(t){case"input":if(re(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+\'][type="radio"]\'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var o=ro(n);if(!o)throw Error(i(90));X(n),re(n,o)}}}break;case"textarea":ce(e,r);break;case"select":null!=(t=r.value)&&ie(e,!!r.multiple,t,!1)}},Ae=mu,Ie=function(e,t,r,n,o){var a=Pl;Pl|=4;try{return Ho(98,e.bind(null,t,r,n,o))}finally{0===(Pl=a)&&(Hl(),$o())}},je=function(){0===(49&Pl)&&(function(){if(null!==tu){var e=tu;tu=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,pu(e,Fo())}))}$o()}(),Lu())},Me=function(e,t){var r=Pl;Pl|=2;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}};var ac={Events:[eo,to,ro,Ne,Le,Lu,{current:!1}]},ic={findFiberByHostInstance:Zn,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},lc={bundleType:ic.bundleType,version:ic.version,rendererPackageName:ic.rendererPackageName,rendererConfig:ic.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:ic.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof{}){var uc={};if(!uc.isDisabled&&uc.supportsFiber)try{ko=uc.inject(lc),Eo=uc}catch(ve){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ac,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var r=Pl;if(0!==(48&r))return e(t);Pl|=1;try{if(e)return Ho(99,e.bind(null,t))}finally{Pl=r,$o()}},t.hydrate=function(e,t,r){if(!rc(t))throw Error(i(200));return nc(null,e,t,!0,r)},t.render=function(e,t,r){if(!rc(t))throw Error(i(200));return nc(null,e,t,!1,r)},t.unmountComponentAtNode=function(e){if(!rc(e))throw Error(i(40));return!!e._reactRootContainer&&(yu((function(){nc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Xn]=null}))})),!0)},t.unstable_batchedUpdates=mu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,r,n){if(!rc(r))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return nc(e,t,r,!1,n)},t.version="17.0.1"},function(e,t,r){"use strict";e.exports=r(186)},function(e,t,r){"use strict";var n,o,a,i;if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var u=Date,c=u.now();t.unstable_now=function(){return u.now()-c}}if("undefined"===typeof window||"function"!==typeof MessageChannel){var s=null,f=null,d=function e(){if(null!==s)try{var r=t.unstable_now();s(!0,r),s=null}catch(t){throw setTimeout(e,0),t}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(d,0))},o=function(e,t){f=setTimeout(e,t)},a=function(){clearTimeout(f)},t.unstable_shouldYield=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var p=window.setTimeout,h=window.clearTimeout;if("undefined"!==typeof console){var g=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn\'t support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!==typeof g&&console.error("This browser doesn\'t support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var v=!1,m=null,y=-1,b=5,w=0;t.unstable_shouldYield=function(){return t.unstable_now()>=w},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<e?Math.floor(1e3/e):5};var k=new MessageChannel,E=k.port2;k.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();w=e+b;try{m(!0,e)?E.postMessage(null):(v=!1,m=null)}catch(e){throw E.postMessage(null),e}}else v=!1},n=function(e){m=e,v||(v=!0,E.postMessage(null))},o=function(e,r){y=p((function(){e(t.unstable_now())}),r)},a=function(){h(y),y=-1}}function x(e,t){var r=e.length;e.push(t);e:for(;;){var n=r-1>>>1,o=e[n];if(!(void 0!==o&&0<T(o,t)))break e;e[n]=t,e[r]=o,r=n}}function S(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,o=e.length;n<o;){var a=2*(n+1)-1,i=e[a],l=a+1,u=e[l];if(void 0!==i&&0>T(i,r))void 0!==u&&0>T(u,i)?(e[n]=u,e[l]=r,n=l):(e[n]=i,e[a]=r,n=a);else{if(!(void 0!==u&&0>T(u,r)))break e;e[n]=u,e[l]=r,n=l}}}return t}return null}function T(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}var C=[],O=[],P=1,R=null,N=3,L=!1,A=!1,I=!1;function j(e){for(var t=S(O);null!==t;){if(null===t.callback)_(O);else{if(!(t.startTime<=e))break;_(O),t.sortIndex=t.expirationTime,x(C,t)}t=S(O)}}function M(e){if(I=!1,j(e),!A)if(null!==S(C))A=!0,n(D);else{var t=S(O);null!==t&&o(M,t.startTime-e)}}function D(e,r){A=!1,I&&(I=!1,a()),L=!0;var n=N;try{for(j(r),R=S(C);null!==R&&(!(R.expirationTime>r)||e&&!t.unstable_shouldYield());){var i=R.callback;if("function"===typeof i){R.callback=null,N=R.priorityLevel;var l=i(R.expirationTime<=r);r=t.unstable_now(),"function"===typeof l?R.callback=l:R===S(C)&&_(C),j(r)}else _(C);R=S(C)}if(null!==R)var u=!0;else{var c=S(O);null!==c&&o(M,c.startTime-r),u=!1}return u}finally{R=null,N=n,L=!1}}var q=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){A||L||(A=!0,n(D))},t.unstable_getCurrentPriorityLevel=function(){return N},t.unstable_getFirstCallbackNode=function(){return S(C)},t.unstable_next=function(e){switch(N){case 1:case 2:case 3:var t=3;break;default:t=N}var r=N;N=t;try{return e()}finally{N=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=q,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=N;N=e;try{return t()}finally{N=r}},t.unstable_scheduleCallback=function(e,r,i){var l=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?l+i:l:i=l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:r,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,x(O,e),null===S(C)&&e===S(O)&&(I?a():I=!0,o(M,i-l))):(e.sortIndex=u,x(C,e),A||L||(A=!0,n(D))),e},t.unstable_wrapCallback=function(e){var t=N;return function(){var r=N;N=t;try{return e.apply(this,arguments)}finally{N=r}}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={"&lt":"<","&gt":">","&quot":\'"\',"&apos":"\'","&amp":"&","&lt;":"<","&gt;":">","&quot;":\'"\',"&apos;":"\'","&amp;":"&"},o={60:"lt",62:"gt",34:"quot",39:"apos",38:"amp"},a={"<":"&lt;",">":"&gt;",\'"\':"&quot;","\'":"&apos;","&":"&amp;"},i=function(){function e(){}return e.prototype.encode=function(e){return e&&e.length?e.replace(/[<>"\'&]/g,(function(e){return a[e]})):""},e.encode=function(t){return(new e).encode(t)},e.prototype.decode=function(e){return e&&e.length?e.replace(/&#?[0-9a-zA-Z]+;?/g,(function(e){if("#"===e.charAt(1)){var t="x"===e.charAt(2).toLowerCase()?parseInt(e.substr(3),16):parseInt(e.substr(2));return isNaN(t)||t<-32768||t>65535?"":String.fromCharCode(t)}return n[e]||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var a=e.charCodeAt(n),i=o[a];i?(r+="&"+i+";",n++):(r+=a<32||a>126?"&#"+a+";":e.charAt(n),n++)}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.XmlEntities=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=["apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","Aelig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams"],o=[39,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,38,60,62,338,339,352,353,376,710,732,8194,8195,8201,8204,8205,8206,8207,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8240,8249,8250,8364,402,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,977,978,982,8226,8230,8242,8243,8254,8260,8472,8465,8476,8482,8501,8592,8593,8594,8595,8596,8629,8656,8657,8658,8659,8660,8704,8706,8707,8709,8711,8712,8713,8715,8719,8721,8722,8727,8730,8733,8734,8736,8743,8744,8745,8746,8747,8756,8764,8773,8776,8800,8801,8804,8805,8834,8835,8836,8838,8839,8853,8855,8869,8901,8968,8969,8970,8971,9001,9002,9674,9824,9827,9829,9830],a={},i={};!function(){for(var e=0,t=n.length;e<t;){var r=n[e],l=o[e];a[r]=String.fromCharCode(l),i[l]=r,e++}}();var l=function(){function e(){}return e.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,(function(e,t){var r;if("#"===t.charAt(0)){var n="x"===t.charAt(1).toLowerCase()?parseInt(t.substr(2),16):parseInt(t.substr(1));isNaN(n)||n<-32768||n>65535||(r=String.fromCharCode(n))}else r=a[t];return r||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=i[e.charCodeAt(n)];r+=o?"&"+o+";":e.charAt(n),n++}return r},e.encode=function(t){return(new e).encode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n),a=i[o];r+=a?"&"+a+";":o<32||o>126?"&#"+o+";":e.charAt(n),n++}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.Html4Entities=l},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=[["Aacute",[193]],["aacute",[225]],["Abreve",[258]],["abreve",[259]],["ac",[8766]],["acd",[8767]],["acE",[8766,819]],["Acirc",[194]],["acirc",[226]],["acute",[180]],["Acy",[1040]],["acy",[1072]],["AElig",[198]],["aelig",[230]],["af",[8289]],["Afr",[120068]],["afr",[120094]],["Agrave",[192]],["agrave",[224]],["alefsym",[8501]],["aleph",[8501]],["Alpha",[913]],["alpha",[945]],["Amacr",[256]],["amacr",[257]],["amalg",[10815]],["amp",[38]],["AMP",[38]],["andand",[10837]],["And",[10835]],["and",[8743]],["andd",[10844]],["andslope",[10840]],["andv",[10842]],["ang",[8736]],["ange",[10660]],["angle",[8736]],["angmsdaa",[10664]],["angmsdab",[10665]],["angmsdac",[10666]],["angmsdad",[10667]],["angmsdae",[10668]],["angmsdaf",[10669]],["angmsdag",[10670]],["angmsdah",[10671]],["angmsd",[8737]],["angrt",[8735]],["angrtvb",[8894]],["angrtvbd",[10653]],["angsph",[8738]],["angst",[197]],["angzarr",[9084]],["Aogon",[260]],["aogon",[261]],["Aopf",[120120]],["aopf",[120146]],["apacir",[10863]],["ap",[8776]],["apE",[10864]],["ape",[8778]],["apid",[8779]],["apos",[39]],["ApplyFunction",[8289]],["approx",[8776]],["approxeq",[8778]],["Aring",[197]],["aring",[229]],["Ascr",[119964]],["ascr",[119990]],["Assign",[8788]],["ast",[42]],["asymp",[8776]],["asympeq",[8781]],["Atilde",[195]],["atilde",[227]],["Auml",[196]],["auml",[228]],["awconint",[8755]],["awint",[10769]],["backcong",[8780]],["backepsilon",[1014]],["backprime",[8245]],["backsim",[8765]],["backsimeq",[8909]],["Backslash",[8726]],["Barv",[10983]],["barvee",[8893]],["barwed",[8965]],["Barwed",[8966]],["barwedge",[8965]],["bbrk",[9141]],["bbrktbrk",[9142]],["bcong",[8780]],["Bcy",[1041]],["bcy",[1073]],["bdquo",[8222]],["becaus",[8757]],["because",[8757]],["Because",[8757]],["bemptyv",[10672]],["bepsi",[1014]],["bernou",[8492]],["Bernoullis",[8492]],["Beta",[914]],["beta",[946]],["beth",[8502]],["between",[8812]],["Bfr",[120069]],["bfr",[120095]],["bigcap",[8898]],["bigcirc",[9711]],["bigcup",[8899]],["bigodot",[10752]],["bigoplus",[10753]],["bigotimes",[10754]],["bigsqcup",[10758]],["bigstar",[9733]],["bigtriangledown",[9661]],["bigtriangleup",[9651]],["biguplus",[10756]],["bigvee",[8897]],["bigwedge",[8896]],["bkarow",[10509]],["blacklozenge",[10731]],["blacksquare",[9642]],["blacktriangle",[9652]],["blacktriangledown",[9662]],["blacktriangleleft",[9666]],["blacktriangleright",[9656]],["blank",[9251]],["blk12",[9618]],["blk14",[9617]],["blk34",[9619]],["block",[9608]],["bne",[61,8421]],["bnequiv",[8801,8421]],["bNot",[10989]],["bnot",[8976]],["Bopf",[120121]],["bopf",[120147]],["bot",[8869]],["bottom",[8869]],["bowtie",[8904]],["boxbox",[10697]],["boxdl",[9488]],["boxdL",[9557]],["boxDl",[9558]],["boxDL",[9559]],["boxdr",[9484]],["boxdR",[9554]],["boxDr",[9555]],["boxDR",[9556]],["boxh",[9472]],["boxH",[9552]],["boxhd",[9516]],["boxHd",[9572]],["boxhD",[9573]],["boxHD",[9574]],["boxhu",[9524]],["boxHu",[9575]],["boxhU",[9576]],["boxHU",[9577]],["boxminus",[8863]],["boxplus",[8862]],["boxtimes",[8864]],["boxul",[9496]],["boxuL",[9563]],["boxUl",[9564]],["boxUL",[9565]],["boxur",[9492]],["boxuR",[9560]],["boxUr",[9561]],["boxUR",[9562]],["boxv",[9474]],["boxV",[9553]],["boxvh",[9532]],["boxvH",[9578]],["boxVh",[9579]],["boxVH",[9580]],["boxvl",[9508]],["boxvL",[9569]],["boxVl",[9570]],["boxVL",[9571]],["boxvr",[9500]],["boxvR",[9566]],["boxVr",[9567]],["boxVR",[9568]],["bprime",[8245]],["breve",[728]],["Breve",[728]],["brvbar",[166]],["bscr",[119991]],["Bscr",[8492]],["bsemi",[8271]],["bsim",[8765]],["bsime",[8909]],["bsolb",[10693]],["bsol",[92]],["bsolhsub",[10184]],["bull",[8226]],["bullet",[8226]],["bump",[8782]],["bumpE",[10926]],["bumpe",[8783]],["Bumpeq",[8782]],["bumpeq",[8783]],["Cacute",[262]],["cacute",[263]],["capand",[10820]],["capbrcup",[10825]],["capcap",[10827]],["cap",[8745]],["Cap",[8914]],["capcup",[10823]],["capdot",[10816]],["CapitalDifferentialD",[8517]],["caps",[8745,65024]],["caret",[8257]],["caron",[711]],["Cayleys",[8493]],["ccaps",[10829]],["Ccaron",[268]],["ccaron",[269]],["Ccedil",[199]],["ccedil",[231]],["Ccirc",[264]],["ccirc",[265]],["Cconint",[8752]],["ccups",[10828]],["ccupssm",[10832]],["Cdot",[266]],["cdot",[267]],["cedil",[184]],["Cedilla",[184]],["cemptyv",[10674]],["cent",[162]],["centerdot",[183]],["CenterDot",[183]],["cfr",[120096]],["Cfr",[8493]],["CHcy",[1063]],["chcy",[1095]],["check",[10003]],["checkmark",[10003]],["Chi",[935]],["chi",[967]],["circ",[710]],["circeq",[8791]],["circlearrowleft",[8634]],["circlearrowright",[8635]],["circledast",[8859]],["circledcirc",[8858]],["circleddash",[8861]],["CircleDot",[8857]],["circledR",[174]],["circledS",[9416]],["CircleMinus",[8854]],["CirclePlus",[8853]],["CircleTimes",[8855]],["cir",[9675]],["cirE",[10691]],["cire",[8791]],["cirfnint",[10768]],["cirmid",[10991]],["cirscir",[10690]],["ClockwiseContourIntegral",[8754]],["clubs",[9827]],["clubsuit",[9827]],["colon",[58]],["Colon",[8759]],["Colone",[10868]],["colone",[8788]],["coloneq",[8788]],["comma",[44]],["commat",[64]],["comp",[8705]],["compfn",[8728]],["complement",[8705]],["complexes",[8450]],["cong",[8773]],["congdot",[10861]],["Congruent",[8801]],["conint",[8750]],["Conint",[8751]],["ContourIntegral",[8750]],["copf",[120148]],["Copf",[8450]],["coprod",[8720]],["Coproduct",[8720]],["copy",[169]],["COPY",[169]],["copysr",[8471]],["CounterClockwiseContourIntegral",[8755]],["crarr",[8629]],["cross",[10007]],["Cross",[10799]],["Cscr",[119966]],["cscr",[119992]],["csub",[10959]],["csube",[10961]],["csup",[10960]],["csupe",[10962]],["ctdot",[8943]],["cudarrl",[10552]],["cudarrr",[10549]],["cuepr",[8926]],["cuesc",[8927]],["cularr",[8630]],["cularrp",[10557]],["cupbrcap",[10824]],["cupcap",[10822]],["CupCap",[8781]],["cup",[8746]],["Cup",[8915]],["cupcup",[10826]],["cupdot",[8845]],["cupor",[10821]],["cups",[8746,65024]],["curarr",[8631]],["curarrm",[10556]],["curlyeqprec",[8926]],["curlyeqsucc",[8927]],["curlyvee",[8910]],["curlywedge",[8911]],["curren",[164]],["curvearrowleft",[8630]],["curvearrowright",[8631]],["cuvee",[8910]],["cuwed",[8911]],["cwconint",[8754]],["cwint",[8753]],["cylcty",[9005]],["dagger",[8224]],["Dagger",[8225]],["daleth",[8504]],["darr",[8595]],["Darr",[8609]],["dArr",[8659]],["dash",[8208]],["Dashv",[10980]],["dashv",[8867]],["dbkarow",[10511]],["dblac",[733]],["Dcaron",[270]],["dcaron",[271]],["Dcy",[1044]],["dcy",[1076]],["ddagger",[8225]],["ddarr",[8650]],["DD",[8517]],["dd",[8518]],["DDotrahd",[10513]],["ddotseq",[10871]],["deg",[176]],["Del",[8711]],["Delta",[916]],["delta",[948]],["demptyv",[10673]],["dfisht",[10623]],["Dfr",[120071]],["dfr",[120097]],["dHar",[10597]],["dharl",[8643]],["dharr",[8642]],["DiacriticalAcute",[180]],["DiacriticalDot",[729]],["DiacriticalDoubleAcute",[733]],["DiacriticalGrave",[96]],["DiacriticalTilde",[732]],["diam",[8900]],["diamond",[8900]],["Diamond",[8900]],["diamondsuit",[9830]],["diams",[9830]],["die",[168]],["DifferentialD",[8518]],["digamma",[989]],["disin",[8946]],["div",[247]],["divide",[247]],["divideontimes",[8903]],["divonx",[8903]],["DJcy",[1026]],["djcy",[1106]],["dlcorn",[8990]],["dlcrop",[8973]],["dollar",[36]],["Dopf",[120123]],["dopf",[120149]],["Dot",[168]],["dot",[729]],["DotDot",[8412]],["doteq",[8784]],["doteqdot",[8785]],["DotEqual",[8784]],["dotminus",[8760]],["dotplus",[8724]],["dotsquare",[8865]],["doublebarwedge",[8966]],["DoubleContourIntegral",[8751]],["DoubleDot",[168]],["DoubleDownArrow",[8659]],["DoubleLeftArrow",[8656]],["DoubleLeftRightArrow",[8660]],["DoubleLeftTee",[10980]],["DoubleLongLeftArrow",[10232]],["DoubleLongLeftRightArrow",[10234]],["DoubleLongRightArrow",[10233]],["DoubleRightArrow",[8658]],["DoubleRightTee",[8872]],["DoubleUpArrow",[8657]],["DoubleUpDownArrow",[8661]],["DoubleVerticalBar",[8741]],["DownArrowBar",[10515]],["downarrow",[8595]],["DownArrow",[8595]],["Downarrow",[8659]],["DownArrowUpArrow",[8693]],["DownBreve",[785]],["downdownarrows",[8650]],["downharpoonleft",[8643]],["downharpoonright",[8642]],["DownLeftRightVector",[10576]],["DownLeftTeeVector",[10590]],["DownLeftVectorBar",[10582]],["DownLeftVector",[8637]],["DownRightTeeVector",[10591]],["DownRightVectorBar",[10583]],["DownRightVector",[8641]],["DownTeeArrow",[8615]],["DownTee",[8868]],["drbkarow",[10512]],["drcorn",[8991]],["drcrop",[8972]],["Dscr",[119967]],["dscr",[119993]],["DScy",[1029]],["dscy",[1109]],["dsol",[10742]],["Dstrok",[272]],["dstrok",[273]],["dtdot",[8945]],["dtri",[9663]],["dtrif",[9662]],["duarr",[8693]],["duhar",[10607]],["dwangle",[10662]],["DZcy",[1039]],["dzcy",[1119]],["dzigrarr",[10239]],["Eacute",[201]],["eacute",[233]],["easter",[10862]],["Ecaron",[282]],["ecaron",[283]],["Ecirc",[202]],["ecirc",[234]],["ecir",[8790]],["ecolon",[8789]],["Ecy",[1069]],["ecy",[1101]],["eDDot",[10871]],["Edot",[278]],["edot",[279]],["eDot",[8785]],["ee",[8519]],["efDot",[8786]],["Efr",[120072]],["efr",[120098]],["eg",[10906]],["Egrave",[200]],["egrave",[232]],["egs",[10902]],["egsdot",[10904]],["el",[10905]],["Element",[8712]],["elinters",[9191]],["ell",[8467]],["els",[10901]],["elsdot",[10903]],["Emacr",[274]],["emacr",[275]],["empty",[8709]],["emptyset",[8709]],["EmptySmallSquare",[9723]],["emptyv",[8709]],["EmptyVerySmallSquare",[9643]],["emsp13",[8196]],["emsp14",[8197]],["emsp",[8195]],["ENG",[330]],["eng",[331]],["ensp",[8194]],["Eogon",[280]],["eogon",[281]],["Eopf",[120124]],["eopf",[120150]],["epar",[8917]],["eparsl",[10723]],["eplus",[10865]],["epsi",[949]],["Epsilon",[917]],["epsilon",[949]],["epsiv",[1013]],["eqcirc",[8790]],["eqcolon",[8789]],["eqsim",[8770]],["eqslantgtr",[10902]],["eqslantless",[10901]],["Equal",[10869]],["equals",[61]],["EqualTilde",[8770]],["equest",[8799]],["Equilibrium",[8652]],["equiv",[8801]],["equivDD",[10872]],["eqvparsl",[10725]],["erarr",[10609]],["erDot",[8787]],["escr",[8495]],["Escr",[8496]],["esdot",[8784]],["Esim",[10867]],["esim",[8770]],["Eta",[919]],["eta",[951]],["ETH",[208]],["eth",[240]],["Euml",[203]],["euml",[235]],["euro",[8364]],["excl",[33]],["exist",[8707]],["Exists",[8707]],["expectation",[8496]],["exponentiale",[8519]],["ExponentialE",[8519]],["fallingdotseq",[8786]],["Fcy",[1060]],["fcy",[1092]],["female",[9792]],["ffilig",[64259]],["fflig",[64256]],["ffllig",[64260]],["Ffr",[120073]],["ffr",[120099]],["filig",[64257]],["FilledSmallSquare",[9724]],["FilledVerySmallSquare",[9642]],["fjlig",[102,106]],["flat",[9837]],["fllig",[64258]],["fltns",[9649]],["fnof",[402]],["Fopf",[120125]],["fopf",[120151]],["forall",[8704]],["ForAll",[8704]],["fork",[8916]],["forkv",[10969]],["Fouriertrf",[8497]],["fpartint",[10765]],["frac12",[189]],["frac13",[8531]],["frac14",[188]],["frac15",[8533]],["frac16",[8537]],["frac18",[8539]],["frac23",[8532]],["frac25",[8534]],["frac34",[190]],["frac35",[8535]],["frac38",[8540]],["frac45",[8536]],["frac56",[8538]],["frac58",[8541]],["frac78",[8542]],["frasl",[8260]],["frown",[8994]],["fscr",[119995]],["Fscr",[8497]],["gacute",[501]],["Gamma",[915]],["gamma",[947]],["Gammad",[988]],["gammad",[989]],["gap",[10886]],["Gbreve",[286]],["gbreve",[287]],["Gcedil",[290]],["Gcirc",[284]],["gcirc",[285]],["Gcy",[1043]],["gcy",[1075]],["Gdot",[288]],["gdot",[289]],["ge",[8805]],["gE",[8807]],["gEl",[10892]],["gel",[8923]],["geq",[8805]],["geqq",[8807]],["geqslant",[10878]],["gescc",[10921]],["ges",[10878]],["gesdot",[10880]],["gesdoto",[10882]],["gesdotol",[10884]],["gesl",[8923,65024]],["gesles",[10900]],["Gfr",[120074]],["gfr",[120100]],["gg",[8811]],["Gg",[8921]],["ggg",[8921]],["gimel",[8503]],["GJcy",[1027]],["gjcy",[1107]],["gla",[10917]],["gl",[8823]],["glE",[10898]],["glj",[10916]],["gnap",[10890]],["gnapprox",[10890]],["gne",[10888]],["gnE",[8809]],["gneq",[10888]],["gneqq",[8809]],["gnsim",[8935]],["Gopf",[120126]],["gopf",[120152]],["grave",[96]],["GreaterEqual",[8805]],["GreaterEqualLess",[8923]],["GreaterFullEqual",[8807]],["GreaterGreater",[10914]],["GreaterLess",[8823]],["GreaterSlantEqual",[10878]],["GreaterTilde",[8819]],["Gscr",[119970]],["gscr",[8458]],["gsim",[8819]],["gsime",[10894]],["gsiml",[10896]],["gtcc",[10919]],["gtcir",[10874]],["gt",[62]],["GT",[62]],["Gt",[8811]],["gtdot",[8919]],["gtlPar",[10645]],["gtquest",[10876]],["gtrapprox",[10886]],["gtrarr",[10616]],["gtrdot",[8919]],["gtreqless",[8923]],["gtreqqless",[10892]],["gtrless",[8823]],["gtrsim",[8819]],["gvertneqq",[8809,65024]],["gvnE",[8809,65024]],["Hacek",[711]],["hairsp",[8202]],["half",[189]],["hamilt",[8459]],["HARDcy",[1066]],["hardcy",[1098]],["harrcir",[10568]],["harr",[8596]],["hArr",[8660]],["harrw",[8621]],["Hat",[94]],["hbar",[8463]],["Hcirc",[292]],["hcirc",[293]],["hearts",[9829]],["heartsuit",[9829]],["hellip",[8230]],["hercon",[8889]],["hfr",[120101]],["Hfr",[8460]],["HilbertSpace",[8459]],["hksearow",[10533]],["hkswarow",[10534]],["hoarr",[8703]],["homtht",[8763]],["hookleftarrow",[8617]],["hookrightarrow",[8618]],["hopf",[120153]],["Hopf",[8461]],["horbar",[8213]],["HorizontalLine",[9472]],["hscr",[119997]],["Hscr",[8459]],["hslash",[8463]],["Hstrok",[294]],["hstrok",[295]],["HumpDownHump",[8782]],["HumpEqual",[8783]],["hybull",[8259]],["hyphen",[8208]],["Iacute",[205]],["iacute",[237]],["ic",[8291]],["Icirc",[206]],["icirc",[238]],["Icy",[1048]],["icy",[1080]],["Idot",[304]],["IEcy",[1045]],["iecy",[1077]],["iexcl",[161]],["iff",[8660]],["ifr",[120102]],["Ifr",[8465]],["Igrave",[204]],["igrave",[236]],["ii",[8520]],["iiiint",[10764]],["iiint",[8749]],["iinfin",[10716]],["iiota",[8489]],["IJlig",[306]],["ijlig",[307]],["Imacr",[298]],["imacr",[299]],["image",[8465]],["ImaginaryI",[8520]],["imagline",[8464]],["imagpart",[8465]],["imath",[305]],["Im",[8465]],["imof",[8887]],["imped",[437]],["Implies",[8658]],["incare",[8453]],["in",[8712]],["infin",[8734]],["infintie",[10717]],["inodot",[305]],["intcal",[8890]],["int",[8747]],["Int",[8748]],["integers",[8484]],["Integral",[8747]],["intercal",[8890]],["Intersection",[8898]],["intlarhk",[10775]],["intprod",[10812]],["InvisibleComma",[8291]],["InvisibleTimes",[8290]],["IOcy",[1025]],["iocy",[1105]],["Iogon",[302]],["iogon",[303]],["Iopf",[120128]],["iopf",[120154]],["Iota",[921]],["iota",[953]],["iprod",[10812]],["iquest",[191]],["iscr",[119998]],["Iscr",[8464]],["isin",[8712]],["isindot",[8949]],["isinE",[8953]],["isins",[8948]],["isinsv",[8947]],["isinv",[8712]],["it",[8290]],["Itilde",[296]],["itilde",[297]],["Iukcy",[1030]],["iukcy",[1110]],["Iuml",[207]],["iuml",[239]],["Jcirc",[308]],["jcirc",[309]],["Jcy",[1049]],["jcy",[1081]],["Jfr",[120077]],["jfr",[120103]],["jmath",[567]],["Jopf",[120129]],["jopf",[120155]],["Jscr",[119973]],["jscr",[119999]],["Jsercy",[1032]],["jsercy",[1112]],["Jukcy",[1028]],["jukcy",[1108]],["Kappa",[922]],["kappa",[954]],["kappav",[1008]],["Kcedil",[310]],["kcedil",[311]],["Kcy",[1050]],["kcy",[1082]],["Kfr",[120078]],["kfr",[120104]],["kgreen",[312]],["KHcy",[1061]],["khcy",[1093]],["KJcy",[1036]],["kjcy",[1116]],["Kopf",[120130]],["kopf",[120156]],["Kscr",[119974]],["kscr",[12e4]],["lAarr",[8666]],["Lacute",[313]],["lacute",[314]],["laemptyv",[10676]],["lagran",[8466]],["Lambda",[923]],["lambda",[955]],["lang",[10216]],["Lang",[10218]],["langd",[10641]],["langle",[10216]],["lap",[10885]],["Laplacetrf",[8466]],["laquo",[171]],["larrb",[8676]],["larrbfs",[10527]],["larr",[8592]],["Larr",[8606]],["lArr",[8656]],["larrfs",[10525]],["larrhk",[8617]],["larrlp",[8619]],["larrpl",[10553]],["larrsim",[10611]],["larrtl",[8610]],["latail",[10521]],["lAtail",[10523]],["lat",[10923]],["late",[10925]],["lates",[10925,65024]],["lbarr",[10508]],["lBarr",[10510]],["lbbrk",[10098]],["lbrace",[123]],["lbrack",[91]],["lbrke",[10635]],["lbrksld",[10639]],["lbrkslu",[10637]],["Lcaron",[317]],["lcaron",[318]],["Lcedil",[315]],["lcedil",[316]],["lceil",[8968]],["lcub",[123]],["Lcy",[1051]],["lcy",[1083]],["ldca",[10550]],["ldquo",[8220]],["ldquor",[8222]],["ldrdhar",[10599]],["ldrushar",[10571]],["ldsh",[8626]],["le",[8804]],["lE",[8806]],["LeftAngleBracket",[10216]],["LeftArrowBar",[8676]],["leftarrow",[8592]],["LeftArrow",[8592]],["Leftarrow",[8656]],["LeftArrowRightArrow",[8646]],["leftarrowtail",[8610]],["LeftCeiling",[8968]],["LeftDoubleBracket",[10214]],["LeftDownTeeVector",[10593]],["LeftDownVectorBar",[10585]],["LeftDownVector",[8643]],["LeftFloor",[8970]],["leftharpoondown",[8637]],["leftharpoonup",[8636]],["leftleftarrows",[8647]],["leftrightarrow",[8596]],["LeftRightArrow",[8596]],["Leftrightarrow",[8660]],["leftrightarrows",[8646]],["leftrightharpoons",[8651]],["leftrightsquigarrow",[8621]],["LeftRightVector",[10574]],["LeftTeeArrow",[8612]],["LeftTee",[8867]],["LeftTeeVector",[10586]],["leftthreetimes",[8907]],["LeftTriangleBar",[10703]],["LeftTriangle",[8882]],["LeftTriangleEqual",[8884]],["LeftUpDownVector",[10577]],["LeftUpTeeVector",[10592]],["LeftUpVectorBar",[10584]],["LeftUpVector",[8639]],["LeftVectorBar",[10578]],["LeftVector",[8636]],["lEg",[10891]],["leg",[8922]],["leq",[8804]],["leqq",[8806]],["leqslant",[10877]],["lescc",[10920]],["les",[10877]],["lesdot",[10879]],["lesdoto",[10881]],["lesdotor",[10883]],["lesg",[8922,65024]],["lesges",[10899]],["lessapprox",[10885]],["lessdot",[8918]],["lesseqgtr",[8922]],["lesseqqgtr",[10891]],["LessEqualGreater",[8922]],["LessFullEqual",[8806]],["LessGreater",[8822]],["lessgtr",[8822]],["LessLess",[10913]],["lesssim",[8818]],["LessSlantEqual",[10877]],["LessTilde",[8818]],["lfisht",[10620]],["lfloor",[8970]],["Lfr",[120079]],["lfr",[120105]],["lg",[8822]],["lgE",[10897]],["lHar",[10594]],["lhard",[8637]],["lharu",[8636]],["lharul",[10602]],["lhblk",[9604]],["LJcy",[1033]],["ljcy",[1113]],["llarr",[8647]],["ll",[8810]],["Ll",[8920]],["llcorner",[8990]],["Lleftarrow",[8666]],["llhard",[10603]],["lltri",[9722]],["Lmidot",[319]],["lmidot",[320]],["lmoustache",[9136]],["lmoust",[9136]],["lnap",[10889]],["lnapprox",[10889]],["lne",[10887]],["lnE",[8808]],["lneq",[10887]],["lneqq",[8808]],["lnsim",[8934]],["loang",[10220]],["loarr",[8701]],["lobrk",[10214]],["longleftarrow",[10229]],["LongLeftArrow",[10229]],["Longleftarrow",[10232]],["longleftrightarrow",[10231]],["LongLeftRightArrow",[10231]],["Longleftrightarrow",[10234]],["longmapsto",[10236]],["longrightarrow",[10230]],["LongRightArrow",[10230]],["Longrightarrow",[10233]],["looparrowleft",[8619]],["looparrowright",[8620]],["lopar",[10629]],["Lopf",[120131]],["lopf",[120157]],["loplus",[10797]],["lotimes",[10804]],["lowast",[8727]],["lowbar",[95]],["LowerLeftArrow",[8601]],["LowerRightArrow",[8600]],["loz",[9674]],["lozenge",[9674]],["lozf",[10731]],["lpar",[40]],["lparlt",[10643]],["lrarr",[8646]],["lrcorner",[8991]],["lrhar",[8651]],["lrhard",[10605]],["lrm",[8206]],["lrtri",[8895]],["lsaquo",[8249]],["lscr",[120001]],["Lscr",[8466]],["lsh",[8624]],["Lsh",[8624]],["lsim",[8818]],["lsime",[10893]],["lsimg",[10895]],["lsqb",[91]],["lsquo",[8216]],["lsquor",[8218]],["Lstrok",[321]],["lstrok",[322]],["ltcc",[10918]],["ltcir",[10873]],["lt",[60]],["LT",[60]],["Lt",[8810]],["ltdot",[8918]],["lthree",[8907]],["ltimes",[8905]],["ltlarr",[10614]],["ltquest",[10875]],["ltri",[9667]],["ltrie",[8884]],["ltrif",[9666]],["ltrPar",[10646]],["lurdshar",[10570]],["luruhar",[10598]],["lvertneqq",[8808,65024]],["lvnE",[8808,65024]],["macr",[175]],["male",[9794]],["malt",[10016]],["maltese",[10016]],["Map",[10501]],["map",[8614]],["mapsto",[8614]],["mapstodown",[8615]],["mapstoleft",[8612]],["mapstoup",[8613]],["marker",[9646]],["mcomma",[10793]],["Mcy",[1052]],["mcy",[1084]],["mdash",[8212]],["mDDot",[8762]],["measuredangle",[8737]],["MediumSpace",[8287]],["Mellintrf",[8499]],["Mfr",[120080]],["mfr",[120106]],["mho",[8487]],["micro",[181]],["midast",[42]],["midcir",[10992]],["mid",[8739]],["middot",[183]],["minusb",[8863]],["minus",[8722]],["minusd",[8760]],["minusdu",[10794]],["MinusPlus",[8723]],["mlcp",[10971]],["mldr",[8230]],["mnplus",[8723]],["models",[8871]],["Mopf",[120132]],["mopf",[120158]],["mp",[8723]],["mscr",[120002]],["Mscr",[8499]],["mstpos",[8766]],["Mu",[924]],["mu",[956]],["multimap",[8888]],["mumap",[8888]],["nabla",[8711]],["Nacute",[323]],["nacute",[324]],["nang",[8736,8402]],["nap",[8777]],["napE",[10864,824]],["napid",[8779,824]],["napos",[329]],["napprox",[8777]],["natural",[9838]],["naturals",[8469]],["natur",[9838]],["nbsp",[160]],["nbump",[8782,824]],["nbumpe",[8783,824]],["ncap",[10819]],["Ncaron",[327]],["ncaron",[328]],["Ncedil",[325]],["ncedil",[326]],["ncong",[8775]],["ncongdot",[10861,824]],["ncup",[10818]],["Ncy",[1053]],["ncy",[1085]],["ndash",[8211]],["nearhk",[10532]],["nearr",[8599]],["neArr",[8663]],["nearrow",[8599]],["ne",[8800]],["nedot",[8784,824]],["NegativeMediumSpace",[8203]],["NegativeThickSpace",[8203]],["NegativeThinSpace",[8203]],["NegativeVeryThinSpace",[8203]],["nequiv",[8802]],["nesear",[10536]],["nesim",[8770,824]],["NestedGreaterGreater",[8811]],["NestedLessLess",[8810]],["nexist",[8708]],["nexists",[8708]],["Nfr",[120081]],["nfr",[120107]],["ngE",[8807,824]],["nge",[8817]],["ngeq",[8817]],["ngeqq",[8807,824]],["ngeqslant",[10878,824]],["nges",[10878,824]],["nGg",[8921,824]],["ngsim",[8821]],["nGt",[8811,8402]],["ngt",[8815]],["ngtr",[8815]],["nGtv",[8811,824]],["nharr",[8622]],["nhArr",[8654]],["nhpar",[10994]],["ni",[8715]],["nis",[8956]],["nisd",[8954]],["niv",[8715]],["NJcy",[1034]],["njcy",[1114]],["nlarr",[8602]],["nlArr",[8653]],["nldr",[8229]],["nlE",[8806,824]],["nle",[8816]],["nleftarrow",[8602]],["nLeftarrow",[8653]],["nleftrightarrow",[8622]],["nLeftrightarrow",[8654]],["nleq",[8816]],["nleqq",[8806,824]],["nleqslant",[10877,824]],["nles",[10877,824]],["nless",[8814]],["nLl",[8920,824]],["nlsim",[8820]],["nLt",[8810,8402]],["nlt",[8814]],["nltri",[8938]],["nltrie",[8940]],["nLtv",[8810,824]],["nmid",[8740]],["NoBreak",[8288]],["NonBreakingSpace",[160]],["nopf",[120159]],["Nopf",[8469]],["Not",[10988]],["not",[172]],["NotCongruent",[8802]],["NotCupCap",[8813]],["NotDoubleVerticalBar",[8742]],["NotElement",[8713]],["NotEqual",[8800]],["NotEqualTilde",[8770,824]],["NotExists",[8708]],["NotGreater",[8815]],["NotGreaterEqual",[8817]],["NotGreaterFullEqual",[8807,824]],["NotGreaterGreater",[8811,824]],["NotGreaterLess",[8825]],["NotGreaterSlantEqual",[10878,824]],["NotGreaterTilde",[8821]],["NotHumpDownHump",[8782,824]],["NotHumpEqual",[8783,824]],["notin",[8713]],["notindot",[8949,824]],["notinE",[8953,824]],["notinva",[8713]],["notinvb",[8951]],["notinvc",[8950]],["NotLeftTriangleBar",[10703,824]],["NotLeftTriangle",[8938]],["NotLeftTriangleEqual",[8940]],["NotLess",[8814]],["NotLessEqual",[8816]],["NotLessGreater",[8824]],["NotLessLess",[8810,824]],["NotLessSlantEqual",[10877,824]],["NotLessTilde",[8820]],["NotNestedGreaterGreater",[10914,824]],["NotNestedLessLess",[10913,824]],["notni",[8716]],["notniva",[8716]],["notnivb",[8958]],["notnivc",[8957]],["NotPrecedes",[8832]],["NotPrecedesEqual",[10927,824]],["NotPrecedesSlantEqual",[8928]],["NotReverseElement",[8716]],["NotRightTriangleBar",[10704,824]],["NotRightTriangle",[8939]],["NotRightTriangleEqual",[8941]],["NotSquareSubset",[8847,824]],["NotSquareSubsetEqual",[8930]],["NotSquareSuperset",[8848,824]],["NotSquareSupersetEqual",[8931]],["NotSubset",[8834,8402]],["NotSubsetEqual",[8840]],["NotSucceeds",[8833]],["NotSucceedsEqual",[10928,824]],["NotSucceedsSlantEqual",[8929]],["NotSucceedsTilde",[8831,824]],["NotSuperset",[8835,8402]],["NotSupersetEqual",[8841]],["NotTilde",[8769]],["NotTildeEqual",[8772]],["NotTildeFullEqual",[8775]],["NotTildeTilde",[8777]],["NotVerticalBar",[8740]],["nparallel",[8742]],["npar",[8742]],["nparsl",[11005,8421]],["npart",[8706,824]],["npolint",[10772]],["npr",[8832]],["nprcue",[8928]],["nprec",[8832]],["npreceq",[10927,824]],["npre",[10927,824]],["nrarrc",[10547,824]],["nrarr",[8603]],["nrArr",[8655]],["nrarrw",[8605,824]],["nrightarrow",[8603]],["nRightarrow",[8655]],["nrtri",[8939]],["nrtrie",[8941]],["nsc",[8833]],["nsccue",[8929]],["nsce",[10928,824]],["Nscr",[119977]],["nscr",[120003]],["nshortmid",[8740]],["nshortparallel",[8742]],["nsim",[8769]],["nsime",[8772]],["nsimeq",[8772]],["nsmid",[8740]],["nspar",[8742]],["nsqsube",[8930]],["nsqsupe",[8931]],["nsub",[8836]],["nsubE",[10949,824]],["nsube",[8840]],["nsubset",[8834,8402]],["nsubseteq",[8840]],["nsubseteqq",[10949,824]],["nsucc",[8833]],["nsucceq",[10928,824]],["nsup",[8837]],["nsupE",[10950,824]],["nsupe",[8841]],["nsupset",[8835,8402]],["nsupseteq",[8841]],["nsupseteqq",[10950,824]],["ntgl",[8825]],["Ntilde",[209]],["ntilde",[241]],["ntlg",[8824]],["ntriangleleft",[8938]],["ntrianglelefteq",[8940]],["ntriangleright",[8939]],["ntrianglerighteq",[8941]],["Nu",[925]],["nu",[957]],["num",[35]],["numero",[8470]],["numsp",[8199]],["nvap",[8781,8402]],["nvdash",[8876]],["nvDash",[8877]],["nVdash",[8878]],["nVDash",[8879]],["nvge",[8805,8402]],["nvgt",[62,8402]],["nvHarr",[10500]],["nvinfin",[10718]],["nvlArr",[10498]],["nvle",[8804,8402]],["nvlt",[60,8402]],["nvltrie",[8884,8402]],["nvrArr",[10499]],["nvrtrie",[8885,8402]],["nvsim",[8764,8402]],["nwarhk",[10531]],["nwarr",[8598]],["nwArr",[8662]],["nwarrow",[8598]],["nwnear",[10535]],["Oacute",[211]],["oacute",[243]],["oast",[8859]],["Ocirc",[212]],["ocirc",[244]],["ocir",[8858]],["Ocy",[1054]],["ocy",[1086]],["odash",[8861]],["Odblac",[336]],["odblac",[337]],["odiv",[10808]],["odot",[8857]],["odsold",[10684]],["OElig",[338]],["oelig",[339]],["ofcir",[10687]],["Ofr",[120082]],["ofr",[120108]],["ogon",[731]],["Ograve",[210]],["ograve",[242]],["ogt",[10689]],["ohbar",[10677]],["ohm",[937]],["oint",[8750]],["olarr",[8634]],["olcir",[10686]],["olcross",[10683]],["oline",[8254]],["olt",[10688]],["Omacr",[332]],["omacr",[333]],["Omega",[937]],["omega",[969]],["Omicron",[927]],["omicron",[959]],["omid",[10678]],["ominus",[8854]],["Oopf",[120134]],["oopf",[120160]],["opar",[10679]],["OpenCurlyDoubleQuote",[8220]],["OpenCurlyQuote",[8216]],["operp",[10681]],["oplus",[8853]],["orarr",[8635]],["Or",[10836]],["or",[8744]],["ord",[10845]],["order",[8500]],["orderof",[8500]],["ordf",[170]],["ordm",[186]],["origof",[8886]],["oror",[10838]],["orslope",[10839]],["orv",[10843]],["oS",[9416]],["Oscr",[119978]],["oscr",[8500]],["Oslash",[216]],["oslash",[248]],["osol",[8856]],["Otilde",[213]],["otilde",[245]],["otimesas",[10806]],["Otimes",[10807]],["otimes",[8855]],["Ouml",[214]],["ouml",[246]],["ovbar",[9021]],["OverBar",[8254]],["OverBrace",[9182]],["OverBracket",[9140]],["OverParenthesis",[9180]],["para",[182]],["parallel",[8741]],["par",[8741]],["parsim",[10995]],["parsl",[11005]],["part",[8706]],["PartialD",[8706]],["Pcy",[1055]],["pcy",[1087]],["percnt",[37]],["period",[46]],["permil",[8240]],["perp",[8869]],["pertenk",[8241]],["Pfr",[120083]],["pfr",[120109]],["Phi",[934]],["phi",[966]],["phiv",[981]],["phmmat",[8499]],["phone",[9742]],["Pi",[928]],["pi",[960]],["pitchfork",[8916]],["piv",[982]],["planck",[8463]],["planckh",[8462]],["plankv",[8463]],["plusacir",[10787]],["plusb",[8862]],["pluscir",[10786]],["plus",[43]],["plusdo",[8724]],["plusdu",[10789]],["pluse",[10866]],["PlusMinus",[177]],["plusmn",[177]],["plussim",[10790]],["plustwo",[10791]],["pm",[177]],["Poincareplane",[8460]],["pointint",[10773]],["popf",[120161]],["Popf",[8473]],["pound",[163]],["prap",[10935]],["Pr",[10939]],["pr",[8826]],["prcue",[8828]],["precapprox",[10935]],["prec",[8826]],["preccurlyeq",[8828]],["Precedes",[8826]],["PrecedesEqual",[10927]],["PrecedesSlantEqual",[8828]],["PrecedesTilde",[8830]],["preceq",[10927]],["precnapprox",[10937]],["precneqq",[10933]],["precnsim",[8936]],["pre",[10927]],["prE",[10931]],["precsim",[8830]],["prime",[8242]],["Prime",[8243]],["primes",[8473]],["prnap",[10937]],["prnE",[10933]],["prnsim",[8936]],["prod",[8719]],["Product",[8719]],["profalar",[9006]],["profline",[8978]],["profsurf",[8979]],["prop",[8733]],["Proportional",[8733]],["Proportion",[8759]],["propto",[8733]],["prsim",[8830]],["prurel",[8880]],["Pscr",[119979]],["pscr",[120005]],["Psi",[936]],["psi",[968]],["puncsp",[8200]],["Qfr",[120084]],["qfr",[120110]],["qint",[10764]],["qopf",[120162]],["Qopf",[8474]],["qprime",[8279]],["Qscr",[119980]],["qscr",[120006]],["quaternions",[8461]],["quatint",[10774]],["quest",[63]],["questeq",[8799]],["quot",[34]],["QUOT",[34]],["rAarr",[8667]],["race",[8765,817]],["Racute",[340]],["racute",[341]],["radic",[8730]],["raemptyv",[10675]],["rang",[10217]],["Rang",[10219]],["rangd",[10642]],["range",[10661]],["rangle",[10217]],["raquo",[187]],["rarrap",[10613]],["rarrb",[8677]],["rarrbfs",[10528]],["rarrc",[10547]],["rarr",[8594]],["Rarr",[8608]],["rArr",[8658]],["rarrfs",[10526]],["rarrhk",[8618]],["rarrlp",[8620]],["rarrpl",[10565]],["rarrsim",[10612]],["Rarrtl",[10518]],["rarrtl",[8611]],["rarrw",[8605]],["ratail",[10522]],["rAtail",[10524]],["ratio",[8758]],["rationals",[8474]],["rbarr",[10509]],["rBarr",[10511]],["RBarr",[10512]],["rbbrk",[10099]],["rbrace",[125]],["rbrack",[93]],["rbrke",[10636]],["rbrksld",[10638]],["rbrkslu",[10640]],["Rcaron",[344]],["rcaron",[345]],["Rcedil",[342]],["rcedil",[343]],["rceil",[8969]],["rcub",[125]],["Rcy",[1056]],["rcy",[1088]],["rdca",[10551]],["rdldhar",[10601]],["rdquo",[8221]],["rdquor",[8221]],["CloseCurlyDoubleQuote",[8221]],["rdsh",[8627]],["real",[8476]],["realine",[8475]],["realpart",[8476]],["reals",[8477]],["Re",[8476]],["rect",[9645]],["reg",[174]],["REG",[174]],["ReverseElement",[8715]],["ReverseEquilibrium",[8651]],["ReverseUpEquilibrium",[10607]],["rfisht",[10621]],["rfloor",[8971]],["rfr",[120111]],["Rfr",[8476]],["rHar",[10596]],["rhard",[8641]],["rharu",[8640]],["rharul",[10604]],["Rho",[929]],["rho",[961]],["rhov",[1009]],["RightAngleBracket",[10217]],["RightArrowBar",[8677]],["rightarrow",[8594]],["RightArrow",[8594]],["Rightarrow",[8658]],["RightArrowLeftArrow",[8644]],["rightarrowtail",[8611]],["RightCeiling",[8969]],["RightDoubleBracket",[10215]],["RightDownTeeVector",[10589]],["RightDownVectorBar",[10581]],["RightDownVector",[8642]],["RightFloor",[8971]],["rightharpoondown",[8641]],["rightharpoonup",[8640]],["rightleftarrows",[8644]],["rightleftharpoons",[8652]],["rightrightarrows",[8649]],["rightsquigarrow",[8605]],["RightTeeArrow",[8614]],["RightTee",[8866]],["RightTeeVector",[10587]],["rightthreetimes",[8908]],["RightTriangleBar",[10704]],["RightTriangle",[8883]],["RightTriangleEqual",[8885]],["RightUpDownVector",[10575]],["RightUpTeeVector",[10588]],["RightUpVectorBar",[10580]],["RightUpVector",[8638]],["RightVectorBar",[10579]],["RightVector",[8640]],["ring",[730]],["risingdotseq",[8787]],["rlarr",[8644]],["rlhar",[8652]],["rlm",[8207]],["rmoustache",[9137]],["rmoust",[9137]],["rnmid",[10990]],["roang",[10221]],["roarr",[8702]],["robrk",[10215]],["ropar",[10630]],["ropf",[120163]],["Ropf",[8477]],["roplus",[10798]],["rotimes",[10805]],["RoundImplies",[10608]],["rpar",[41]],["rpargt",[10644]],["rppolint",[10770]],["rrarr",[8649]],["Rrightarrow",[8667]],["rsaquo",[8250]],["rscr",[120007]],["Rscr",[8475]],["rsh",[8625]],["Rsh",[8625]],["rsqb",[93]],["rsquo",[8217]],["rsquor",[8217]],["CloseCurlyQuote",[8217]],["rthree",[8908]],["rtimes",[8906]],["rtri",[9657]],["rtrie",[8885]],["rtrif",[9656]],["rtriltri",[10702]],["RuleDelayed",[10740]],["ruluhar",[10600]],["rx",[8478]],["Sacute",[346]],["sacute",[347]],["sbquo",[8218]],["scap",[10936]],["Scaron",[352]],["scaron",[353]],["Sc",[10940]],["sc",[8827]],["sccue",[8829]],["sce",[10928]],["scE",[10932]],["Scedil",[350]],["scedil",[351]],["Scirc",[348]],["scirc",[349]],["scnap",[10938]],["scnE",[10934]],["scnsim",[8937]],["scpolint",[10771]],["scsim",[8831]],["Scy",[1057]],["scy",[1089]],["sdotb",[8865]],["sdot",[8901]],["sdote",[10854]],["searhk",[10533]],["searr",[8600]],["seArr",[8664]],["searrow",[8600]],["sect",[167]],["semi",[59]],["seswar",[10537]],["setminus",[8726]],["setmn",[8726]],["sext",[10038]],["Sfr",[120086]],["sfr",[120112]],["sfrown",[8994]],["sharp",[9839]],["SHCHcy",[1065]],["shchcy",[1097]],["SHcy",[1064]],["shcy",[1096]],["ShortDownArrow",[8595]],["ShortLeftArrow",[8592]],["shortmid",[8739]],["shortparallel",[8741]],["ShortRightArrow",[8594]],["ShortUpArrow",[8593]],["shy",[173]],["Sigma",[931]],["sigma",[963]],["sigmaf",[962]],["sigmav",[962]],["sim",[8764]],["simdot",[10858]],["sime",[8771]],["simeq",[8771]],["simg",[10910]],["simgE",[10912]],["siml",[10909]],["simlE",[10911]],["simne",[8774]],["simplus",[10788]],["simrarr",[10610]],["slarr",[8592]],["SmallCircle",[8728]],["smallsetminus",[8726]],["smashp",[10803]],["smeparsl",[10724]],["smid",[8739]],["smile",[8995]],["smt",[10922]],["smte",[10924]],["smtes",[10924,65024]],["SOFTcy",[1068]],["softcy",[1100]],["solbar",[9023]],["solb",[10692]],["sol",[47]],["Sopf",[120138]],["sopf",[120164]],["spades",[9824]],["spadesuit",[9824]],["spar",[8741]],["sqcap",[8851]],["sqcaps",[8851,65024]],["sqcup",[8852]],["sqcups",[8852,65024]],["Sqrt",[8730]],["sqsub",[8847]],["sqsube",[8849]],["sqsubset",[8847]],["sqsubseteq",[8849]],["sqsup",[8848]],["sqsupe",[8850]],["sqsupset",[8848]],["sqsupseteq",[8850]],["square",[9633]],["Square",[9633]],["SquareIntersection",[8851]],["SquareSubset",[8847]],["SquareSubsetEqual",[8849]],["SquareSuperset",[8848]],["SquareSupersetEqual",[8850]],["SquareUnion",[8852]],["squarf",[9642]],["squ",[9633]],["squf",[9642]],["srarr",[8594]],["Sscr",[119982]],["sscr",[120008]],["ssetmn",[8726]],["ssmile",[8995]],["sstarf",[8902]],["Star",[8902]],["star",[9734]],["starf",[9733]],["straightepsilon",[1013]],["straightphi",[981]],["strns",[175]],["sub",[8834]],["Sub",[8912]],["subdot",[10941]],["subE",[10949]],["sube",[8838]],["subedot",[10947]],["submult",[10945]],["subnE",[10955]],["subne",[8842]],["subplus",[10943]],["subrarr",[10617]],["subset",[8834]],["Subset",[8912]],["subseteq",[8838]],["subseteqq",[10949]],["SubsetEqual",[8838]],["subsetneq",[8842]],["subsetneqq",[10955]],["subsim",[10951]],["subsub",[10965]],["subsup",[10963]],["succapprox",[10936]],["succ",[8827]],["succcurlyeq",[8829]],["Succeeds",[8827]],["SucceedsEqual",[10928]],["SucceedsSlantEqual",[8829]],["SucceedsTilde",[8831]],["succeq",[10928]],["succnapprox",[10938]],["succneqq",[10934]],["succnsim",[8937]],["succsim",[8831]],["SuchThat",[8715]],["sum",[8721]],["Sum",[8721]],["sung",[9834]],["sup1",[185]],["sup2",[178]],["sup3",[179]],["sup",[8835]],["Sup",[8913]],["supdot",[10942]],["supdsub",[10968]],["supE",[10950]],["supe",[8839]],["supedot",[10948]],["Superset",[8835]],["SupersetEqual",[8839]],["suphsol",[10185]],["suphsub",[10967]],["suplarr",[10619]],["supmult",[10946]],["supnE",[10956]],["supne",[8843]],["supplus",[10944]],["supset",[8835]],["Supset",[8913]],["supseteq",[8839]],["supseteqq",[10950]],["supsetneq",[8843]],["supsetneqq",[10956]],["supsim",[10952]],["supsub",[10964]],["supsup",[10966]],["swarhk",[10534]],["swarr",[8601]],["swArr",[8665]],["swarrow",[8601]],["swnwar",[10538]],["szlig",[223]],["Tab",[9]],["target",[8982]],["Tau",[932]],["tau",[964]],["tbrk",[9140]],["Tcaron",[356]],["tcaron",[357]],["Tcedil",[354]],["tcedil",[355]],["Tcy",[1058]],["tcy",[1090]],["tdot",[8411]],["telrec",[8981]],["Tfr",[120087]],["tfr",[120113]],["there4",[8756]],["therefore",[8756]],["Therefore",[8756]],["Theta",[920]],["theta",[952]],["thetasym",[977]],["thetav",[977]],["thickapprox",[8776]],["thicksim",[8764]],["ThickSpace",[8287,8202]],["ThinSpace",[8201]],["thinsp",[8201]],["thkap",[8776]],["thksim",[8764]],["THORN",[222]],["thorn",[254]],["tilde",[732]],["Tilde",[8764]],["TildeEqual",[8771]],["TildeFullEqual",[8773]],["TildeTilde",[8776]],["timesbar",[10801]],["timesb",[8864]],["times",[215]],["timesd",[10800]],["tint",[8749]],["toea",[10536]],["topbot",[9014]],["topcir",[10993]],["top",[8868]],["Topf",[120139]],["topf",[120165]],["topfork",[10970]],["tosa",[10537]],["tprime",[8244]],["trade",[8482]],["TRADE",[8482]],["triangle",[9653]],["triangledown",[9663]],["triangleleft",[9667]],["trianglelefteq",[8884]],["triangleq",[8796]],["triangleright",[9657]],["trianglerighteq",[8885]],["tridot",[9708]],["trie",[8796]],["triminus",[10810]],["TripleDot",[8411]],["triplus",[10809]],["trisb",[10701]],["tritime",[10811]],["trpezium",[9186]],["Tscr",[119983]],["tscr",[120009]],["TScy",[1062]],["tscy",[1094]],["TSHcy",[1035]],["tshcy",[1115]],["Tstrok",[358]],["tstrok",[359]],["twixt",[8812]],["twoheadleftarrow",[8606]],["twoheadrightarrow",[8608]],["Uacute",[218]],["uacute",[250]],["uarr",[8593]],["Uarr",[8607]],["uArr",[8657]],["Uarrocir",[10569]],["Ubrcy",[1038]],["ubrcy",[1118]],["Ubreve",[364]],["ubreve",[365]],["Ucirc",[219]],["ucirc",[251]],["Ucy",[1059]],["ucy",[1091]],["udarr",[8645]],["Udblac",[368]],["udblac",[369]],["udhar",[10606]],["ufisht",[10622]],["Ufr",[120088]],["ufr",[120114]],["Ugrave",[217]],["ugrave",[249]],["uHar",[10595]],["uharl",[8639]],["uharr",[8638]],["uhblk",[9600]],["ulcorn",[8988]],["ulcorner",[8988]],["ulcrop",[8975]],["ultri",[9720]],["Umacr",[362]],["umacr",[363]],["uml",[168]],["UnderBar",[95]],["UnderBrace",[9183]],["UnderBracket",[9141]],["UnderParenthesis",[9181]],["Union",[8899]],["UnionPlus",[8846]],["Uogon",[370]],["uogon",[371]],["Uopf",[120140]],["uopf",[120166]],["UpArrowBar",[10514]],["uparrow",[8593]],["UpArrow",[8593]],["Uparrow",[8657]],["UpArrowDownArrow",[8645]],["updownarrow",[8597]],["UpDownArrow",[8597]],["Updownarrow",[8661]],["UpEquilibrium",[10606]],["upharpoonleft",[8639]],["upharpoonright",[8638]],["uplus",[8846]],["UpperLeftArrow",[8598]],["UpperRightArrow",[8599]],["upsi",[965]],["Upsi",[978]],["upsih",[978]],["Upsilon",[933]],["upsilon",[965]],["UpTeeArrow",[8613]],["UpTee",[8869]],["upuparrows",[8648]],["urcorn",[8989]],["urcorner",[8989]],["urcrop",[8974]],["Uring",[366]],["uring",[367]],["urtri",[9721]],["Uscr",[119984]],["uscr",[120010]],["utdot",[8944]],["Utilde",[360]],["utilde",[361]],["utri",[9653]],["utrif",[9652]],["uuarr",[8648]],["Uuml",[220]],["uuml",[252]],["uwangle",[10663]],["vangrt",[10652]],["varepsilon",[1013]],["varkappa",[1008]],["varnothing",[8709]],["varphi",[981]],["varpi",[982]],["varpropto",[8733]],["varr",[8597]],["vArr",[8661]],["varrho",[1009]],["varsigma",[962]],["varsubsetneq",[8842,65024]],["varsubsetneqq",[10955,65024]],["varsupsetneq",[8843,65024]],["varsupsetneqq",[10956,65024]],["vartheta",[977]],["vartriangleleft",[8882]],["vartriangleright",[8883]],["vBar",[10984]],["Vbar",[10987]],["vBarv",[10985]],["Vcy",[1042]],["vcy",[1074]],["vdash",[8866]],["vDash",[8872]],["Vdash",[8873]],["VDash",[8875]],["Vdashl",[10982]],["veebar",[8891]],["vee",[8744]],["Vee",[8897]],["veeeq",[8794]],["vellip",[8942]],["verbar",[124]],["Verbar",[8214]],["vert",[124]],["Vert",[8214]],["VerticalBar",[8739]],["VerticalLine",[124]],["VerticalSeparator",[10072]],["VerticalTilde",[8768]],["VeryThinSpace",[8202]],["Vfr",[120089]],["vfr",[120115]],["vltri",[8882]],["vnsub",[8834,8402]],["vnsup",[8835,8402]],["Vopf",[120141]],["vopf",[120167]],["vprop",[8733]],["vrtri",[8883]],["Vscr",[119985]],["vscr",[120011]],["vsubnE",[10955,65024]],["vsubne",[8842,65024]],["vsupnE",[10956,65024]],["vsupne",[8843,65024]],["Vvdash",[8874]],["vzigzag",[10650]],["Wcirc",[372]],["wcirc",[373]],["wedbar",[10847]],["wedge",[8743]],["Wedge",[8896]],["wedgeq",[8793]],["weierp",[8472]],["Wfr",[120090]],["wfr",[120116]],["Wopf",[120142]],["wopf",[120168]],["wp",[8472]],["wr",[8768]],["wreath",[8768]],["Wscr",[119986]],["wscr",[120012]],["xcap",[8898]],["xcirc",[9711]],["xcup",[8899]],["xdtri",[9661]],["Xfr",[120091]],["xfr",[120117]],["xharr",[10231]],["xhArr",[10234]],["Xi",[926]],["xi",[958]],["xlarr",[10229]],["xlArr",[10232]],["xmap",[10236]],["xnis",[8955]],["xodot",[10752]],["Xopf",[120143]],["xopf",[120169]],["xoplus",[10753]],["xotime",[10754]],["xrarr",[10230]],["xrArr",[10233]],["Xscr",[119987]],["xscr",[120013]],["xsqcup",[10758]],["xuplus",[10756]],["xutri",[9651]],["xvee",[8897]],["xwedge",[8896]],["Yacute",[221]],["yacute",[253]],["YAcy",[1071]],["yacy",[1103]],["Ycirc",[374]],["ycirc",[375]],["Ycy",[1067]],["ycy",[1099]],["yen",[165]],["Yfr",[120092]],["yfr",[120118]],["YIcy",[1031]],["yicy",[1111]],["Yopf",[120144]],["yopf",[120170]],["Yscr",[119988]],["yscr",[120014]],["YUcy",[1070]],["yucy",[1102]],["yuml",[255]],["Yuml",[376]],["Zacute",[377]],["zacute",[378]],["Zcaron",[381]],["zcaron",[382]],["Zcy",[1047]],["zcy",[1079]],["Zdot",[379]],["zdot",[380]],["zeetrf",[8488]],["ZeroWidthSpace",[8203]],["Zeta",[918]],["zeta",[950]],["zfr",[120119]],["Zfr",[8488]],["ZHcy",[1046]],["zhcy",[1078]],["zigrarr",[8669]],["zopf",[120171]],["Zopf",[8484]],["Zscr",[119989]],["zscr",[120015]],["zwj",[8205]],["zwnj",[8204]]],o={},a={};!function(e,t){var r=n.length;for(;r--;){var o=n[r],a=o[0],i=o[1],l=i[0],u=l<32||l>126||62===l||60===l||38===l||34===l||39===l,c=void 0;if(u&&(c=t[l]=t[l]||{}),i[1]){var s=i[1];e[a]=String.fromCharCode(l)+String.fromCharCode(s),u&&(c[s]=a)}else e[a]=String.fromCharCode(l),u&&(c[""]=a)}}(o,a);var i=function(){function e(){}return e.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,(function(e,t){var r;if("#"===t.charAt(0)){var n="x"===t.charAt(1)?parseInt(t.substr(2).toLowerCase(),16):parseInt(t.substr(1));isNaN(n)||n<-32768||n>65535||(r=String.fromCharCode(n))}else r=o[t];return r||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=a[e.charCodeAt(n)];if(o){var i=o[e.charCodeAt(n+1)];if(i?n++:i=o[""],i){r+="&"+i+";",n++;continue}}r+=e.charAt(n),n++}return r},e.encode=function(t){return(new e).encode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n),i=a[o];if(i){var l=i[e.charCodeAt(n+1)];if(l?n++:l=i[""],l){r+="&"+l+";",n++;continue}}r+=o<32||o>126?"&#"+o+";":e.charAt(n),n++}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.Html5Entities=i},function(e,t,r){"use strict";var n=r(52),o=r(193);Object.defineProperty(t,"__esModule",{value:!0}),t.shouldHighlight=b,t.getChalk=w,t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(b(t)){var r=w(t),n=f(r);return y(n,e)}return e};var a,i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=n?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(r(195)),l=r(196),u=(a=r(199))&&a.__esModule?a:{default:a};function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}var s=new Set(["as","async","from","get","of","set"]);function f(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}var d,p=/\\r\\n|[\\n\\r\\u2028\\u2029]/,h=/^[()[\\]{}]$/,g=i.matchToToken,v=/^[a-z][\\w-]*$/i,m=function(e,t,r){if("name"===e.type){if((0,l.isKeyword)(e.value)||(0,l.isStrictReservedWord)(e.value,!0)||s.has(e.value))return"keyword";if(v.test(e.value)&&("<"===r[t-1]||"</"==r.substr(t-2,2)))return"jsxIdentifier";if(e.value[0]!==e.value[0].toLowerCase())return"capitalized"}return"punctuator"===e.type&&h.test(e.value)?"bracket":"invalid"!==e.type||"@"!==e.value&&"#"!==e.value?e.type:"punctuator"};function y(e,t){var r,o="",a=n(d(t));try{var i=function(){var t=r.value,n=t.type,a=t.value,i=e[n];o+=i?a.split(p).map((function(e){return i(e)})).join("\\n"):a};for(a.s();!(r=a.n()).done;)i()}catch(e){a.e(e)}finally{a.f()}return o}function b(e){return u.default.supportsColor||e.forceColor}function w(e){var t=u.default;return e.forceColor&&(t=new u.default.constructor({enabled:!0,level:1})),t}d=o.mark((function e(t){var r,n;return o.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(r=i.default.exec(t))){e.next=6;break}return n=g(r),e.next=4,{type:m(n,r.index,t),value:n.value};case 4:e.next=0;break;case 6:case"end":return e.stop()}}),e)}))},function(e,t,r){var n=r(192);e.exports=function(e,t){if(e){if("string"===typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}},function(e,t){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}},function(e,t,r){e.exports=r(194)},function(e,t,r){var n=function(e){"use strict";var t,r=Object.prototype,n=r.hasOwnProperty,o="function"===typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function u(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,r){return e[t]=r}}function c(e,t,r,n){var o=t&&t.prototype instanceof v?t:v,a=Object.create(o.prototype),i=new O(n||[]);return a._invoke=function(e,t,r){var n=f;return function(o,a){if(n===p)throw new Error("Generator is already running");if(n===h){if("throw"===o)throw a;return R()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var l=_(i,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===f)throw n=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=p;var u=s(e,t,r);if("normal"===u.type){if(n=r.done?h:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=h,r.method="throw",r.arg=u.arg)}}}(e,r,i),a}function s(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var f="suspendedStart",d="suspendedYield",p="executing",h="completed",g={};function v(){}function m(){}function y(){}var b={};b[a]=function(){return this};var w=Object.getPrototypeOf,k=w&&w(w(P([])));k&&k!==r&&n.call(k,a)&&(b=k);var E=y.prototype=v.prototype=Object.create(b);function x(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function r(o,a,i,l){var u=s(e[o],e,a);if("throw"!==u.type){var c=u.arg,f=c.value;return f&&"object"===typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,i,l)}),(function(e){r("throw",e,i,l)})):t.resolve(f).then((function(e){c.value=e,i(c)}),(function(e){return r("throw",e,i,l)}))}l(u.arg)}var o;this._invoke=function(e,n){function a(){return new t((function(t,o){r(e,n,t,o)}))}return o=o?o.then(a,a):a()}}function _(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,_(e,r),"throw"===r.method))return g;r.method="throw",r.arg=new TypeError("The iterator does not provide a \'throw\' method")}return g}var o=s(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,g;var a=o.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function P(e){if(e){var r=e[a];if(r)return r.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}return{next:R}}function R(){return{value:t,done:!0}}return m.prototype=E.constructor=y,y.constructor=m,m.displayName=u(y,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===m||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,u(e,l,"GeneratorFunction")),e.prototype=Object.create(E),e},e.awrap=function(e){return{__await:e}},x(S.prototype),S.prototype[i]=function(){return this},e.AsyncIterator=S,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new S(c(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},x(E),u(E,l,"Generator"),E[a]=function(){return this},E.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=P,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(C),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return l.type="throw",l.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],l=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(u&&c){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),C(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;C(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:P(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=n}catch(e){Function("r","regeneratorRuntime = r")(n)}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=/(([\'"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\\'"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:void 0};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isIdentifierName",{enumerable:!0,get:function(){return n.isIdentifierName}}),Object.defineProperty(t,"isIdentifierChar",{enumerable:!0,get:function(){return n.isIdentifierChar}}),Object.defineProperty(t,"isIdentifierStart",{enumerable:!0,get:function(){return n.isIdentifierStart}}),Object.defineProperty(t,"isReservedWord",{enumerable:!0,get:function(){return o.isReservedWord}}),Object.defineProperty(t,"isStrictBindOnlyReservedWord",{enumerable:!0,get:function(){return o.isStrictBindOnlyReservedWord}}),Object.defineProperty(t,"isStrictBindReservedWord",{enumerable:!0,get:function(){return o.isStrictBindReservedWord}}),Object.defineProperty(t,"isStrictReservedWord",{enumerable:!0,get:function(){return o.isStrictReservedWord}}),Object.defineProperty(t,"isKeyword",{enumerable:!0,get:function(){return o.isKeyword}});var n=r(197),o=r(198)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isIdentifierStart=s,t.isIdentifierChar=f,t.isIdentifierName=function(e){for(var t=!0,r=0,n=Array.from(e);r<n.length;r++){var o=n[r].codePointAt(0);if(t){if(!s(o))return!1;t=!1}else if(!f(o))return!1}return!t};var n="\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC",o="\u200C\u200D\xb7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF\u1AC0\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F",a=new RegExp("["+n+"]"),i=new RegExp("["+n+o+"]");n=o=null;var l=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938],u=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];function c(e,t){for(var r=65536,n=0,o=t.length;n<o;n+=2){if((r+=t[n])>e)return!1;if((r+=t[n+1])>=e)return!0}return!1}function s(e){return e<65?36===e:e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&a.test(String.fromCharCode(e)):c(e,l)))}function f(e){return e<48?36===e:e<58||!(e<65)&&(e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&i.test(String.fromCharCode(e)):c(e,l)||c(e,u))))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isReservedWord=u,t.isStrictReservedWord=c,t.isStrictBindOnlyReservedWord=s,t.isStrictBindReservedWord=function(e,t){return c(e,t)||s(e)},t.isKeyword=function(e){return a.has(e)};var n=["implements","interface","let","package","private","protected","public","static","yield"],o=["eval","arguments"],a=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),i=new Set(n),l=new Set(o);function u(e,t){return t&&"await"===e||"enum"===e}function c(e,t){return u(e,t)||i.has(e)}function s(e){return l.has(e)}},function(e,t,r){"use strict";(function(t){var n=r(52),o=r(200),a=r(201),i=r(206).stdout,l=r(207),u="win32"===t.platform&&!(Object({NODE_ENV:"production"}).TERM||"").toLowerCase().startsWith("xterm"),c=["ansi","ansi","ansi256","ansi16m"],s=new Set(["gray"]),f=Object.create(null);function d(e,t){t=t||{};var r=i?i.level:0;e.level=void 0===t.level?r:t.level,e.enabled="enabled"in t?t.enabled:e.level>0}function p(e){if(!this||!(this instanceof p)||this.template){var t={};return d(t,e),t.template=function(){var e=[].slice.call(arguments);return T.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,p.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=p,t.template}d(this,e)}u&&(a.blue.open="\x1b[94m");for(var h=function(){var e=v[g];a[e].closeRe=new RegExp(o(a[e].close),"g"),f[e]={get:function(){var t=a[e];return S.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}}},g=0,v=Object.keys(a);g<v.length;g++)h();f.visible={get:function(){return S.call(this,this._styles||[],!0,"visible")}},a.color.closeRe=new RegExp(o(a.color.close),"g");for(var m=function(){var e=b[y];if(s.has(e))return"continue";f[e]={get:function(){var t=this.level;return function(){var r=a.color[c[t]][e].apply(null,arguments),n={open:r,close:a.color.close,closeRe:a.color.closeRe};return S.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},y=0,b=Object.keys(a.color.ansi);y<b.length;y++)m();a.bgColor.closeRe=new RegExp(o(a.bgColor.close),"g");for(var w=function(){var e=E[k];if(s.has(e))return"continue";var t="bg"+e[0].toUpperCase()+e.slice(1);f[t]={get:function(){var t=this.level;return function(){var r=a.bgColor[c[t]][e].apply(null,arguments),n={open:r,close:a.bgColor.close,closeRe:a.bgColor.closeRe};return S.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},k=0,E=Object.keys(a.bgColor.ansi);k<E.length;k++)w();var x=Object.defineProperties((function(){}),f);function S(e,t,r){var n=function e(){return _.apply(e,arguments)};n._styles=e,n._empty=t;var o=this;return Object.defineProperty(n,"level",{enumerable:!0,get:function(){return o.level},set:function(e){o.level=e}}),Object.defineProperty(n,"enabled",{enumerable:!0,get:function(){return o.enabled},set:function(e){o.enabled=e}}),n.hasGrey=this.hasGrey||"gray"===r||"grey"===r,n.__proto__=x,n}function _(){var e=arguments,t=e.length,r=String(arguments[0]);if(0===t)return"";if(t>1)for(var o=1;o<t;o++)r+=" "+e[o];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;var i=a.dim.open;u&&this.hasGrey&&(a.dim.open="");var l,c=n(this._styles.slice().reverse());try{for(c.s();!(l=c.n()).done;){var s=l.value;r=(r=s.open+r.replace(s.closeRe,s.open)+s.close).replace(/\\r?\\n/g,"".concat(s.close,"$&").concat(s.open))}}catch(e){c.e(e)}finally{c.f()}return a.dim.open=i,r}function T(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");for(var r=[].slice.call(arguments,2),n=[t.raw[0]],o=1;o<t.length;o++)n.push(String(r[o-1]).replace(/[{}\\\\]/g,"\\\\$&")),n.push(String(t.raw[o]));return l(e,n.join(""))}Object.defineProperties(p.prototype,f),e.exports=p(),e.exports.supportsColor=i,e.exports.default=e.exports}).call(this,r(51))},function(e,t,r){"use strict";var n=/[|\\\\{}()[\\]^$+*?.]/g;e.exports=function(e){if("string"!==typeof e)throw new TypeError("Expected a string");return e.replace(n,"\\\\$&")}},function(e,t,r){"use strict";(function(e){var t=r(203),n=function(e,r){return function(){var n=e.apply(t,arguments);return"\x1b[".concat(n+r,"m")}},o=function(e,r){return function(){var n=e.apply(t,arguments);return"\x1b[".concat(38+r,";5;").concat(n,"m")}},a=function(e,r){return function(){var n=e.apply(t,arguments);return"\x1b[".concat(38+r,";2;").concat(n[0],";").concat(n[1],";").concat(n[2],"m")}};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){var e=new Map,r={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};r.color.grey=r.color.gray;for(var i=0,l=Object.keys(r);i<l.length;i++){for(var u=l[i],c=r[u],s=0,f=Object.keys(c);s<f.length;s++){var d=f[s],p=c[d];r[d]={open:"\x1b[".concat(p[0],"m"),close:"\x1b[".concat(p[1],"m")},c[d]=r[d],e.set(p[0],p[1])}Object.defineProperty(r,u,{value:c,enumerable:!1}),Object.defineProperty(r,"codes",{value:e,enumerable:!1})}var h=function(e){return e},g=function(e,t,r){return[e,t,r]};r.color.close="\x1b[39m",r.bgColor.close="\x1b[49m",r.color.ansi={ansi:n(h,0)},r.color.ansi256={ansi256:o(h,0)},r.color.ansi16m={rgb:a(g,0)},r.bgColor.ansi={ansi:n(h,10)},r.bgColor.ansi256={ansi256:o(h,10)},r.bgColor.ansi16m={rgb:a(g,10)};for(var v=0,m=Object.keys(t);v<m.length;v++){var y=m[v];if("object"===typeof t[y]){var b=t[y];"ansi16"===y&&(y="ansi"),"ansi16"in b&&(r.color.ansi[y]=n(b.ansi16,0),r.bgColor.ansi[y]=n(b.ansi16,10)),"ansi256"in b&&(r.color.ansi256[y]=o(b.ansi256,0),r.bgColor.ansi256[y]=o(b.ansi256,10)),"rgb"in b&&(r.color.ansi16m[y]=a(b.rgb,0),r.bgColor.ansi16m[y]=a(b.rgb,10))}}return r}})}).call(this,r(202)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,r){var n=r(87),o=r(205),a={};Object.keys(n).forEach((function(e){a[e]={},Object.defineProperty(a[e],"channels",{value:n[e].channels}),Object.defineProperty(a[e],"labels",{value:n[e].labels});var t=o(e);Object.keys(t).forEach((function(r){var n=t[r];a[e][r]=function(e){var t=function(t){if(void 0===t||null===t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var r=e(t);if("object"===typeof r)for(var n=r.length,o=0;o<n;o++)r[o]=Math.round(r[o]);return r};return"conversion"in e&&(t.conversion=e.conversion),t}(n),a[e][r].raw=function(e){var t=function(t){return void 0===t||null===t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(n)}))})),e.exports=a},function(e,t,r){"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},function(e,t,r){var n=r(87);function o(e){var t=function(){for(var e={},t=Object.keys(n),r=t.length,o=0;o<r;o++)e[t[o]]={distance:-1,parent:null};return e}(),r=[e];for(t[e].distance=0;r.length;)for(var o=r.pop(),a=Object.keys(n[o]),i=a.length,l=0;l<i;l++){var u=a[l],c=t[u];-1===c.distance&&(c.distance=t[o].distance+1,c.parent=o,r.unshift(u))}return t}function a(e,t){return function(r){return t(e(r))}}function i(e,t){for(var r=[t[e].parent,e],o=n[t[e].parent][e],i=t[e].parent;t[i].parent;)r.unshift(t[i].parent),o=a(n[t[i].parent][i],o),i=t[i].parent;return o.conversion=r,o}e.exports=function(e){for(var t=o(e),r={},n=Object.keys(t),a=n.length,l=0;l<a;l++){var u=n[l];null!==t[u].parent&&(r[u]=i(u,t))}return r}},function(e,t,r){"use strict";e.exports={stdout:!1,stderr:!1}},function(e,t,r){"use strict";var n=r(52),o=/(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi,a=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g,i=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/,l=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,u=new Map([["n","\\n"],["r","\\r"],["t","\\t"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","\x1b"],["a","\x07"]]);function c(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):u.get(e)||e}function s(e,t){var r,o,a=[],u=t.trim().split(/\\s*,\\s*/g),s=n(u);try{for(s.s();!(o=s.n()).done;){var f=o.value;if(isNaN(f)){if(!(r=f.match(i)))throw new Error("Invalid Chalk template style argument: ".concat(f," (in style \'").concat(e,"\')"));a.push(r[2].replace(l,(function(e,t,r){return t?c(t):r})))}else a.push(Number(f))}}catch(e){s.e(e)}finally{s.f()}return a}function f(e){a.lastIndex=0;for(var t,r=[];null!==(t=a.exec(e));){var n=t[1];if(t[2]){var o=s(n,t[2]);r.push([n].concat(o))}else r.push([n])}return r}function d(e,t){var r,o={},a=n(t);try{for(a.s();!(r=a.n()).done;){var i,l=r.value,u=n(l.styles);try{for(u.s();!(i=u.n()).done;){var c=i.value;o[c[0]]=l.inverse?null:c.slice(1)}}catch(e){u.e(e)}finally{u.f()}}}catch(e){a.e(e)}finally{a.f()}for(var s=e,f=0,d=Object.keys(o);f<d.length;f++){var p=d[f];if(Array.isArray(o[p])){if(!(p in s))throw new Error("Unknown Chalk style: ".concat(p));s=o[p].length>0?s[p].apply(s,o[p]):s[p]}}return s}e.exports=function(e,t){var r=[],n=[],a=[];if(t.replace(o,(function(t,o,i,l,u,s){if(o)a.push(c(o));else if(l){var p=a.join("");a=[],n.push(0===r.length?p:d(e,r)(p)),r.push({inverse:i,styles:f(l)})}else if(u){if(0===r.length)throw new Error("Found extraneous } in Chalk template literal");n.push(d(e,r)(a.join(""))),a=[],r.pop()}else a.push(s)})),n.push(a.join("")),r.length>0){var i="Chalk template literal is missing ".concat(r.length," closing bracket").concat(1===r.length?"":"s"," (`}`)");throw new Error(i)}return n.join("")}},function(e,t,r){"use strict";r.r(t),r.d(t,"ThemeContext",(function(){return me}));r(90);var n=r(0),o=r.n(n),a=r(53),i=r.n(a),l=function(e){return{position:"relative",display:"inline-flex",flexDirection:"column",height:"100%",width:"1024px",maxWidth:"100%",overflowX:"hidden",overflowY:"auto",padding:"0.5rem",boxSizing:"border-box",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"11px",whiteSpace:"pre-wrap",wordBreak:"break-word",lineHeight:1.5,color:e.color}},u=null;var c=function(e){var t=Object(n.useContext)(me),r=e.shortcutHandler;return Object(n.useEffect)((function(){var e=function(e){r&&r(e.key)};return window.addEventListener("keydown",e),u&&u.addEventListener("keydown",e),function(){window.removeEventListener("keydown",e),u&&u.removeEventListener("keydown",e)}}),[r]),o.a.createElement("div",{style:l(t),ref:function(e){if(e){var t=e.ownerDocument;u=t.defaultView}}},e.children)},s=function(e){return{fontFamily:"sans-serif",color:e.footer,marginTop:"0.5rem",flex:"0 0 auto"}};var f=function(e){var t=Object(n.useContext)(me);return o.a.createElement("div",{style:s(t)},e.line1,o.a.createElement("br",null),e.line2)},d=function(e){return{fontSize:"2em",fontFamily:"sans-serif",color:e.headerColor,whiteSpace:"pre-wrap",margin:"0 2rem 0.75rem 0",flex:"0 0 auto",maxHeight:"50%",overflow:"auto"}};var p=function(e){var t=Object(n.useContext)(me);return o.a.createElement("div",{style:d(t)},e.headerText)};function h(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function g(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function v(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?g(Object(r),!0).forEach((function(t){h(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):g(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var m={position:"relative",display:"block",padding:"0.5em",marginTop:"0.5em",marginBottom:"0.5em",overflowX:"auto",whiteSpace:"pre-wrap",borderRadius:"0.25rem"},y={fontFamily:"Consolas, Menlo, monospace"};var b=function(e){var t=e.main,r=e.codeHTML,a=Object(n.useContext)(me),i=v(v({},m),{},{backgroundColor:a.primaryPreBackground,color:a.primaryPreColor}),l=v(v({},m),{},{backgroundColor:a.secondaryPreBackground,color:a.secondaryPreColor}),u=t?i:l,c={__html:r};return o.a.createElement("pre",{style:u},o.a.createElement("code",{style:y,dangerouslySetInnerHTML:c}))},w=r(33),k=r.n(w),E=new(r(88).AllHtmlEntities),x=function(e){return{reset:[e.base05,"transparent"],black:e.base05,red:e.base08,green:e.base0B,yellow:e.base08,blue:e.base0C,magenta:e.base0C,cyan:e.base0E,gray:e.base03,lightgrey:e.base01,darkgrey:e.base03}},S={"ansi-bright-black":"black","ansi-bright-yellow":"yellow","ansi-yellow":"yellow","ansi-bright-green":"green","ansi-green":"green","ansi-bright-cyan":"cyan","ansi-cyan":"cyan","ansi-bright-red":"red","ansi-red":"red","ansi-bright-magenta":"magenta","ansi-magenta":"magenta","ansi-white":"darkgrey"};var _=function(e,t){for(var r=(new k.a).ansiToJson(E.encode(e),{use_classes:!0}),n="",o=!1,a=0;a<r.length;++a)for(var i=r[a],l=i.content,u=i.fg,c=l.split("\\n"),s=0;s<c.length;++s){o||(n+=\'<span data-ansi-line="true">\',o=!0);var f=c[s].replace("\\r",""),d=x(t)[S[u]];null!=d?n+=\'<span style="color: \'+d+\';">\'+f+"</span>":(null!=u&&console.log("Missing color mapping: ",u),n+="<span>"+f+"</span>"),s<c.length-1&&(n+="</span>",o=!1,n+="<br/>")}return o&&(n+="</span>",o=!1),n},T=/^\\.(\\/[^/\\n ]+)+\\.[^/\\n ]+$/,C=[/^.*\\((\\d+):(\\d+)\\)$/,/^Line (\\d+):.+$/];var O=function(e){for(var t=e.split("\\n"),r="",n=0,o=0,a=0;a<t.length;a++){var i=k.a.ansiToText(t[a]).trim();if(i){!r&&i.match(T)&&(r=i);for(var l=0;l<C.length;){var u=i.match(C[l]);if(u){n=parseInt(u[1],10),o=parseInt(u[2],10)+1||1;break}l++}if(r&&n)break}}return r&&n?{fileName:r,lineNumber:n,colNumber:o}:null},P={cursor:"pointer"};var R=function(e){var t=Object(n.useContext)(me),r=e.error,a=e.editorHandler,i=O(r),l=null!==i&&null!==a;return o.a.createElement(c,null,o.a.createElement(p,{headerText:"Failed to compile"}),o.a.createElement("div",{onClick:l&&i?function(){return a(i)}:null,style:l?P:null},o.a.createElement(b,{main:!0,codeHTML:_(r,t)})),o.a.createElement(f,{line1:"This error occurred during the build time and cannot be dismissed."}))};function N(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function L(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function A(e,t,r){return t&&L(e.prototype,t),r&&L(e,r),e}function I(e,t){return(I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}function M(e){return(M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function D(e){return(D="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){return!t||"object"!==D(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return e}(e):t}function z(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=M(e);if(t){var o=M(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return q(this,r)}}var U=function(e){return{color:e.closeColor,lineHeight:"1rem",fontSize:"1.5rem",padding:"1rem",cursor:"pointer",position:"absolute",right:0,top:0}};var F=function(e){var t=e.close,r=Object(n.useContext)(me);return o.a.createElement("span",{title:"Click or press Escape to dismiss.",onClick:t,style:U(r)},"\xd7")},B={marginBottom:"0.5rem"},V={marginRight:"1em"},H={border:"none",borderRadius:"4px",padding:"3px 6px",cursor:"pointer"},W=function(e){return v(v({},H),{},{backgroundColor:e.navBackground,color:e.navArrow,borderTopRightRadius:"0px",borderBottomRightRadius:"0px",marginRight:"1px"})},$=function(e){return v(v({},H),{},{backgroundColor:e.navBackground,color:e.navArrow,borderTopLeftRadius:"0px",borderBottomLeftRadius:"0px"})};var G=function(e){var t=Object(n.useContext)(me),r=e.currentError,a=e.totalErrors,i=e.previous,l=e.next;return o.a.createElement("div",{style:B},o.a.createElement("span",{style:V},o.a.createElement("button",{onClick:i,style:W(t)},"\u2190"),o.a.createElement("button",{onClick:l,style:$(t)},"\u2192")),"".concat(r," of ").concat(a," errors on the page"))};function Q(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Y(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return r}}(e,t)||function(e,t){if(e){if("string"===typeof e)return Q(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Q(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function K(e,t){for(;null!=t&&"br"!==t.tagName.toLowerCase();)t=t.nextElementSibling;null!=t&&e.removeChild(t)}var X=r(89);var J=function(e){var t=Object(n.useContext)(me),r=e.lines,a=e.lineNum,i=e.columnNum,l=e.contextSize,u=e.main,c=[],s=1/0;r.forEach((function(e){var t=e.content,r=t.match(/^\\s*/);""!==t&&(s=r&&r[0]?Math.min(s,r[0].length):0)})),r.forEach((function(e){var t=e.content,r=e.lineNumber;isFinite(s)&&(t=t.substring(s)),c[r-1]=t}));var f=Object(X.codeFrameColumns)(c.join("\\n"),{start:{line:a,column:null==i?0:i-(isFinite(s)?s:0)}},{forceColor:!0,linesAbove:l,linesBelow:l}),d=_(f,t),p=document.createElement("code");p.innerHTML=d,function(e){for(var t=e.childNodes,r=0;r<t.length;++r){var n=t[r];if("span"===n.tagName.toLowerCase()){var o=n.innerText;null!=o&&"|^"===o.replace(/\\s/g,"")&&(n.style.position="absolute",K(e,n))}}}(p);var h=p.childNodes;e:for(var g=0;g<h.length;++g)for(var v=h[g].childNodes,m=0;m<v.length;++m){var y=v[m].innerText;if(null!=y&&-1!==y.indexOf(" "+a+" |"))break e}return o.a.createElement(b,{main:u,codeHTML:p.innerHTML})};function Z(e,t,r,n,o,a,i){var l;if(!i&&e&&"number"===typeof t){var u=/^[/|\\\\].*?[/|\\\\]((src|node_modules)[/|\\\\].*)/.exec(e);l=u&&u[1]?u[1]:e,l+=":"+t,r&&(l+=":"+r)}else n&&"number"===typeof o?(l=n+":"+o,a&&(l+=":"+a)):l="unknown";return l.replace("webpack://",".")}var ee=function(e){return{textDecoration:"none",color:e.anchorColor,cursor:"pointer"}},te=function(e){return{marginBottom:"1.5em",color:e.toggleColor,cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",background:e.toggleBackground,fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"}};var re=function(e){var t=Object(n.useContext)(me),r=Y(Object(n.useState)(!1),2),a=r[0],i=r[1],l=function(){var t=e.frame,r=t._originalFileName,n=t._originalLineNumber;return r?-1!==r.trim().indexOf(" ")?null:{fileName:r,lineNumber:n||1}:null},u=function(){var t=l();t&&e.editorHandler(t)},c=e.frame,s=e.contextSize,f=e.critical,d=e.showCode,p=c.fileName,h=c.lineNumber,g=c.columnNumber,v=c._scriptCode,m=c._originalFileName,y=c._originalLineNumber,b=c._originalColumnNumber,w=c._originalScriptCode,k=c.getFunctionName(),E=Z(m,y,b,p,h,g,a),x=null;d&&(a&&v&&0!==v.length&&null!=h?x={lines:v,lineNum:h,columnNum:g,contextSize:s,main:f}:!a&&w&&0!==w.length&&null!=y&&(x={lines:w,lineNum:y,columnNum:b,contextSize:s,main:f}));var S=null!==l()&&null!==e.editorHandler;return o.a.createElement("div",null,o.a.createElement("div",null,k),o.a.createElement("div",{style:{fontSize:"0.9em",marginBottom:"0.9em"}},o.a.createElement("span",{style:S?ee(t):null,onClick:S?u:null,onKeyDown:S?function(e){"Enter"===e.key&&u()}:null,tabIndex:S?"0":null},E)),x&&o.a.createElement("span",null,o.a.createElement("span",{onClick:S?u:null,style:S?{cursor:"pointer"}:null},o.a.createElement(J,x)),o.a.createElement("button",{style:te(t),onClick:function(){i(!a)}},"View "+(a?"source":"compiled"))))},ne={cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"},oe=function(e){return v(v({},ne),{},{color:e.color,background:e.background,marginBottom:"1.5em"})},ae=function(e){return v(v({},ne),{},{color:e.color,background:e.background,marginBottom:"0.6em"})};var ie=function(e){var t=Object(n.useContext)(me),r=Y(Object(n.useState)(!0),2),a=r[0],i=r[1],l=function(){i(!a)},u=e.children.length;return o.a.createElement("div",null,o.a.createElement("button",{onClick:l,style:a?oe(t):ae(t)},(a?"\u25B6":"\u25BC")+" ".concat(u," stack frames were ")+(a?"collapsed.":"expanded.")),o.a.createElement("div",{style:{display:a?"none":"block"}},e.children,o.a.createElement("button",{onClick:l,style:ae(t)},"\u25B2 ".concat(u," stack frames were expanded."))))};function le(e){switch(e){case"EvalError":case"InternalError":case"RangeError":case"ReferenceError":case"SyntaxError":case"TypeError":case"URIError":return!0;default:return!1}}var ue={fontSize:"1em",flex:"0 1 auto",minHeight:"0px",overflow:"auto"},ce=function(e){j(r,e);var t=z(r);function r(){return N(this,r),t.apply(this,arguments)}return A(r,[{key:"renderFrames",value:function(){var e=this.props,t=e.stackFrames,r=e.errorName,n=e.contextSize,a=e.editorHandler,i=[],l=!1,u=[],c=0;return t.forEach((function(e,s){var f=e.fileName,d=function(e,t){return null==e||""===e||-1!==e.indexOf("/~/")||-1!==e.indexOf("/node_modules/")||-1!==e.trim().indexOf(" ")||null==t||""===t}(e._originalFileName,f),p=!le(r),h=d&&(p||l);d||(l=!0);var g=o.a.createElement(re,{key:"frame-"+s,frame:e,contextSize:n,critical:0===s,showCode:!h,editorHandler:a}),v=s===t.length-1;h&&u.push(g),h&&!v||(1===u.length?i.push(u[0]):u.length>1&&(c++,i.push(o.a.createElement(ie,{key:"bundle-"+c},u))),u=[]),h||i.push(g)})),i}},{key:"render",value:function(){return o.a.createElement("div",{style:ue},this.renderFrames())}}]),r}(n.Component),se={display:"flex",flexDirection:"column"};var fe=function(e){var t=e.errorRecord,r=e.editorHandler,n=t.error,a=t.unhandledRejection,i=t.contextSize,l=t.stackFrames,u=a?"Unhandled Rejection ("+n.name+")":n.name,c=n.message,s=c.match(/^\\w*:/)||!u?c:u+": "+c;return s=s.replace(/^Invariant Violation:\\s*/,"").replace(/^Warning:\\s*/,"").replace(" Check the render method","\\n\\nCheck the render method").replace(" Check your code at","\\n\\nCheck your code at"),o.a.createElement("div",{style:se},o.a.createElement(p,{headerText:s}),o.a.createElement(ce,{stackFrames:l,errorName:u,contextSize:i,editorHandler:r}))},de=function(e){j(r,e);var t=z(r);function r(){var e;N(this,r);for(var n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return(e=t.call.apply(t,[this].concat(o))).state={currentIndex:0},e.previous=function(){e.setState((function(e,t){return{currentIndex:e.currentIndex>0?e.currentIndex-1:t.errorRecords.length-1}}))},e.next=function(){e.setState((function(e,t){return{currentIndex:e.currentIndex<t.errorRecords.length-1?e.currentIndex+1:0}}))},e.shortcutHandler=function(t){"Escape"===t?e.props.close():"ArrowLeft"===t?e.previous():"ArrowRight"===t&&e.next()},e}return A(r,[{key:"render",value:function(){var e=this.props,t=e.errorRecords,r=e.close,n=t.length;return o.a.createElement(c,{shortcutHandler:this.shortcutHandler},o.a.createElement(F,{close:r}),n>1&&o.a.createElement(G,{currentError:this.state.currentIndex+1,totalErrors:n,previous:this.previous,next:this.next}),o.a.createElement(fe,{errorRecord:t[this.state.currentIndex],editorHandler:this.props.editorHandler}),o.a.createElement(f,{line1:"This screen is visible only in development. It will not appear if the app crashes in production.",line2:"Open your browser\u2019s developer console to further inspect this error.  Click the \'X\' or hit ESC to dismiss this message."}))}}]),r}(n.PureComponent),pe={background:"white",color:"black",headerColor:"#ce1126",primaryPreBackground:"rgba(206, 17, 38, 0.05)",primaryPreColor:"inherit",secondaryPreBackground:"rgba(251, 245, 180, 0.3)",secondaryPreColor:"inherit",footer:"#878e91",anchorColor:"#878e91",toggleBackground:"transparent",toggleColor:"#878e91",closeColor:"#293238",navBackground:"rgba(206, 17, 38, 0.05)",navArrow:"#ce1126",base01:"#f5f5f5",base03:"#6e6e6e",base05:"#333333",base08:"#881280",base0B:"#1155cc",base0C:"#994500",base0E:"#c80000"},he={background:"#353535",color:"white",headerColor:"#e83b46",primaryPreBackground:"rgba(206, 17, 38, 0.1)",primaryPreColor:"#fccfcf",secondaryPreBackground:"rgba(251, 245, 180, 0.1)",secondaryPreColor:"#fbf5b4",footer:"#878e91",anchorColor:"#878e91",toggleBackground:"transparent",toggleColor:"#878e91",closeColor:"#ffffff",navBackground:"rgba(206, 17, 38, 0.2)",navArrow:"#ce1126",base01:"#282a2e",base03:"#969896",base05:"#c5c8c6",base08:"#cc6666",base0B:"#b5bd68",base0C:"#8abeb7",base0E:"#b294bb"};var ge=null,ve=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?he:pe,me=Object(n.createContext)();window.updateContent=function(e){var t,r,n,a,l,u=(r=(t=e).currentBuildError,n=t.currentRuntimeErrorRecords,a=t.dismissRuntimeErrors,l=t.editorHandler,r?o.a.createElement(me.Provider,{value:ve},o.a.createElement(R,{error:r,editorHandler:l})):n.length>0?o.a.createElement(me.Provider,{value:ve},o.a.createElement(de,{errorRecords:n,close:a,editorHandler:l})):null);return null===u?(i.a.unmountComponentAtNode(ge),!1):(i.a.render(u,ge),!0)},document.body.style.margin="0",document.body.style["max-width"]="100vw",function(e,t){for(var r in e.setAttribute("style",""),t)t.hasOwnProperty(r)&&(e.style[r]=t[r])}(ge=document.createElement("div"),{width:"100%",height:"100%","box-sizing":"border-box","text-align":"center","background-color":ve.background}),document.body.appendChild(ge),window.parent.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady()}]);', ee = null, te = !1, re = !1, ne = null, oe = null, ae = [], ie = null, le = null;
            function ue(e) {
                ne = e, ee && me();
            }
            function ce(e) {
                oe = e, me();
            }
            function se(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                ie = t, X(pe(t))(e);
            }
            function fe() {
                oe = null, me();
            }
            function de(e) {
                if (null !== le) throw new Error("Already listening");
                e.launchEditorEndpoint && console.warn("Warning: `startReportingRuntimeErrors` doesn\u2019t accept `launchEditorEndpoint` argument anymore. Use `listenToOpenInEditor` instead with your own implementation to open errors in editor "), ie = e, le = K(pe(e), e.filename);
            }
            var pe = function(e) {
                return function(t) {
                    try {
                        "function" == typeof e.onError && e.onError.call(null);
                    } finally{
                        if (ae.some(function(e) {
                            return e.error === t.error;
                        })) return;
                        ae = ae.concat([
                            t
                        ]), me();
                    }
                };
            };
            function he() {
                ae = [], me();
            }
            function ge() {
                if (null === le) throw new Error("Not currently listening");
                ie = null;
                try {
                    le();
                } finally{
                    le = null;
                }
            }
            function me() {
                if (!te) {
                    if (re) ve();
                    else {
                        te = !0;
                        var e = window.document.createElement("iframe");
                        !function(e, t) {
                            for(var r in e.setAttribute("style", ""), t)t.hasOwnProperty(r) && (e.style[r] = t[r]);
                        }(e, J), e.onload = function() {
                            var t = e.contentDocument;
                            if (null != t && null != t.body) {
                                ee = e;
                                var r = e.contentWindow.document.createElement("script");
                                r.type = "text/javascript", r.innerHTML = Z, t.body.appendChild(r);
                            }
                        }, window.document.body.appendChild(e);
                    }
                }
            }
            function ve() {
                if (!ie) throw new Error("Expected options to be injected.");
                if (!ee) throw new Error("Iframe has not been created yet.");
                ee.contentWindow.updateContent({
                    currentBuildError: oe,
                    currentRuntimeErrorRecords: ae,
                    dismissRuntimeErrors: he,
                    editorHandler: ne
                }) || (window.document.body.removeChild(ee), ee = null, re = !1);
            }
            window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ = window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ || {}, window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady = function() {
                re = !0, te = !1, ve();
            };
        }
    ]);
});

},{"d1546958eb39fdcf":"d5jf4"}],"d5jf4":[function(require,module,exports) {
// shim for using process in browser
var process = module.exports = {};
// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var cachedSetTimeout;
var cachedClearTimeout;
function defaultSetTimout() {
    throw new Error("setTimeout has not been defined");
}
function defaultClearTimeout() {
    throw new Error("clearTimeout has not been defined");
}
(function() {
    try {
        if (typeof setTimeout === "function") cachedSetTimeout = setTimeout;
        else cachedSetTimeout = defaultSetTimout;
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === "function") cachedClearTimeout = clearTimeout;
        else cachedClearTimeout = defaultClearTimeout;
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations
    return setTimeout(fun, 0);
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations
    return clearTimeout(marker);
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;
function cleanUpNextTick() {
    if (!draining || !currentQueue) return;
    draining = false;
    if (currentQueue.length) queue = currentQueue.concat(queue);
    else queueIndex = -1;
    if (queue.length) drainQueue();
}
function drainQueue() {
    if (draining) return;
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while(len){
        currentQueue = queue;
        queue = [];
        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}
process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) runTimeout(drainQueue);
};
// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function() {
    this.fun.apply(null, this.array);
};
process.title = "browser";
process.browser = true;
process.env = {};
process.argv = [];
process.version = ""; // empty string to avoid regexp issues
process.versions = {};
function noop() {}
process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;
process.listeners = function(name) {
    return [];
};
process.binding = function(name) {
    throw new Error("process.binding is not supported");
};
process.cwd = function() {
    return "/";
};
process.chdir = function(dir) {
    throw new Error("process.chdir is not supported");
};
process.umask = function() {
    return 0;
};

},{}],"d8Dch":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$98a3 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$98a3.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _globalCss = require("../global.css");
var _styleguideCss = require("../styleguide.css");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _client = require("react-dom/client");
var _clientDefault = parcelHelpers.interopDefault(_client);
var _element = require("./screens/Element");
const app = document.getElementById("app");
const root = (0, _clientDefault.default).createRoot(app);
root.render(/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _element.Element), {}, void 0, false, {
    fileName: "src/index.jsx",
    lineNumber: 9,
    columnNumber: 13
}, undefined));

  $parcel$ReactRefreshHelpers$98a3.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","../global.css":"6ZjVH","../styleguide.css":"7C4k8","react":"21dqq","react-dom/client":"lOjBx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru","./screens/Element":"igX3A"}],"iTorj":[function(require,module,exports) {
"use strict";
module.exports = require("ee51401569654d91");

},{"ee51401569654d91":"48uCM"}],"48uCM":[function(require,module,exports) {
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    var React = require("58362d9d82be395f");
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for("react.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator";
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== "object") return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === "function") return maybeIterator;
        return null;
    }
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning("error", format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== "") {
            format += "%s";
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift("Warning: " + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
    function isValidElementType(type) {
        if (typeof type === "string" || typeof type === "function") return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || "Context";
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === "number") error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === "function") return type.displayName || type.name || null;
        if (typeof type === "string") return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return "\n" + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, "props", {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === "string") {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = "\n" + sampleLines[s].replace(" at new ", " at "); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes("<anonymous>")) _frame = _frame.replace("<anonymous>", fn.displayName);
                            if (typeof fn === "function") componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : "";
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        if (typeof fn === "function") componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return "";
        if (typeof type === "function") return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === "string") return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return "";
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== "function") {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error("Failed %s type: %s", location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;
    var didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
            var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function warnIfStringRefCannotBeAutoConverted(config, self) {
        if (typeof config.ref === "string" && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, "validated", {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, "_self", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, "_source", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */ function jsxDEV(type, config, maybeKey, source, self) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
        // but as an intermediary step, we will use jsxDEV for everything except
        // <div {...props} key="Hi" />, because we aren't currently able to tell if
        // key is explicitly declared to be undefined or not.
        if (maybeKey !== undefined) {
            checkKeyStringCoercion(maybeKey);
            key = "" + maybeKey;
        }
        if (hasValidKey(config)) {
            checkKeyStringCoercion(config.key);
            key = "" + config.key;
        }
        if (hasValidRef(config)) {
            ref = config.ref;
            warnIfStringRefCannotBeAutoConverted(config, self);
        } // Remaining properties are added to a new props object
        for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
         // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner$1.current) {
            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
            if (name) return "\n\nCheck the render method of `" + name + "`.";
        }
        return "";
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
        }
        return "";
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = "";
        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== "object") return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === "string") return;
        var propTypes;
        if (typeof type === "function") propTypes = type.propTypes;
        else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
        }
        if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error("Invalid attribute `ref` supplied to `React.Fragment`.");
            setCurrentlyValidatingElement$1(null);
        }
    }
    var didWarnAboutKeySpread = {};
    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = "";
            if (type === undefined || typeof type === "object" && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendum(source);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = "null";
            else if (isArray(type)) typeString = "array";
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
            } else typeString = typeof type;
            error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) {
            var children = props.children;
            if (children !== undefined) {
                if (isStaticChildren) {
                    if (isArray(children)) {
                        for(var i = 0; i < children.length; i++)validateChildKeys(children[i], type);
                        if (Object.freeze) Object.freeze(children);
                    } else error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                } else validateChildKeys(children, type);
            }
        }
        if (hasOwnProperty.call(props, "key")) {
            var componentName = getComponentNameFromType(type);
            var keys = Object.keys(props).filter(function(k) {
                return k !== "key";
            });
            var beforeExample = keys.length > 0 ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            if (!didWarnAboutKeySpread[componentName + beforeExample]) {
                var afterExample = keys.length > 0 ? "{" + keys.join(": ..., ") + ": ...}" : "{}";
                error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);
                didWarnAboutKeySpread[componentName + beforeExample] = true;
            }
        }
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    } // These two functions exist to still get child warnings in dev
    var jsxDEV$1 = jsxWithValidation;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = jsxDEV$1;
})();

},{"58362d9d82be395f":"21dqq"}],"21dqq":[function(require,module,exports) {
"use strict";
module.exports = require("a569817e6ea559f6");

},{"a569817e6ea559f6":"6YvXz"}],"6YvXz":[function(require,module,exports) {
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var ReactVersion = "18.3.1";
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for("react.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator";
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== "object") return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === "function") return maybeIterator;
        return null;
    }
    /**
 * Keeps track of the current dispatcher.
 */ var ReactCurrentDispatcher = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    /**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */ var ReactCurrentBatchConfig = {
        transition: null
    };
    var ReactCurrentActQueue = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: false,
        didScheduleLegacyUpdate: false
    };
    /**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */ var ReactCurrentOwner = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    var ReactDebugCurrentFrame = {};
    var currentExtraStackFrame = null;
    function setExtraStackFrame(stack) {
        currentExtraStackFrame = stack;
    }
    ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
        currentExtraStackFrame = stack;
    }; // Stack implementation injected by the current renderer.
    ReactDebugCurrentFrame.getCurrentStack = null;
    ReactDebugCurrentFrame.getStackAddendum = function() {
        var stack = ""; // Add an extra top frame while an element is being validated
        if (currentExtraStackFrame) stack += currentExtraStackFrame;
         // Delegate to the injected renderer-specific implementation
        var impl = ReactDebugCurrentFrame.getCurrentStack;
        if (impl) stack += impl() || "";
        return stack;
    };
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var ReactSharedInternals = {
        ReactCurrentDispatcher: ReactCurrentDispatcher,
        ReactCurrentBatchConfig: ReactCurrentBatchConfig,
        ReactCurrentOwner: ReactCurrentOwner
    };
    ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
    ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        printWarning("warn", format, args);
    }
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning("error", format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== "") {
            format += "%s";
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift("Warning: " + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var didWarnStateUpdateForUnmountedComponent = {};
    function warnNoop(publicInstance, callerName) {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
        var warningKey = componentName + "." + callerName;
        if (didWarnStateUpdateForUnmountedComponent[warningKey]) return;
        error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
    }
    /**
 * This is the abstract API for an update queue.
 */ var ReactNoopUpdateQueue = {
        /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */ isMounted: function(publicInstance) {
            return false;
        },
        /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, "forceUpdate");
        },
        /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, "replaceState");
        },
        /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, "setState");
        }
    };
    var assign = Object.assign;
    var emptyObject = {};
    Object.freeze(emptyObject);
    /**
 * Base class helpers for the updating state of a component.
 */ function Component(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
    }
    Component.prototype.isReactComponent = {};
    /**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */ Component.prototype.setState = function(partialState, callback) {
        if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, "setState");
    };
    /**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */ Component.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
    };
    var deprecatedAPIs = {
        isMounted: [
            "isMounted",
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            "replaceState",
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    };
    var defineDeprecationWarning = function(methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
            get: function() {
                warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                return undefined;
            }
        });
    };
    for(var fnName in deprecatedAPIs)if (deprecatedAPIs.hasOwnProperty(fnName)) defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    function ComponentDummy() {}
    ComponentDummy.prototype = Component.prototype;
    /**
 * Convenience component with default shallow equality check for sCU.
 */ function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
    assign(pureComponentPrototype, Component.prototype);
    pureComponentPrototype.isPureReactComponent = true;
    // an immutable object with a single mutable value
    function createRef() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || "Context";
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === "number") error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === "function") return type.displayName || type.name || null;
        if (typeof type === "string") return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
            var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    function warnIfStringRefCannotBeAutoConverted(config) {
        if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, "validated", {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, "_self", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, "_source", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */ function createElement(type, config, children) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null;
        var self = null;
        var source = null;
        if (config != null) {
            if (hasValidRef(config)) {
                ref = config.ref;
                warnIfStringRefCannotBeAutoConverted(config);
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = "" + config.key;
            }
            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            if (Object.freeze) Object.freeze(childArray);
            props.children = childArray;
        } // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
        return newElement;
    }
    /**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */ function cloneElement(element, config, children) {
        if (element === null || element === undefined) throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        var propName; // Original props are copied
        var props = assign({}, element.props); // Reserved names are extracted
        var key = element.key;
        var ref = element.ref; // Self is preserved since the owner is preserved.
        var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
        // transpiler, and the original source is probably a better indicator of the
        // true owner.
        var source = element._source; // Owner will be preserved, unless ref is overridden
        var owner = element._owner;
        if (config != null) {
            if (hasValidRef(config)) {
                // Silently steal the ref from the parent.
                ref = config.ref;
                owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = "" + config.key;
            } // Remaining properties override existing props
            var defaultProps;
            if (element.type && element.type.defaultProps) defaultProps = element.type.defaultProps;
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) // Resolve default props
                props[propName] = defaultProps[propName];
                else props[propName] = config[propName];
            }
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            props.children = childArray;
        }
        return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    var SEPARATOR = ".";
    var SUBSEPARATOR = ":";
    /**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */ function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
            "=": "=0",
            ":": "=2"
        };
        var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
        });
        return "$" + escapedString;
    }
    /**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */ var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
        return text.replace(userProvidedKeyEscapeRegex, "$&/");
    }
    /**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */ function getElementKey(element, index) {
        // Do some typechecking here since we call this blindly. We want to ensure
        // that we don't block potential future ES APIs.
        if (typeof element === "object" && element !== null && element.key != null) {
            checkKeyStringCoercion(element.key);
            return escape("" + element.key);
        } // Implicit key determined by the index in the set
        return index.toString(36);
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if (type === "undefined" || type === "boolean") // All of the above are perceived as null.
        children = null;
        var invokeCallback = false;
        if (children === null) invokeCallback = true;
        else switch(type){
            case "string":
            case "number":
                invokeCallback = true;
                break;
            case "object":
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = true;
                }
        }
        if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
            // so that it's consistent if the number of children grows:
            var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray(mappedChild)) {
                var escapedChildKey = "";
                if (childKey != null) escapedChildKey = escapeUserProvidedKey(childKey) + "/";
                mapIntoArray(mappedChild, array, escapedChildKey, "", function(c) {
                    return c;
                });
            } else if (mappedChild != null) {
                if (isValidElement(mappedChild)) {
                    // The `if` statement here prevents auto-disabling of the safe
                    // coercion ESLint rule, so we must manually disable it below.
                    // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                    if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) checkKeyStringCoercion(mappedChild.key);
                    mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children
                    escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // eslint-disable-next-line react-internal/safe-string-coercion
                    escapeUserProvidedKey("" + mappedChild.key) + "/" : "") + childKey);
                }
                array.push(mappedChild);
            }
            return 1;
        }
        var child;
        var nextName;
        var subtreeCount = 0; // Count of children found in the current subtree.
        var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
        if (isArray(children)) for(var i = 0; i < children.length; i++){
            child = children[i];
            nextName = nextNamePrefix + getElementKey(child, i);
            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        }
        else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === "function") {
                var iterableChildren = children;
                // Warn about using Maps as children
                if (iteratorFn === iterableChildren.entries) {
                    if (!didWarnAboutMaps) warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                    didWarnAboutMaps = true;
                }
                var iterator = iteratorFn.call(iterableChildren);
                var step;
                var ii = 0;
                while(!(step = iterator.next()).done){
                    child = step.value;
                    nextName = nextNamePrefix + getElementKey(child, ii++);
                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                }
            } else if (type === "object") {
                // eslint-disable-next-line react-internal/safe-string-coercion
                var childrenString = String(children);
                throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). " + "If you meant to render a collection of children, use an array " + "instead.");
            }
        }
        return subtreeCount;
    }
    /**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */ function mapChildren(children, func, context) {
        if (children == null) return children;
        var result = [];
        var count = 0;
        mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    /**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */ function countChildren(children) {
        var n = 0;
        mapChildren(children, function() {
            n++; // Don't return anything
        });
        return n;
    }
    /**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */ function forEachChildren(children, forEachFunc, forEachContext) {
        mapChildren(children, function() {
            forEachFunc.apply(this, arguments); // Don't return anything.
        }, forEachContext);
    }
    /**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */ function toArray(children) {
        return mapChildren(children, function(child) {
            return child;
        }) || [];
    }
    /**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */ function onlyChild(children) {
        if (!isValidElement(children)) throw new Error("React.Children.only expected to receive a single React element child.");
        return children;
    }
    function createContext(defaultValue) {
        // TODO: Second argument used to be an optional `calculateChangedBits`
        // function. Warn to reserve for future use?
        var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            _defaultValue: null,
            _globalName: null
        };
        context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
        };
        var hasWarnedAboutUsingNestedContextConsumers = false;
        var hasWarnedAboutUsingConsumerProvider = false;
        var hasWarnedAboutDisplayNameOnConsumer = false;
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
            $$typeof: REACT_CONTEXT_TYPE,
            _context: context
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here
        Object.defineProperties(Consumer, {
            Provider: {
                get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                        hasWarnedAboutUsingConsumerProvider = true;
                        error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                },
                set: function(_Provider) {
                    context.Provider = _Provider;
                }
            },
            _currentValue: {
                get: function() {
                    return context._currentValue;
                },
                set: function(_currentValue) {
                    context._currentValue = _currentValue;
                }
            },
            _currentValue2: {
                get: function() {
                    return context._currentValue2;
                },
                set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                }
            },
            _threadCount: {
                get: function() {
                    return context._threadCount;
                },
                set: function(_threadCount) {
                    context._threadCount = _threadCount;
                }
            },
            Consumer: {
                get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                        hasWarnedAboutUsingNestedContextConsumers = true;
                        error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                }
            },
            displayName: {
                get: function() {
                    return context.displayName;
                },
                set: function(displayName) {
                    if (!hasWarnedAboutDisplayNameOnConsumer) {
                        warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                        hasWarnedAboutDisplayNameOnConsumer = true;
                    }
                }
            }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
        context.Consumer = Consumer;
        context._currentRenderer = null;
        context._currentRenderer2 = null;
        return context;
    }
    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;
    function lazyInitializer(payload) {
        if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor(); // Transition to the next state.
            // This might throw either because it's missing or throws. If so, we treat it
            // as still uninitialized and try again next time. Which is the same as what
            // happens if the ctor or any wrappers processing the ctor throws. This might
            // end up fixing it if the resolution was a concurrency bug.
            thenable.then(function(moduleObject) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var resolved = payload;
                    resolved._status = Resolved;
                    resolved._result = moduleObject;
                }
            }, function(error) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var rejected = payload;
                    rejected._status = Rejected;
                    rejected._result = error;
                }
            });
            if (payload._status === Uninitialized) {
                // In case, we're still uninitialized, then we're waiting for the thenable
                // to resolve. Set it as pending in the meantime.
                var pending = payload;
                pending._status = Pending;
                pending._result = thenable;
            }
        }
        if (payload._status === Resolved) {
            var moduleObject = payload._result;
            if (moduleObject === undefined) error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
            if (!("default" in moduleObject)) error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
            return moduleObject.default;
        } else throw payload._result;
    }
    function lazy(ctor) {
        var payload = {
            // We use these fields to store the result.
            _status: Uninitialized,
            _result: ctor
        };
        var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
        };
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes; // $FlowFixMe
        Object.defineProperties(lazyType, {
            defaultProps: {
                configurable: true,
                get: function() {
                    return defaultProps;
                },
                set: function(newDefaultProps) {
                    error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps = newDefaultProps; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, "defaultProps", {
                        enumerable: true
                    });
                }
            },
            propTypes: {
                configurable: true,
                get: function() {
                    return propTypes;
                },
                set: function(newPropTypes) {
                    error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, "propTypes", {
                        enumerable: true
                    });
                }
            }
        });
        return lazyType;
    }
    function forwardRef(render) {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
        else if (typeof render !== "function") error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
        else if (render.length !== 0 && render.length !== 2) error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
        if (render != null) {
            if (render.defaultProps != null || render.propTypes != null) error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        }
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        };
        var ownName;
        Object.defineProperty(elementType, "displayName", {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.forwardRef((props, ref) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!render.name && !render.displayName) render.displayName = name;
            }
        });
        return elementType;
    }
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
    function isValidElementType(type) {
        if (typeof type === "string" || typeof type === "function") return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function memo(type, compare) {
        if (!isValidElementType(type)) error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
        var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: compare === undefined ? null : compare
        };
        var ownName;
        Object.defineProperty(elementType, "displayName", {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.memo((props) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!type.name && !type.displayName) type.displayName = name;
            }
        });
        return elementType;
    }
    function resolveDispatcher() {
        var dispatcher = ReactCurrentDispatcher.current;
        if (dispatcher === null) error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        // intentionally don't throw our own error because this is in a hot path.
        // Also helps ensure this is inlined.
        return dispatcher;
    }
    function useContext(Context) {
        var dispatcher = resolveDispatcher();
        // TODO: add a more generic warning for invalid values.
        if (Context._context !== undefined) {
            var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
            // and nobody should be using this in existing code.
            if (realContext.Consumer === Context) error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
            else if (realContext.Provider === Context) error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return dispatcher.useContext(Context);
    }
    function useState(initialState) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useState(initialState);
    }
    function useReducer(reducer, initialArg, init) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useReducer(reducer, initialArg, init);
    }
    function useRef(initialValue) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useRef(initialValue);
    }
    function useEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useEffect(create, deps);
    }
    function useInsertionEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useInsertionEffect(create, deps);
    }
    function useLayoutEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useLayoutEffect(create, deps);
    }
    function useCallback(callback, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useCallback(callback, deps);
    }
    function useMemo(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useMemo(create, deps);
    }
    function useImperativeHandle(ref, create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useImperativeHandle(ref, create, deps);
    }
    function useDebugValue(value, formatterFn) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
    }
    function useTransition() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useTransition();
    }
    function useDeferredValue(value) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDeferredValue(value);
    }
    function useId() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useId();
    }
    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return "\n" + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher$1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, "props", {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === "string") {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = "\n" + sampleLines[s].replace(" at new ", " at "); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes("<anonymous>")) _frame = _frame.replace("<anonymous>", fn.displayName);
                            if (typeof fn === "function") componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher$1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : "";
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        if (typeof fn === "function") componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return "";
        if (typeof type === "function") return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === "string") return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return "";
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== "function") {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error("Failed %s type: %s", location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            setExtraStackFrame(stack);
        } else setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) return "\n\nCheck the render method of `" + name + "`.";
        }
        return "";
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
        }
        return "";
    }
    function getSourceInfoErrorAddendumForProps(elementProps) {
        if (elementProps !== null && elementProps !== undefined) return getSourceInfoErrorAddendum(elementProps.__source);
        return "";
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = "";
        if (element && element._owner && element._owner !== ReactCurrentOwner.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== "object") return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === "string") return;
        var propTypes;
        if (typeof type === "function") propTypes = type.propTypes;
        else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
        }
        if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error("Invalid attribute `ref` supplied to `React.Fragment`.");
            setCurrentlyValidatingElement$1(null);
        }
    }
    function createElementWithValidation(type, props, children) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = "";
            if (type === undefined || typeof type === "object" && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = "null";
            else if (isArray(type)) typeString = "array";
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
            } else typeString = typeof type;
            error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], type);
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    }
    var didWarnAboutDeprecatedCreateFactory = false;
    function createFactoryWithValidation(type) {
        var validatedFactory = createElementWithValidation.bind(null, type);
        validatedFactory.type = type;
        if (!didWarnAboutDeprecatedCreateFactory) {
            didWarnAboutDeprecatedCreateFactory = true;
            warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
        } // Legacy hook: remove it
        Object.defineProperty(validatedFactory, "type", {
            enumerable: false,
            get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                    value: type
                });
                return type;
            }
        });
        return validatedFactory;
    }
    function cloneElementWithValidation(element, props, children) {
        var newElement = cloneElement.apply(this, arguments);
        for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], newElement.type);
        validatePropTypes(newElement);
        return newElement;
    }
    function startTransition(scope, options) {
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = {};
        var currentTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition._updatedFibers = new Set();
        try {
            scope();
        } finally{
            ReactCurrentBatchConfig.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    var didWarnAboutMessageChannel = false;
    var enqueueTaskImpl = null;
    function enqueueTask(task) {
        if (enqueueTaskImpl === null) try {
            // read require off the module object to get around the bundlers.
            // we don't want them to detect a require and bundle a Node polyfill.
            var requireString = ("require" + Math.random()).slice(0, 7);
            var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
            // version of setImmediate, bypassing fake timers if any.
            enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
        } catch (_err) {
            // we're in a browser
            // we can't use regular timers because they may still be faked
            // so we try MessageChannel+postMessage instead
            enqueueTaskImpl = function(callback) {
                if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === "undefined") error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(undefined);
            };
        }
        return enqueueTaskImpl(task);
    }
    var actScopeDepth = 0;
    var didWarnNoAwaitAct = false;
    function act(callback) {
        // `act` calls can be nested, so we track the depth. This represents the
        // number of `act` scopes on the stack.
        var prevActScopeDepth = actScopeDepth;
        actScopeDepth++;
        if (ReactCurrentActQueue.current === null) // This is the outermost `act` scope. Initialize the queue. The reconciler
        // will detect the queue and use it instead of Scheduler.
        ReactCurrentActQueue.current = [];
        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
        var result;
        try {
            // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
            // set to `true` while the given callback is executed, not for updates
            // triggered during an async event, because this is how the legacy
            // implementation of `act` behaved.
            ReactCurrentActQueue.isBatchingLegacy = true;
            result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
            // which flushed updates immediately after the scope function exits, even
            // if it's an async function.
            if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                    ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                    flushActQueue(queue);
                }
            }
        } catch (error) {
            popActScope(prevActScopeDepth);
            throw error;
        } finally{
            ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
        }
        if (result !== null && typeof result === "object" && typeof result.then === "function") {
            var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
            // for it to resolve before exiting the current scope.
            var wasAwaited = false;
            var thenable = {
                then: function(resolve, reject) {
                    wasAwaited = true;
                    thenableResult.then(function(returnValue) {
                        popActScope(prevActScopeDepth);
                        if (actScopeDepth === 0) // We've exited the outermost act scope. Recursively flush the
                        // queue until there's no remaining work.
                        recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        else resolve(returnValue);
                    }, function(error) {
                        // The callback threw an error.
                        popActScope(prevActScopeDepth);
                        reject(error);
                    });
                }
            };
            if (!didWarnNoAwaitAct && typeof Promise !== "undefined") // eslint-disable-next-line no-undef
            Promise.resolve().then(function() {}).then(function() {
                if (!wasAwaited) {
                    didWarnNoAwaitAct = true;
                    error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                }
            });
            return thenable;
        } else {
            var returnValue = result; // The callback is not an async function. Exit the current scope
            // immediately, without awaiting.
            popActScope(prevActScopeDepth);
            if (actScopeDepth === 0) {
                // Exiting the outermost act scope. Flush the queue.
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                    flushActQueue(_queue);
                    ReactCurrentActQueue.current = null;
                } // Return a thenable. If the user awaits it, we'll flush again in
                // case additional work was scheduled by a microtask.
                var _thenable = {
                    then: function(resolve, reject) {
                        // Confirm we haven't re-entered another `act` scope, in case
                        // the user does something weird like await the thenable
                        // multiple times.
                        if (ReactCurrentActQueue.current === null) {
                            // Recursively flush the queue until there's no remaining work.
                            ReactCurrentActQueue.current = [];
                            recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        } else resolve(returnValue);
                    }
                };
                return _thenable;
            } else {
                // Since we're inside a nested `act` scope, the returned thenable
                // immediately resolves. The outer scope will flush the queue.
                var _thenable2 = {
                    then: function(resolve, reject) {
                        resolve(returnValue);
                    }
                };
                return _thenable2;
            }
        }
    }
    function popActScope(prevActScopeDepth) {
        if (prevActScopeDepth !== actScopeDepth - 1) error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
        actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        var queue = ReactCurrentActQueue.current;
        if (queue !== null) try {
            flushActQueue(queue);
            enqueueTask(function() {
                if (queue.length === 0) {
                    // No additional work was scheduled. Finish.
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                } else // Keep flushing work until there's none left.
                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            });
        } catch (error) {
            reject(error);
        }
        else resolve(returnValue);
    }
    var isFlushing = false;
    function flushActQueue(queue) {
        if (!isFlushing) {
            // Prevent re-entrance.
            isFlushing = true;
            var i = 0;
            try {
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(true);
                    while (callback !== null);
                }
                queue.length = 0;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                queue = queue.slice(i + 1);
                throw error;
            } finally{
                isFlushing = false;
            }
        }
    }
    var createElement$1 = createElementWithValidation;
    var cloneElement$1 = cloneElementWithValidation;
    var createFactory = createFactoryWithValidation;
    var Children = {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
    };
    exports.Children = Children;
    exports.Component = Component;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
    exports.act = act;
    exports.cloneElement = cloneElement$1;
    exports.createContext = createContext;
    exports.createElement = createElement$1;
    exports.createFactory = createFactory;
    exports.createRef = createRef;
    exports.forwardRef = forwardRef;
    exports.isValidElement = isValidElement;
    exports.lazy = lazy;
    exports.memo = memo;
    exports.startTransition = startTransition;
    exports.unstable_act = act;
    exports.useCallback = useCallback;
    exports.useContext = useContext;
    exports.useDebugValue = useDebugValue;
    exports.useDeferredValue = useDeferredValue;
    exports.useEffect = useEffect;
    exports.useId = useId;
    exports.useImperativeHandle = useImperativeHandle;
    exports.useInsertionEffect = useInsertionEffect;
    exports.useLayoutEffect = useLayoutEffect;
    exports.useMemo = useMemo;
    exports.useReducer = useReducer;
    exports.useRef = useRef;
    exports.useState = useState;
    exports.useSyncExternalStore = useSyncExternalStore;
    exports.useTransition = useTransition;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"6ZjVH":[function() {},{}],"7C4k8":[function() {},{}],"lOjBx":[function(require,module,exports) {
"use strict";
var m = require("aaccff5d309d9239");
var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
exports.createRoot = function(c, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.createRoot(c, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};
exports.hydrateRoot = function(c, h, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.hydrateRoot(c, h, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};

},{"aaccff5d309d9239":"j6uA9"}],"j6uA9":[function(require,module,exports) {
"use strict";
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error("^_^");
}
module.exports = require("b0f0e6b9e8349dac");

},{"b0f0e6b9e8349dac":"3iA9v"}],"3iA9v":[function(require,module,exports) {
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var React = require("6f0162e9ab224cd4");
    var Scheduler = require("8ad4ca65319d28a7");
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    var suppressWarning = false;
    function setSuppressWarning(newSuppressWarning) {
        suppressWarning = newSuppressWarning;
    } // In DEV, calls to console.warn and console.error get replaced
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        if (!suppressWarning) {
            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
            printWarning("warn", format, args);
        }
    }
    function error(format) {
        if (!suppressWarning) {
            for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
            printWarning("error", format, args);
        }
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== "") {
            format += "%s";
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift("Warning: " + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class
    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var ScopeComponent = 21;
    var OffscreenComponent = 22;
    var LegacyHiddenComponent = 23;
    var CacheComponent = 24;
    var TracingMarkerComponent = 25;
    // -----------------------------------------------------------------------------
    var enableClientRenderFallbackOnTextMismatch = true; // TODO: Need to review this code one more time before landing
    // the react-reconciler package.
    var enableNewReconciler = false; // Support legacy Primer support on internal FB www
    var enableLazyContextPropagation = false; // FB-only usage. The new API has different semantics.
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    var enableSuspenseAvoidThisFallback = false; // Enables unstable_avoidThisFallback feature in Fizz
    // React DOM Chopping Block
    //
    // Similar to main Chopping Block but only flags related to React DOM. These are
    // grouped because we will likely batch all of them into a single major release.
    // -----------------------------------------------------------------------------
    // Disable support for comment nodes as React DOM containers. Already disabled
    // in open source, but www codebase still relies on it. Need to remove.
    var disableCommentsAsDOMContainers = true; // Disable javascript: URL strings in href for XSS protection.
    // and client rendering, mostly to allow JSX attributes to apply to the custom
    // element's object properties instead of only HTML attributes.
    // https://github.com/facebook/react/issues/11347
    var enableCustomElementPropertySupport = false; // Disables children for <textarea> elements
    var warnAboutStringRefs = true; // -----------------------------------------------------------------------------
    // Debugging and DevTools
    // -----------------------------------------------------------------------------
    // Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
    // for an experimental timeline tool.
    var enableSchedulingProfiler = true; // Helps identify side effects in render-phase lifecycle hooks and setState
    var enableProfilerTimer = true; // Record durations for commit and passive effects phases.
    var enableProfilerCommitHooks = true; // Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".
    var allNativeEvents = new Set();
    /**
 * Mapping from registration name to event name
 */ var registrationNameDependencies = {};
    /**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */ var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + "Capture", dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        if (registrationNameDependencies[registrationName]) error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;
        if (registrationName === "onDoubleClick") possibleRegistrationNames.ondblclick = registrationName;
        for(var i = 0; i < dependencies.length; i++)allNativeEvents.add(dependencies[i]);
    }
    var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkPropStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.
    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the filter are presumed to have this type.
    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.
    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.
    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.
    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.
    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */ var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */ var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return true;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return false;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
        }
        illegalAttributeNameCache[attributeName] = true;
        error("Invalid attribute name: `%s`", attributeName);
        return false;
    }
    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null) return propertyInfo.type === RESERVED;
        if (isCustomComponentTag) return false;
        if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) return true;
        return false;
    }
    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED) return false;
        switch(typeof value){
            case "function":
            case "symbol":
                // eslint-disable-line
                return true;
            case "boolean":
                if (isCustomComponentTag) return false;
                if (propertyInfo !== null) return !propertyInfo.acceptsBooleans;
                else {
                    var prefix = name.toLowerCase().slice(0, 5);
                    return prefix !== "data-" && prefix !== "aria-";
                }
            default:
                return false;
        }
    }
    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
        if (value === null || typeof value === "undefined") return true;
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) return true;
        if (isCustomComponentTag) return false;
        if (propertyInfo !== null) switch(propertyInfo.type){
            case BOOLEAN:
                return !value;
            case OVERLOADED_BOOLEAN:
                return value === false;
            case NUMERIC:
                return isNaN(value);
            case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
        }
        return false;
    }
    function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
    }
    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
        this.attributeName = attributeName;
        this.attributeNamespace = attributeNamespace;
        this.mustUseProperty = mustUseProperty;
        this.propertyName = name;
        this.type = type;
        this.sanitizeURL = sanitizeURL;
        this.removeEmptyString = removeEmptyString;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.
    var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.
    var reservedProps = [
        "children",
        "dangerouslySetInnerHTML",
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        "defaultValue",
        "defaultChecked",
        "innerHTML",
        "suppressContentEditableWarning",
        "suppressHydrationWarning",
        "style"
    ];
    reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.
    [
        [
            "acceptCharset",
            "accept-charset"
        ],
        [
            "className",
            "class"
        ],
        [
            "htmlFor",
            "for"
        ],
        [
            "httpEquiv",
            "http-equiv"
        ]
    ].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    [
        "contentEditable",
        "draggable",
        "spellCheck",
        "value"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.
    [
        "autoReverse",
        "externalResourcesRequired",
        "focusable",
        "preserveAlpha"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
    }); // These are HTML boolean attributes.
    [
        "allowFullScreen",
        "async",
        // on the client side because the browsers are inconsistent. Instead we call focus().
        "autoFocus",
        "autoPlay",
        "controls",
        "default",
        "defer",
        "disabled",
        "disablePictureInPicture",
        "disableRemotePlayback",
        "formNoValidate",
        "hidden",
        "loop",
        "noModule",
        "noValidate",
        "open",
        "playsInline",
        "readOnly",
        "required",
        "reversed",
        "scoped",
        "seamless",
        "itemScope"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.
    [
        "checked",
        // disabled with `removeAttribute`. We have special logic for handling this.
        "multiple",
        "muted",
        "selected" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.
    [
        "capture",
        "download" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
    }); // These are HTML attributes that must be positive numbers.
    [
        "cols",
        "rows",
        "size",
        "span" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
    }); // These are HTML attributes that must be numbers.
    [
        "rowSpan",
        "start"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;
    var capitalize = function(token) {
        return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML attribute filter.
    // Some of these attributes can be hard to find. This list was created by
    // scraping the MDN documentation.
    [
        "accent-height",
        "alignment-baseline",
        "arabic-form",
        "baseline-shift",
        "cap-height",
        "clip-path",
        "clip-rule",
        "color-interpolation",
        "color-interpolation-filters",
        "color-profile",
        "color-rendering",
        "dominant-baseline",
        "enable-background",
        "fill-opacity",
        "fill-rule",
        "flood-color",
        "flood-opacity",
        "font-family",
        "font-size",
        "font-size-adjust",
        "font-stretch",
        "font-style",
        "font-variant",
        "font-weight",
        "glyph-name",
        "glyph-orientation-horizontal",
        "glyph-orientation-vertical",
        "horiz-adv-x",
        "horiz-origin-x",
        "image-rendering",
        "letter-spacing",
        "lighting-color",
        "marker-end",
        "marker-mid",
        "marker-start",
        "overline-position",
        "overline-thickness",
        "paint-order",
        "panose-1",
        "pointer-events",
        "rendering-intent",
        "shape-rendering",
        "stop-color",
        "stop-opacity",
        "strikethrough-position",
        "strikethrough-thickness",
        "stroke-dasharray",
        "stroke-dashoffset",
        "stroke-linecap",
        "stroke-linejoin",
        "stroke-miterlimit",
        "stroke-opacity",
        "stroke-width",
        "text-anchor",
        "text-decoration",
        "text-rendering",
        "underline-position",
        "underline-thickness",
        "unicode-bidi",
        "unicode-range",
        "units-per-em",
        "v-alphabetic",
        "v-hanging",
        "v-ideographic",
        "v-mathematical",
        "vector-effect",
        "vert-adv-y",
        "vert-origin-x",
        "vert-origin-y",
        "word-spacing",
        "writing-mode",
        "xmlns:xlink",
        "x-height" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // String SVG attributes with the xlink namespace.
    [
        "xlink:actuate",
        "xlink:arcrole",
        "xlink:role",
        "xlink:show",
        "xlink:title",
        "xlink:type" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/1999/xlink", false, false);
    }); // String SVG attributes with the xml namespace.
    [
        "xml:base",
        "xml:lang",
        "xml:space" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/XML/1998/namespace", false, false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.
    [
        "tabIndex",
        "crossOrigin"
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.
    var xlinkHref = "xlinkHref";
    properties[xlinkHref] = new PropertyInfoRecord("xlinkHref", STRING, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
    [
        "src",
        "href",
        "action",
        "formAction"
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
    });
    // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space
    /* eslint-disable max-len */ var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;
    function sanitizeURL(url) {
        if (!didWarn && isJavaScriptProtocol.test(url)) {
            didWarn = true;
            error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
        }
    }
    /**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */ function getValueForProperty(node, name, expected, propertyInfo) {
        if (propertyInfo.mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            return node[propertyName];
        } else {
            checkAttributeStringCoercion(expected, name);
            if (propertyInfo.sanitizeURL) // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            // eslint-disable-next-line react-internal/safe-string-coercion
            sanitizeURL("" + expected);
            var attributeName = propertyInfo.attributeName;
            var stringValue = null;
            if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === "") return true;
                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return value;
                     // eslint-disable-next-line react-internal/safe-string-coercion
                    if (value === "" + expected) return expected;
                    return value;
                }
            } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) // We had an attribute but shouldn't have had one, so read it
                // for the error message.
                return node.getAttribute(attributeName);
                if (propertyInfo.type === BOOLEAN) // If this was a boolean, it doesn't matter what the value is
                // the fact that we have it is the same as the expected.
                return expected;
                 // Even if this property uses a namespace we use getAttribute
                // because we assume its namespaced name is the same as our config.
                // To use getAttributeNS we need the local name which we don't have
                // in our config atm.
                stringValue = node.getAttribute(attributeName);
            }
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return stringValue === null ? expected : stringValue; // eslint-disable-next-line react-internal/safe-string-coercion
            else if (stringValue === "" + expected) return expected;
            else return stringValue;
        }
    }
    /**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */ function getValueForAttribute(node, name, expected, isCustomComponentTag) {
        if (!isAttributeNameSafe(name)) return;
        if (!node.hasAttribute(name)) return expected === undefined ? undefined : null;
        var value = node.getAttribute(name);
        checkAttributeStringCoercion(expected, name);
        if (value === "" + expected) return expected;
        return value;
    }
    /**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */ function setValueForProperty(node, name, value, isCustomComponentTag) {
        var propertyInfo = getPropertyInfo(name);
        if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) return;
        if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) value = null;
        if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) node.removeAttribute(_attributeName);
                else {
                    checkAttributeStringCoercion(value, name);
                    node.setAttribute(_attributeName, "" + value);
                }
            }
            return;
        }
        var mustUseProperty = propertyInfo.mustUseProperty;
        if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
                var type = propertyInfo.type;
                node[propertyName] = type === BOOLEAN ? false : "";
            } else // Contrary to `setAttribute`, object properties are properly
            // `toString`ed by IE8/9.
            node[propertyName] = value;
            return;
        } // The rest are treated as attributes with special cases.
        var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
        if (value === null) node.removeAttribute(attributeName);
        else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) // If attribute type is boolean, we know for sure it won't be an execution sink
            // and we won't require Trusted Type here.
            attributeValue = "";
            else {
                checkAttributeStringCoercion(value, attributeName);
                attributeValue = "" + value;
                if (propertyInfo.sanitizeURL) sanitizeURL(attributeValue.toString());
            }
            if (attributeNamespace) node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            else node.setAttribute(attributeName, attributeValue);
        }
    }
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for("react.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_SCOPE_TYPE = Symbol.for("react.scope");
    var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
    var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
    var REACT_CACHE_TYPE = Symbol.for("react.cache");
    var REACT_TRACING_MARKER_TYPE = Symbol.for("react.tracing_marker");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator";
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== "object") return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === "function") return maybeIterator;
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return "\n" + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, "props", {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === "string") {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = "\n" + sampleLines[s].replace(" at new ", " at "); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes("<anonymous>")) _frame = _frame.replace("<anonymous>", fn.displayName);
                            if (typeof fn === "function") componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : "";
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        if (typeof fn === "function") componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, true);
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return "";
        if (typeof type === "function") return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === "string") return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return "";
    }
    function describeFiber(fiber) {
        var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
        var source = fiber._debugSource;
        switch(fiber.tag){
            case HostComponent:
                return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
                return describeBuiltInComponentFrame("Lazy");
            case SuspenseComponent:
                return describeBuiltInComponentFrame("Suspense");
            case SuspenseListComponent:
                return describeBuiltInComponentFrame("SuspenseList");
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
                return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
                return describeFunctionComponentFrame(fiber.type.render);
            case ClassComponent:
                return describeClassComponentFrame(fiber.type);
            default:
                return "";
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = "";
            var node = workInProgress;
            do {
                info += describeFiber(node);
                node = node.return;
            }while (node);
            return info;
        } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || "Context";
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === "number") error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === "function") return type.displayName || type.name || null;
        if (typeof type === "string") return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    function getWrappedName$1(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || "";
        return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
    } // Keep in sync with shared/getComponentNameFromType
    function getContextName$1(type) {
        return type.displayName || "Context";
    }
    function getComponentNameFromFiber(fiber) {
        var tag = fiber.tag, type = fiber.type;
        switch(tag){
            case CacheComponent:
                return "Cache";
            case ContextConsumer:
                var context = type;
                return getContextName$1(context) + ".Consumer";
            case ContextProvider:
                var provider = type;
                return getContextName$1(provider._context) + ".Provider";
            case DehydratedFragment:
                return "DehydratedFragment";
            case ForwardRef:
                return getWrappedName$1(type, type.render, "ForwardRef");
            case Fragment:
                return "Fragment";
            case HostComponent:
                // Host component type is the display name (e.g. "div", "View")
                return type;
            case HostPortal:
                return "Portal";
            case HostRoot:
                return "Root";
            case HostText:
                return "Text";
            case LazyComponent:
                // Name comes from the type in this case; we don't have a tag.
                return getComponentNameFromType(type);
            case Mode:
                if (type === REACT_STRICT_MODE_TYPE) // Don't be less specific than shared/getComponentNameFromType
                return "StrictMode";
                return "Mode";
            case OffscreenComponent:
                return "Offscreen";
            case Profiler:
                return "Profiler";
            case ScopeComponent:
                return "Scope";
            case SuspenseComponent:
                return "Suspense";
            case SuspenseListComponent:
                return "SuspenseList";
            case TracingMarkerComponent:
                return "TracingMarker";
            // The display name for this tags come from the user-provided type:
            case ClassComponent:
            case FunctionComponent:
            case IncompleteClassComponent:
            case IndeterminateComponent:
            case MemoComponent:
            case SimpleMemoComponent:
                if (typeof type === "function") return type.displayName || type.name || null;
                if (typeof type === "string") return type;
                break;
        }
        return null;
    }
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var current = null;
    var isRendering = false;
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (current === null) return null;
        var owner = current._debugOwner;
        if (owner !== null && typeof owner !== "undefined") return getComponentNameFromFiber(owner);
        return null;
    }
    function getCurrentFiberStackInDev() {
        if (current === null) return "";
         // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.
        return getStackByFiberInDevAndProd(current);
    }
    function resetCurrentFiber() {
        ReactDebugCurrentFrame.getCurrentStack = null;
        current = null;
        isRendering = false;
    }
    function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
        current = fiber;
        isRendering = false;
    }
    function getCurrentFiber() {
        return current;
    }
    function setIsRendering(rendering) {
        isRendering = rendering;
    }
    // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.
    function toString(value) {
        // The coercion safety check is performed in getToStringValue().
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case "boolean":
            case "number":
            case "string":
            case "undefined":
                return value;
            case "object":
                checkFormFieldValueStringCoercion(value);
                return value;
            default:
                // function, symbol are assigned as empty strings
                return "";
        }
    }
    var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
    };
    function checkControlledValueProps(tagName, props) {
        if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
        if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isCheckable(elem) {
        var type = elem.type;
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
    }
    function getTracker(node) {
        return node._valueTracker;
    }
    function detachTracker(node) {
        node._valueTracker = null;
    }
    function getValueFromNode(node) {
        var value = "";
        if (!node) return value;
        if (isCheckable(node)) value = node.checked ? "true" : "false";
        else value = node.value;
        return value;
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? "checked" : "value";
        var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = "" + node[valueField]; // if someone has already defined a value or Safari, then bail
        // and don't track value will cause over reporting of changes,
        // but it's better then a hard failure
        // (needed for certain tests that spyOn input values and Safari)
        if (node.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") return;
        var get = descriptor.get, set = descriptor.set;
        Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
                return get.call(this);
            },
            set: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = "" + value;
                set.call(this, value);
            }
        }); // We could've passed this the first time
        // but it triggers a bug in IE11 and Edge 14/15.
        // Calling defineProperty() again should be equivalent.
        // https://github.com/facebook/react/issues/11768
        Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
        });
        var tracker = {
            getValue: function() {
                return currentValue;
            },
            setValue: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = "" + value;
            },
            stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
            }
        };
        return tracker;
    }
    function track(node) {
        if (getTracker(node)) return;
         // TODO: Once it's just Fiber we can move this to node._wrapperState
        node._valueTracker = trackValueOnNode(node);
    }
    function updateValueIfChanged(node) {
        if (!node) return false;
        var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
        // that trying again will succeed
        if (!tracker) return true;
        var lastValue = tracker.getValue();
        var nextValue = getValueFromNode(node);
        if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
        }
        return false;
    }
    function getActiveElement(doc) {
        doc = doc || (typeof document !== "undefined" ? document : undefined);
        if (typeof doc === "undefined") return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function isControlled(props) {
        var usesChecked = props.type === "checkbox" || props.type === "radio";
        return usesChecked ? props.checked != null : props.value != null;
    }
    /**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */ function getHostProps(element, props) {
        var node = element;
        var checked = props.checked;
        var hostProps = assign({}, props, {
            defaultChecked: undefined,
            defaultValue: undefined,
            value: undefined,
            checked: checked != null ? checked : node._wrapperState.initialChecked
        });
        return hostProps;
    }
    function initWrapperState(element, props) {
        checkControlledValueProps("input", props);
        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
            didWarnCheckedDefaultChecked = true;
        }
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
            didWarnValueDefaultValue = true;
        }
        var node = element;
        var defaultValue = props.defaultValue == null ? "" : props.defaultValue;
        node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
        };
    }
    function updateChecked(element, props) {
        var node = element;
        var checked = props.checked;
        if (checked != null) setValueForProperty(node, "checked", checked, false);
    }
    function updateWrapper(element, props) {
        var node = element;
        var controlled = isControlled(props);
        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnUncontrolledToControlled = true;
        }
        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnControlledToUncontrolled = true;
        }
        updateChecked(element, props);
        var value = getToStringValue(props.value);
        var type = props.type;
        if (value != null) {
            if (type === "number") {
                if (value === 0 && node.value === "" || // We explicitly want to coerce to number here if possible.
                // eslint-disable-next-line
                node.value != value) node.value = toString(value);
            } else if (node.value !== toString(value)) node.value = toString(value);
        } else if (type === "submit" || type === "reset") {
            // Submit/reset inputs need the attribute removed completely to avoid
            // blank-text buttons.
            node.removeAttribute("value");
            return;
        }
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty("value")) setDefaultValue(node, props.type, value);
        else if (props.hasOwnProperty("defaultValue")) setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) node.defaultChecked = !!props.defaultChecked;
    }
    function postMountWrapper(element, props, isHydrating) {
        var node = element; // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.
        if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
            var type = props.type;
            var isButton = type === "submit" || type === "reset"; // Avoid setting value attribute on submit/reset inputs as it overrides the
            // default value provided by the browser. See: #12872
            if (isButton && (props.value === undefined || props.value === null)) return;
            var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
            // from being lost during SSR hydration.
            if (!isHydrating) // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            {
                if (initialValue !== node.value) node.value = initialValue;
            }
            // Otherwise, the value attribute is synchronized to the property,
            // so we assign defaultValue to the same thing as the value property
            // assignment step above.
            node.defaultValue = initialValue;
        } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
        // this is needed to work around a chrome bug where setting defaultChecked
        // will sometimes influence the value of checked (even after detachment).
        // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
        // We need to temporarily unset name to avoid disrupting radio button groups.
        var name = node.name;
        if (name !== "") node.name = "";
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
        if (name !== "") node.name = name;
    }
    function restoreControlledState(element, props) {
        var node = element;
        updateWrapper(node, props);
        updateNamedCousins(node, props);
    }
    function updateNamedCousins(rootNode, props) {
        var name = props.name;
        if (props.type === "radio" && name != null) {
            var queryRoot = rootNode;
            while(queryRoot.parentNode)queryRoot = queryRoot.parentNode;
             // If `rootNode.form` was non-null, then we could try `form.elements`,
            checkAttributeStringCoercion(name, "name");
            var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]');
            for(var i = 0; i < group.length; i++){
                var otherNode = group[i];
                if (otherNode === rootNode || otherNode.form !== rootNode.form) continue;
                 // This will throw if radio buttons rendered by different copies of React
                // and the same name are rendered into the same form (same as #1939).
                // That's probably okay; we don't support it just as we don't support
                // mixing React radio buttons with non-React ones.
                var otherProps = getFiberCurrentPropsFromNode(otherNode);
                if (!otherProps) throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                 // We need update the tracked value on the named cousin since the value
                // was changed but the input saw no event or value set
                updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
                // was previously checked to update will cause it to be come re-checked
                // as appropriate.
                updateWrapper(otherNode, otherProps);
            }
        }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253
    function setDefaultValue(node, type, value) {
        if (type !== "number" || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) node.defaultValue = toString(node._wrapperState.initialValue);
            else if (node.defaultValue !== toString(value)) node.defaultValue = toString(value);
        }
    }
    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;
    var didWarnInvalidInnerHTML = false;
    /**
 * Implements an <option> host component that warns when `selected` is set.
 */ function validateProps(element, props) {
        // If a value is not provided, then the children must be simple.
        if (props.value == null) {
            if (typeof props.children === "object" && props.children !== null) React.Children.forEach(props.children, function(child) {
                if (child == null) return;
                if (typeof child === "string" || typeof child === "number") return;
                if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                }
            });
            else if (props.dangerouslySetInnerHTML != null) {
                if (!didWarnInvalidInnerHTML) {
                    didWarnInvalidInnerHTML = true;
                    error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                }
            }
        } // TODO: Remove support for `selected` in <option>.
        if (props.selected != null && !didWarnSelectedSetOnOption) {
            error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
            didWarnSelectedSetOnOption = true;
        }
    }
    function postMountWrapper$1(element, props) {
        // value="" should make a value attribute (#6219)
        if (props.value != null) element.setAttribute("value", toString(getToStringValue(props.value)));
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    var didWarnValueDefaultValue$1;
    didWarnValueDefaultValue$1 = false;
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        if (ownerName) return "\n\nCheck the render method of `" + ownerName + "`.";
        return "";
    }
    var valuePropNames = [
        "value",
        "defaultValue"
    ];
    /**
 * Validation function for `value` and `defaultValue`.
 */ function checkSelectPropTypes(props) {
        checkControlledValueProps("select", props);
        for(var i = 0; i < valuePropNames.length; i++){
            var propName = valuePropNames[i];
            if (props[propName] == null) continue;
            var propNameIsArray = isArray(props[propName]);
            if (props.multiple && !propNameIsArray) error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
            else if (!props.multiple && propNameIsArray) error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
        }
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        var options = node.options;
        if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for(var i = 0; i < selectedValues.length; i++)// Prefix to avoid chaos with special keys.
            selectedValue["$" + selectedValues[i]] = true;
            for(var _i = 0; _i < options.length; _i++){
                var selected = selectedValue.hasOwnProperty("$" + options[_i].value);
                if (options[_i].selected !== selected) options[_i].selected = selected;
                if (selected && setDefaultSelected) options[_i].defaultSelected = true;
            }
        } else {
            // Do not set `select.value` as exact behavior isn't consistent across all
            // browsers for all cases.
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for(var _i2 = 0; _i2 < options.length; _i2++){
                if (options[_i2].value === _selectedValue) {
                    options[_i2].selected = true;
                    if (setDefaultSelected) options[_i2].defaultSelected = true;
                    return;
                }
                if (defaultSelected === null && !options[_i2].disabled) defaultSelected = options[_i2];
            }
            if (defaultSelected !== null) defaultSelected.selected = true;
        }
    }
    /**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */ function getHostProps$1(element, props) {
        return assign({}, props, {
            value: undefined
        });
    }
    function initWrapperState$1(element, props) {
        var node = element;
        checkSelectPropTypes(props);
        node._wrapperState = {
            wasMultiple: !!props.multiple
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
            error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
            didWarnValueDefaultValue$1 = true;
        }
    }
    function postMountWrapper$2(element, props) {
        var node = element;
        node.multiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
    }
    function postUpdateWrapper(element, props) {
        var node = element;
        var wasMultiple = node._wrapperState.wasMultiple;
        node._wrapperState.wasMultiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (wasMultiple !== !!props.multiple) {
            // For simplicity, reapply `defaultValue` if `multiple` is toggled.
            if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
            else // Revert the select back to its default unselected state.
            updateOptions(node, !!props.multiple, props.multiple ? [] : "", false);
        }
    }
    function restoreControlledState$1(element, props) {
        var node = element;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
    }
    var didWarnValDefaultVal = false;
    /**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */ function getHostProps$2(element, props) {
        var node = element;
        if (props.dangerouslySetInnerHTML != null) throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
         // Always set children to the same thing. In IE9, the selection range will
        // get reset if `textContent` is mutated.  We could add a check in setTextContent
        // to only set the value if/when the value differs from the node value (which would
        // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
        // solution. The value can be a boolean or object so that's why it's forced
        // to be a string.
        var hostProps = assign({}, props, {
            value: undefined,
            defaultValue: undefined,
            children: toString(node._wrapperState.initialValue)
        });
        return hostProps;
    }
    function initWrapperState$2(element, props) {
        var node = element;
        checkControlledValueProps("textarea", props);
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
            didWarnValDefaultVal = true;
        }
        var initialValue = props.value; // Only bother fetching default value if we're going to use it
        if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
                error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                if (defaultValue != null) throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                if (isArray(children)) {
                    if (children.length > 1) throw new Error("<textarea> can only have at most one child.");
                    children = children[0];
                }
                defaultValue = children;
            }
            if (defaultValue == null) defaultValue = "";
            initialValue = defaultValue;
        }
        node._wrapperState = {
            initialValue: getToStringValue(initialValue)
        };
    }
    function updateWrapper$1(element, props) {
        var node = element;
        var value = getToStringValue(props.value);
        var defaultValue = getToStringValue(props.defaultValue);
        if (value != null) {
            // Cast `value` to a string to ensure the value is set correctly. While
            // browsers typically do this as necessary, jsdom doesn't.
            var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed
            if (newValue !== node.value) node.value = newValue;
            if (props.defaultValue == null && node.defaultValue !== newValue) node.defaultValue = newValue;
        }
        if (defaultValue != null) node.defaultValue = toString(defaultValue);
    }
    function postMountWrapper$3(element, props) {
        var node = element; // This is in postMount because we need access to the DOM node, which is not
        // available until after the component has mounted.
        var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
        // initial value. In IE10/IE11 there is a bug where the placeholder attribute
        // will populate textContent as well.
        // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
        if (textContent === node._wrapperState.initialValue) {
            if (textContent !== "" && textContent !== null) node.value = textContent;
        }
    }
    function restoreControlledState$2(element, props) {
        // DOM component is still mounted; update
        updateWrapper$1(element, props);
    }
    var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
    var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
    var SVG_NAMESPACE = "http://www.w3.org/2000/svg"; // Assumes there is no parent namespace.
    function getIntrinsicNamespace(type) {
        switch(type){
            case "svg":
                return SVG_NAMESPACE;
            case "math":
                return MATH_NAMESPACE;
            default:
                return HTML_NAMESPACE;
        }
    }
    function getChildNamespace(parentNamespace, type) {
        if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
        if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") // We're leaving SVG.
        return HTML_NAMESPACE;
         // By default, pass namespace below.
        return parentNamespace;
    }
    /* globals MSApp */ /**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */ var createMicrosoftUnsafeLocalFunction = function(func) {
        if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) return function(arg0, arg1, arg2, arg3) {
            MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
            });
        };
        else return func;
    };
    var reusableSVGContainer;
    /**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */ var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
        if (node.namespaceURI === SVG_NAMESPACE) {
            if (!("innerHTML" in node)) {
                // IE does not have innerHTML for SVG nodes, so instead we inject the
                // new markup in a temp node and then move the child nodes across into
                // the target node
                reusableSVGContainer = reusableSVGContainer || document.createElement("div");
                reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
                var svgNode = reusableSVGContainer.firstChild;
                while(node.firstChild)node.removeChild(node.firstChild);
                while(svgNode.firstChild)node.appendChild(svgNode.firstChild);
                return;
            }
        }
        node.innerHTML = html;
    });
    /**
 * HTML nodeType values that represent the type of the node
 */ var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */ var setTextContent = function(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    };
    // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
    var shorthandToLonghand = {
        animation: [
            "animationDelay",
            "animationDirection",
            "animationDuration",
            "animationFillMode",
            "animationIterationCount",
            "animationName",
            "animationPlayState",
            "animationTimingFunction"
        ],
        background: [
            "backgroundAttachment",
            "backgroundClip",
            "backgroundColor",
            "backgroundImage",
            "backgroundOrigin",
            "backgroundPositionX",
            "backgroundPositionY",
            "backgroundRepeat",
            "backgroundSize"
        ],
        backgroundPosition: [
            "backgroundPositionX",
            "backgroundPositionY"
        ],
        border: [
            "borderBottomColor",
            "borderBottomStyle",
            "borderBottomWidth",
            "borderImageOutset",
            "borderImageRepeat",
            "borderImageSlice",
            "borderImageSource",
            "borderImageWidth",
            "borderLeftColor",
            "borderLeftStyle",
            "borderLeftWidth",
            "borderRightColor",
            "borderRightStyle",
            "borderRightWidth",
            "borderTopColor",
            "borderTopStyle",
            "borderTopWidth"
        ],
        borderBlockEnd: [
            "borderBlockEndColor",
            "borderBlockEndStyle",
            "borderBlockEndWidth"
        ],
        borderBlockStart: [
            "borderBlockStartColor",
            "borderBlockStartStyle",
            "borderBlockStartWidth"
        ],
        borderBottom: [
            "borderBottomColor",
            "borderBottomStyle",
            "borderBottomWidth"
        ],
        borderColor: [
            "borderBottomColor",
            "borderLeftColor",
            "borderRightColor",
            "borderTopColor"
        ],
        borderImage: [
            "borderImageOutset",
            "borderImageRepeat",
            "borderImageSlice",
            "borderImageSource",
            "borderImageWidth"
        ],
        borderInlineEnd: [
            "borderInlineEndColor",
            "borderInlineEndStyle",
            "borderInlineEndWidth"
        ],
        borderInlineStart: [
            "borderInlineStartColor",
            "borderInlineStartStyle",
            "borderInlineStartWidth"
        ],
        borderLeft: [
            "borderLeftColor",
            "borderLeftStyle",
            "borderLeftWidth"
        ],
        borderRadius: [
            "borderBottomLeftRadius",
            "borderBottomRightRadius",
            "borderTopLeftRadius",
            "borderTopRightRadius"
        ],
        borderRight: [
            "borderRightColor",
            "borderRightStyle",
            "borderRightWidth"
        ],
        borderStyle: [
            "borderBottomStyle",
            "borderLeftStyle",
            "borderRightStyle",
            "borderTopStyle"
        ],
        borderTop: [
            "borderTopColor",
            "borderTopStyle",
            "borderTopWidth"
        ],
        borderWidth: [
            "borderBottomWidth",
            "borderLeftWidth",
            "borderRightWidth",
            "borderTopWidth"
        ],
        columnRule: [
            "columnRuleColor",
            "columnRuleStyle",
            "columnRuleWidth"
        ],
        columns: [
            "columnCount",
            "columnWidth"
        ],
        flex: [
            "flexBasis",
            "flexGrow",
            "flexShrink"
        ],
        flexFlow: [
            "flexDirection",
            "flexWrap"
        ],
        font: [
            "fontFamily",
            "fontFeatureSettings",
            "fontKerning",
            "fontLanguageOverride",
            "fontSize",
            "fontSizeAdjust",
            "fontStretch",
            "fontStyle",
            "fontVariant",
            "fontVariantAlternates",
            "fontVariantCaps",
            "fontVariantEastAsian",
            "fontVariantLigatures",
            "fontVariantNumeric",
            "fontVariantPosition",
            "fontWeight",
            "lineHeight"
        ],
        fontVariant: [
            "fontVariantAlternates",
            "fontVariantCaps",
            "fontVariantEastAsian",
            "fontVariantLigatures",
            "fontVariantNumeric",
            "fontVariantPosition"
        ],
        gap: [
            "columnGap",
            "rowGap"
        ],
        grid: [
            "gridAutoColumns",
            "gridAutoFlow",
            "gridAutoRows",
            "gridTemplateAreas",
            "gridTemplateColumns",
            "gridTemplateRows"
        ],
        gridArea: [
            "gridColumnEnd",
            "gridColumnStart",
            "gridRowEnd",
            "gridRowStart"
        ],
        gridColumn: [
            "gridColumnEnd",
            "gridColumnStart"
        ],
        gridColumnGap: [
            "columnGap"
        ],
        gridGap: [
            "columnGap",
            "rowGap"
        ],
        gridRow: [
            "gridRowEnd",
            "gridRowStart"
        ],
        gridRowGap: [
            "rowGap"
        ],
        gridTemplate: [
            "gridTemplateAreas",
            "gridTemplateColumns",
            "gridTemplateRows"
        ],
        listStyle: [
            "listStyleImage",
            "listStylePosition",
            "listStyleType"
        ],
        margin: [
            "marginBottom",
            "marginLeft",
            "marginRight",
            "marginTop"
        ],
        marker: [
            "markerEnd",
            "markerMid",
            "markerStart"
        ],
        mask: [
            "maskClip",
            "maskComposite",
            "maskImage",
            "maskMode",
            "maskOrigin",
            "maskPositionX",
            "maskPositionY",
            "maskRepeat",
            "maskSize"
        ],
        maskPosition: [
            "maskPositionX",
            "maskPositionY"
        ],
        outline: [
            "outlineColor",
            "outlineStyle",
            "outlineWidth"
        ],
        overflow: [
            "overflowX",
            "overflowY"
        ],
        padding: [
            "paddingBottom",
            "paddingLeft",
            "paddingRight",
            "paddingTop"
        ],
        placeContent: [
            "alignContent",
            "justifyContent"
        ],
        placeItems: [
            "alignItems",
            "justifyItems"
        ],
        placeSelf: [
            "alignSelf",
            "justifySelf"
        ],
        textDecoration: [
            "textDecorationColor",
            "textDecorationLine",
            "textDecorationStyle"
        ],
        textEmphasis: [
            "textEmphasisColor",
            "textEmphasisStyle"
        ],
        transition: [
            "transitionDelay",
            "transitionDuration",
            "transitionProperty",
            "transitionTimingFunction"
        ],
        wordWrap: [
            "overflowWrap"
        ]
    };
    /**
 * CSS properties which accept numbers but are not in units of "px".
 */ var isUnitlessNumber = {
        animationIterationCount: true,
        aspectRatio: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        columns: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridArea: true,
        gridRow: true,
        gridRowEnd: true,
        gridRowSpan: true,
        gridRowStart: true,
        gridColumn: true,
        gridColumnEnd: true,
        gridColumnSpan: true,
        gridColumnStart: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,
        // SVG-related properties
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true
    };
    /**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */ function prefixKey(prefix, key) {
        return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */ var prefixes = [
        "Webkit",
        "ms",
        "Moz",
        "O"
    ]; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.
    Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes.forEach(function(prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
        });
    });
    /**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */ function dangerousStyleValue(name, value, isCustomProperty) {
        // Note that we've removed escapeTextForBrowser() calls here since the
        // whole string will be escaped when the attribute is injected into
        // the markup. If you provide unsafe user data here they can inject
        // arbitrary CSS which may be problematic (I couldn't repro this):
        // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
        // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
        // This is not an XSS hole but instead a potential CSS injection issue
        // which has lead to a greater discussion about how we're going to
        // trust URLs moving forward. See #2115901
        var isEmpty = value == null || typeof value === "boolean" || value === "";
        if (isEmpty) return "";
        if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + "px"; // Presumes implicit 'px' suffix for unitless numbers
        checkCSSPropertyStringCoercion(value, name);
        return ("" + value).trim();
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */ function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
    }
    var warnValidStyle = function() {};
    // 'msTransform' is correct, but the other prefixes should be capitalized
    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
    var msPattern$1 = /^-ms-/;
    var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon
    var badStyleValueWithSemicolonPattern = /;\s*$/;
    var warnedStyleNames = {};
    var warnedStyleValues = {};
    var warnedForNaNValue = false;
    var warnedForInfinityValue = false;
    var camelize = function(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    };
    var warnHyphenatedStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error("Unsupported style property %s. Did you mean %s?", name, // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, "ms-")));
    };
    var warnBadVendoredStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
    };
    var warnStyleValueWithSemicolon = function(name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) return;
        warnedStyleValues[value] = true;
        error('Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ""));
    };
    var warnStyleValueIsNaN = function(name, value) {
        if (warnedForNaNValue) return;
        warnedForNaNValue = true;
        error("`NaN` is an invalid value for the `%s` css style property.", name);
    };
    var warnStyleValueIsInfinity = function(name, value) {
        if (warnedForInfinityValue) return;
        warnedForInfinityValue = true;
        error("`Infinity` is an invalid value for the `%s` css style property.", name);
    };
    warnValidStyle = function(name, value) {
        if (name.indexOf("-") > -1) warnHyphenatedStyleName(name);
        else if (badVendoredStyleNamePattern.test(name)) warnBadVendoredStyleName(name);
        else if (badStyleValueWithSemicolonPattern.test(value)) warnStyleValueWithSemicolon(name, value);
        if (typeof value === "number") {
            if (isNaN(value)) warnStyleValueIsNaN(name, value);
            else if (!isFinite(value)) warnStyleValueIsInfinity(name, value);
        }
    };
    var warnValidStyle$1 = warnValidStyle;
    /**
 * Operations for dealing with CSS properties.
 */ /**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */ function createDangerousStringForStyles(styles) {
        var serialized = "";
        var delimiter = "";
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var styleValue = styles[styleName];
            if (styleValue != null) {
                var isCustomProperty = styleName.indexOf("--") === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ";";
            }
        }
        return serialized || null;
    }
    /**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */ function setValueForStyles(node, styles) {
        var style = node.style;
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var isCustomProperty = styleName.indexOf("--") === 0;
            if (!isCustomProperty) warnValidStyle$1(styleName, styles[styleName]);
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === "float") styleName = "cssFloat";
            if (isCustomProperty) style.setProperty(styleName, styleValue);
            else style[styleName] = styleValue;
        }
    }
    function isValueEmpty(value) {
        return value == null || typeof value === "boolean" || value === "";
    }
    /**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */ function expandShorthandMap(styles) {
        var expanded = {};
        for(var key in styles){
            var longhands = shorthandToLonghand[key] || [
                key
            ];
            for(var i = 0; i < longhands.length; i++)expanded[longhands[i]] = key;
        }
        return expanded;
    }
    /**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */ function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
        if (!nextStyles) return;
        var expandedUpdates = expandShorthandMap(styleUpdates);
        var expandedStyles = expandShorthandMap(nextStyles);
        var warnedAbout = {};
        for(var key in expandedUpdates){
            var originalKey = expandedUpdates[key];
            var correctOriginalKey = expandedStyles[key];
            if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + "," + correctOriginalKey;
                if (warnedAbout[warningKey]) continue;
                warnedAbout[warningKey] = true;
                error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
            }
        }
    }
    // For HTML, certain tags should omit their close tag. We keep a list for
    // those special-case tags.
    var omittedCloseTags = {
        area: true,
        base: true,
        br: true,
        col: true,
        embed: true,
        hr: true,
        img: true,
        input: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.
    };
    // `omittedCloseTags` except that `menuitem` should still have its closing tag.
    var voidElementTags = assign({
        menuitem: true
    }, omittedCloseTags);
    var HTML = "__html";
    function assertValidProps(tag, props) {
        if (!props) return;
         // Note the use of `==` which checks for null or undefined.
        if (voidElementTags[tag]) {
            if (props.children != null || props.dangerouslySetInnerHTML != null) throw new Error(tag + " is a void element tag and must neither have `children` nor " + "use `dangerouslySetInnerHTML`.");
        }
        if (props.dangerouslySetInnerHTML != null) {
            if (props.children != null) throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            if (typeof props.dangerouslySetInnerHTML !== "object" || !(HTML in props.dangerouslySetInnerHTML)) throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
        if (props.style != null && typeof props.style !== "object") throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
    }
    function isCustomComponent(tagName, props) {
        if (tagName.indexOf("-") === -1) return typeof props.is === "string";
        switch(tagName){
            // These are reserved SVG and MathML elements.
            // We don't mind this list too much because we expect it to never grow.
            // The alternative is to track the namespace in a few places which is convoluted.
            // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return false;
            default:
                return true;
        }
    }
    // When adding attributes to the HTML or SVG allowed attribute list, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.
    var possibleStandardNames = {
        // HTML
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        // SVG
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
    };
    var ariaProperties = {
        "aria-current": 0,
        // state
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        // state
        "aria-hidden": 0,
        // state
        "aria-invalid": 0,
        // state
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        // Widget Attributes
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        // Live Region Attributes
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        // Drag-and-Drop Attributes
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        // Relationship Attributes
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
    };
    var warnedProperties = {};
    var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
    var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
    function validateProperty(tagName, name) {
        if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) return true;
        if (rARIACamel.test(name)) {
            var ariaName = "aria-" + name.slice(4).toLowerCase();
            var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (correctName == null) {
                error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== correctName) {
                error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
            }
        }
        if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (standardName == null) {
                warnedProperties[name] = true;
                return false;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== standardName) {
                error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
            }
        }
        return true;
    }
    function warnInvalidARIAProps(type, props) {
        var invalidProps = [];
        for(var key in props){
            var isValid = validateProperty(type, key);
            if (!isValid) invalidProps.push(key);
        }
        var unknownPropString = invalidProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        if (invalidProps.length === 1) error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        else if (invalidProps.length > 1) error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
    }
    function validateProperties(type, props) {
        if (isCustomComponent(type, props)) return;
        warnInvalidARIAProps(type, props);
    }
    var didWarnValueNull = false;
    function validateProperties$1(type, props) {
        if (type !== "input" && type !== "textarea" && type !== "select") return;
        if (props != null && props.value === null && !didWarnValueNull) {
            didWarnValueNull = true;
            if (type === "select" && props.multiple) error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
            else error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
        }
    }
    var validateProperty$1 = function() {};
    var warnedProperties$1 = {};
    var EVENT_NAME_REGEX = /^on./;
    var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
    var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
    var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
    validateProperty$1 = function(tagName, name, value, eventRegistry) {
        if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return true;
        var lowerCasedName = name.toLowerCase();
        if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
            error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
            warnedProperties$1[name] = true;
            return true;
        } // We can't rely on the event system being injected on the server.
        if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name)) return true;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null) {
                error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
            }
            if (EVENT_NAME_REGEX.test(name)) {
                error("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (EVENT_NAME_REGEX.test(name)) {
            // If no event plugins have been injected, we are in a server environment.
            // So we can't tell if the event name is correct for sure, but we can filter
            // out known bad ones like `onclick`. We can't suggest a specific replacement though.
            if (INVALID_EVENT_NAME_REGEX.test(name)) error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
            warnedProperties$1[name] = true;
            return true;
        } // Let the ARIA attribute hook validate ARIA attributes
        if (rARIA$1.test(name) || rARIACamel$1.test(name)) return true;
        if (lowerCasedName === "innerhtml") {
            error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === "aria") {
            error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === "is" && value !== null && value !== undefined && typeof value !== "string") {
            error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === "number" && isNaN(value)) {
            error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
            warnedProperties$1[name] = true;
            return true;
        }
        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name) {
                error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (!isReserved && name !== lowerCasedName) {
            // Unknown attributes should have lowercase casing since that's how they
            // will be cased anyway with server rendering.
            error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            if (value) error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
            else error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
            warnedProperties$1[name] = true;
            return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props
        if (isReserved) return true;
         // Warn when a known attribute is a bad type
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            warnedProperties$1[name] = true;
            return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop
        if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
            error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
            warnedProperties$1[name] = true;
            return true;
        }
        return true;
    };
    var warnUnknownProperties = function(type, props, eventRegistry) {
        var unknownProps = [];
        for(var key in props){
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            if (!isValid) unknownProps.push(key);
        }
        var unknownPropString = unknownProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        if (unknownProps.length === 1) error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        else if (unknownProps.length > 1) error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
    };
    function validateProperties$2(type, props, eventRegistry) {
        if (isCustomComponent(type, props)) return;
        warnUnknownProperties(type, props, eventRegistry);
    }
    var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
    var IS_NON_DELEGATED = 2;
    var IS_CAPTURE_PHASE = 4;
    // set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
    // we call willDeferLaterForLegacyFBSupport, thus not bailing out
    // will result in endless cycles like an infinite loop.
    // We also don't want to defer during event replaying.
    var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
    // This exists to avoid circular dependency between ReactDOMEventReplaying
    // and DOMPluginEventSystem.
    var currentReplayingEvent = null;
    function setReplayingEvent(event) {
        if (currentReplayingEvent !== null) error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = event;
    }
    function resetReplayingEvent() {
        if (currentReplayingEvent === null) error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = null;
    }
    function isReplayingEvent(event) {
        return event === currentReplayingEvent;
    }
    /**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */ function getEventTarget(nativeEvent) {
        // Fallback to nativeEvent.srcElement for IE9
        // https://github.com/facebook/react/issues/12506
        var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963
        if (target.correspondingUseElement) target = target.correspondingUseElement;
         // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
        // @see http://www.quirksmode.org/js/events_properties.html
        return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }
    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;
    function restoreStateOfTarget(target) {
        // We perform this translation at the end of the event loop so that we
        // always receive the correct fiber here
        var internalInstance = getInstanceFromNode(target);
        if (!internalInstance) // Unmounted
        return;
        if (typeof restoreImpl !== "function") throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.
        if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
        }
    }
    function setRestoreImplementation(impl) {
        restoreImpl = impl;
    }
    function enqueueStateRestore(target) {
        if (restoreTarget) {
            if (restoreQueue) restoreQueue.push(target);
            else restoreQueue = [
                target
            ];
        } else restoreTarget = target;
    }
    function needsStateRestore() {
        return restoreTarget !== null || restoreQueue !== null;
    }
    function restoreStateIfNeeded() {
        if (!restoreTarget) return;
        var target = restoreTarget;
        var queuedTargets = restoreQueue;
        restoreTarget = null;
        restoreQueue = null;
        restoreStateOfTarget(target);
        if (queuedTargets) for(var i = 0; i < queuedTargets.length; i++)restoreStateOfTarget(queuedTargets[i]);
    }
    // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults
    var batchedUpdatesImpl = function(fn, bookkeeping) {
        return fn(bookkeeping);
    };
    var flushSyncImpl = function() {};
    var isInsideEventHandler = false;
    function finishEventHandler() {
        // Here we wait until all updates have propagated, which is important
        // when using controlled components within layers:
        // https://github.com/facebook/react/issues/1698
        // Then we restore state of any controlled component.
        var controlledComponentsHavePendingUpdates = needsStateRestore();
        if (controlledComponentsHavePendingUpdates) {
            // If a controlled event was fired, we may need to restore the state of
            // the DOM node back to the controlled value. This is necessary when React
            // bails out of the update without touching the DOM.
            // TODO: Restore state in the microtask, after the discrete updates flush,
            // instead of early flushing them here.
            flushSyncImpl();
            restoreStateIfNeeded();
        }
    }
    function batchedUpdates(fn, a, b) {
        if (isInsideEventHandler) // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
        isInsideEventHandler = true;
        try {
            return batchedUpdatesImpl(fn, a, b);
        } finally{
            isInsideEventHandler = false;
            finishEventHandler();
        }
    } // TODO: Replace with flushSync
    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
        batchedUpdatesImpl = _batchedUpdatesImpl;
        flushSyncImpl = _flushSyncImpl;
    }
    function isInteractive(tag) {
        return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
    }
    function shouldPreventMouseEvent(name, type, props) {
        switch(name){
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
                return !!(props.disabled && isInteractive(type));
            default:
                return false;
        }
    }
    /**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */ function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (stateNode === null) // Work in progress (ex: onload events in incremental mode).
        return null;
        var props = getFiberCurrentPropsFromNode(stateNode);
        if (props === null) // Work in progress.
        return null;
        var listener = props[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        if (listener && typeof listener !== "function") throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        return listener;
    }
    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
    if (canUseDOM) try {
        var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value
        Object.defineProperty(options, "passive", {
            get: function() {
                passiveBrowserEventsSupported = true;
            }
        });
        window.addEventListener("test", options, options);
        window.removeEventListener("test", options, options);
    } catch (e) {
        passiveBrowserEventsSupported = false;
    }
    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
            func.apply(context, funcArgs);
        } catch (error) {
            this.onError(error);
        }
    }
    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
    // In DEV mode, we swap out invokeGuardedCallback for a special version
    // that plays more nicely with the browser's DevTools. The idea is to preserve
    // "Pause on exceptions" behavior. Because React wraps all user-provided
    // functions in invokeGuardedCallback, and the production version of
    // invokeGuardedCallback uses a try-catch, all user exceptions are treated
    // like caught exceptions, and the DevTools won't pause unless the developer
    // takes the extra step of enabling pause on caught exceptions. This is
    // unintuitive, though, because even though React has caught the error, from
    // the developer's perspective, the error is uncaught.
    //
    // To preserve the expected "Pause on exceptions" behavior, we don't use a
    // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
    // DOM node, and call the user-provided callback from inside an event handler
    // for that fake event. If the callback throws, the error is "captured" using
    // a global event handler. But because the error happens in a different
    // event loop context, it does not interrupt the normal program flow.
    // Effectively, this gives us try-catch behavior without actually using
    // try-catch. Neat!
    // Check that the browser supports the APIs we need to implement our special
    // DEV version of invokeGuardedCallback
    if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
        var fakeNode = document.createElement("react");
        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
            // If document doesn't exist we know for sure we will crash in this method
            // when we call document.createEvent(). However this can cause confusing
            // errors: https://github.com/facebook/create-react-app/issues/3482
            // So we preemptively throw with a better message instead.
            if (typeof document === "undefined" || document === null) throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
            var evt = document.createEvent("Event");
            var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
            // set this to true at the beginning, then set it to false right after
            // calling the function. If the function errors, `didError` will never be
            // set to false. This strategy works even if the browser is flaky and
            // fails to call our global error handler, because it doesn't rely on
            // the error event at all.
            var didError = true; // Keeps track of the value of window.event so that we can reset it
            // during the callback to let user code access window.event in the
            // browsers that support it.
            var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
            // dispatching: https://github.com/facebook/react/issues/13688
            var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
            function restoreAfterDispatch() {
                // We immediately remove the callback from event listeners so that
                // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                // nested call would trigger the fake event handlers of any call higher
                // in the stack.
                fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
                // window.event assignment in both IE <= 10 as they throw an error
                // "Member not found" in strict mode, and in Firefox which does not
                // support window.event.
                if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) window.event = windowEvent;
            } // Create an event handler for our fake event. We will synchronously
            // dispatch our fake event using `dispatchEvent`. Inside the handler, we
            // call the user-provided callback.
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            function callCallback() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
            } // Create a global error event handler. We use this to capture the value
            // that was thrown. It's possible that this error handler will fire more
            // than once; for example, if non-React code also calls `dispatchEvent`
            // and a handler for that event throws. We should be resilient to most of
            // those cases. Even if our error event handler fires more than once, the
            // last error event is always used. If the callback actually does error,
            // we know that the last error event is the correct one, because it's not
            // possible for anything else to have happened in between our callback
            // erroring and the code that follows the `dispatchEvent` call below. If
            // the callback doesn't error, but the error event was fired, we know to
            // ignore it because `didError` will be false, as described above.
            var error; // Use this to track whether the error event is ever called.
            var didSetError = false;
            var isCrossOriginError = false;
            function handleWindowError(event) {
                error = event.error;
                didSetError = true;
                if (error === null && event.colno === 0 && event.lineno === 0) isCrossOriginError = true;
                if (event.defaultPrevented) {
                    // Some other error handler has prevented default.
                    // Browsers silence the error report if this happens.
                    // We'll remember this to later decide whether to log it or not.
                    if (error != null && typeof error === "object") try {
                        error._suppressLogging = true;
                    } catch (inner) {}
                }
            } // Create a fake event type.
            var evtType = "react-" + (name ? name : "invokeguardedcallback"); // Attach our event handlers
            window.addEventListener("error", handleWindowError);
            fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
            // errors, it will trigger our global error handler.
            evt.initEvent(evtType, false, false);
            fakeNode.dispatchEvent(evt);
            if (windowEventDescriptor) Object.defineProperty(window, "event", windowEventDescriptor);
            if (didCall && didError) {
                if (!didSetError) // The callback errored, but the error event never fired.
                // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the \"Pause on exceptions\" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.");
                else if (isCrossOriginError) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                this.onError(error);
            } // Remove our event listeners
            window.removeEventListener("error", handleWindowError);
            if (!didCall) {
                // Something went really wrong, and our event was not dispatched.
                // https://github.com/facebook/react/issues/16734
                // https://github.com/facebook/react/issues/16585
                // Fall back to the production implementation.
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
            }
        };
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.
    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
        onError: function(error) {
            hasError = true;
            caughtError = error;
        }
    };
    /**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        hasError = false;
        caughtError = null;
        invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        invokeGuardedCallback.apply(this, arguments);
        if (hasError) {
            var error = clearCaughtError();
            if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error;
            }
        }
    }
    /**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */ function rethrowCaughtError() {
        if (hasRethrowError) {
            var error = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error;
        }
    }
    function hasCaughtError() {
        return hasError;
    }
    function clearCaughtError() {
        if (hasError) {
            var error = caughtError;
            hasError = false;
            caughtError = null;
            return error;
        } else throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    /**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */ function get(key) {
        return key._reactInternals;
    }
    function has(key) {
        return key._reactInternals !== undefined;
    }
    function set(key, value) {
        key._reactInternals = value;
    }
    // Don't change these two values. They're used by React Dev Tools.
    var NoFlags = /*                      */ 0;
    var PerformedWork = /*                */ 1; // You can change the rest (and add more).
    var Placement = /*                    */ 2;
    var Update = /*                       */ 4;
    var ChildDeletion = /*                */ 16;
    var ContentReset = /*                 */ 32;
    var Callback = /*                     */ 64;
    var DidCapture = /*                   */ 128;
    var ForceClientRender = /*            */ 256;
    var Ref = /*                          */ 512;
    var Snapshot = /*                     */ 1024;
    var Passive = /*                      */ 2048;
    var Hydrating = /*                    */ 4096;
    var Visibility = /*                   */ 8192;
    var StoreConsistency = /*             */ 16384;
    var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)
    var HostEffectMask = /*               */ 32767; // These are not really side effects, but we still reuse this field.
    var Incomplete = /*                   */ 32768;
    var ShouldCapture = /*                */ 65536;
    var ForceUpdateForLegacySuspense = /* */ 131072;
    var Forked = /*                       */ 1048576; // Static tags describe aspects of a fiber that are not specific to a render,
    // e.g. a fiber uses a passive effect (even if there are no updates on this particular render).
    // This enables us to defer more work in the unmount case,
    // since we can defer traversing the tree during layout to look for Passive effects,
    // and instead rely on the static flag as a signal that there may be cleanup work.
    var RefStatic = /*                    */ 2097152;
    var LayoutStatic = /*                 */ 4194304;
    var PassiveStatic = /*                */ 8388608; // These flags allow us to traverse to fibers that have effects on mount
    // without traversing the entire tree after every commit for
    // double invoking
    var MountLayoutDev = /*               */ 16777216;
    var MountPassiveDev = /*              */ 33554432; // Groups of flags that are used in the commit phase to skip over trees that
    // don't contain effects, by checking subtreeFlags.
    var BeforeMutationMask = // flag logic (see #20043)
    Update | Snapshot | 0;
    var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
    var LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask
    var PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.
    // This allows certain concepts to persist without recalculating them,
    // e.g. whether a subtree contains passive effects or portals.
    var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    function getNearestMountedFiber(fiber) {
        var node = fiber;
        var nearestMounted = fiber;
        if (!fiber.alternate) {
            // If there is no alternate, this might be a new tree that isn't inserted
            // yet. If it is, then it will have a pending insertion effect on it.
            var nextNode = node;
            do {
                node = nextNode;
                if ((node.flags & (Placement | Hydrating)) !== NoFlags) // This is an insertion or in-progress hydration. The nearest possible
                // mounted fiber is the parent but we need to continue to figure out
                // if that one is still mounted.
                nearestMounted = node.return;
                nextNode = node.return;
            }while (nextNode);
        } else while(node.return)node = node.return;
        if (node.tag === HostRoot) // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
         // If we didn't hit the root, that means that we're in an disconnected tree
        // that has been unmounted.
        return null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
                var current = fiber.alternate;
                if (current !== null) suspenseState = current.memoizedState;
            }
            if (suspenseState !== null) return suspenseState.dehydrated;
        }
        return null;
    }
    function getContainerFromFiber(fiber) {
        return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }
    function isFiberMounted(fiber) {
        return getNearestMountedFiber(fiber) === fiber;
    }
    function isMounted(component) {
        var owner = ReactCurrentOwner.current;
        if (owner !== null && owner.tag === ClassComponent) {
            var ownerFiber = owner;
            var instance = ownerFiber.stateNode;
            if (!instance._warnedAboutRefsInRender) error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || "A component");
            instance._warnedAboutRefsInRender = true;
        }
        var fiber = get(component);
        if (!fiber) return false;
        return getNearestMountedFiber(fiber) === fiber;
    }
    function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber) throw new Error("Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            // If there is no alternate, then we only need to check if it is mounted.
            var nearestMounted = getNearestMountedFiber(fiber);
            if (nearestMounted === null) throw new Error("Unable to find node on an unmounted component.");
            if (nearestMounted !== fiber) return null;
            return fiber;
        } // If we have two possible branches, we'll walk backwards up to the root
        // to see what path the root points to. On the way we may hit one of the
        // special cases and we'll deal with them.
        var a = fiber;
        var b = alternate;
        while(true){
            var parentA = a.return;
            if (parentA === null) break;
            var parentB = parentA.alternate;
            if (parentB === null) {
                // There is no alternate. This is an unusual case. Currently, it only
                // happens when a Suspense component is hidden. An extra fragment fiber
                // is inserted in between the Suspense fiber and its children. Skip
                // over this extra fragment fiber and proceed to the next parent.
                var nextParent = parentA.return;
                if (nextParent !== null) {
                    a = b = nextParent;
                    continue;
                } // If there's no parent, we're at the root.
                break;
            } // If both copies of the parent fiber point to the same child, we can
            // assume that the child is current. This happens when we bailout on low
            // priority: the bailed out fiber's child reuses the current child.
            if (parentA.child === parentB.child) {
                var child = parentA.child;
                while(child){
                    if (child === a) {
                        // We've determined that A is the current branch.
                        assertIsMounted(parentA);
                        return fiber;
                    }
                    if (child === b) {
                        // We've determined that B is the current branch.
                        assertIsMounted(parentA);
                        return alternate;
                    }
                    child = child.sibling;
                } // We should never have an alternate for any mounting node. So the only
                // way this could possibly happen is if this was unmounted, if at all.
                throw new Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) {
                // The return pointer of A and the return pointer of B point to different
                // fibers. We assume that return pointers never criss-cross, so A must
                // belong to the child set of A.return, and B must belong to the child
                // set of B.return.
                a = parentA;
                b = parentB;
            } else {
                // The return pointers point to the same fiber. We'll have to use the
                // default, slow path: scan the child sets of each parent alternate to see
                // which child belongs to which set.
                //
                // Search parent A's child set
                var didFindChild = false;
                var _child = parentA.child;
                while(_child){
                    if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    // Search parent B's child set
                    _child = parentB.child;
                    while(_child){
                        if (_child === a) {
                            didFindChild = true;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = true;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (a.alternate !== b) throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        } // If the root is not a host container, we're in a disconnected tree. I.e.
        // unmounted.
        if (a.tag !== HostRoot) throw new Error("Unable to find node on an unmounted component.");
        if (a.stateNode.current === a) // We've determined that A is the current branch.
        return fiber;
         // Otherwise B has to be current branch.
        return alternate;
    }
    function findCurrentHostFiber(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
    }
    function findCurrentHostFiberImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            var match = findCurrentHostFiberImpl(child);
            if (match !== null) return match;
            child = child.sibling;
        }
        return null;
    }
    function findCurrentHostFiberWithNoPortals(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
    }
    function findCurrentHostFiberWithNoPortalsImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            if (child.tag !== HostPortal) {
                var match = findCurrentHostFiberWithNoPortalsImpl(child);
                if (match !== null) return match;
            }
            child = child.sibling;
        }
        return null;
    }
    // This module only exists as an ESM wrapper around the external CommonJS
    var scheduleCallback = Scheduler.unstable_scheduleCallback;
    var cancelCallback = Scheduler.unstable_cancelCallback;
    var shouldYield = Scheduler.unstable_shouldYield;
    var requestPaint = Scheduler.unstable_requestPaint;
    var now = Scheduler.unstable_now;
    var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
    var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
    var NormalPriority = Scheduler.unstable_NormalPriority;
    var LowPriority = Scheduler.unstable_LowPriority;
    var IdlePriority = Scheduler.unstable_IdlePriority;
    // this doesn't actually exist on the scheduler, but it *does*
    // on scheduler/unstable_mock, which we'll need for internal testing
    var unstable_yieldValue = Scheduler.unstable_yieldValue;
    var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;
    var rendererID = null;
    var injectedHook = null;
    var injectedProfilingHooks = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
    function injectInternals(internals) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") // No DevTools
        return false;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
        if (!hook.supportsFiber) {
            error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            return true;
        }
        try {
            if (enableSchedulingProfiler) // Conditionally inject these hooks only if Timeline profiler is supported by this build.
            // This gives DevTools a way to feature detect that isn't tied to version number
            // (since profiling and timeline are controlled by different feature flags).
            internals = assign({}, internals, {
                getLaneLabelMap: getLaneLabelMap,
                injectProfilingHooks: injectProfilingHooks
            });
            rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.
            injectedHook = hook;
        } catch (err) {
            error("React instrumentation encountered an error: %s.", err);
        }
        if (hook.checkDCE) // This is the real DevTools.
        return true;
        else // This is likely a hook installed by Fast Refresh runtime.
        return false;
    }
    function onScheduleRoot(root, children) {
        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") try {
            injectedHook.onScheduleFiberRoot(rendererID, root, children);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function onCommitRoot(root, eventPriority) {
        if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") try {
            var didError = (root.current.flags & DidCapture) === DidCapture;
            if (enableProfilerTimer) {
                var schedulerPriority;
                switch(eventPriority){
                    case DiscreteEventPriority:
                        schedulerPriority = ImmediatePriority;
                        break;
                    case ContinuousEventPriority:
                        schedulerPriority = UserBlockingPriority;
                        break;
                    case DefaultEventPriority:
                        schedulerPriority = NormalPriority;
                        break;
                    case IdleEventPriority:
                        schedulerPriority = IdlePriority;
                        break;
                    default:
                        schedulerPriority = NormalPriority;
                        break;
                }
                injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);
            } else injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function onPostCommitRoot(root) {
        if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === "function") try {
            injectedHook.onPostCommitFiberRoot(rendererID, root);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function onCommitUnmount(fiber) {
        if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") try {
            injectedHook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
        if (typeof unstable_yieldValue === "function") {
            // We're in a test because Scheduler.unstable_yieldValue only exists
            // in SchedulerMock. To reduce the noise in strict mode tests,
            // suppress warnings and disable scheduler yielding during the double render
            unstable_setDisableYieldValue(newIsStrictMode);
            setSuppressWarning(newIsStrictMode);
        }
        if (injectedHook && typeof injectedHook.setStrictMode === "function") try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    } // Profiler API hooks
    function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
    }
    function getLaneLabelMap() {
        var map = new Map();
        var lane = 1;
        for(var index = 0; index < TotalLanes; index++){
            var label = getLabelForLane(lane);
            map.set(lane, label);
            lane *= 2;
        }
        return map;
    }
    function markCommitStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === "function") injectedProfilingHooks.markCommitStarted(lanes);
    }
    function markCommitStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === "function") injectedProfilingHooks.markCommitStopped();
    }
    function markComponentRenderStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === "function") injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
    function markComponentRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === "function") injectedProfilingHooks.markComponentRenderStopped();
    }
    function markComponentPassiveEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === "function") injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
    }
    function markComponentPassiveEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === "function") injectedProfilingHooks.markComponentPassiveEffectMountStopped();
    }
    function markComponentPassiveEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === "function") injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
    }
    function markComponentPassiveEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === "function") injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
    }
    function markComponentLayoutEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === "function") injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
    }
    function markComponentLayoutEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === "function") injectedProfilingHooks.markComponentLayoutEffectMountStopped();
    }
    function markComponentLayoutEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === "function") injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
    }
    function markComponentLayoutEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === "function") injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
    }
    function markComponentErrored(fiber, thrownValue, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === "function") injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
    }
    function markComponentSuspended(fiber, wakeable, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === "function") injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
    }
    function markLayoutEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === "function") injectedProfilingHooks.markLayoutEffectsStarted(lanes);
    }
    function markLayoutEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === "function") injectedProfilingHooks.markLayoutEffectsStopped();
    }
    function markPassiveEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === "function") injectedProfilingHooks.markPassiveEffectsStarted(lanes);
    }
    function markPassiveEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === "function") injectedProfilingHooks.markPassiveEffectsStopped();
    }
    function markRenderStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === "function") injectedProfilingHooks.markRenderStarted(lanes);
    }
    function markRenderYielded() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === "function") injectedProfilingHooks.markRenderYielded();
    }
    function markRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === "function") injectedProfilingHooks.markRenderStopped();
    }
    function markRenderScheduled(lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === "function") injectedProfilingHooks.markRenderScheduled(lane);
    }
    function markForceUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === "function") injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
    }
    function markStateUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === "function") injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
    var NoMode = /*                         */ 0; // TODO: Remove ConcurrentMode by reading from the root tag instead
    var ConcurrentMode = /*                 */ 1;
    var ProfileMode = /*                    */ 2;
    var StrictLegacyMode = /*               */ 8;
    var StrictEffectsMode = /*              */ 16;
    // TODO: This is pretty well supported by browsers. Maybe we can drop it.
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.
    // Based on:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(x) {
        var asUint = x >>> 0;
        if (asUint === 0) return 32;
        return 31 - (log(asUint) / LN2 | 0) | 0;
    }
    // If those values are changed that package should be rebuilt and redeployed.
    var TotalLanes = 31;
    var NoLanes = /*                        */ 0;
    var NoLane = /*                          */ 0;
    var SyncLane = /*                        */ 1;
    var InputContinuousHydrationLane = /*    */ 2;
    var InputContinuousLane = /*             */ 4;
    var DefaultHydrationLane = /*            */ 8;
    var DefaultLane = /*                     */ 16;
    var TransitionHydrationLane = /*                */ 32;
    var TransitionLanes = /*                       */ 4194240;
    var TransitionLane1 = /*                        */ 64;
    var TransitionLane2 = /*                        */ 128;
    var TransitionLane3 = /*                        */ 256;
    var TransitionLane4 = /*                        */ 512;
    var TransitionLane5 = /*                        */ 1024;
    var TransitionLane6 = /*                        */ 2048;
    var TransitionLane7 = /*                        */ 4096;
    var TransitionLane8 = /*                        */ 8192;
    var TransitionLane9 = /*                        */ 16384;
    var TransitionLane10 = /*                       */ 32768;
    var TransitionLane11 = /*                       */ 65536;
    var TransitionLane12 = /*                       */ 131072;
    var TransitionLane13 = /*                       */ 262144;
    var TransitionLane14 = /*                       */ 524288;
    var TransitionLane15 = /*                       */ 1048576;
    var TransitionLane16 = /*                       */ 2097152;
    var RetryLanes = /*                            */ 130023424;
    var RetryLane1 = /*                             */ 4194304;
    var RetryLane2 = /*                             */ 8388608;
    var RetryLane3 = /*                             */ 16777216;
    var RetryLane4 = /*                             */ 33554432;
    var RetryLane5 = /*                             */ 67108864;
    var SomeRetryLane = RetryLane1;
    var SelectiveHydrationLane = /*          */ 134217728;
    var NonIdleLanes = /*                          */ 268435455;
    var IdleHydrationLane = /*               */ 268435456;
    var IdleLane = /*                        */ 536870912;
    var OffscreenLane = /*                   */ 1073741824; // This function is used for the experimental timeline (react-devtools-timeline)
    // It should be kept in sync with the Lanes values above.
    function getLabelForLane(lane) {
        if (lane & SyncLane) return "Sync";
        if (lane & InputContinuousHydrationLane) return "InputContinuousHydration";
        if (lane & InputContinuousLane) return "InputContinuous";
        if (lane & DefaultHydrationLane) return "DefaultHydration";
        if (lane & DefaultLane) return "Default";
        if (lane & TransitionHydrationLane) return "TransitionHydration";
        if (lane & TransitionLanes) return "Transition";
        if (lane & RetryLanes) return "Retry";
        if (lane & SelectiveHydrationLane) return "SelectiveHydration";
        if (lane & IdleHydrationLane) return "IdleHydration";
        if (lane & IdleLane) return "Idle";
        if (lane & OffscreenLane) return "Offscreen";
    }
    var NoTimestamp = -1;
    var nextTransitionLane = TransitionLane1;
    var nextRetryLane = RetryLane1;
    function getHighestPriorityLanes(lanes) {
        switch(getHighestPriorityLane(lanes)){
            case SyncLane:
                return SyncLane;
            case InputContinuousHydrationLane:
                return InputContinuousHydrationLane;
            case InputContinuousLane:
                return InputContinuousLane;
            case DefaultHydrationLane:
                return DefaultHydrationLane;
            case DefaultLane:
                return DefaultLane;
            case TransitionHydrationLane:
                return TransitionHydrationLane;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return lanes & TransitionLanes;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                return lanes & RetryLanes;
            case SelectiveHydrationLane:
                return SelectiveHydrationLane;
            case IdleHydrationLane:
                return IdleHydrationLane;
            case IdleLane:
                return IdleLane;
            case OffscreenLane:
                return OffscreenLane;
            default:
                error("Should have found matching lanes. This is a bug in React.");
                return lanes;
        }
    }
    function getNextLanes(root, wipLanes) {
        // Early bailout if there's no pending work left.
        var pendingLanes = root.pendingLanes;
        if (pendingLanes === NoLanes) return NoLanes;
        var nextLanes = NoLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,
        // even if the work is suspended.
        var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
        if (nonIdlePendingLanes !== NoLanes) {
            var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
            if (nonIdleUnblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
            else {
                var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                if (nonIdlePingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
            }
        } else {
            // The only remaining work is Idle.
            var unblockedLanes = pendingLanes & ~suspendedLanes;
            if (unblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(unblockedLanes);
            else if (pingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(pingedLanes);
        }
        if (nextLanes === NoLanes) // This should only be reachable if we're suspended
        // TODO: Consider warning in this path if a fallback timer is not scheduled.
        return NoLanes;
         // If we're already in the middle of a render, switching lanes will interrupt
        // it and we'll lose our progress. We should only do this if the new lanes are
        // higher priority.
        if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
        // bother waiting until the root is complete.
        (wipLanes & suspendedLanes) === NoLanes) {
            var nextLane = getHighestPriorityLane(nextLanes);
            var wipLane = getHighestPriorityLane(wipLanes);
            if (// one. This works because the bits decrease in priority as you go left.
            nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The
            // only difference between default updates and transition updates is that
            // default updates do not support refresh transitions.
            nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) // Keep working on the existing in-progress tree. Do not interrupt.
            return wipLanes;
        }
        if ((nextLanes & InputContinuousLane) !== NoLanes) // When updates are sync by default, we entangle continuous priority updates
        // and default updates, so they render in the same batch. The only reason
        // they use separate lanes is because continuous updates should interrupt
        // transitions, but default updates should not.
        nextLanes |= pendingLanes & DefaultLane;
         // Check for entangled lanes and add them to the batch.
        //
        // A lane is said to be entangled with another when it's not allowed to render
        // in a batch that does not also include the other lane. Typically we do this
        // when multiple updates have the same source, and we only want to respond to
        // the most recent event from that source.
        //
        // Note that we apply entanglements *after* checking for partial work above.
        // This means that if a lane is entangled during an interleaved event while
        // it's already rendering, we won't interrupt it. This is intentional, since
        // entanglement is usually "best effort": we'll try our best to render the
        // lanes in the same batch, but it's not worth throwing out partially
        // completed work in order to do it.
        // TODO: Reconsider this. The counter-argument is that the partial work
        // represents an intermediate state, which we don't want to show to the user.
        // And by spending extra time finishing it, we're increasing the amount of
        // time it takes to show the final state, which is what they are actually
        // waiting for.
        //
        // For those exceptions where entanglement is semantically important, like
        // useMutableSource, we should ensure that there is no partial work at the
        // time we apply the entanglement.
        var entangledLanes = root.entangledLanes;
        if (entangledLanes !== NoLanes) {
            var entanglements = root.entanglements;
            var lanes = nextLanes & entangledLanes;
            while(lanes > 0){
                var index = pickArbitraryLaneIndex(lanes);
                var lane = 1 << index;
                nextLanes |= entanglements[index];
                lanes &= ~lane;
            }
        }
        return nextLanes;
    }
    function getMostRecentEventTime(root, lanes) {
        var eventTimes = root.eventTimes;
        var mostRecentEventTime = NoTimestamp;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var eventTime = eventTimes[index];
            if (eventTime > mostRecentEventTime) mostRecentEventTime = eventTime;
            lanes &= ~lane;
        }
        return mostRecentEventTime;
    }
    function computeExpirationTime(lane, currentTime) {
        switch(lane){
            case SyncLane:
            case InputContinuousHydrationLane:
            case InputContinuousLane:
                // User interactions should expire slightly more quickly.
                //
                // NOTE: This is set to the corresponding constant as in Scheduler.js.
                // When we made it larger, a product metric in www regressed, suggesting
                // there's a user interaction that's being starved by a series of
                // synchronous updates. If that theory is correct, the proper solution is
                // to fix the starvation. However, this scenario supports the idea that
                // expiration times are an important safeguard when starvation
                // does happen.
                return currentTime + 250;
            case DefaultHydrationLane:
            case DefaultLane:
            case TransitionHydrationLane:
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return currentTime + 5000;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                // TODO: Retries should be allowed to expire if they are CPU bound for
                // too long, but when I made this change it caused a spike in browser
                // crashes. There must be some other underlying bug; not super urgent but
                // ideally should figure out why and fix it. Unfortunately we don't have
                // a repro for the crashes, only detected via production metrics.
                return NoTimestamp;
            case SelectiveHydrationLane:
            case IdleHydrationLane:
            case IdleLane:
            case OffscreenLane:
                // Anything idle priority or lower should never expire.
                return NoTimestamp;
            default:
                error("Should have found matching lanes. This is a bug in React.");
                return NoTimestamp;
        }
    }
    function markStarvedLanesAsExpired(root, currentTime) {
        // TODO: This gets called every time we yield. We can optimize by storing
        // the earliest expiration time on the root. Then use that to quickly bail out
        // of this function.
        var pendingLanes = root.pendingLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes;
        var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
        // expiration time. If so, we'll assume the update is being starved and mark
        // it as expired to force it to finish.
        var lanes = pendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var expirationTime = expirationTimes[index];
            if (expirationTime === NoTimestamp) // Found a pending lane with no expiration time. If it's not suspended, or
            // if it's pinged, assume it's CPU-bound. Compute a new expiration time
            // using the current time.
            {
                if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) // Assumes timestamps are monotonically increasing.
                expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else if (expirationTime <= currentTime) // This lane expired
            root.expiredLanes |= lane;
            lanes &= ~lane;
        }
    } // This returns the highest priority pending lanes regardless of whether they
    // are suspended.
    function getHighestPriorityPendingLanes(root) {
        return getHighestPriorityLanes(root.pendingLanes);
    }
    function getLanesToRetrySynchronouslyOnError(root) {
        var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;
        if (everythingButOffscreen !== NoLanes) return everythingButOffscreen;
        if (everythingButOffscreen & OffscreenLane) return OffscreenLane;
        return NoLanes;
    }
    function includesSyncLane(lanes) {
        return (lanes & SyncLane) !== NoLanes;
    }
    function includesNonIdleWork(lanes) {
        return (lanes & NonIdleLanes) !== NoLanes;
    }
    function includesOnlyRetries(lanes) {
        return (lanes & RetryLanes) === lanes;
    }
    function includesOnlyNonUrgentLanes(lanes) {
        var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
        return (lanes & UrgentLanes) === NoLanes;
    }
    function includesOnlyTransitions(lanes) {
        return (lanes & TransitionLanes) === lanes;
    }
    function includesBlockingLane(root, lanes) {
        var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
        return (lanes & SyncDefaultLanes) !== NoLanes;
    }
    function includesExpiredLane(root, lanes) {
        // This is a separate check from includesBlockingLane because a lane can
        // expire after a render has already started.
        return (lanes & root.expiredLanes) !== NoLanes;
    }
    function isTransitionLane(lane) {
        return (lane & TransitionLanes) !== NoLanes;
    }
    function claimNextTransitionLane() {
        // Cycle through the lanes, assigning each new transition to the next lane.
        // In most cases, this means every transition gets its own lane, until we
        // run out of lanes and cycle back to the beginning.
        var lane = nextTransitionLane;
        nextTransitionLane <<= 1;
        if ((nextTransitionLane & TransitionLanes) === NoLanes) nextTransitionLane = TransitionLane1;
        return lane;
    }
    function claimNextRetryLane() {
        var lane = nextRetryLane;
        nextRetryLane <<= 1;
        if ((nextRetryLane & RetryLanes) === NoLanes) nextRetryLane = RetryLane1;
        return lane;
    }
    function getHighestPriorityLane(lanes) {
        return lanes & -lanes;
    }
    function pickArbitraryLane(lanes) {
        // This wrapper function gets inlined. Only exists so to communicate that it
        // doesn't matter which bit is selected; you can pick any bit without
        // affecting the algorithms where its used. Here I'm using
        // getHighestPriorityLane because it requires the fewest operations.
        return getHighestPriorityLane(lanes);
    }
    function pickArbitraryLaneIndex(lanes) {
        return 31 - clz32(lanes);
    }
    function laneToIndex(lane) {
        return pickArbitraryLaneIndex(lane);
    }
    function includesSomeLane(a, b) {
        return (a & b) !== NoLanes;
    }
    function isSubsetOfLanes(set, subset) {
        return (set & subset) === subset;
    }
    function mergeLanes(a, b) {
        return a | b;
    }
    function removeLanes(set, subset) {
        return set & ~subset;
    }
    function intersectLanes(a, b) {
        return a & b;
    } // Seems redundant, but it changes the type from a single lane (used for
    // updates) to a group of lanes (used for flushing work).
    function laneToLanes(lane) {
        return lane;
    }
    function higherPriorityLane(a, b) {
        // This works because the bit ranges decrease in priority as you go left.
        return a !== NoLane && a < b ? a : b;
    }
    function createLaneMap(initial) {
        // Intentionally pushing one by one.
        // https://v8.dev/blog/elements-kinds#avoid-creating-holes
        var laneMap = [];
        for(var i = 0; i < TotalLanes; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated(root, updateLane, eventTime) {
        root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update
        // could unblock them. Clear the suspended lanes so that we can try rendering
        // them again.
        //
        // TODO: We really only need to unsuspend only lanes that are in the
        // `subtreeLanes` of the updated fiber, or the update lanes of the return
        // path. This would exclude suspended updates in an unrelated sibling tree,
        // since there's no way for this update to unblock it.
        //
        // We don't do this if the incoming update is idle, because we never process
        // idle updates until after all the regular updates have finished; there's no
        // way it could unblock a transition.
        if (updateLane !== IdleLane) {
            root.suspendedLanes = NoLanes;
            root.pingedLanes = NoLanes;
        }
        var eventTimes = root.eventTimes;
        var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
        // recent event, and we assume time is monotonically increasing.
        eventTimes[index] = eventTime;
    }
    function markRootSuspended(root, suspendedLanes) {
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.
        var expirationTimes = root.expirationTimes;
        var lanes = suspendedLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootPinged(root, pingedLanes, eventTime) {
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
    }
    function markRootFinished(root, remainingLanes) {
        var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
        root.pendingLanes = remainingLanes; // Let's try everything again
        root.suspendedLanes = NoLanes;
        root.pingedLanes = NoLanes;
        root.expiredLanes &= remainingLanes;
        root.mutableReadLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        var entanglements = root.entanglements;
        var eventTimes = root.eventTimes;
        var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work
        var lanes = noLongerPendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            entanglements[index] = NoLanes;
            eventTimes[index] = NoTimestamp;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootEntangled(root, entangledLanes) {
        // In addition to entangling each of the given lanes with each other, we also
        // have to consider _transitive_ entanglements. For each lane that is already
        // entangled with *any* of the given lanes, that lane is now transitively
        // entangled with *all* the given lanes.
        //
        // Translated: If C is entangled with A, then entangling A with B also
        // entangles C with B.
        //
        // If this is hard to grasp, it might help to intentionally break this
        // function and look at the tests that fail in ReactTransition-test.js. Try
        // commenting out one of the conditions below.
        var rootEntangledLanes = root.entangledLanes |= entangledLanes;
        var entanglements = root.entanglements;
        var lanes = rootEntangledLanes;
        while(lanes){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            if (lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?
            entanglements[index] & entangledLanes) entanglements[index] |= entangledLanes;
            lanes &= ~lane;
        }
    }
    function getBumpedLaneForHydration(root, renderLanes) {
        var renderLane = getHighestPriorityLane(renderLanes);
        var lane;
        switch(renderLane){
            case InputContinuousLane:
                lane = InputContinuousHydrationLane;
                break;
            case DefaultLane:
                lane = DefaultHydrationLane;
                break;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                lane = TransitionHydrationLane;
                break;
            case IdleLane:
                lane = IdleHydrationLane;
                break;
            default:
                // Everything else is already either a hydration lane, or shouldn't
                // be retried at a hydration lane.
                lane = NoLane;
                break;
        } // Check if the lane we chose is suspended. If so, that indicates that we
        // already attempted and failed to hydrate at that level. Also check if we're
        // already rendering that lane, which is rare but could happen.
        if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) // Give up trying to hydrate and fall back to client render.
        return NoLane;
        return lane;
    }
    function addFiberToLanesMap(root, fiber, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            updaters.add(fiber);
            lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        var memoizedUpdaters = root.memoizedUpdaters;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            if (updaters.size > 0) {
                updaters.forEach(function(fiber) {
                    var alternate = fiber.alternate;
                    if (alternate === null || !memoizedUpdaters.has(alternate)) memoizedUpdaters.add(fiber);
                });
                updaters.clear();
            }
            lanes &= ~lane;
        }
    }
    function getTransitionsForLanes(root, lanes) {
        return null;
    }
    var DiscreteEventPriority = SyncLane;
    var ContinuousEventPriority = InputContinuousLane;
    var DefaultEventPriority = DefaultLane;
    var IdleEventPriority = IdleLane;
    var currentUpdatePriority = NoLane;
    function getCurrentUpdatePriority() {
        return currentUpdatePriority;
    }
    function setCurrentUpdatePriority(newPriority) {
        currentUpdatePriority = newPriority;
    }
    function runWithPriority(priority, fn) {
        var previousPriority = currentUpdatePriority;
        try {
            currentUpdatePriority = priority;
            return fn();
        } finally{
            currentUpdatePriority = previousPriority;
        }
    }
    function higherEventPriority(a, b) {
        return a !== 0 && a < b ? a : b;
    }
    function lowerEventPriority(a, b) {
        return a === 0 || a > b ? a : b;
    }
    function isHigherEventPriority(a, b) {
        return a !== 0 && a < b;
    }
    function lanesToEventPriority(lanes) {
        var lane = getHighestPriorityLane(lanes);
        if (!isHigherEventPriority(DiscreteEventPriority, lane)) return DiscreteEventPriority;
        if (!isHigherEventPriority(ContinuousEventPriority, lane)) return ContinuousEventPriority;
        if (includesNonIdleWork(lane)) return DefaultEventPriority;
        return IdleEventPriority;
    }
    // This is imported by the event replaying implementation in React DOM. It's
    // in a separate file to break a circular dependency between the renderer and
    // the reconciler.
    function isRootDehydrated(root) {
        var currentState = root.current.memoizedState;
        return currentState.isDehydrated;
    }
    var _attemptSynchronousHydration;
    function setAttemptSynchronousHydration(fn) {
        _attemptSynchronousHydration = fn;
    }
    function attemptSynchronousHydration(fiber) {
        _attemptSynchronousHydration(fiber);
    }
    var attemptContinuousHydration;
    function setAttemptContinuousHydration(fn) {
        attemptContinuousHydration = fn;
    }
    var attemptHydrationAtCurrentPriority;
    function setAttemptHydrationAtCurrentPriority(fn) {
        attemptHydrationAtCurrentPriority = fn;
    }
    var getCurrentUpdatePriority$1;
    function setGetCurrentUpdatePriority(fn) {
        getCurrentUpdatePriority$1 = fn;
    }
    var attemptHydrationAtPriority;
    function setAttemptHydrationAtPriority(fn) {
        attemptHydrationAtPriority = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that
    // has this definition built-in.
    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.
    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.
    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.
    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.
    var queuedExplicitHydrationTargets = [];
    var discreteReplayableEvents = [
        "mousedown",
        "mouseup",
        "touchcancel",
        "touchend",
        "touchstart",
        "auxclick",
        "dblclick",
        "pointercancel",
        "pointerdown",
        "pointerup",
        "dragend",
        "dragstart",
        "drop",
        "compositionend",
        "compositionstart",
        "keydown",
        "keypress",
        "keyup",
        "input",
        "textInput",
        "copy",
        "cut",
        "paste",
        "click",
        "change",
        "contextmenu",
        "reset",
        "submit"
    ];
    function isDiscreteEventThatRequiresHydration(eventType) {
        return discreteReplayableEvents.indexOf(eventType) > -1;
    }
    function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        return {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        };
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case "focusin":
            case "focusout":
                queuedFocus = null;
                break;
            case "dragenter":
            case "dragleave":
                queuedDrag = null;
                break;
            case "mouseover":
            case "mouseout":
                queuedMouse = null;
                break;
            case "pointerover":
            case "pointerout":
                var pointerId = nativeEvent.pointerId;
                queuedPointers.delete(pointerId);
                break;
            case "gotpointercapture":
            case "lostpointercapture":
                var _pointerId = nativeEvent.pointerId;
                queuedPointerCaptures.delete(_pointerId);
                break;
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
                var _fiber2 = getInstanceFromNode(blockedOn);
                if (_fiber2 !== null) // Attempt to increase the priority of this target.
                attemptContinuousHydration(_fiber2);
            }
            return queuedEvent;
        } // If we have already queued this exact event, then it's because
        // the different event systems have different DOM event listeners.
        // We can accumulate the flags, and the targetContainers, and
        // store a single event to be replayed.
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        var targetContainers = existingQueuedEvent.targetContainers;
        if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) targetContainers.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // These set relatedTarget to null because the replayed event will be treated as if we
        // moved from outside the window (no target) onto the target once it hydrates.
        // Instead of mutating we could clone the event.
        switch(domEventName){
            case "focusin":
                var focusEvent = nativeEvent;
                queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                return true;
            case "dragenter":
                var dragEvent = nativeEvent;
                queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                return true;
            case "mouseover":
                var mouseEvent = nativeEvent;
                queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                return true;
            case "pointerover":
                var pointerEvent = nativeEvent;
                var pointerId = pointerEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                return true;
            case "gotpointercapture":
                var _pointerEvent = nativeEvent;
                var _pointerId2 = _pointerEvent.pointerId;
                queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                return true;
        }
        return false;
    } // Check if this target is unblocked. Returns true if it's unblocked.
    function attemptExplicitHydrationTarget(queuedTarget) {
        // TODO: This function shares a lot of logic with findInstanceBlockingEvent.
        // Try to unify them. It's a bit tricky since it would require two return
        // values.
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) {
                        // We're blocked on hydrating this boundary.
                        // Increase its priority.
                        queuedTarget.blockedOn = instance;
                        attemptHydrationAtPriority(queuedTarget.priority, function() {
                            attemptHydrationAtCurrentPriority(nearestMounted);
                        });
                        return;
                    }
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) {
                        queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
                        // a root other than sync.
                        return;
                    }
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function queueExplicitHydrationTarget(target) {
        // TODO: This will read the priority if it's dispatched by the React
        // event system but not native events. Should read window.event.type, like
        // we do for updates (getCurrentEventPriority).
        var updatePriority = getCurrentUpdatePriority$1();
        var queuedTarget = {
            blockedOn: null,
            target: target,
            priority: updatePriority
        };
        var i = 0;
        for(; i < queuedExplicitHydrationTargets.length; i++){
            // Stop once we hit the first target with lower priority than
            if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) break;
        }
        queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);
        if (i === 0) attemptExplicitHydrationTarget(queuedTarget);
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (queuedEvent.blockedOn !== null) return false;
        var targetContainers = queuedEvent.targetContainers;
        while(targetContainers.length > 0){
            var targetContainer = targetContainers[0];
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn === null) {
                var nativeEvent = queuedEvent.nativeEvent;
                var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                setReplayingEvent(nativeEventClone);
                nativeEvent.target.dispatchEvent(nativeEventClone);
                resetReplayingEvent();
            } else {
                // We're still blocked. Try again later.
                var _fiber3 = getInstanceFromNode(nextBlockedOn);
                if (_fiber3 !== null) attemptContinuousHydration(_fiber3);
                queuedEvent.blockedOn = nextBlockedOn;
                return false;
            } // This target container was successfully dispatched. Try the next.
            targetContainers.shift();
        }
        return true;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        if (attemptReplayContinuousQueuedEvent(queuedEvent)) map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = false;
        if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) queuedFocus = null;
        if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) queuedDrag = null;
        if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) queuedMouse = null;
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
                hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
                // now unblocked. This first might not actually be unblocked yet.
                // We could check it early to avoid scheduling an unnecessary callback.
                Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
        }
    }
    function retryIfBlockedOn(unblocked) {
        // Mark anything that was blocked on this as no longer blocked
        // and eligible for a replay.
        if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
            // worth it because we expect very few discrete events to queue up and once
            // we are actually fully unblocked it will be fast to replay them.
            for(var i = 1; i < queuedDiscreteEvents.length; i++){
                var queuedEvent = queuedDiscreteEvents[i];
                if (queuedEvent.blockedOn === unblocked) queuedEvent.blockedOn = null;
            }
        }
        if (queuedFocus !== null) scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        if (queuedDrag !== null) scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        if (queuedMouse !== null) scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        var unblock = function(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        };
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++){
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) queuedTarget.blockedOn = null;
        }
        while(queuedExplicitHydrationTargets.length > 0){
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) break;
            else {
                attemptExplicitHydrationTarget(nextExplicitTarget);
                if (nextExplicitTarget.blockedOn === null) // We're unblocked.
                queuedExplicitHydrationTargets.shift();
            }
        }
    }
    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig; // TODO: can we stop exporting these?
    var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
    // We'd like to remove this but it's not clear if this is safe.
    function setEnabled(enabled) {
        _enabled = !!enabled;
    }
    function isEnabled() {
        return _enabled;
    }
    function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
        var eventPriority = getEventPriority(domEventName);
        var listenerWrapper;
        switch(eventPriority){
            case DiscreteEventPriority:
                listenerWrapper = dispatchDiscreteEvent;
                break;
            case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
            case DefaultEventPriority:
            default:
                listenerWrapper = dispatchEvent;
                break;
        }
        return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(DiscreteEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(ContinuousEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (!_enabled) return;
        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
    }
    function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
        if (blockedOn === null) {
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
            clearIfContinuousEvent(domEventName, nativeEvent);
            return;
        }
        if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
            nativeEvent.stopPropagation();
            return;
        } // We need to clear only if we didn't queue because
        // queueing is accumulative.
        clearIfContinuousEvent(domEventName, nativeEvent);
        if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
            while(blockedOn !== null){
                var fiber = getInstanceFromNode(blockedOn);
                if (fiber !== null) attemptSynchronousHydration(fiber);
                var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
                if (nextBlockedOn === null) dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                if (nextBlockedOn === blockedOn) break;
                blockedOn = nextBlockedOn;
            }
            if (blockedOn !== null) nativeEvent.stopPropagation();
            return;
        } // This is not replayable so we'll invoke it but without a target,
        // in case the event system needs to trace it.
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
    }
    var return_targetInst = null; // Returns a SuspenseInstance or Container if it's blocked.
    // The return_targetInst field above is conceptually part of the return value.
    function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // TODO: Warn if _enabled is false.
        return_targetInst = null;
        var nativeEventTarget = getEventTarget(nativeEvent);
        var targetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) // This tree has been unmounted already. Dispatch without a target.
            targetInst = null;
            else {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) // Queue the event to be replayed later. Abort dispatching since we
                    // don't want this event dispatched twice through the event system.
                    // TODO: If this is the first discrete event in the queue. Schedule an increased
                    // priority for this boundary.
                    return instance;
                     // This shouldn't happen, something went wrong but to avoid blocking
                    // the whole system, dispatch the event without a target.
                    // TODO: Warn.
                    targetInst = null;
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) // If this happens during a replay something went wrong and it might block
                    // the whole system.
                    return getContainerFromFiber(nearestMounted);
                    targetInst = null;
                } else if (nearestMounted !== targetInst) // If we get an event (ex: img onload) before committing that
                // component's mount, ignore it for now (that is, treat it as if it was an
                // event on a non-React tree). We might also consider queueing events and
                // dispatching them after the mount.
                targetInst = null;
            }
        }
        return_targetInst = targetInst; // We're not blocked on anything.
        return null;
    }
    function getEventPriority(domEventName) {
        switch(domEventName){
            // Used by SimpleEventPlugin:
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            // eslint-disable-next-line no-fallthrough
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            // eslint-disable-next-line no-fallthrough
            case "beforeblur":
            case "afterblur":
            // eslint-disable-next-line no-fallthrough
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
                return DiscreteEventPriority;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "toggle":
            case "touchmove":
            case "wheel":
            // eslint-disable-next-line no-fallthrough
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
                return ContinuousEventPriority;
            case "message":
                // We might be in the Scheduler callback.
                // Eventually this mechanism will be replaced by a check
                // of the current priority on the native scheduler.
                var schedulerPriority = getCurrentPriorityLevel();
                switch(schedulerPriority){
                    case ImmediatePriority:
                        return DiscreteEventPriority;
                    case UserBlockingPriority:
                        return ContinuousEventPriority;
                    case NormalPriority:
                    case LowPriority:
                        // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
                        return DefaultEventPriority;
                    case IdlePriority:
                        return IdleEventPriority;
                    default:
                        return DefaultEventPriority;
                }
            default:
                return DefaultEventPriority;
        }
    }
    function addEventBubbleListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, false);
        return listener;
    }
    function addEventCaptureListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, true);
        return listener;
    }
    function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            capture: true,
            passive: passive
        });
        return listener;
    }
    function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            passive: passive
        });
        return listener;
    }
    /**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */ var root = null;
    var startText = null;
    var fallbackText = null;
    function initialize(nativeEventTarget) {
        root = nativeEventTarget;
        startText = getText();
        return true;
    }
    function reset() {
        root = null;
        startText = null;
        fallbackText = null;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start;
        var startValue = startText;
        var startLength = startValue.length;
        var end;
        var endValue = getText();
        var endLength = endValue.length;
        for(start = 0; start < startLength; start++){
            if (startValue[start] !== endValue[start]) break;
        }
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd; end++){
            if (startValue[startLength - end] !== endValue[endLength - end]) break;
        }
        var sliceTail = end > 1 ? 1 - end : undefined;
        fallbackText = endValue.slice(start, sliceTail);
        return fallbackText;
    }
    function getText() {
        if ("value" in root) return root.value;
        return root.textContent;
    }
    /**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */ function getEventCharCode(nativeEvent) {
        var charCode;
        var keyCode = nativeEvent.keyCode;
        if ("charCode" in nativeEvent) {
            charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.
            if (charCode === 0 && keyCode === 13) charCode = 13;
        } else // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
         // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
        // report Enter as charCode 10 when ctrl is pressed.
        if (charCode === 10) charCode = 13;
         // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
        // Must not discard the (non-)printable Enter-key.
        if (charCode >= 32 || charCode === 13) return charCode;
        return 0;
    }
    function functionThatReturnsTrue() {
        return true;
    }
    function functionThatReturnsFalse() {
        return false;
    } // This is intentionally a factory so that we have different returned constructors.
    // If we had a single constructor, it would be megamorphic and engines would deopt.
    function createSyntheticEvent(Interface) {
        /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */ function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var _propName in Interface){
                if (!Interface.hasOwnProperty(_propName)) continue;
                var normalize = Interface[_propName];
                if (normalize) this[_propName] = normalize(nativeEvent);
                else this[_propName] = nativeEvent[_propName];
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) this.isDefaultPrevented = functionThatReturnsTrue;
            else this.isDefaultPrevented = functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) return;
                if (event.preventDefault) event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.returnValue !== "unknown") event.returnValue = false;
                this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) return;
                if (event.stopPropagation) event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.cancelBubble !== "unknown") // The ChangeEventPlugin registers a "propertychange" event for
                // IE. This event does not support bubbling or cancelling, and
                // any references to cancelBubble throw "Member not found".  A
                // typeof check of "unknown" circumvents this issue (and is also
                // IE specific).
                event.cancelBubble = true;
                this.isPropagationStopped = functionThatReturnsTrue;
            },
            /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */ persist: function() {},
            /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */ isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    };
    var SyntheticEvent = createSyntheticEvent(EventInterface);
    var UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
    });
    var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
    var lastMovementX;
    var lastMovementY;
    var lastMouseEvent;
    function updateMouseMovementPolyfillState(event) {
        if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === "mousemove") {
                lastMovementX = event.screenX - lastMouseEvent.screenX;
                lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
                lastMovementX = 0;
                lastMovementY = 0;
            }
            lastMouseEvent = event;
        }
    }
    /**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
        },
        movementX: function(event) {
            if ("movementX" in event) return event.movementX;
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
        },
        movementY: function(event) {
            if ("movementY" in event) return event.movementY;
             // Don't need to call updateMouseMovementPolyfillState() here
            // because it's guaranteed to have already run when movementX
            // was copied.
            return lastMovementY;
        }
    });
    var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
    /**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
    });
    var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
    /**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
    });
    var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */ var AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */ var ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
        }
    });
    var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */ var CompositionEventInterface = assign({}, EventInterface, {
        data: 0
    });
    var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */ // Happens to share the same list for now.
    var SyntheticInputEvent = SyntheticCompositionEvent;
    /**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var normalizeKey = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
    };
    /**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var translateToKey = {
        "8": "Backspace",
        "9": "Tab",
        "12": "Clear",
        "13": "Enter",
        "16": "Shift",
        "17": "Control",
        "18": "Alt",
        "19": "Pause",
        "20": "CapsLock",
        "27": "Escape",
        "32": " ",
        "33": "PageUp",
        "34": "PageDown",
        "35": "End",
        "36": "Home",
        "37": "ArrowLeft",
        "38": "ArrowUp",
        "39": "ArrowRight",
        "40": "ArrowDown",
        "45": "Insert",
        "46": "Delete",
        "112": "F1",
        "113": "F2",
        "114": "F3",
        "115": "F4",
        "116": "F5",
        "117": "F6",
        "118": "F7",
        "119": "F8",
        "120": "F9",
        "121": "F10",
        "122": "F11",
        "123": "F12",
        "144": "NumLock",
        "145": "ScrollLock",
        "224": "Meta"
    };
    /**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */ function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
            // Normalize inconsistent values reported by browsers due to
            // implementations of a working draft specification.
            // FireFox implements `key` but returns `MozPrintableKey` for all
            // printable characters (normalized to `Unidentified`), ignore it.
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== "Unidentified") return key;
        } // Browser does not implement `key`, polyfill as much of it as we can.
        if (nativeEvent.type === "keypress") {
            var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
            // thus be captured by `keypress`, no other non-printable key should.
            return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
        }
        if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || "Unidentified";
        return "";
    }
    /**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */ var modifierKeyToProp = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.
    function modifierStateGetter(keyArg) {
        var syntheticEvent = this;
        var nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState) return nativeEvent.getModifierState(keyArg);
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : false;
    }
    function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
    }
    /**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var KeyboardEventInterface = assign({}, UIEventInterface, {
        key: getEventKey,
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function(event) {
            // `charCode` is the result of a KeyPress event and represents the value of
            // the actual printable character.
            // KeyPress is deprecated, but its replacement is not yet final and not
            // implemented in any major browser. Only KeyPress has charCode.
            if (event.type === "keypress") return getEventCharCode(event);
            return 0;
        },
        keyCode: function(event) {
            // `keyCode` is the result of a KeyDown/Up event and represents the value of
            // physical keyboard key.
            // The actual meaning of the value depends on the users' keyboard layout
            // which cannot be detected. Assuming that it is a US keyboard layout
            // provides a surprisingly accurate mapping for US and European users.
            // Due to this, it is left to the user to implement at this time.
            if (event.type === "keydown" || event.type === "keyup") return event.keyCode;
            return 0;
        },
        which: function(event) {
            // `which` is an alias for either `keyCode` or `charCode` depending on the
            // type of the event.
            if (event.type === "keypress") return getEventCharCode(event);
            if (event.type === "keydown" || event.type === "keyup") return event.keyCode;
            return 0;
        }
    });
    var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
    /**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */ var PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    });
    var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
    /**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */ var TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    });
    var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */ var TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
    /**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: 0
    });
    var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
    var END_KEYCODES = [
        9,
        13,
        27,
        32
    ]; // Tab, Return, Esc, Space
    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && "CompositionEvent" in window;
    var documentMode = null;
    if (canUseDOM && "documentMode" in document) documentMode = document.documentMode;
     // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.
    var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.
    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
    function registerEvents() {
        registerTwoPhaseEvent("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste"
        ]);
        registerTwoPhaseEvent("onCompositionEnd", [
            "compositionend",
            "focusout",
            "keydown",
            "keypress",
            "keyup",
            "mousedown"
        ]);
        registerTwoPhaseEvent("onCompositionStart", [
            "compositionstart",
            "focusout",
            "keydown",
            "keypress",
            "keyup",
            "mousedown"
        ]);
        registerTwoPhaseEvent("onCompositionUpdate", [
            "compositionupdate",
            "focusout",
            "keydown",
            "keypress",
            "keyup",
            "mousedown"
        ]);
    } // Track whether we've ever handled a keypress on the space key.
    var hasSpaceKeypress = false;
    /**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */ function isKeypressCommand(nativeEvent) {
        return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
        !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
 * Translate native top level events into event types.
 */ function getCompositionEventType(domEventName) {
        switch(domEventName){
            case "compositionstart":
                return "onCompositionStart";
            case "compositionend":
                return "onCompositionEnd";
            case "compositionupdate":
                return "onCompositionUpdate";
        }
    }
    /**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */ function isFallbackCompositionStart(domEventName, nativeEvent) {
        return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
 * Does our fallback mode think that this event is the end of composition?
 */ function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case "keyup":
                // Command keys insert or clear IME input.
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case "keydown":
                // Expect IME keyCode on each keydown. If we get any other
                // code we must have exited earlier.
                return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
                // Events are not possible without cancelling IME.
                return true;
            default:
                return false;
        }
    }
    /**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */ function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        if (typeof detail === "object" && "data" in detail) return detail.data;
        return null;
    }
    /**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */ function isUsingKoreanIME(nativeEvent) {
        return nativeEvent.locale === "ko";
    } // Track the current IME composition status, if any.
    var isComposing = false;
    /**
 * @return {?object} A SyntheticCompositionEvent.
 */ function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var eventType;
        var fallbackData;
        if (canUseCompositionEvent) eventType = getCompositionEventType(domEventName);
        else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) eventType = "onCompositionStart";
        } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) eventType = "onCompositionEnd";
        if (!eventType) return null;
        if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            // The current composition is stored statically and must not be
            // overwritten while composition continues.
            if (!isComposing && eventType === "onCompositionStart") isComposing = initialize(nativeEventTarget);
            else if (eventType === "onCompositionEnd") {
                if (isComposing) fallbackData = getData();
            }
        }
        var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
        if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            if (fallbackData) // Inject data generated from fallback path into the synthetic event.
            // This matches the property of native CompositionEventInterface.
            event.data = fallbackData;
            else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) event.data = customData;
            }
        }
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case "compositionend":
                return getDataFromCustomEvent(nativeEvent);
            case "keypress":
                /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */ var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;
            case "textInput":
                // Record the characters to be added to the DOM.
                var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
                // it at the keypress level and bail immediately. Android Chrome
                // doesn't give us keycodes, so we need to ignore it.
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) return null;
                return chars;
            default:
                // For other native event types, do nothing.
                return null;
        }
    }
    /**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */ function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        // If we are currently composing (IME) and using a fallback to do so,
        // try to extract the composed characters from the fallback object.
        // If composition event is available, we extract a string only at
        // compositionevent, otherwise extract it at fallback events.
        if (isComposing) {
            if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
            }
            return null;
        }
        switch(domEventName){
            case "paste":
                // If a paste event occurs after a keypress, throw out the input
                // chars. Paste events should not lead to BeforeInput events.
                return null;
            case "keypress":
                /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */ if (!isKeypressCommand(nativeEvent)) {
                    // IE fires the `keypress` event when a user types an emoji via
                    // Touch keyboard of Windows.  In such a case, the `char` property
                    // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                    // is 2, the property `which` does not represent an emoji correctly.
                    // In such a case, we directly return the `char` property instead of
                    // using `which`.
                    if (nativeEvent.char && nativeEvent.char.length > 1) return nativeEvent.char;
                    else if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case "compositionend":
                return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    /**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */ function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var chars;
        if (canUseTextInputEvent) chars = getNativeBeforeInputChars(domEventName, nativeEvent);
        else chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
         // If no characters are being inserted, no BeforeInput event should
        // be fired.
        if (!chars) return null;
        var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
        if (listeners.length > 0) {
            var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            event.data = chars;
        }
    }
    /**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */ function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    }
    /**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */ var supportedInputTypes = {
        color: true,
        date: true,
        datetime: true,
        "datetime-local": true,
        email: true,
        month: true,
        number: true,
        password: true,
        range: true,
        search: true,
        tel: true,
        text: true,
        time: true,
        url: true,
        week: true
    };
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        if (nodeName === "input") return !!supportedInputTypes[elem.type];
        if (nodeName === "textarea") return true;
        return false;
    }
    /**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */ function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return false;
        var eventName = "on" + eventNameSuffix;
        var isSupported = eventName in document;
        if (!isSupported) {
            var element = document.createElement("div");
            element.setAttribute(eventName, "return;");
            isSupported = typeof element[eventName] === "function";
        }
        return isSupported;
    }
    function registerEvents$1() {
        registerTwoPhaseEvent("onChange", [
            "change",
            "click",
            "focusin",
            "focusout",
            "input",
            "keydown",
            "keyup",
            "selectionchange"
        ]);
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        // Flag this event loop as needing state restore.
        enqueueStateRestore(target);
        var listeners = accumulateTwoPhaseListeners(inst, "onChange");
        if (listeners.length > 0) {
            var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
        }
    }
    /**
 * For IE shims
 */ var activeElement = null;
    var activeElementInst = null;
    /**
 * SECTION: handle `change` event
 */ function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === "select" || nodeName === "input" && elem.type === "file";
    }
    function manualDispatchChangeEvent(nativeEvent) {
        var dispatchQueue = [];
        createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
        // other events and have it go through ReactBrowserEventEmitter. Since it
        // doesn't, we manually listen for the events and so we have to enqueue and
        // process the abstract event manually.
        //
        // Batching is necessary here in order to ensure that all event handlers run
        // before the next rerender (including event handlers attached to ancestor
        // elements instead of directly on the input). Without this, controlled
        // components don't work properly in conjunction with event bubbling because
        // the component is rerendered and the value reverted before all the event
        // handlers can run. See https://github.com/facebook/react/issues/708.
        batchedUpdates(runEventInBatch, dispatchQueue);
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if (domEventName === "change") return targetInst;
    }
    /**
 * SECTION: handle `input` event
 */ var isInputEventSupported = false;
    if (canUseDOM) // IE9 claims to support the input event but fails to trigger it when
    // deleting text, so we ignore its input events.
    isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
    /**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */ function startWatchingForValueChange(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElement.attachEvent("onpropertychange", handlePropertyChange);
    }
    /**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */ function stopWatchingForValueChange() {
        if (!activeElement) return;
        activeElement.detachEvent("onpropertychange", handlePropertyChange);
        activeElement = null;
        activeElementInst = null;
    }
    /**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */ function handlePropertyChange(nativeEvent) {
        if (nativeEvent.propertyName !== "value") return;
        if (getInstIfValueChanged(activeElementInst)) manualDispatchChangeEvent(nativeEvent);
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        if (domEventName === "focusin") {
            // In IE9, propertychange fires for most input events but is buggy and
            // doesn't fire when text is deleted, but conveniently, selectionchange
            // appears to fire in all of the remaining cases so we catch those and
            // forward the event if the value has changed
            // In either case, we don't want to call the event handler if the value
            // is changed from JS so we redefine a setter for `.value` that updates
            // our activeElementValue variable, allowing us to ignore those changes
            //
            // stopWatching() should be a noop here but we call it just in case we
            // missed a blur event somehow.
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
        } else if (domEventName === "focusout") stopWatchingForValueChange();
    } // For IE8 and IE9.
    function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
        if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
    }
    /**
 * SECTION: handle `click` event
 */ function shouldUseClickEvent(elem) {
        // Use the `click` event to detect changes to checkbox and radio inputs.
        // This approach works across all browsers, whereas `change` does not fire
        // until `blur` in IE8.
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if (domEventName === "click") return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if (domEventName === "input" || domEventName === "change") return getInstIfValueChanged(targetInst);
    }
    function handleControlledInputBlur(node) {
        var state = node._wrapperState;
        if (!state || !state.controlled || node.type !== "number") return;
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, "number", node.value);
    }
    /**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */ function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) getTargetInstFunc = getTargetInstForChangeEvent;
        else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
            }
        } else if (shouldUseClickEvent(targetNode)) getTargetInstFunc = getTargetInstForClickEvent;
        if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
                createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                return;
            }
        }
        if (handleEventFunc) handleEventFunc(domEventName, targetNode, targetInst);
         // When blurring, set the value attribute for number inputs
        if (domEventName === "focusout") handleControlledInputBlur(targetNode);
    }
    function registerEvents$2() {
        registerDirectEvent("onMouseEnter", [
            "mouseout",
            "mouseover"
        ]);
        registerDirectEvent("onMouseLeave", [
            "mouseout",
            "mouseover"
        ]);
        registerDirectEvent("onPointerEnter", [
            "pointerout",
            "pointerover"
        ]);
        registerDirectEvent("onPointerLeave", [
            "pointerout",
            "pointerover"
        ]);
    }
    /**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */ function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
        var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
        if (isOverEvent && !isReplayingEvent(nativeEvent)) {
            // If this is an over event with a target, we might have already dispatched
            // the event in the out event of the other target. If this is replayed,
            // then it's because we couldn't dispatch against this target previously
            // so we have to do it now instead.
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
                // If the related node is managed by React, we can assume that we have
                // already dispatched the corresponding events during its mouseout.
                if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) return;
            }
        }
        if (!isOutEvent && !isOverEvent) // Must not be a mouse or pointer in or out - ignoring.
        return;
        var win; // TODO: why is this nullable in the types but we read from it?
        if (nativeEventTarget.window === nativeEventTarget) // `nativeEventTarget` is probably a window object.
        win = nativeEventTarget;
        else {
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            var doc = nativeEventTarget.ownerDocument;
            if (doc) win = doc.defaultView || doc.parentWindow;
            else win = window;
        }
        var from;
        var to;
        if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
                var nearestMounted = getNearestMountedFiber(to);
                if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) to = null;
            }
        } else {
            // Moving to a node from outside the window.
            from = null;
            to = targetInst;
        }
        if (from === to) // Nothing pertains to our managed components.
        return;
        var SyntheticEventCtor = SyntheticMouseEvent;
        var leaveEventType = "onMouseLeave";
        var enterEventType = "onMouseEnter";
        var eventTypePrefix = "mouse";
        if (domEventName === "pointerout" || domEventName === "pointerover") {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = "onPointerLeave";
            enterEventType = "onPointerEnter";
            eventTypePrefix = "pointer";
        }
        var fromNode = from == null ? win : getNodeFromInstance(from);
        var toNode = to == null ? win : getNodeFromInstance(to);
        var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = null; // We should only process this nativeEvent if we are processing
        // the first ancestor. Next time, we will ignore the event.
        var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
        }
        accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
    }
    /**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */ function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
        ;
    }
    var objectIs = typeof Object.is === "function" ? Object.is : is;
    /**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */ function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return true;
        if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) return false;
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return false;
         // Test for A's keys different from B.
        for(var i = 0; i < keysA.length; i++){
            var currentKey = keysA[i];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return false;
        }
        return true;
    }
    /**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */ function getLeafNode(node) {
        while(node && node.firstChild)node = node.firstChild;
        return node;
    }
    /**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */ function getSiblingNode(node) {
        while(node){
            if (node.nextSibling) return node.nextSibling;
            node = node.parentNode;
        }
    }
    /**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */ function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        var nodeStart = 0;
        var nodeEnd = 0;
        while(node){
            if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;
                if (nodeStart <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - nodeStart
                };
                nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
        }
    }
    /**
 * @param {DOMElement} outerNode
 * @return {?object}
 */ function getOffsets(outerNode) {
        var ownerDocument = outerNode.ownerDocument;
        var win = ownerDocument && ownerDocument.defaultView || window;
        var selection = win.getSelection && win.getSelection();
        if (!selection || selection.rangeCount === 0) return null;
        var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
        // up/down buttons on an <input type="number">. Anonymous divs do not seem to
        // expose properties, triggering a "Permission denied error" if any of its
        // properties are accessed. The only seemingly possible way to avoid erroring
        // is to access a property that typically works for non-anonymous divs and
        // catch any error that may otherwise arise. See
        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
        try {
            /* eslint-disable no-unused-expressions */ anchorNode.nodeType;
            focusNode.nodeType;
        /* eslint-enable no-unused-expressions */ } catch (e) {
            return null;
        }
        return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */ function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
        var length = 0;
        var start = -1;
        var end = -1;
        var indexWithinAnchor = 0;
        var indexWithinFocus = 0;
        var node = outerNode;
        var parentNode = null;
        outer: while(true){
            var next = null;
            while(true){
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) start = length + anchorOffset;
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) end = length + focusOffset;
                if (node.nodeType === TEXT_NODE) length += node.nodeValue.length;
                if ((next = node.firstChild) === null) break;
                 // Moving from `node` to its first child `next`.
                parentNode = node;
                node = next;
            }
            while(true){
                if (node === outerNode) break outer;
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) start = length;
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) end = length;
                if ((next = node.nextSibling) !== null) break;
                node = parentNode;
                parentNode = node.parentNode;
            } // Moving from `node` to its next sibling `next`.
            node = next;
        }
        if (start === -1 || end === -1) // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
        return {
            start: start,
            end: end
        };
    }
    /**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */ function setOffsets(node, offsets) {
        var doc = node.ownerDocument || document;
        var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
        // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
        // fails when pasting 100+ items)
        if (!win.getSelection) return;
        var selection = win.getSelection();
        var length = node.textContent.length;
        var start = Math.min(offsets.start, length);
        var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
        // Flip backward selections, so we can set with a single range.
        if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
        }
        var startMarker = getNodeForCharacterOffset(node, start);
        var endMarker = getNodeForCharacterOffset(node, end);
        if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) return;
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
            } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
            }
        }
    }
    function isTextNode(node) {
        return node && node.nodeType === TEXT_NODE;
    }
    function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) return false;
        else if (outerNode === innerNode) return true;
        else if (isTextNode(outerNode)) return false;
        else if (isTextNode(innerNode)) return containsNode(outerNode, innerNode.parentNode);
        else if ("contains" in outerNode) return outerNode.contains(innerNode);
        else if (outerNode.compareDocumentPosition) return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        else return false;
    }
    function isInDocument(node) {
        return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }
    function isSameOriginFrame(iframe) {
        try {
            // Accessing the contentDocument of a HTMLIframeElement can cause the browser
            // to throw, e.g. if it has a cross-origin src attribute.
            // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
            // iframe.contentDocument.defaultView;
            // A safety way is to access one of the cross origin properties: Window or Location
            // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
            // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
            return typeof iframe.contentWindow.location.href === "string";
        } catch (err) {
            return false;
        }
    }
    function getActiveElementDeep() {
        var win = window;
        var element = getActiveElement();
        while(element instanceof win.HTMLIFrameElement){
            if (isSameOriginFrame(element)) win = element.contentWindow;
            else return element;
            element = getActiveElement(win.document);
        }
        return element;
    }
    /**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */ /**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */ function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
    }
    function getSelectionInformation() {
        var focusedElem = getActiveElementDeep();
        return {
            focusedElem: focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
        };
    }
    /**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */ function restoreSelection(priorSelectionInformation) {
        var curFocusedElem = getActiveElementDeep();
        var priorFocusedElem = priorSelectionInformation.focusedElem;
        var priorSelectionRange = priorSelectionInformation.selectionRange;
        if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) setSelection(priorFocusedElem, priorSelectionRange);
             // Focusing a node can change the scroll position, which is undesirable
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while(ancestor = ancestor.parentNode)if (ancestor.nodeType === ELEMENT_NODE) ancestors.push({
                element: ancestor,
                left: ancestor.scrollLeft,
                top: ancestor.scrollTop
            });
            if (typeof priorFocusedElem.focus === "function") priorFocusedElem.focus();
            for(var i = 0; i < ancestors.length; i++){
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
            }
        }
    }
    /**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */ function getSelection(input) {
        var selection;
        if ("selectionStart" in input) // Modern browser with input or textarea.
        selection = {
            start: input.selectionStart,
            end: input.selectionEnd
        };
        else // Content editable or old IE textarea.
        selection = getOffsets(input);
        return selection || {
            start: 0,
            end: 0
        };
    }
    /**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */ function setSelection(input, offsets) {
        var start = offsets.start;
        var end = offsets.end;
        if (end === undefined) end = start;
        if ("selectionStart" in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
        } else setOffsets(input, offsets);
    }
    var skipSelectionChangeEvent = canUseDOM && "documentMode" in document && document.documentMode <= 11;
    function registerEvents$3() {
        registerTwoPhaseEvent("onSelect", [
            "focusout",
            "contextmenu",
            "dragend",
            "focusin",
            "keydown",
            "keyup",
            "mousedown",
            "mouseup",
            "selectionchange"
        ]);
    }
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */ function getSelection$1(node) {
        if ("selectionStart" in node && hasSelectionCapabilities(node)) return {
            start: node.selectionStart,
            end: node.selectionEnd
        };
        else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
            };
        }
    }
    /**
 * Get document associated with the event target.
 */ function getEventTargetDocument(eventTarget) {
        return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */ function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        // Ensure we have the right element, and that the user is not dragging a
        // selection (this matches native `select` event behavior). In HTML5, select
        // fires only on input and textarea thus if there's no focused element we
        // won't dispatch.
        var doc = getEventTargetDocument(nativeEventTarget);
        if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) return;
         // Only fire when selection has actually changed.
        var currentSelection = getSelection$1(activeElement$1);
        if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
            if (listeners.length > 0) {
                var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                    event: event,
                    listeners: listeners
                });
                event.target = activeElement$1;
            }
        }
    }
    /**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */ function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        switch(domEventName){
            // Track the input node that has focus.
            case "focusin":
                if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                    activeElement$1 = targetNode;
                    activeElementInst$1 = targetInst;
                    lastSelection = null;
                }
                break;
            case "focusout":
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
            // Don't fire the event while the user is dragging. This matches the
            // semantics of the native select event.
            case "mousedown":
                mouseDown = true;
                break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
                mouseDown = false;
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                break;
            // Chrome and IE fire non-standard event when selection is changed (and
            // sometimes when it hasn't). IE's event fires out of order with respect
            // to key and input events on deletion, so we discard it.
            //
            // Firefox doesn't support selectionchange, so check selection status
            // after each key entry. The selection changes after keydown and before
            // keyup, but we check on keydown as well in the case of holding down a
            // key, when multiple keydown events are fired but only one keyup is.
            // This is also our approach for IE handling, for the reason above.
            case "selectionchange":
                if (skipSelectionChangeEvent) break;
            // falls through
            case "keydown":
            case "keyup":
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
        }
    }
    /**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */ function makePrefixMap(styleProp, eventName) {
        var prefixes = {};
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes["Webkit" + styleProp] = "webkit" + eventName;
        prefixes["Moz" + styleProp] = "moz" + eventName;
        return prefixes;
    }
    /**
 * A list of event names to a configurable list of vendor prefixes.
 */ var vendorPrefixes = {
        animationend: makePrefixMap("Animation", "AnimationEnd"),
        animationiteration: makePrefixMap("Animation", "AnimationIteration"),
        animationstart: makePrefixMap("Animation", "AnimationStart"),
        transitionend: makePrefixMap("Transition", "TransitionEnd")
    };
    /**
 * Event names that have already been detected and prefixed (if applicable).
 */ var prefixedEventNames = {};
    /**
 * Element to check for prefixes on.
 */ var style = {};
    /**
 * Bootstrap if a DOM exists.
 */ if (canUseDOM) {
        style = document.createElement("div").style; // On some platforms, in particular some releases of Android 4.x,
        // the un-prefixed "animation" and "transition" properties are defined on the
        // style object but the events that fire will still be prefixed, so we need
        // to check if the un-prefixed events are usable, and if not remove them from the map.
        if (!("AnimationEvent" in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
        } // Same as above
        if (!("TransitionEvent" in window)) delete vendorPrefixes.transitionend.transition;
    }
    /**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */ function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        else if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName];
        for(var styleProp in prefixMap){
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
        return eventName;
    }
    var ANIMATION_END = getVendorPrefixedEventName("animationend");
    var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
    var ANIMATION_START = getVendorPrefixedEventName("animationstart");
    var TRANSITION_END = getVendorPrefixedEventName("transitionend");
    var topLevelEventsToReactNames = new Map(); // NOTE: Capitalization is important in this list!
    //
    // E.g. it needs "pointerDown", not "pointerdown".
    // This is because we derive both React name ("onPointerDown")
    // and DOM name ("pointerdown") from the same list.
    //
    // Exceptions that don't match this convention are listed separately.
    //
    // prettier-ignore
    var simpleEventPluginEvents = [
        "abort",
        "auxClick",
        "cancel",
        "canPlay",
        "canPlayThrough",
        "click",
        "close",
        "contextMenu",
        "copy",
        "cut",
        "drag",
        "dragEnd",
        "dragEnter",
        "dragExit",
        "dragLeave",
        "dragOver",
        "dragStart",
        "drop",
        "durationChange",
        "emptied",
        "encrypted",
        "ended",
        "error",
        "gotPointerCapture",
        "input",
        "invalid",
        "keyDown",
        "keyPress",
        "keyUp",
        "load",
        "loadedData",
        "loadedMetadata",
        "loadStart",
        "lostPointerCapture",
        "mouseDown",
        "mouseMove",
        "mouseOut",
        "mouseOver",
        "mouseUp",
        "paste",
        "pause",
        "play",
        "playing",
        "pointerCancel",
        "pointerDown",
        "pointerMove",
        "pointerOut",
        "pointerOver",
        "pointerUp",
        "progress",
        "rateChange",
        "reset",
        "resize",
        "seeked",
        "seeking",
        "stalled",
        "submit",
        "suspend",
        "timeUpdate",
        "touchCancel",
        "touchEnd",
        "touchStart",
        "volumeChange",
        "scroll",
        "toggle",
        "touchMove",
        "waiting",
        "wheel"
    ];
    function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName);
        registerTwoPhaseEvent(reactName, [
            domEventName
        ]);
    }
    function registerSimpleEvents() {
        for(var i = 0; i < simpleEventPluginEvents.length; i++){
            var eventName = simpleEventPluginEvents[i];
            var domEventName = eventName.toLowerCase();
            var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, "on" + capitalizedEvent);
        } // Special cases where event names don't match.
        registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
        registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
        registerSimpleEvent(ANIMATION_START, "onAnimationStart");
        registerSimpleEvent("dblclick", "onDoubleClick");
        registerSimpleEvent("focusin", "onFocus");
        registerSimpleEvent("focusout", "onBlur");
        registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
    }
    function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var reactName = topLevelEventsToReactNames.get(domEventName);
        if (reactName === undefined) return;
        var SyntheticEventCtor = SyntheticEvent;
        var reactEventType = domEventName;
        switch(domEventName){
            case "keypress":
                // Firefox creates a keypress event for function keys too. This removes
                // the unwanted keypress events. Enter is however both printable and
                // non-printable. One would expect Tab to be as well (but it isn't).
                if (getEventCharCode(nativeEvent) === 0) return;
            /* falls through */ case "keydown":
            case "keyup":
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
            case "focusin":
                reactEventType = "focus";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case "focusout":
                reactEventType = "blur";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case "beforeblur":
            case "afterblur":
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case "click":
                // Firefox creates a click event on right mouse clicks. This removes the
                // unwanted click events.
                if (nativeEvent.button === 2) return;
            /* falls through */ case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            /* falls through */ case "mouseout":
            case "mouseover":
            case "contextmenu":
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
                SyntheticEventCtor = SyntheticDragEvent;
                break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
            case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
            case "scroll":
                SyntheticEventCtor = SyntheticUIEvent;
                break;
            case "wheel":
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
            case "copy":
            case "cut":
            case "paste":
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
        }
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        // Some events don't bubble in the browser.
        // In the past, React has always bubbled them, but this can be surprising.
        // We're going to try aligning closer to the browser behavior by not bubbling
        // them in React either. We'll start by not bubbling onScroll, and then expand.
        var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
        // nonDelegatedEvents list in DOMPluginEventSystem.
        // Then we can remove this special list.
        // This is a breaking change that can wait until React 18.
        domEventName === "scroll";
        var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
        if (_listeners.length > 0) {
            // Intentionally create event lazily.
            var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: _event,
                listeners: _listeners
            });
        }
    }
    // TODO: remove top-level side effect.
    registerSimpleEvents();
    registerEvents$2();
    registerEvents$1();
    registerEvents$3();
    registerEvents();
    function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        // TODO: we should remove the concept of a "SimpleEventPlugin".
        // This is the basic functionality of the event system. All
        // the other plugins are essentially polyfills. So the plugin
        // should probably be inlined somewhere and have its logic
        // be core the to event system. This would potentially allow
        // us to ship builds of React without the polyfilled plugins below.
        extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
        // event's native "bubble" phase, which means that we're
        // not in the capture phase. That's because we emulate
        // the capture phase here still. This is a trade-off,
        // because in an ideal world we would not emulate and use
        // the phases properly, like we do with the SimpleEvent
        // plugin. However, the plugins below either expect
        // emulation (EnterLeave) or use state localized to that
        // plugin (BeforeInput, Change, Select). The state in
        // these modules complicates things, as you'll essentially
        // get the case where the capture phase event might change
        // state, only for the following bubble event to come in
        // later and not trigger anything as the state now
        // invalidates the heuristics of the event plugin. We
        // could alter all these plugins to work in such ways, but
        // that might cause other unknown side-effects that we
        // can't foresee right now.
        if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
    } // List of events that need to be individually attached to media elements.
    var mediaEventTypes = [
        "abort",
        "canplay",
        "canplaythrough",
        "durationchange",
        "emptied",
        "encrypted",
        "ended",
        "error",
        "loadeddata",
        "loadedmetadata",
        "loadstart",
        "pause",
        "play",
        "playing",
        "progress",
        "ratechange",
        "resize",
        "seeked",
        "seeking",
        "stalled",
        "suspend",
        "timeupdate",
        "volumechange",
        "waiting"
    ]; // We should not delegate these events to the container, but rather
    // set them on the actual target element itself. This is primarily
    // because these events do not consistently bubble in the DOM.
    var nonDelegatedEvents = new Set([
        "cancel",
        "close",
        "invalid",
        "load",
        "scroll",
        "toggle"
    ].concat(mediaEventTypes));
    function executeDispatch(event, listener, currentTarget) {
        var type = event.type || "unknown-event";
        event.currentTarget = currentTarget;
        invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
        event.currentTarget = null;
    }
    function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
        var previousInstance;
        if (inCapturePhase) for(var i = dispatchListeners.length - 1; i >= 0; i--){
            var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
            if (instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, listener, currentTarget);
            previousInstance = instance;
        }
        else for(var _i = 0; _i < dispatchListeners.length; _i++){
            var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
            if (_instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, _listener, _currentTarget);
            previousInstance = _instance;
        }
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
        } // This would be a good time to rethrow if any of the event handlers threw.
        rethrowCaughtError();
    }
    function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var nativeEventTarget = getEventTarget(nativeEvent);
        var dispatchQueue = [];
        extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        processDispatchQueue(dispatchQueue, eventSystemFlags);
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        if (!nonDelegatedEvents.has(domEventName)) error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var isCapturePhaseListener = false;
        var listenerSet = getEventListenerSet(targetElement);
        var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
        if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
        }
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        if (isCapturePhaseListener) eventSystemFlags |= IS_CAPTURE_PHASE;
        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    } // This is only used by createEventHandle when the
    var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
    function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
                // We handle selectionchange separately because it
                // doesn't bubble and needs to be on the document.
                if (domEventName !== "selectionchange") {
                    if (!nonDelegatedEvents.has(domEventName)) listenToNativeEvent(domEventName, false, rootContainerElement);
                    listenToNativeEvent(domEventName, true, rootContainerElement);
                }
            });
            var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
            if (ownerDocument !== null) // The selectionchange event also needs deduplication
            // but it is attached to the document.
            {
                if (!ownerDocument[listeningMarker]) {
                    ownerDocument[listeningMarker] = true;
                    listenToNativeEvent("selectionchange", false, ownerDocument);
                }
            }
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
        var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
        // active and not passive.
        var isPassiveListener = undefined;
        if (passiveBrowserEventsSupported) // Browsers introduced an intervention, making these events
        // passive by default on document. React doesn't bind them
        // to document anymore, but changing this now would undo
        // the performance wins from the change. So we emulate
        // the existing behavior manually on the roots now.
        // https://github.com/facebook/react/issues/19651
        {
            if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") isPassiveListener = true;
        }
        targetContainer;
        var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we
        if (isCapturePhaseListener) {
            if (isPassiveListener !== undefined) unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            else unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
        } else if (isPassiveListener !== undefined) unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
        else unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
    function isMatchingRootContainer(grandContainer, targetContainer) {
        return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var ancestorInst = targetInst;
        if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we
            if (targetInst !== null) {
                // The below logic attempts to work out if we need to change
                // the target fiber to a different ancestor. We had similar logic
                // in the legacy event system, except the big difference between
                // systems is that the modern event system now has an event listener
                // attached to each React Root and React Portal Root. Together,
                // the DOM nodes representing these roots are the "rootContainer".
                // To figure out which ancestor instance we should use, we traverse
                // up the fiber tree from the target instance and attempt to find
                // root boundaries that match that of our current "rootContainer".
                // If we find that "rootContainer", we find the parent fiber
                // sub-tree for that root and make that our ancestor instance.
                var node = targetInst;
                mainLoop: while(true){
                    if (node === null) return;
                    var nodeTag = node.tag;
                    if (nodeTag === HostRoot || nodeTag === HostPortal) {
                        var container = node.stateNode.containerInfo;
                        if (isMatchingRootContainer(container, targetContainerNode)) break;
                        if (nodeTag === HostPortal) {
                            // The target is a portal, but it's not the rootContainer we're looking for.
                            // Normally portals handle their own events all the way down to the root.
                            // So we should be able to stop now. However, we don't know if this portal
                            // was part of *our* root.
                            var grandNode = node.return;
                            while(grandNode !== null){
                                var grandTag = grandNode.tag;
                                if (grandTag === HostRoot || grandTag === HostPortal) {
                                    var grandContainer = grandNode.stateNode.containerInfo;
                                    if (isMatchingRootContainer(grandContainer, targetContainerNode)) // This is the rootContainer we're looking for and we found it as
                                    // a parent of the Portal. That means we can ignore it because the
                                    // Portal will bubble through to us.
                                    return;
                                }
                                grandNode = grandNode.return;
                            }
                        } // Now we need to find it's corresponding host fiber in the other
                        // tree. To do this we can use getClosestInstanceFromNode, but we
                        // need to validate that the fiber is a host instance, otherwise
                        // we need to traverse up through the DOM till we find the correct
                        // node that is from the other tree.
                        while(container !== null){
                            var parentNode = getClosestInstanceFromNode(container);
                            if (parentNode === null) return;
                            var parentTag = parentNode.tag;
                            if (parentTag === HostComponent || parentTag === HostText) {
                                node = ancestorInst = parentNode;
                                continue mainLoop;
                            }
                            container = container.parentNode;
                        }
                    }
                    node = node.return;
                }
            }
        }
        batchedUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
        var captureName = reactName !== null ? reactName + "Capture" : null;
        var reactEventName = inCapturePhase ? captureName : reactName;
        var listeners = [];
        var instance = targetFiber;
        var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                lastHostComponent = stateNode; // createEventHandle listeners
                if (reactEventName !== null) {
                    var listener = getListener(instance, reactEventName);
                    if (listener != null) listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
            } // If we are only accumulating events for the target, then we don't
            // continue to propagate through the React fiber tree to find other
            // listeners.
            if (accumulateTargetOnly) break;
             // If we are processing the onBeforeBlur event, then we need to take
            instance = instance.return;
        }
        return listeners;
    } // We should only use this function for:
    // - BeforeInputEventPlugin
    // - ChangeEventPlugin
    // - SelectEventPlugin
    // This is because we only process these plugins
    // in the bubble phase, so we need to accumulate two
    // phase event listeners (via emulation).
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        var captureName = reactName + "Capture";
        var listeners = [];
        var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                var captureListener = getListener(instance, captureName);
                if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                var bubbleListener = getListener(instance, reactName);
                if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
            }
            instance = instance.return;
        }
        return listeners;
    }
    function getParent(inst) {
        if (inst === null) return null;
        do inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        while (inst && inst.tag !== HostComponent);
        if (inst) return inst;
        return null;
    }
    /**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */ function getLowestCommonAncestor(instA, instB) {
        var nodeA = instA;
        var nodeB = instB;
        var depthA = 0;
        for(var tempA = nodeA; tempA; tempA = getParent(tempA))depthA++;
        var depthB = 0;
        for(var tempB = nodeB; tempB; tempB = getParent(tempB))depthB++;
         // If A is deeper, crawl up.
        while(depthA - depthB > 0){
            nodeA = getParent(nodeA);
            depthA--;
        } // If B is deeper, crawl up.
        while(depthB - depthA > 0){
            nodeB = getParent(nodeB);
            depthB--;
        } // Walk in lockstep until we find a match.
        var depth = depthA;
        while(depth--){
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) return nodeA;
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
        }
        return null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        var registrationName = event._reactName;
        var listeners = [];
        var instance = target;
        while(instance !== null){
            if (instance === common) break;
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) break;
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                if (inCapturePhase) {
                    var captureListener = getListener(instance, registrationName);
                    if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                } else if (!inCapturePhase) {
                    var bubbleListener = getListener(instance, registrationName);
                    if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
            }
            instance = instance.return;
        }
        if (listeners.length !== 0) dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    } // We should only use this function for:
    // - EnterLeaveEventPlugin
    // This is because we only process this plugin
    // in the bubble phase, so we need to accumulate two
    // phase event listeners.
    function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
        var common = from && to ? getLowestCommonAncestor(from, to) : null;
        if (from !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
        if (to !== null && enterEvent !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
    }
    function getListenerSetKey(domEventName, capture) {
        return domEventName + "__" + (capture ? "capture" : "bubble");
    }
    var didWarnInvalidHydration = false;
    var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
    var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
    var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
    var AUTOFOCUS = "autoFocus";
    var CHILDREN = "children";
    var STYLE = "style";
    var HTML$1 = "__html";
    var warnedUnknownTags;
    var validatePropertiesInDevelopment;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeHTML;
    warnedUnknownTags = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
    };
    validatePropertiesInDevelopment = function(type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props, {
            registrationNameDependencies: registrationNameDependencies,
            possibleRegistrationNames: possibleRegistrationNames
        });
    }; // IE 11 parses & normalizes the style attribute as opposed to other
    // browsers. It adds spaces and sorts the properties in some
    // non-alphabetical order. Handling that would require sorting CSS
    // properties in the client & server versions or applying
    // `expectedStyle` to a temporary DOM node to read its `style` attribute
    // normalized. Since it only affects IE, we're skipping style warnings
    // in that browser completely in favor of doing all that work.
    // See https://github.com/facebook/react/issues/11807
    canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
    warnForPropDifference = function(propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) return;
        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
        if (normalizedServerValue === normalizedClientValue) return;
        didWarnInvalidHydration = true;
        error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
    };
    warnForExtraAttributes = function(attributeNames) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function(name) {
            names.push(name);
        });
        error("Extra attributes from the server: %s", names);
    };
    warnForInvalidEventListener = function(registrationName, listener) {
        if (listener === false) error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
        else error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
    }; // Parse the HTML and read it back to normalize the HTML string so that it
    // can be used for comparison.
    normalizeHTML = function(parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
    };
    // It also can turn \u0000 into \uFFFD inside attributes.
    // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
    // If we have a mismatch, it might be caused by that.
    // We will still patch up in this case but not fire the warning.
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
    var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
    function normalizeMarkupForTextOrAttribute(markup) {
        checkHtmlStringCoercion(markup);
        var markupString = typeof markup === "string" ? markup : "" + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
    }
    function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
        if (normalizedServerText === normalizedClientText) return;
        if (shouldWarnDev) {
            if (!didWarnInvalidHydration) {
                didWarnInvalidHydration = true;
                error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
            }
        }
        if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) // In concurrent roots, we throw when there's a text mismatch and revert to
        // client rendering, up to the nearest Suspense boundary.
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function noop() {}
    function trapClickOnNonInteractiveElement(node) {
        // Mobile Safari does not fire properly bubble click events on
        // non-interactive elements, which means delegated click listeners do not
        // fire. The workaround for this bug involves attaching an empty click
        // listener on the target node.
        // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
        // Just set it using the onclick property so that we don't have to manage any
        // bookkeeping for it. Not sure if we need to clear it when the listener is
        // removed.
        // TODO: Only do this for the relevant Safaris maybe?
        node.onclick = noop;
    }
    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
        for(var propKey in nextProps){
            if (!nextProps.hasOwnProperty(propKey)) continue;
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                if (nextHtml != null) setInnerHTML(domElement, nextHtml);
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string") {
                    // Avoid setting initial textContent when the text is empty. In IE11 setting
                    // textContent on a <textarea> will cause the placeholder to not
                    // show within the <textarea> until it has been focused and blurred again.
                    // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                    var canSetTextContent = tag !== "textarea" || nextProp !== "";
                    if (canSetTextContent) setTextContent(domElement, nextProp);
                } else if (typeof nextProp === "number") setTextContent(domElement, "" + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== "function") warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === "onScroll") listenToNonDelegatedEvent("scroll", domElement);
                }
            } else if (nextProp != null) setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
    }
    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
        // TODO: Handle wasCustomComponentTag
        for(var i = 0; i < updatePayload.length; i += 2){
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) setValueForStyles(domElement, propValue);
            else if (propKey === DANGEROUSLY_SET_INNER_HTML) setInnerHTML(domElement, propValue);
            else if (propKey === CHILDREN) setTextContent(domElement, propValue);
            else setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
    }
    function createElement(type, props, rootContainerElement, parentNamespace) {
        var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
        // tags get no namespace.
        var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
        var domElement;
        var namespaceURI = parentNamespace;
        if (namespaceURI === HTML_NAMESPACE) namespaceURI = getIntrinsicNamespace(type);
        if (namespaceURI === HTML_NAMESPACE) {
            isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
            // allow <SVG> or <mATH>.
            if (!isCustomComponentTag && type !== type.toLowerCase()) error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
            if (type === "script") {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement("div");
                div.innerHTML = "<script></script>"; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
            } else if (typeof props.is === "string") // $FlowIssue `createElement` should be updated for Web Components
            domElement = ownerDocument.createElement(type, {
                is: props.is
            });
            else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
                // attributes on `select`s needs to be added before `option`s are inserted.
                // This prevents:
                // - a bug where the `select` does not scroll to the correct option because singular
                //  `select` elements automatically pick the first item #13222
                // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
                // See https://github.com/facebook/react/issues/13222
                // and https://github.com/facebook/react/issues/14239
                if (type === "select") {
                    var node = domElement;
                    if (props.multiple) node.multiple = true;
                    else if (props.size) // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
                    // it is possible that no option is selected.
                    //
                    // This is only necessary when a select in "single selection mode".
                    node.size = props.size;
                }
            }
        } else domElement = ownerDocument.createElementNS(namespaceURI, type);
        if (namespaceURI === HTML_NAMESPACE) {
            if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
            }
        }
        return domElement;
    }
    function createTextNode(text, rootContainerElement) {
        return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }
    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
        var isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        var props;
        switch(tag){
            case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                props = rawProps;
                break;
            case "iframe":
            case "object":
            case "embed":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent("load", domElement);
                props = rawProps;
                break;
            case "video":
            case "audio":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                props = rawProps;
                break;
            case "source":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent("error", domElement);
                props = rawProps;
                break;
            case "img":
            case "image":
            case "link":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                props = rawProps;
                break;
            case "details":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent("toggle", domElement);
                props = rawProps;
                break;
            case "input":
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "option":
                validateProps(domElement, rawProps);
                props = rawProps;
                break;
            case "select":
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "textarea":
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            default:
                props = rawProps;
        }
        assertValidProps(tag, props);
        setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
        switch(tag){
            case "input":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
            case "textarea":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case "option":
                postMountWrapper$1(domElement, rawProps);
                break;
            case "select":
                postMountWrapper$2(domElement, rawProps);
                break;
            default:
                if (typeof props.onClick === "function") // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
    } // Calculate the diff between the two objects.
    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
        validatePropertiesInDevelopment(tag, nextRawProps);
        var updatePayload = null;
        var lastProps;
        var nextProps;
        switch(tag){
            case "input":
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
            case "select":
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
            case "textarea":
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
            default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        assertValidProps(tag, nextProps);
        var propKey;
        var styleName;
        var styleUpdates = null;
        for(propKey in lastProps){
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) continue;
            if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for(styleName in lastStyle)if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) styleUpdates = {};
                    styleUpdates[styleName] = "";
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) // This is a special case. If any listener updates we need to ensure
            // that the "current" fiber pointer gets updated so we need a commit
            // to update this element.
            {
                if (!updatePayload) updatePayload = [];
            } else // For all other deleted properties we add it to the queue. We use
            // the allowed property list in the commit phase instead.
            (updatePayload = updatePayload || []).push(propKey, null);
        }
        for(propKey in nextProps){
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : undefined;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) continue;
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                if (lastProp) {
                    // Unset styles on `lastProp` but not on `nextProp`.
                    for(styleName in lastProp)if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = "";
                    }
                     // Update styles that changed since `lastProp`.
                    for(styleName in nextProp)if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = nextProp[styleName];
                    }
                } else {
                    // Relies on `updateStylesByID` not mutating `styleUpdates`.
                    if (!styleUpdates) {
                        if (!updatePayload) updatePayload = [];
                        updatePayload.push(propKey, styleUpdates);
                    }
                    styleUpdates = nextProp;
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                var lastHtml = lastProp ? lastProp[HTML$1] : undefined;
                if (nextHtml != null) {
                    if (lastHtml !== nextHtml) (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string" || typeof nextProp === "number") (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    // We eagerly listen to this even though we haven't committed yet.
                    if (typeof nextProp !== "function") warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === "onScroll") listenToNonDelegatedEvent("scroll", domElement);
                }
                if (!updatePayload && lastProp !== nextProp) // This is a special case. If any listener updates we need to ensure
                // that the "current" props pointer gets updated so we need a commit
                // to update this element.
                updatePayload = [];
            } else // For any other property we always add it to the queue and then we
            // filter it out using the allowed property list during the commit.
            (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
        if (styleUpdates) {
            validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
        }
        return updatePayload;
    } // Apply the diff.
    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
        // Update checked *before* name.
        // In the middle of an update, it is possible to have multiple checked.
        // When a checked radio tries to change name, browser makes another radio's checked false.
        if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) updateChecked(domElement, nextRawProps);
        var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
        var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.
        updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
        // changed.
        switch(tag){
            case "input":
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                updateWrapper(domElement, nextRawProps);
                break;
            case "textarea":
                updateWrapper$1(domElement, nextRawProps);
                break;
            case "select":
                // <select> value update needs to occur after <option> children
                // reconciliation
                postUpdateWrapper(domElement, nextRawProps);
                break;
        }
    }
    function getPossibleStandardName(propName) {
        var lowerCasedName = propName.toLowerCase();
        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) return null;
        return possibleStandardNames[lowerCasedName] || null;
    }
    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
        var isCustomComponentTag;
        var extraAttributeNames;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        switch(tag){
            case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                break;
            case "iframe":
            case "object":
            case "embed":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "video":
            case "audio":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                break;
            case "source":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent("error", domElement);
                break;
            case "img":
            case "image":
            case "link":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "details":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent("toggle", domElement);
                break;
            case "input":
                initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "option":
                validateProps(domElement, rawProps);
                break;
            case "select":
                initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "textarea":
                initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
        }
        assertValidProps(tag, rawProps);
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;
        for(var _i = 0; _i < attributes.length; _i++){
            var name = attributes[_i].name.toLowerCase();
            switch(name){
                // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                case "value":
                    break;
                case "checked":
                    break;
                case "selected":
                    break;
                default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[_i].name);
            }
        }
        var updatePayload = null;
        for(var propKey in rawProps){
            if (!rawProps.hasOwnProperty(propKey)) continue;
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === "string") {
                    if (domElement.textContent !== nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            nextProp
                        ];
                    }
                } else if (typeof nextProp === "number") {
                    if (domElement.textContent !== "" + nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            "" + nextProp
                        ];
                    }
                }
            } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== "function") warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === "onScroll") listenToNonDelegatedEvent("scroll", domElement);
                }
            } else if (shouldWarnDev && true && // Convince Flow we've calculated it (it's DEV-only in this method.)
            typeof isCustomComponentTag === "boolean") {
                // Validate that the properties correspond to their expected values.
                var serverValue = void 0;
                var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
                if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) ;
                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                propKey === "value" || propKey === "checked" || propKey === "selected") ;
                else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                    var serverHTML = domElement.innerHTML;
                    var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                    if (nextHtml != null) {
                        var expectedHTML = normalizeHTML(domElement, nextHtml);
                        if (expectedHTML !== serverHTML) warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                } else if (propKey === STYLE) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey);
                    if (canDiffStyleForHydrationWarning) {
                        var expectedStyle = createDangerousStringForStyles(nextProp);
                        serverValue = domElement.getAttribute("style");
                        if (expectedStyle !== serverValue) warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey.toLowerCase());
                    serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    if (nextProp !== serverValue) warnForPropDifference(propKey, serverValue, nextProp);
                } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                    var isMismatchDueToBadCasing = false;
                    if (propertyInfo !== null) {
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propertyInfo.attributeName);
                        serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                    } else {
                        var ownNamespace = parentNamespace;
                        if (ownNamespace === HTML_NAMESPACE) ownNamespace = getIntrinsicNamespace(tag);
                        if (ownNamespace === HTML_NAMESPACE) // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propKey.toLowerCase());
                        else {
                            var standardName = getPossibleStandardName(propKey);
                            if (standardName !== null && standardName !== propKey) {
                                // If an SVG prop is supplied with bad casing, it will
                                // be successfully parsed from HTML, but will produce a mismatch
                                // (and would be incorrectly rendered on the client).
                                // However, we already warn about bad casing elsewhere.
                                // So we'll skip the misleading extra mismatch warning in this case.
                                isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.
                                extraAttributeNames.delete(standardName);
                            } // $FlowFixMe - Should be inferred as not undefined.
                            extraAttributeNames.delete(propKey);
                        }
                        serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    }
                    var dontWarnCustomElement = enableCustomElementPropertySupport;
                    if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) warnForPropDifference(propKey, serverValue, nextProp);
                }
            }
        }
        if (shouldWarnDev) {
            if (extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) // $FlowFixMe - Should be inferred as not undefined.
            warnForExtraAttributes(extraAttributeNames);
        }
        switch(tag){
            case "input":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
            case "textarea":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case "select":
            case "option":
                break;
            default:
                if (typeof rawProps.onClick === "function") // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        return updatePayload;
    }
    function diffHydratedText(textNode, text, isConcurrentMode) {
        var isDifferent = textNode.nodeValue !== text;
        return isDifferent;
    }
    function warnForDeletedHydratableElement(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
    }
    function warnForDeletedHydratableText(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedElement(parentNode, tag, props) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedText(parentNode, text) {
        if (text === "") // We expect to insert empty text nodes since they're not represented in
        // the HTML.
        // TODO: Remove this special case if we can just avoid inserting empty
        // text nodes.
        return;
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
    }
    function restoreControlledState$3(domElement, tag, props) {
        switch(tag){
            case "input":
                restoreControlledState(domElement, props);
                return;
            case "textarea":
                restoreControlledState$2(domElement, props);
                return;
            case "select":
                restoreControlledState$1(domElement, props);
                return;
        }
    }
    var validateDOMNesting = function() {};
    var updatedAncestorInfo = function() {};
    // This validation code was written based on the HTML5 parsing spec:
    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    //
    // Note: this does not catch all invalid nesting, nor does it try to (as it's
    // not clear what practical benefit doing so provides); instead, we warn only
    // for cases where the parser will give a parse tree differing from what React
    // intended. For example, <b><div></div></b> is invalid but we don't warn
    // because it still parses correctly; we do warn for other cases like nested
    // <p> tags where the beginning of the second element implicitly closes the
    // first, causing a confusing mess.
    // https://html.spec.whatwg.org/multipage/syntax.html#special
    var specialTags = [
        "address",
        "applet",
        "area",
        "article",
        "aside",
        "base",
        "basefont",
        "bgsound",
        "blockquote",
        "body",
        "br",
        "button",
        "caption",
        "center",
        "col",
        "colgroup",
        "dd",
        "details",
        "dir",
        "div",
        "dl",
        "dt",
        "embed",
        "fieldset",
        "figcaption",
        "figure",
        "footer",
        "form",
        "frame",
        "frameset",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "head",
        "header",
        "hgroup",
        "hr",
        "html",
        "iframe",
        "img",
        "input",
        "isindex",
        "li",
        "link",
        "listing",
        "main",
        "marquee",
        "menu",
        "menuitem",
        "meta",
        "nav",
        "noembed",
        "noframes",
        "noscript",
        "object",
        "ol",
        "p",
        "param",
        "plaintext",
        "pre",
        "script",
        "section",
        "select",
        "source",
        "style",
        "summary",
        "table",
        "tbody",
        "td",
        "template",
        "textarea",
        "tfoot",
        "th",
        "thead",
        "title",
        "tr",
        "track",
        "ul",
        "wbr",
        "xmp"
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    var inScopeTags = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
    var buttonScopeTags = inScopeTags.concat([
        "button"
    ]); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
    var impliedEndTags = [
        "dd",
        "dt",
        "li",
        "option",
        "optgroup",
        "p",
        "rp",
        "rt"
    ];
    var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
    };
    updatedAncestorInfo = function(oldInfo, tag) {
        var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
        var info = {
            tag: tag
        };
        if (inScopeTags.indexOf(tag) !== -1) {
            ancestorInfo.aTagInScope = null;
            ancestorInfo.buttonTagInScope = null;
            ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) ancestorInfo.pTagInButtonScope = null;
         // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
            ancestorInfo.listItemTagAutoclosing = null;
            ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === "form") ancestorInfo.formTag = info;
        if (tag === "a") ancestorInfo.aTagInScope = info;
        if (tag === "button") ancestorInfo.buttonTagInScope = info;
        if (tag === "nobr") ancestorInfo.nobrTagInScope = info;
        if (tag === "p") ancestorInfo.pTagInButtonScope = info;
        if (tag === "li") ancestorInfo.listItemTagAutoclosing = info;
        if (tag === "dd" || tag === "dt") ancestorInfo.dlItemTagAutoclosing = info;
        return ancestorInfo;
    };
    /**
   * Returns whether
   */ var isTagValidWithParent = function(tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch(parentTag){
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
            case "select":
                return tag === "option" || tag === "optgroup" || tag === "#text";
            case "optgroup":
                return tag === "option" || tag === "#text";
            // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
            // but
            case "option":
                return tag === "#text";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
            // No special behavior since these rules fall back to "in body" mode for
            // all except special table nodes which cause bad parsing behavior anyway.
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
            case "tr":
                return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
            case "tbody":
            case "thead":
            case "tfoot":
                return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
            case "colgroup":
                return tag === "col" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
            case "table":
                return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
            case "head":
                return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
            case "html":
                return tag === "head" || tag === "body" || tag === "frameset";
            case "frameset":
                return tag === "frame";
            case "#document":
                return tag === "html";
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        switch(tag){
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
            case "rp":
            case "rt":
                return impliedEndTags.indexOf(parentTag) === -1;
            case "body":
            case "caption":
            case "col":
            case "colgroup":
            case "frameset":
            case "frame":
            case "head":
            case "html":
            case "tbody":
            case "td":
            case "tfoot":
            case "th":
            case "thead":
            case "tr":
                // These tags are only valid with a few parents that have special child
                // parsing rules -- if we're down here, then none of those matched and
                // so we allow it only if we don't know what the parent is, as all other
                // cases are invalid.
                return parentTag == null;
        }
        return true;
    };
    /**
   * Returns whether
   */ var findInvalidAncestorForTag = function(tag, ancestorInfo) {
        switch(tag){
            case "address":
            case "article":
            case "aside":
            case "blockquote":
            case "center":
            case "details":
            case "dialog":
            case "dir":
            case "div":
            case "dl":
            case "fieldset":
            case "figcaption":
            case "figure":
            case "footer":
            case "header":
            case "hgroup":
            case "main":
            case "menu":
            case "nav":
            case "ol":
            case "p":
            case "section":
            case "summary":
            case "ul":
            case "pre":
            case "listing":
            case "table":
            case "hr":
            case "xmp":
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return ancestorInfo.pTagInButtonScope;
            case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case "li":
                return ancestorInfo.listItemTagAutoclosing;
            case "dd":
            case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
            case "button":
                return ancestorInfo.buttonTagInScope;
            case "a":
                // Spec says something about storing a list of markers, but it sounds
                // equivalent to this check.
                return ancestorInfo.aTagInScope;
            case "nobr":
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    };
    var didWarn$1 = {};
    validateDOMNesting = function(childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        if (childText != null) {
            if (childTag != null) error("validateDOMNesting: when childText is passed, childTag should be null");
            childTag = "#text";
        }
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;
        if (!invalidParentOrAncestor) return;
        var ancestorTag = invalidParentOrAncestor.tag;
        var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
        if (didWarn$1[warnKey]) return;
        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = "";
        if (childTag === "#text") {
            if (/\S/.test(childText)) tagDisplayName = "Text nodes";
            else {
                tagDisplayName = "Whitespace text nodes";
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
            }
        } else tagDisplayName = "<" + childTag + ">";
        if (invalidParent) {
            var info = "";
            if (ancestorTag === "table" && childTag === "tr") info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
            error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
        } else error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
    };
    var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
    var SUSPENSE_START_DATA = "$";
    var SUSPENSE_END_DATA = "/$";
    var SUSPENSE_PENDING_START_DATA = "$?";
    var SUSPENSE_FALLBACK_START_DATA = "$!";
    var STYLE$1 = "style";
    var eventsEnabled = null;
    var selectionInformation = null;
    function getRootHostContext(rootContainerInstance) {
        var type;
        var namespace;
        var nodeType = rootContainerInstance.nodeType;
        switch(nodeType){
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE:
                type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
                var root = rootContainerInstance.documentElement;
                namespace = root ? root.namespaceURI : getChildNamespace(null, "");
                break;
            default:
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
        }
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getPublicInstance(instance) {
        return instance;
    }
    function prepareForCommit(containerInfo) {
        eventsEnabled = isEnabled();
        selectionInformation = getSelectionInformation();
        var activeInstance = null;
        setEnabled(false);
        return activeInstance;
    }
    function resetAfterCommit(containerInfo) {
        restoreSelection(selectionInformation);
        setEnabled(eventsEnabled);
        eventsEnabled = null;
        selectionInformation = null;
    }
    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var parentNamespace;
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);
        if (typeof props.children === "string" || typeof props.children === "number") {
            var string = "" + props.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        parentNamespace = hostContextDev.namespace;
        var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
        precacheFiberNode(internalInstanceHandle, domElement);
        updateFiberProps(domElement, props);
        return domElement;
    }
    function appendInitialChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
        setInitialProperties(domElement, type, props, rootContainerInstance);
        switch(type){
            case "button":
            case "input":
            case "select":
            case "textarea":
                return !!props.autoFocus;
            case "img":
                return true;
            default:
                return false;
        }
    }
    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
        var hostContextDev = hostContext;
        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
            var string = "" + newProps.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        return diffProperties(domElement, type, oldProps, newProps);
    }
    function shouldSetTextContent(type, props) {
        return type === "textarea" || type === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }
    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
        var textNode = createTextNode(text, rootContainerInstance);
        precacheFiberNode(internalInstanceHandle, textNode);
        return textNode;
    }
    function getCurrentEventPriority() {
        var currentEvent = window.event;
        if (currentEvent === undefined) return DefaultEventPriority;
        return getEventPriority(currentEvent.type);
    }
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.
    var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : undefined;
    var noTimeout = -1;
    var localPromise = typeof Promise === "function" ? Promise : undefined; // -------------------
    var scheduleMicrotask = typeof queueMicrotask === "function" ? queueMicrotask : typeof localPromise !== "undefined" ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    } : scheduleTimeout; // TODO: Determine the best fallback here.
    function handleErrorInNextTick(error) {
        setTimeout(function() {
            throw error;
        });
    } // -------------------
    function commitMount(domElement, type, newProps, internalInstanceHandle) {
        // Despite the naming that might imply otherwise, this method only
        // fires if there is an `Update` effect scheduled during mounting.
        // This happens if `finalizeInitialChildren` returns `true` (which it
        // does to implement the `autoFocus` attribute on the client). But
        // there are also other cases when this might happen (such as patching
        // up text content during hydration mismatch). So we'll check this again.
        switch(type){
            case "button":
            case "input":
            case "select":
            case "textarea":
                if (newProps.autoFocus) domElement.focus();
                return;
            case "img":
                if (newProps.src) domElement.src = newProps.src;
                return;
        }
    }
    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
        // Apply the diff to the DOM node.
        updateProperties(domElement, updatePayload, type, oldProps, newProps); // Update the props handle so that we know which props are the ones with
        // with current event handlers.
        updateFiberProps(domElement, newProps);
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, "");
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function appendChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function appendChildToContainer(container, child) {
        var parentNode;
        if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
        } else {
            parentNode = container;
            parentNode.appendChild(child);
        } // This container might be used for a portal.
        // If something inside a portal is clicked, that click should bubble
        // through the React tree. However, on Mobile Safari the click would
        // never bubble through the *DOM* tree unless an ancestor with onclick
        // event exists. So we wouldn't see it and dispatch it.
        // This is why we ensure that non React root containers have inline onclick
        // defined.
        // https://github.com/facebook/react/issues/11918
        var reactRootContainer = container._reactRootContainer;
        if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
    }
    function insertBefore(parentInstance, child, beforeChild) {
        parentInstance.insertBefore(child, beforeChild);
    }
    function insertInContainerBefore(container, child, beforeChild) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.insertBefore(child, beforeChild);
        else container.insertBefore(child, beforeChild);
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.removeChild(child);
        else container.removeChild(child);
    }
    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance; // Delete all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && nextNode.nodeType === COMMENT_NODE) {
                var data = nextNode.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) {
                        parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.
                        retryIfBlockedOn(suspenseInstance);
                        return;
                    } else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) depth++;
            }
            node = nextNode;
        }while (node); // TODO: Warn, we didn't find the end comment boundary.
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
        if (container.nodeType === COMMENT_NODE) clearSuspenseBoundary(container.parentNode, suspenseInstance);
        else if (container.nodeType === ELEMENT_NODE) clearSuspenseBoundary(container, suspenseInstance);
         // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function hideInstance(instance) {
        // TODO: Does this work for all element types? What about MathML? Should we
        // pass host context to this method?
        instance;
        var style = instance.style;
        if (typeof style.setProperty === "function") style.setProperty("display", "none", "important");
        else style.display = "none";
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = "";
    }
    function unhideInstance(instance, props) {
        instance;
        var styleProp = props[STYLE$1];
        var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
        instance.style.display = dangerousStyleValue("display", display);
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainer(container) {
        if (container.nodeType === ELEMENT_NODE) container.textContent = "";
        else if (container.nodeType === DOCUMENT_NODE) {
            if (container.documentElement) container.removeChild(container.documentElement);
        }
    } // -------------------
    function canHydrateInstance(instance, type, props) {
        if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) return null;
         // This has now been refined to an element node.
        return instance;
    }
    function canHydrateTextInstance(instance, text) {
        if (text === "" || instance.nodeType !== TEXT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a text node.
        return instance;
    }
    function canHydrateSuspenseInstance(instance) {
        if (instance.nodeType !== COMMENT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a suspense node.
        return instance;
    }
    function isSuspenseInstancePending(instance) {
        return instance.data === SUSPENSE_PENDING_START_DATA;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }
    function getSuspenseInstanceFallbackErrorDetails(instance) {
        var dataset = instance.nextSibling && instance.nextSibling.dataset;
        var digest, message, stack;
        if (dataset) {
            digest = dataset.dgst;
            message = dataset.msg;
            stack = dataset.stck;
        }
        return {
            message: message,
            digest: digest,
            stack: stack
        };
    // const nextSibling = instance.nextSibling;
    // if (nextSibling) {
    //   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;
    //   value.message = dataset.msg;
    //   value.hash = dataset.hash;
    //   if (true) {
    //     value.stack = dataset.stack;
    //   }
    // }
    // return value;
    }
    function registerSuspenseInstanceRetry(instance, callback) {
        instance._reactRetry = callback;
    }
    function getNextHydratable(node) {
        // Skip non-hydratable nodes.
        for(; node != null; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) break;
            if (nodeType === COMMENT_NODE) {
                var nodeData = node.data;
                if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) break;
                if (nodeData === SUSPENSE_END_DATA) return null;
            }
        }
        return node;
    }
    function getNextHydratableSibling(instance) {
        return getNextHydratable(instance.nextSibling);
    }
    function getFirstHydratableChild(parentInstance) {
        return getNextHydratable(parentInstance.firstChild);
    }
    function getFirstHydratableChildWithinContainer(parentContainer) {
        return getNextHydratable(parentContainer.firstChild);
    }
    function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
        return getNextHydratable(parentInstance.nextSibling);
    }
    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
        // get attached.
        updateFiberProps(instance, props);
        var parentNamespace;
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
    }
    function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, textInstance); // TODO: Temporary hack to check if we're in a concurrent root. We can delete
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedText(textInstance, text);
    }
    function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, suspenseInstance);
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) return getNextHydratableSibling(node);
                    else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) depth++;
            }
            node = node.nextSibling;
        } // TODO: Warn, we didn't find the end comment boundary.
        return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.
    function getParentSuspenseInstance(targetInstance) {
        var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (depth === 0) return node;
                    else depth--;
                } else if (data === SUSPENSE_END_DATA) depth++;
            }
            node = node.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function shouldDeleteUnhydratedTailInstances(parentType) {
        return parentType !== "head" && parentType !== "body";
    }
    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
        var shouldWarnDev = true;
        checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
    }
    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            var shouldWarnDev = true;
            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
        }
    }
    function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
        if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentContainer, instance);
        else if (instance.nodeType === COMMENT_NODE) ;
        else warnForDeletedHydratableText(parentContainer, instance);
    }
    function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentNode, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentNode, instance);
        }
    }
    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentInstance, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentInstance, instance);
        }
    }
    function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
        warnForInsertedHydratedElement(parentContainer, type);
    }
    function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
        warnForInsertedHydratedText(parentContainer, text);
    }
    function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedElement(parentNode, type);
    }
    function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedText(parentNode, text);
    }
    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedElement(parentInstance, type);
    }
    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedText(parentInstance, text);
    }
    function errorHydratingContainer(parentContainer) {
        // TODO: This gets logged by onRecoverableError, too, so we should be
        // able to remove it.
        error("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", parentContainer.nodeName.toLowerCase());
    }
    function preparePortalMount(portalInstance) {
        listenToAllSupportedEvents(portalInstance);
    }
    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = "__reactFiber$" + randomKey;
    var internalPropsKey = "__reactProps$" + randomKey;
    var internalContainerInstanceKey = "__reactContainer$" + randomKey;
    var internalEventHandlersKey = "__reactEvents$" + randomKey;
    var internalEventHandlerListenersKey = "__reactListeners$" + randomKey;
    var internalEventHandlesSetKey = "__reactHandles$" + randomKey;
    function detachDeletedInstance(node) {
        // TODO: This function is only called on host components. I don't think all of
        // these fields are relevant.
        delete node[internalInstanceKey];
        delete node[internalPropsKey];
        delete node[internalEventHandlersKey];
        delete node[internalEventHandlerListenersKey];
        delete node[internalEventHandlesSetKey];
    }
    function precacheFiberNode(hostInst, node) {
        node[internalInstanceKey] = hostInst;
    }
    function markContainerAsRoot(hostRoot, node) {
        node[internalContainerInstanceKey] = hostRoot;
    }
    function unmarkContainerAsRoot(node) {
        node[internalContainerInstanceKey] = null;
    }
    function isContainerMarkedAsRoot(node) {
        return !!node[internalContainerInstanceKey];
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you will not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
         // If the direct event target isn't a React owned DOM node, we need to look
        // to see if one of its parents is a React owned DOM node.
        var parentNode = targetNode.parentNode;
        while(parentNode){
            // We'll check if this is a container root that could include
            // React nodes in the future. We need to check this first because
            // if we're a child of a dehydrated container, we need to first
            // find that inner container before moving on to finding the parent
            // instance. Note that we don't check this field on  the targetNode
            // itself because the fibers are conceptually between the container
            // node and the first child. It isn't surrounding the container node.
            // If it's not a container, we check if it's an instance.
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
                // Since this wasn't the direct target of the event, we might have
                // stepped past dehydrated DOM nodes to get here. However they could
                // also have been non-React nodes. We need to answer which one.
                // If we the instance doesn't have any children, then there can't be
                // a nested suspense boundary within it. So we can use this as a fast
                // bailout. Most of the time, when people add non-React children to
                // the tree, it is using a ref to a child-less DOM node.
                // Normally we'd only need to check one of the fibers because if it
                // has ever gone from having children to deleting them or vice versa
                // it would have deleted the dehydrated boundary nested inside already.
                // However, since the HostRoot starts out with an alternate it might
                // have one on the alternate so we need to check in case this was a
                // root.
                var alternate = targetInst.alternate;
                if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                    // Next we need to figure out if the node that skipped past is
                    // nested within a dehydrated boundary and if so, which one.
                    var suspenseInstance = getParentSuspenseInstance(targetNode);
                    while(suspenseInstance !== null){
                        // We found a suspense instance. That means that we haven't
                        // hydrated it yet. Even though we leave the comments in the
                        // DOM after hydrating, and there are boundaries in the DOM
                        // that could already be hydrated, we wouldn't have found them
                        // through this pass since if the target is hydrated it would
                        // have had an internalInstanceKey on it.
                        // Let's get the fiber associated with the SuspenseComponent
                        // as the deepest instance.
                        var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                        if (targetSuspenseInst) return targetSuspenseInst;
                         // If we don't find a Fiber on the comment, it might be because
                        // we haven't gotten to hydrate it yet. There might still be a
                        // parent boundary that hasn't above this one so we need to find
                        // the outer most that is known.
                        suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
                    // host component also hasn't hydrated yet. We can return it
                    // below since it will bail out on the isMounted check later.
                    }
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    /**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */ function getInstanceFromNode(node) {
        var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
        if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) return inst;
            else return null;
        }
        return null;
    }
    /**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */ function getNodeFromInstance(inst) {
        if (inst.tag === HostComponent || inst.tag === HostText) // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
         // Without this first invariant, passing a non-DOM-component triggers the next
        // invariant for a missing parent, which is super confusing.
        throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function getFiberCurrentPropsFromNode(node) {
        return node[internalPropsKey] || null;
    }
    function updateFiberProps(node, props) {
        node[internalPropsKey] = props;
    }
    function getEventListenerSet(node) {
        var elementListenerSet = node[internalEventHandlersKey];
        if (elementListenerSet === undefined) elementListenerSet = node[internalEventHandlersKey] = new Set();
        return elementListenerSet;
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== "function") {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error("Failed %s type: %s", location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var valueStack = [];
    var fiberStack;
    fiberStack = [];
    var index = -1;
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        if (index < 0) {
            error("Unexpected pop.");
            return;
        }
        if (fiber !== fiberStack[index]) error("Unexpected Fiber popped.");
        cursor.current = valueStack[index];
        valueStack[index] = null;
        fiberStack[index] = null;
        index--;
    }
    function push(cursor, value, fiber) {
        index++;
        valueStack[index] = cursor.current;
        fiberStack[index] = fiber;
        cursor.current = value;
    }
    var warnedAboutMissingGetChildContext;
    warnedAboutMissingGetChildContext = {};
    var emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.
    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.
    var previousContext = emptyContextObject;
    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) // If the fiber is a context provider itself, when we read its context
        // we may have already pushed its own child context on the stack. A context
        // provider should not "see" its own child context. Therefore we read the
        // previous (parent) context instead for a context provider.
        return previousContext;
        return contextStackCursor.current;
    }
    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }
    function getMaskedContext(workInProgress, unmaskedContext) {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;
        if (!contextTypes) return emptyContextObject;
         // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {};
        for(var key in contextTypes)context[key] = unmaskedContext[key];
        var name = getComponentNameFromFiber(workInProgress) || "Unknown";
        checkPropTypes(contextTypes, context, "context", name);
        // Context is created before the class component is instantiated so check for instance.
        if (instance) cacheContext(workInProgress, unmaskedContext, context);
        return context;
    }
    function hasContextChanged() {
        return didPerformWorkStackCursor.current;
    }
    function isContextProvider(type) {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
    }
    function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function pushTopLevelContextObject(fiber, context, didChange) {
        if (contextStackCursor.current !== emptyContextObject) throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
    }
    function processChildContext(fiber, type, parentContext) {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.
        if (typeof instance.getChildContext !== "function") {
            var componentName = getComponentNameFromFiber(fiber) || "Unknown";
            if (!warnedAboutMissingGetChildContext[componentName]) {
                warnedAboutMissingGetChildContext[componentName] = true;
                error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
            }
            return parentContext;
        }
        var childContext = instance.getChildContext();
        for(var contextKey in childContext){
            if (!(contextKey in childContextTypes)) throw new Error((getComponentNameFromFiber(fiber) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
        }
        var name = getComponentNameFromFiber(fiber) || "Unknown";
        checkPropTypes(childContextTypes, childContext, "child context", name);
        return assign({}, parentContext, childContext);
    }
    function pushContextProvider(workInProgress) {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.
        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
    }
    function invalidateContextProvider(workInProgress, type, didChange) {
        var instance = workInProgress.stateNode;
        if (!instance) throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (didChange) {
            // Merge parent and own context.
            // Skip this if we're not updating due to sCU.
            // This avoids unnecessarily recomputing memoized values.
            var mergedContext = processChildContext(workInProgress, type, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
            // It is important to unwind the context in the reverse order.
            pop(didPerformWorkStackCursor, workInProgress);
            pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.
            push(contextStackCursor, mergedContext, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
            pop(didPerformWorkStackCursor, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        }
    }
    function findCurrentUnmaskedContext(fiber) {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var node = fiber;
        do {
            switch(node.tag){
                case HostRoot:
                    return node.stateNode.context;
                case ClassComponent:
                    var Component = node.type;
                    if (isContextProvider(Component)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    break;
            }
            node = node.return;
        }while (node !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    var LegacyRoot = 0;
    var ConcurrentRoot = 1;
    var syncQueue = null;
    var includesLegacySyncCallbacks = false;
    var isFlushingSyncQueue = false;
    function scheduleSyncCallback(callback) {
        // Push this callback into an internal queue. We'll flush these either in
        // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
        if (syncQueue === null) syncQueue = [
            callback
        ];
        else // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
    }
    function scheduleLegacySyncCallback(callback) {
        includesLegacySyncCallbacks = true;
        scheduleSyncCallback(callback);
    }
    function flushSyncCallbacksOnlyInLegacyMode() {
        // Only flushes the queue if there's a legacy sync callback scheduled.
        // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So
        // it might make more sense for the queue to be a list of roots instead of a
        // list of generic callbacks. Then we can have two: one for legacy roots, one
        // for concurrent roots. And this method would only flush the legacy ones.
        if (includesLegacySyncCallbacks) flushSyncCallbacks();
    }
    function flushSyncCallbacks() {
        if (!isFlushingSyncQueue && syncQueue !== null) {
            // Prevent re-entrance.
            isFlushingSyncQueue = true;
            var i = 0;
            var previousUpdatePriority = getCurrentUpdatePriority();
            try {
                var isSync = true;
                var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this
                // queue is in the render or commit phases.
                setCurrentUpdatePriority(DiscreteEventPriority);
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(isSync);
                    while (callback !== null);
                }
                syncQueue = null;
                includesLegacySyncCallbacks = false;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                if (syncQueue !== null) syncQueue = syncQueue.slice(i + 1);
                 // Resume flushing in the next tick
                scheduleCallback(ImmediatePriority, flushSyncCallbacks);
                throw error;
            } finally{
                setCurrentUpdatePriority(previousUpdatePriority);
                isFlushingSyncQueue = false;
            }
        }
        return null;
    }
    // TODO: Use the unified fiber stack module instead of this local one?
    // Intentionally not using it yet to derisk the initial implementation, because
    // the way we push/pop these values is a bit unusual. If there's a mistake, I'd
    // rather the ids be wrong than crash the whole reconciler.
    var forkStack = [];
    var forkStackIndex = 0;
    var treeForkProvider = null;
    var treeForkCount = 0;
    var idStack = [];
    var idStackIndex = 0;
    var treeContextProvider = null;
    var treeContextId = 1;
    var treeContextOverflow = "";
    function isForkedChild(workInProgress) {
        warnIfNotHydrating();
        return (workInProgress.flags & Forked) !== NoFlags;
    }
    function getForksAtLevel(workInProgress) {
        warnIfNotHydrating();
        return treeForkCount;
    }
    function getTreeId() {
        var overflow = treeContextOverflow;
        var idWithLeadingBit = treeContextId;
        var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
    }
    function pushTreeFork(workInProgress, totalChildren) {
        // This is called right after we reconcile an array (or iterator) of child
        // fibers, because that's the only place where we know how many children in
        // the whole set without doing extra work later, or storing addtional
        // information on the fiber.
        //
        // That's why this function is separate from pushTreeId — it's called during
        // the render phase of the fork parent, not the child, which is where we push
        // the other context values.
        //
        // In the Fizz implementation this is much simpler because the child is
        // rendered in the same callstack as the parent.
        //
        // It might be better to just add a `forks` field to the Fiber type. It would
        // make this module simpler.
        warnIfNotHydrating();
        forkStack[forkStackIndex++] = treeForkCount;
        forkStack[forkStackIndex++] = treeForkProvider;
        treeForkProvider = workInProgress;
        treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextProvider = workInProgress;
        var baseIdWithLeadingBit = treeContextId;
        var baseOverflow = treeContextOverflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part
        // of the id; we use it to account for leading 0s.
        var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
        var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
        var slot = index + 1;
        var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into
        // consideration the leading 1 we use to mark the end of the sequence.
        if (length > 30) {
            // We overflowed the bitwise-safe range. Fall back to slower algorithm.
            // This branch assumes the length of the base id is greater than 5; it won't
            // work for smaller ids, because you need 5 bits per character.
            //
            // We encode the id in multiple steps: first the base id, then the
            // remaining digits.
            //
            // Each 5 bit sequence corresponds to a single base 32 character. So for
            // example, if the current id is 23 bits long, we can convert 20 of those
            // bits into a string of 4 characters, with 3 bits left over.
            //
            // First calculate how many bits in the base id represent a complete
            // sequence of characters.
            var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.
            var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.
            var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because
            // we made more room, this time it won't overflow.
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            treeContextId = 1 << restOfLength | id;
            treeContextOverflow = overflow;
        } else {
            // Normal path
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            treeContextId = 1 << length | _id;
            treeContextOverflow = _overflow;
        }
    }
    function pushMaterializedTreeId(workInProgress) {
        warnIfNotHydrating(); // This component materialized an id. This will affect any ids that appear
        // in its children.
        var returnFiber = workInProgress.return;
        if (returnFiber !== null) {
            var numberOfForks = 1;
            var slotIndex = 0;
            pushTreeFork(workInProgress, numberOfForks);
            pushTreeId(workInProgress, numberOfForks, slotIndex);
        }
    }
    function getBitLength(number) {
        return 32 - clz32(number);
    }
    function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
    }
    function popTreeContext(workInProgress) {
        // Restore the previous values.
        // This is a bit more complicated than other context-like modules in Fiber
        // because the same Fiber may appear on the stack multiple times and for
        // different reasons. We have to keep popping until the work-in-progress is
        // no longer at the top of the stack.
        while(workInProgress === treeForkProvider){
            treeForkProvider = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
            treeForkCount = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
        }
        while(workInProgress === treeContextProvider){
            treeContextProvider = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextOverflow = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextId = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
        }
    }
    function getSuspendedTreeContext() {
        warnIfNotHydrating();
        if (treeContextProvider !== null) return {
            id: treeContextId,
            overflow: treeContextOverflow
        };
        else return null;
    }
    function restoreSuspendedTreeContext(workInProgress, suspendedContext) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextId = suspendedContext.id;
        treeContextOverflow = suspendedContext.overflow;
        treeContextProvider = workInProgress;
    }
    function warnIfNotHydrating() {
        if (!getIsHydrating()) error("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    // This may have been an insertion or a hydration.
    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches
    // due to earlier mismatches or a suspended fiber.
    var didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary
    var hydrationErrors = null;
    function warnIfHydrating() {
        if (isHydrating) error("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function markDidThrowWhileHydratingDEV() {
        didSuspendOrErrorDEV = true;
    }
    function didSuspendOrErrorWhileHydratingDEV() {
        return didSuspendOrErrorDEV;
    }
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
        hydrationParentFiber = fiber;
        isHydrating = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        return true;
    }
    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
        nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
        hydrationParentFiber = fiber;
        isHydrating = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        if (treeContext !== null) restoreSuspendedTreeContext(fiber, treeContext);
        return true;
    }
    function warnUnhydratedInstance(returnFiber, instance) {
        switch(returnFiber.tag){
            case HostRoot:
                didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
                break;
            case HostComponent:
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, isConcurrentMode);
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                if (suspenseState.dehydrated !== null) didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
                break;
        }
    }
    function deleteHydratableInstance(returnFiber, instance) {
        warnUnhydratedInstance(returnFiber, instance);
        var childToDelete = createFiberFromHostInstanceForDeletion();
        childToDelete.stateNode = instance;
        childToDelete.return = returnFiber;
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                childToDelete
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(childToDelete);
    }
    function warnNonhydratedInstance(returnFiber, fiber) {
        if (didSuspendOrErrorDEV) // Inside a boundary that already suspended. We're currently rendering the
        // siblings of a suspended node. The mismatch may be due to the missing
        // data, so it's probably a false positive.
        return;
        switch(returnFiber.tag){
            case HostRoot:
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch(fiber.tag){
                    case HostComponent:
                        var type = fiber.type;
                        var props = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                        break;
                    case HostText:
                        var text = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                        break;
                }
                break;
            case HostComponent:
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch(fiber.tag){
                    case HostComponent:
                        var _type = fiber.type;
                        var _props = fiber.pendingProps;
                        var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, isConcurrentMode);
                        break;
                    case HostText:
                        var _text = fiber.pendingProps;
                        var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, _isConcurrentMode);
                        break;
                }
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                var _parentInstance = suspenseState.dehydrated;
                if (_parentInstance !== null) switch(fiber.tag){
                    case HostComponent:
                        var _type2 = fiber.type;
                        var _props2 = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                        break;
                    case HostText:
                        var _text2 = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                        break;
                }
                break;
            default:
                return;
        }
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.flags = fiber.flags & ~Hydrating | Placement;
        warnNonhydratedInstance(returnFiber, fiber);
    }
    function tryHydrate(fiber, nextInstance) {
        switch(fiber.tag){
            case HostComponent:
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type);
                if (instance !== null) {
                    fiber.stateNode = instance;
                    hydrationParentFiber = fiber;
                    nextHydratableInstance = getFirstHydratableChild(instance);
                    return true;
                }
                return false;
            case HostText:
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                    fiber.stateNode = textInstance;
                    hydrationParentFiber = fiber; // Text Instances don't have children so there's nothing to hydrate.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            case SuspenseComponent:
                var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
                if (suspenseInstance !== null) {
                    var suspenseState = {
                        dehydrated: suspenseInstance,
                        treeContext: getSuspendedTreeContext(),
                        retryLane: OffscreenLane
                    };
                    fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
                    // This simplifies the code for getHostSibling and deleting nodes,
                    // since it doesn't have to consider all Suspense boundaries and
                    // check if they're dehydrated ones or not.
                    var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                    dehydratedFragment.return = fiber;
                    fiber.child = dehydratedFragment;
                    hydrationParentFiber = fiber; // While a Suspense Instance does have children, we won't step into
                    // it during the first pass. Instead, we'll reenter it later.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            default:
                return false;
        }
    }
    function shouldClientRenderOnMismatch(fiber) {
        return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
    }
    function throwOnHydrationMismatch(fiber) {
        throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (!isHydrating) return;
        var nextInstance = nextHydratableInstance;
        if (!nextInstance) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // Nothing to hydrate. Make it an insertion.
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
        }
        var firstAttemptedInstance = nextInstance;
        if (!tryHydrate(fiber, nextInstance)) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // If we can't hydrate this instance let's try the next one.
            // We use this as a heuristic. It's based on intuition and not data so it
            // might be flawed or unnecessary.
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            var prevHydrationParentFiber = hydrationParentFiber;
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
            } // We matched the next one, we'll now assume that the first one was
            // superfluous and we'll delete it. Since we can't eagerly delete it
            // we'll have to schedule a deletion. To do that, this node needs a dummy
            // fiber associated with it.
            deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
        }
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode;
        var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
        var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev); // TODO: Type this specific to this type of component.
        fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update.
        if (updatePayload !== null) return true;
        return false;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        var textContent = fiber.memoizedProps;
        var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
        if (shouldUpdate) {
            // We assume that prepareToHydrateHostTextInstance is called in a context where the
            // hydration parent is the parent host component of this host text.
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) switch(returnFiber.tag){
                case HostRoot:
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, isConcurrentMode);
                    break;
                case HostComponent:
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, _isConcurrentMode2);
                    break;
            }
        }
        return shouldUpdate;
    }
    function prepareToHydrateHostSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        hydrateSuspenseInstance(suspenseInstance, fiber);
    }
    function skipPastDehydratedSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }
    function popToNextHostParent(fiber) {
        var parent = fiber.return;
        while(parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent)parent = parent.return;
        hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
        if (!isHydrating) {
            // If we're not currently hydrating but we're in a hydration context, then
            // we were an insertion and now need to pop up reenter hydration of our
            // siblings.
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
        } // If we have any remaining hydratable nodes, we need to delete them now.
        // We only do this deeper than head and body since they tend to have random
        // other nodes in them. We also ignore components with pure text content in
        // side of them. We also don't delete anything inside the root container.
        if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
            var nextInstance = nextHydratableInstance;
            if (nextInstance) {
                if (shouldClientRenderOnMismatch(fiber)) {
                    warnIfUnhydratedTailNodes(fiber);
                    throwOnHydrationMismatch();
                } else while(nextInstance){
                    deleteHydratableInstance(fiber, nextInstance);
                    nextInstance = getNextHydratableSibling(nextInstance);
                }
            }
        }
        popToNextHostParent(fiber);
        if (fiber.tag === SuspenseComponent) nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
        else nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
        return true;
    }
    function hasUnhydratedTailNodes() {
        return isHydrating && nextHydratableInstance !== null;
    }
    function warnIfUnhydratedTailNodes(fiber) {
        var nextInstance = nextHydratableInstance;
        while(nextInstance){
            warnUnhydratedInstance(fiber, nextInstance);
            nextInstance = getNextHydratableSibling(nextInstance);
        }
    }
    function resetHydrationState() {
        hydrationParentFiber = null;
        nextHydratableInstance = null;
        isHydrating = false;
        didSuspendOrErrorDEV = false;
    }
    function upgradeHydrationErrorsToRecoverable() {
        if (hydrationErrors !== null) {
            // Successfully completed a forced client render. The errors that occurred
            // during the hydration attempt are now recovered. We will log them in
            // commit phase, once the entire tree has finished.
            queueRecoverableErrors(hydrationErrors);
            hydrationErrors = null;
        }
    }
    function getIsHydrating() {
        return isHydrating;
    }
    function queueHydrationError(error) {
        if (hydrationErrors === null) hydrationErrors = [
            error
        ];
        else hydrationErrors.push(error);
    }
    var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
    var NoTransition = null;
    function requestCurrentTransition() {
        return ReactCurrentBatchConfig$1.transition;
    }
    var ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function(fiber, instance) {},
        flushPendingUnsafeLifecycleWarnings: function() {},
        recordLegacyContextWarning: function(fiber, instance) {},
        flushLegacyContextWarning: function() {},
        discardPendingWarnings: function() {}
    };
    var findStrictRoot = function(fiber) {
        var maybeStrictRoot = null;
        var node = fiber;
        while(node !== null){
            if (node.mode & StrictLegacyMode) maybeStrictRoot = node;
            node = node.return;
        }
        return maybeStrictRoot;
    };
    var setToSortedString = function(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(", ");
    };
    var pendingComponentWillMountWarnings = [];
    var pendingUNSAFE_ComponentWillMountWarnings = [];
    var pendingComponentWillReceivePropsWarnings = [];
    var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    var pendingComponentWillUpdateWarnings = [];
    var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.
    var didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        // Dedupe strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) return;
        if (typeof instance.componentWillMount === "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        instance.componentWillMount.__suppressDeprecationWarning !== true) pendingComponentWillMountWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === "function") pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) pendingComponentWillReceivePropsWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === "function") pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) pendingComponentWillUpdateWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === "function") pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();
        if (pendingComponentWillMountWarnings.length > 0) {
            pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillMountWarnings = [];
        }
        var UNSAFE_componentWillMountUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
            pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillMountWarnings = [];
        }
        var componentWillReceivePropsUniqueNames = new Set();
        if (pendingComponentWillReceivePropsWarnings.length > 0) {
            pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillReceivePropsWarnings = [];
        }
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
            pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }
        var componentWillUpdateUniqueNames = new Set();
        if (pendingComponentWillUpdateWarnings.length > 0) {
            pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillUpdateWarnings = [];
        }
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
            pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
            error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
        }
        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
            error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
        }
        if (componentWillMountUniqueNames.size > 0) {
            var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
            warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
        }
        if (componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
            warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
        }
        if (componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
            warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
        }
    };
    var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.
    var didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = findStrictRoot(fiber);
        if (strictRoot === null) {
            error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
            return;
        } // Dedup strategy: Warn once per component.
        if (didWarnAboutLegacyContext.has(fiber.type)) return;
        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === "function") {
            if (warningsForRoot === undefined) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
            }
            warningsForRoot.push(fiber);
        }
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
            if (fiberArray.length === 0) return;
            var firstFiber = fiberArray[0];
            var uniqueNames = new Set();
            fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutLegacyContext.add(fiber.type);
            });
            var sortedNames = setToSortedString(uniqueNames);
            try {
                setCurrentFiber(firstFiber);
                error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
            } finally{
                resetCurrentFiber();
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;
    var warnForMissingKey = function(child, returnFiber) {};
    didWarnAboutMaps = false;
    didWarnAboutGenerators = false;
    didWarnAboutStringRefs = {};
    /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */ ownerHasKeyUseWarning = {};
    ownerHasFunctionTypeWarning = {};
    warnForMissingKey = function(child, returnFiber) {
        if (child === null || typeof child !== "object") return;
        if (!child._store || child._store.validated || child.key != null) return;
        if (typeof child._store !== "object") throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        child._store.validated = true;
        var componentName = getComponentNameFromFiber(returnFiber) || "Component";
        if (ownerHasKeyUseWarning[componentName]) return;
        ownerHasKeyUseWarning[componentName] = true;
        error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
    };
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function coerceRef(returnFiber, current, element) {
        var mixedRef = element.ref;
        if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
            // TODO: Clean this up once we turn on the string ref warning for
            // everyone, because the strict mode case will no longer be relevant
            if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
            // because these cannot be automatically converted to an arrow function
            // using a codemod. Therefore, we don't have to warn about string refs again.
            !(element._owner && element._self && element._owner.stateNode !== element._self) && // Will already throw with "Function components cannot have string refs"
            !(element._owner && element._owner.tag !== ClassComponent) && // Will already warn with "Function components cannot be given refs"
            !(typeof element.type === "function" && !isReactClass(element.type)) && // Will already throw with "Element ref was specified as a string (someStringRef) but no owner was set"
            element._owner) {
                var componentName = getComponentNameFromFiber(returnFiber) || "Component";
                if (!didWarnAboutStringRefs[componentName]) {
                    error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, mixedRef);
                    didWarnAboutStringRefs[componentName] = true;
                }
            }
            if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                    var ownerFiber = owner;
                    if (ownerFiber.tag !== ClassComponent) throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                    inst = ownerFiber.stateNode;
                }
                if (!inst) throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a " + "bug in React. Please file an issue.");
                 // Assigning this to a const so Flow knows it won't change in the closure
                var resolvedInst = inst;
                checkPropStringCoercion(mixedRef, "ref");
                var stringRef = "" + mixedRef; // Check if previous string ref matches new string ref
                if (current !== null && current.ref !== null && typeof current.ref === "function" && current.ref._stringRef === stringRef) return current.ref;
                var ref = function(value) {
                    var refs = resolvedInst.refs;
                    if (value === null) delete refs[stringRef];
                    else refs[stringRef] = value;
                };
                ref._stringRef = stringRef;
                return ref;
            } else {
                if (typeof mixedRef !== "string") throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                if (!element._owner) throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of" + " the following reasons:\n" + "1. You may be adding a ref to a function component\n" + "2. You may be adding a ref to a component that was not created inside a component's render method\n" + "3. You have multiple copies of React loaded\n" + "See https://reactjs.org/link/refs-must-have-owner for more information.");
            }
        }
        return mixedRef;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        var childString = Object.prototype.toString.call(newChild);
        throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : childString) + "). " + "If you meant to render a collection of children, use an array " + "instead.");
    }
    function warnOnFunctionType(returnFiber) {
        var componentName = getComponentNameFromFiber(returnFiber) || "Component";
        if (ownerHasFunctionTypeWarning[componentName]) return;
        ownerHasFunctionTypeWarning[componentName] = true;
        error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
    }
    function resolveLazy(lazyType) {
        var payload = lazyType._payload;
        var init = lazyType._init;
        return init(payload);
    } // This wrapper function exists because I expect to clone the code in each path
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.
    function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) // Noop.
            return;
            var deletions = returnFiber.deletions;
            if (deletions === null) {
                returnFiber.deletions = [
                    childToDelete
                ];
                returnFiber.flags |= ChildDeletion;
            } else deletions.push(childToDelete);
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) // Noop.
            return null;
             // TODO: For the shouldClone case, this could be micro-optimized a bit by
            // assuming that after the first child we've already added everything.
            var childToDelete = currentFirstChild;
            while(childToDelete !== null){
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
            }
            return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
            // Add the remaining children to a temporary map so that we can find them by
            // keys quickly. Implicit (null) keys get added to this set with their index
            // instead.
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while(existingChild !== null){
                if (existingChild.key !== null) existingChildren.set(existingChild.key, existingChild);
                else existingChildren.set(existingChild.index, existingChild);
                existingChild = existingChild.sibling;
            }
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            // We currently set sibling to null and index to 0 here because it is easy
            // to forget to do before returning it. E.g. for the single child case.
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
                // During hydration, the useId algorithm needs to know which fibers are
                // part of a list of children (arrays, iterators).
                newFiber.flags |= Forked;
                return lastPlacedIndex;
            }
            var current = newFiber.alternate;
            if (current !== null) {
                var oldIndex = current.index;
                if (oldIndex < lastPlacedIndex) {
                    // This is a move.
                    newFiber.flags |= Placement;
                    return lastPlacedIndex;
                } else // This item can stay in place.
                return oldIndex;
            } else {
                // This is an insertion.
                newFiber.flags |= Placement;
                return lastPlacedIndex;
            }
        }
        function placeSingleChild(newFiber) {
            // This is simpler for the single child case. We only need to do a
            // placement for inserting new children.
            if (shouldTrackSideEffects && newFiber.alternate === null) newFiber.flags |= Placement;
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (current === null || current.tag !== HostText) {
                // Insert
                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, textContent);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateElement(returnFiber, current, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, current, element.props.children, lanes, element.key);
            if (current !== null) {
                if (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || // Lazy types should reconcile their resolved type.
                // We need to do this after the Hot Reloading check above,
                // because hot reloading has different semantics than prod because
                // it doesn't resuspend. So we can't let the call below suspend.
                typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {
                    // Move based on index
                    var existing = useFiber(current, element.props);
                    existing.ref = coerceRef(returnFiber, current, element);
                    existing.return = returnFiber;
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                    return existing;
                }
            } // Insert
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current, element);
            created.return = returnFiber;
            return created;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
                // Insert
                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, portal.children || []);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (current === null || current.tag !== Fragment) {
                // Insert
                var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, fragment);
                existing.return = returnFiber;
                return existing;
            }
        }
        function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            }
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                        _created.ref = coerceRef(returnFiber, null, newChild);
                        _created.return = returnFiber;
                        return _created;
                    case REACT_PORTAL_TYPE:
                        var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                        _created2.return = returnFiber;
                        return _created2;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return createChild(returnFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                    _created3.return = returnFiber;
                    return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            // Update the fiber if the keys match, otherwise return null.
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                if (key !== null) return null;
                return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        if (newChild.key === key) return updateElement(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_PORTAL_TYPE:
                        if (newChild.key === key) return updatePortal(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    if (key !== null) return null;
                    return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                // Text nodes don't have keys, so we neither have to check the old nor
                // new node for the key. If both are text nodes, they match.
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                    case REACT_PORTAL_TYPE:
                        var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _matchedFiber3 = existingChildren.get(newIdx) || null;
                    return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return null;
        }
        /**
   * Warns if there is a duplicate or missing key
   */ function warnOnInvalidKey(child, knownKeys, returnFiber) {
            if (typeof child !== "object" || child === null) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(child, returnFiber);
                    var key = child.key;
                    if (typeof key !== "string") break;
                    if (knownKeys === null) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    break;
                case REACT_LAZY_TYPE:
                    var payload = child._payload;
                    var init = child._init;
                    warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                    break;
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            // First, validate keys.
            var knownKeys = null;
            for(var i = 0; i < newChildren.length; i++){
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for(; oldFiber !== null && newIdx < newChildren.length; newIdx++){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; newIdx < newChildren.length; newIdx++){
                    var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                    if (_newFiber === null) continue;
                    lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber;
                    else previousNewFiber.sibling = _newFiber;
                    previousNewFiber = _newFiber;
                }
                if (getIsHydrating()) {
                    var _numberOfForks = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; newIdx < newChildren.length; newIdx++){
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                if (_newFiber2 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber2.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber2;
                    else previousNewFiber.sibling = _newFiber2;
                    previousNewFiber = _newFiber2;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks2 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks2);
            }
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            // This is the same implementation as reconcileChildrenArray(),
            // but using the iterator instead.
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (typeof iteratorFn !== "function") throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            // We don't support rendering Generators because it's a mutation.
            // See https://github.com/facebook/react/issues/12995
            if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
            newChildrenIterable[Symbol.toStringTag] === "Generator") {
                if (!didWarnAboutGenerators) error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                didWarnAboutGenerators = true;
            } // Warn about using Maps as children
            if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                didWarnAboutMaps = true;
            } // First, validate keys.
            // We'll get a different iterator later for the main pass.
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for(; !_step.done; _step = _newChildren.next()){
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (newChildren == null) throw new Error("An iterable object provided no iterator.");
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for(; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; !step.done; newIdx++, step = newChildren.next()){
                    var _newFiber3 = createChild(returnFiber, step.value, lanes);
                    if (_newFiber3 === null) continue;
                    lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber3;
                    else previousNewFiber.sibling = _newFiber3;
                    previousNewFiber = _newFiber3;
                }
                if (getIsHydrating()) {
                    var _numberOfForks3 = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks3);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; !step.done; newIdx++, step = newChildren.next()){
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                if (_newFiber4 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber4.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber4;
                    else previousNewFiber.sibling = _newFiber4;
                    previousNewFiber = _newFiber4;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks4 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks4);
            }
            return resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            // There's no need to check for keys on text nodes since we don't have a
            // way to define them.
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                // We already have an existing node so let's just update it and delete
                // the rest.
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent);
                existing.return = returnFiber;
                return existing;
            } // The existing first child is not a text node so we need to create one
            // and delete the existing ones.
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    var elementType = element.type;
                    if (elementType === REACT_FRAGMENT_TYPE) {
                        if (child.tag === Fragment) {
                            deleteRemainingChildren(returnFiber, child.sibling);
                            var existing = useFiber(child, element.props.children);
                            existing.return = returnFiber;
                            existing._debugSource = element._source;
                            existing._debugOwner = element._owner;
                            return existing;
                        }
                    } else if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.
                    // We need to do this after the Hot Reloading check above,
                    // because hot reloading has different semantics than prod because
                    // it doesn't resuspend. So we can't let the call below suspend.
                    typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var _existing = useFiber(child, element.props);
                        _existing.ref = coerceRef(returnFiber, child, element);
                        _existing.return = returnFiber;
                        _existing._debugSource = element._source;
                        _existing._debugOwner = element._owner;
                        return _existing;
                    }
                     // Didn't match.
                    deleteRemainingChildren(returnFiber, child);
                    break;
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                created.return = returnFiber;
                return created;
            } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
            }
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, portal.children || []);
                        existing.return = returnFiber;
                        return existing;
                    } else {
                        deleteRemainingChildren(returnFiber, child);
                        break;
                    }
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        } // This API will tag the children with the side-effect of the reconciliation
        // itself. They will be added to the side-effect list as we pass through the
        // children and the parent.
        function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
            // This function is not recursive.
            // If the top level item is an array, we treat it as a set of children,
            // not as a fragment. Nested arrays on the other hand will be treated as
            // fragment nodes. Recursion happens at the normal flow.
            // Handle top level unkeyed fragments as if they were arrays.
            // This leads to an ambiguity between <>{[...]}</> and <>...</>.
            // We treat the ambiguous cases above the same.
            var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) newChild = newChild.props.children;
             // Handle object types
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_PORTAL_TYPE:
                        return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init; // TODO: This function is supposed to be non-recursive.
                        return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);
                }
                if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
                if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return reconcileChildFibers;
    }
    var reconcileChildFibers = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);
    function cloneChildFibers(current, workInProgress) {
        if (current !== null && workInProgress.child !== current.child) throw new Error("Resuming work not yet implemented.");
        if (workInProgress.child === null) return;
        var currentChild = workInProgress.child;
        var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
        workInProgress.child = newChild;
        newChild.return = workInProgress;
        while(currentChild.sibling !== null){
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress;
        }
        newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.
    function resetChildFibers(workInProgress, lanes) {
        var child = workInProgress.child;
        while(child !== null){
            resetWorkInProgress(child, lanes);
            child = child.sibling;
        }
    }
    var valueCursor = createCursor(null);
    var rendererSigil;
    // Use this to detect multiple renderers using the same context
    rendererSigil = {};
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastFullyObservedContext = null;
    var isDisallowedContextReadInDEV = false;
    function resetContextDependencies() {
        // This is called right before React yields execution, to ensure `readContext`
        // cannot be called outside the render phase.
        currentlyRenderingFiber = null;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        isDisallowedContextReadInDEV = false;
    }
    function enterDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = true;
    }
    function exitDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = false;
    }
    function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber);
        context._currentValue = currentValue;
    }
    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
        // Update the child lanes of all the ancestors, including the alternates.
        var node = parent;
        while(node !== null){
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
                node.childLanes = mergeLanes(node.childLanes, renderLanes);
                if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            if (node === propagationRoot) break;
            node = node.return;
        }
        if (node !== propagationRoot) error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function propagateContextChange(workInProgress, context, renderLanes) {
        propagateContextChange_eager(workInProgress, context, renderLanes);
    }
    function propagateContextChange_eager(workInProgress, context, renderLanes) {
        var fiber = workInProgress.child;
        if (fiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
        while(fiber !== null){
            var nextFiber = void 0; // Visit this fiber.
            var list = fiber.dependencies;
            if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while(dependency !== null){
                    // Check if the context matches.
                    if (dependency.context === context) {
                        // Match! Schedule an update on this fiber.
                        if (fiber.tag === ClassComponent) {
                            // Schedule a force update on the work-in-progress.
                            var lane = pickArbitraryLane(renderLanes);
                            var update = createUpdate(NoTimestamp, lane);
                            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                            // update to the current fiber, too, which means it will persist even if
                            // this render is thrown away. Since it's a race condition, not sure it's
                            // worth fixing.
                            // Inlined `enqueueUpdate` to remove interleaved update check
                            var updateQueue = fiber.updateQueue;
                            if (updateQueue === null) ;
                            else {
                                var sharedQueue = updateQueue.shared;
                                var pending = sharedQueue.pending;
                                if (pending === null) // This is the first update. Create a circular list.
                                update.next = update;
                                else {
                                    update.next = pending.next;
                                    pending.next = update;
                                }
                                sharedQueue.pending = update;
                            }
                        }
                        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
                        var alternate = fiber.alternate;
                        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
                        scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.
                        list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
                        break;
                    }
                    dependency = dependency.next;
                }
            } else if (fiber.tag === ContextProvider) // Don't scan deeper if this is a matching provider
            nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
            else if (fiber.tag === DehydratedFragment) {
                // If a dehydrated suspense boundary is in this subtree, we don't know
                // if it will have any context consumers in it. The best we can do is
                // mark it as having updates.
                var parentSuspense = fiber.return;
                if (parentSuspense === null) throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
                parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);
                var _alternate = parentSuspense.alternate;
                if (_alternate !== null) _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);
                 // This is intentionally passing this fiber as the parent
                // because we want to schedule this fiber as having work
                // on its children. We'll use the childLanes on
                // this fiber to indicate that a context has changed.
                scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);
                nextFiber = fiber.sibling;
            } else // Traverse down.
            nextFiber = fiber.child;
            if (nextFiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
            nextFiber.return = fiber;
            else {
                // No child. Traverse to next sibling.
                nextFiber = fiber;
                while(nextFiber !== null){
                    if (nextFiber === workInProgress) {
                        // We're back to the root of this subtree. Exit.
                        nextFiber = null;
                        break;
                    }
                    var sibling = nextFiber.sibling;
                    if (sibling !== null) {
                        // Set the return pointer of the sibling to the work-in-progress fiber.
                        sibling.return = nextFiber.return;
                        nextFiber = sibling;
                        break;
                    } // No more siblings. Traverse up.
                    nextFiber = nextFiber.return;
                }
            }
            fiber = nextFiber;
        }
    }
    function prepareToReadContext(workInProgress, renderLanes) {
        currentlyRenderingFiber = workInProgress;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        var dependencies = workInProgress.dependencies;
        if (dependencies !== null) {
            var firstContext = dependencies.firstContext;
            if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes)) // Context list has a pending update. Mark that this fiber performed work.
                markWorkInProgressReceivedUpdate();
                 // Reset the work-in-progress list
                dependencies.firstContext = null;
            }
        }
    }
    function readContext(context) {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        if (isDisallowedContextReadInDEV) error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        var value = context._currentValue;
        if (lastFullyObservedContext === context) ;
        else {
            var contextItem = {
                context: context,
                memoizedValue: value,
                next: null
            };
            if (lastContextDependency === null) {
                if (currentlyRenderingFiber === null) throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                 // This is the first dependency for this component. Create a new list.
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                    lanes: NoLanes,
                    firstContext: contextItem
                };
            } else // Append a new context item.
            lastContextDependency = lastContextDependency.next = contextItem;
        }
        return value;
    }
    // render. When this render exits, either because it finishes or because it is
    // interrupted, the interleaved updates will be transferred onto the main part
    // of the queue.
    var concurrentQueues = null;
    function pushConcurrentUpdateQueue(queue) {
        if (concurrentQueues === null) concurrentQueues = [
            queue
        ];
        else concurrentQueues.push(queue);
    }
    function finishQueueingConcurrentUpdates() {
        // Transfer the interleaved updates onto the main queue. Each queue has a
        // `pending` field and an `interleaved` field. When they are not null, they
        // point to the last node in a circular linked list. We need to append the
        // interleaved list to the end of the pending list by joining them into a
        // single, circular list.
        if (concurrentQueues !== null) {
            for(var i = 0; i < concurrentQueues.length; i++){
                var queue = concurrentQueues[i];
                var lastInterleavedUpdate = queue.interleaved;
                if (lastInterleavedUpdate !== null) {
                    queue.interleaved = null;
                    var firstInterleavedUpdate = lastInterleavedUpdate.next;
                    var lastPendingUpdate = queue.pending;
                    if (lastPendingUpdate !== null) {
                        var firstPendingUpdate = lastPendingUpdate.next;
                        lastPendingUpdate.next = firstInterleavedUpdate;
                        lastInterleavedUpdate.next = firstPendingUpdate;
                    }
                    queue.pending = lastInterleavedUpdate;
                }
            }
            concurrentQueues = null;
        }
    }
    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    }
    function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
    }
    function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    }
    function enqueueConcurrentRenderForLane(fiber, lane) {
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    } // Calling this function outside this module should only be done for backwards
    // compatibility and should always be accompanied by a warning.
    var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
        // Update the source fiber's lanes
        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
        var alternate = sourceFiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, lane);
        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        var node = sourceFiber;
        var parent = sourceFiber.return;
        while(parent !== null){
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            else if ((parent.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            node = parent;
            parent = parent.return;
        }
        if (node.tag === HostRoot) {
            var root = node.stateNode;
            return root;
        } else return null;
    }
    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.
    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    didWarnUpdateInsideUpdate = false;
    currentlyProcessingQueue = null;
    function initializeUpdateQueue(fiber) {
        var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null,
                interleaved: null,
                lanes: NoLanes
            },
            effects: null
        };
        fiber.updateQueue = queue;
    }
    function cloneUpdateQueue(current, workInProgress) {
        // Clone the update queue from current. Unless it's already a clone.
        var queue = workInProgress.updateQueue;
        var currentQueue = current.updateQueue;
        if (queue === currentQueue) {
            var clone = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: currentQueue.firstBaseUpdate,
                lastBaseUpdate: currentQueue.lastBaseUpdate,
                shared: currentQueue.shared,
                effects: currentQueue.effects
            };
            workInProgress.updateQueue = clone;
        }
    }
    function createUpdate(eventTime, lane) {
        var update = {
            eventTime: eventTime,
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
        return update;
    }
    function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return null;
        var sharedQueue = updateQueue.shared;
        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
            error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
            didWarnUpdateInsideUpdate = true;
        }
        if (isUnsafeClassRenderPhaseUpdate()) {
            // This is an unsafe render phase update. Add directly to the update
            // queue so we can process it immediately during the current render.
            var pending = sharedQueue.pending;
            if (pending === null) // This is the first update. Create a circular list.
            update.next = update;
            else {
                update.next = pending.next;
                pending.next = update;
            }
            sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering
            // this fiber. This is for backwards compatibility in the case where you
            // update a different component during render phase than the one that is
            // currently renderings (a pattern that is accompanied by a warning).
            return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
        } else return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
    }
    function entangleTransitions(root, fiber, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return;
        var sharedQueue = updateQueue.shared;
        if (isTransitionLane(lane)) {
            var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must
            // have finished. We can remove them from the shared queue, which represents
            // a superset of the actually pending lanes. In some cases we may entangle
            // more than we need to, but that's OK. In fact it's worse if we *don't*
            // entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        // Captured updates are updates that are thrown by a child during the render
        // phase. They should be discarded if the render is aborted. Therefore,
        // we should only put them on the work-in-progress queue, not the current one.
        var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.
        var current = workInProgress.alternate;
        if (current !== null) {
            var currentQueue = current.updateQueue;
            if (queue === currentQueue) {
                // The work-in-progress queue is the same as current. This happens when
                // we bail out on a parent fiber that then captures an error thrown by
                // a child. Since we want to append the update only to the work-in
                // -progress queue, we need to clone the updates. We usually clone during
                // processUpdateQueue, but that didn't happen in this case because we
                // skipped over the parent when we bailed out.
                var newFirst = null;
                var newLast = null;
                var firstBaseUpdate = queue.firstBaseUpdate;
                if (firstBaseUpdate !== null) {
                    // Loop through the updates and clone them.
                    var update = firstBaseUpdate;
                    do {
                        var clone = {
                            eventTime: update.eventTime,
                            lane: update.lane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        if (newLast === null) newFirst = newLast = clone;
                        else {
                            newLast.next = clone;
                            newLast = clone;
                        }
                        update = update.next;
                    }while (update !== null); // Append the captured update the end of the cloned list.
                    if (newLast === null) newFirst = newLast = capturedUpdate;
                    else {
                        newLast.next = capturedUpdate;
                        newLast = capturedUpdate;
                    }
                } else // There are no base updates.
                newFirst = newLast = capturedUpdate;
                queue = {
                    baseState: currentQueue.baseState,
                    firstBaseUpdate: newFirst,
                    lastBaseUpdate: newLast,
                    shared: currentQueue.shared,
                    effects: currentQueue.effects
                };
                workInProgress.updateQueue = queue;
                return;
            }
        } // Append the update to the end of the list.
        var lastBaseUpdate = queue.lastBaseUpdate;
        if (lastBaseUpdate === null) queue.firstBaseUpdate = capturedUpdate;
        else lastBaseUpdate.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
        switch(update.tag){
            case ReplaceState:
                var payload = update.payload;
                if (typeof payload === "function") {
                    enterDisallowedContextReadInDEV();
                    var nextState = payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                    return nextState;
                } // State object
                return payload;
            case CaptureUpdate:
                workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
            // Intentional fallthrough
            case UpdateState:
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === "function") {
                    enterDisallowedContextReadInDEV();
                    partialState = _payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            _payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                } else // Partial state object
                partialState = _payload;
                if (partialState === null || partialState === undefined) // Null and undefined are treated as no-ops.
                return prevState;
                 // Merge the partial state and the previous state.
                return assign({}, prevState, partialState);
            case ForceUpdate:
                hasForceUpdate = true;
                return prevState;
        }
        return prevState;
    }
    function processUpdateQueue(workInProgress, props, instance, renderLanes) {
        // This is always non-null on a ClassComponent or HostRoot
        var queue = workInProgress.updateQueue;
        hasForceUpdate = false;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate;
        var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.
        var pendingQueue = queue.shared.pending;
        if (pendingQueue !== null) {
            queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
            // and last so that it's non-circular.
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null; // Append pending updates to base queue
            if (lastBaseUpdate === null) firstBaseUpdate = firstPendingUpdate;
            else lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
            // we need to transfer the updates to that queue, too. Because the base
            // queue is a singly-linked list with no cycles, we can append to both
            // lists and take advantage of structural sharing.
            // TODO: Pass `current` as argument
            var current = workInProgress.alternate;
            if (current !== null) {
                // This is always non-null on a ClassComponent or HostRoot
                var currentQueue = current.updateQueue;
                var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                if (currentLastBaseUpdate !== lastBaseUpdate) {
                    if (currentLastBaseUpdate === null) currentQueue.firstBaseUpdate = firstPendingUpdate;
                    else currentLastBaseUpdate.next = firstPendingUpdate;
                    currentQueue.lastBaseUpdate = lastPendingUpdate;
                }
            }
        } // These values may change as we process the queue.
        if (firstBaseUpdate !== null) {
            // Iterate through the list of updates to compute the result.
            var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
            // from the original lanes.
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
                var updateLane = update.lane;
                var updateEventTime = update.eventTime;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        eventTime: updateEventTime,
                        lane: updateLane,
                        tag: update.tag,
                        payload: update.payload,
                        callback: update.callback,
                        next: null
                    };
                    if (newLastBaseUpdate === null) {
                        newFirstBaseUpdate = newLastBaseUpdate = clone;
                        newBaseState = newState;
                    } else newLastBaseUpdate = newLastBaseUpdate.next = clone;
                     // Update the remaining priority in the queue.
                    newLanes = mergeLanes(newLanes, updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newLastBaseUpdate !== null) {
                        var _clone = {
                            eventTime: updateEventTime,
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                    } // Process this update.
                    newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
                    var callback = update.callback;
                    if (callback !== null && // If the update was already committed, we should not queue its
                    // callback again.
                    update.lane !== NoLane) {
                        workInProgress.flags |= Callback;
                        var effects = queue.effects;
                        if (effects === null) queue.effects = [
                            update
                        ];
                        else effects.push(update);
                    }
                }
                update = update.next;
                if (update === null) {
                    pendingQueue = queue.shared.pending;
                    if (pendingQueue === null) break;
                    else {
                        // An update was scheduled from inside a reducer. Add the new
                        // pending updates to the end of the list and keep processing.
                        var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
                        // unravel them when transferring them to the base queue.
                        var _firstPendingUpdate = _lastPendingUpdate.next;
                        _lastPendingUpdate.next = null;
                        update = _firstPendingUpdate;
                        queue.lastBaseUpdate = _lastPendingUpdate;
                        queue.shared.pending = null;
                    }
                }
            }while (true);
            if (newLastBaseUpdate === null) newBaseState = newState;
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to
            // process them during this render, but we do need to track which lanes
            // are remaining.
            var lastInterleaved = queue.shared.interleaved;
            if (lastInterleaved !== null) {
                var interleaved = lastInterleaved;
                do {
                    newLanes = mergeLanes(newLanes, interleaved.lane);
                    interleaved = interleaved.next;
                }while (interleaved !== lastInterleaved);
            } else if (firstBaseUpdate === null) // `queue.lanes` is used for entangling transitions. We can set it back to
            // zero once the queue is empty.
            queue.shared.lanes = NoLanes;
             // Set the remaining expiration time to be whatever is remaining in the queue.
            // This should be fine because the only two other things that contribute to
            // expiration time are props and context. We're already in the middle of the
            // begin phase by the time we start processing the queue, so we've already
            // dealt with the props. Context in components that specify
            // shouldComponentUpdate is tricky; but we'll have to account for
            // that regardless.
            markSkippedUpdateLanes(newLanes);
            workInProgress.lanes = newLanes;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback(callback, context) {
        if (typeof callback !== "function") throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + callback));
        callback.call(context);
    }
    function resetHasForceUpdateBeforeProcessing() {
        hasForceUpdate = false;
    }
    function checkHasForceUpdateAfterProcessing() {
        return hasForceUpdate;
    }
    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        // Commit the effects
        var effects = finishedQueue.effects;
        finishedQueue.effects = null;
        if (effects !== null) for(var i = 0; i < effects.length; i++){
            var effect = effects[i];
            var callback = effect.callback;
            if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance);
            }
        }
    }
    var NO_CONTEXT = {};
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);
    function requiredContext(c) {
        if (c === NO_CONTEXT) throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function getRootHostContainer() {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        return rootInstance;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        // Push current root instance onto the stack;
        // This allows us to reset root when portals are popped.
        push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
        // However, we can't just call getRootHostContext() and push it because
        // we'd have a different number of entries on the stack depending on
        // whether getRootHostContext() throws somewhere in renderer code or not.
        // So we push an empty value first. This lets us safely unwind on errors.
        push(contextStackCursor$1, NO_CONTEXT, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.
        pop(contextStackCursor$1, fiber);
        push(contextStackCursor$1, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        var context = requiredContext(contextStackCursor$1.current);
        return context;
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        var context = requiredContext(contextStackCursor$1.current);
        var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.
        if (context === nextContext) return;
         // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor$1, nextContext, fiber);
    }
    function popHostContext(fiber) {
        // Do not pop unless this Fiber provided the current context.
        // pushHostContext() only pushes Fibers that provide unique contexts.
        if (contextFiberStackCursor.current !== fiber) return;
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
    }
    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.
    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.
    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.
    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);
    function hasSuspenseContext(parentContext, flag) {
        return (parentContext & flag) !== 0;
    }
    function setDefaultShallowSuspenseContext(parentContext) {
        return parentContext & SubtreeSuspenseContextMask;
    }
    function setShallowSuspenseContext(parentContext, shallowContext) {
        return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }
    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
        return parentContext | subtreeContext;
    }
    function pushSuspenseContext(fiber, newContext) {
        push(suspenseStackCursor, newContext, fiber);
    }
    function popSuspenseContext(fiber) {
        pop(suspenseStackCursor, fiber);
    }
    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
        // If it was the primary children that just suspended, capture and render the
        // fallback. Otherwise, don't capture and bubble to the next boundary.
        var nextState = workInProgress.memoizedState;
        if (nextState !== null) {
            if (nextState.dehydrated !== null) // A dehydrated boundary always captures.
            return true;
            return false;
        }
        var props = workInProgress.memoizedProps; // Regular boundaries always capture.
        return true;
    }
    function findFirstSuspended(row) {
        var node = row;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                    var dehydrated = state.dehydrated;
                    if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) return node;
                }
            } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
            // keep track of whether it suspended or not.
            node.memoizedProps.revealOrder !== undefined) {
                var didSuspend = (node.flags & DidCapture) !== NoFlags;
                if (didSuspend) return node;
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) return null;
            while(node.sibling === null){
                if (node.return === null || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    var NoFlags$1 = /*   */ 0; // Represents whether effect should fire.
    var HasEffect = /* */ 1; // Represents the phase in which the effect (not the clean-up) fires.
    var Insertion = /*  */ 2;
    var Layout = /*    */ 4;
    var Passive$1 = /*   */ 8;
    // and should be reset before starting a new render.
    // This tracks which mutable sources need to be reset after a render.
    var workInProgressSources = [];
    function resetWorkInProgressVersions() {
        for(var i = 0; i < workInProgressSources.length; i++){
            var mutableSource = workInProgressSources[i];
            mutableSource._workInProgressVersionPrimary = null;
        }
        workInProgressSources.length = 0;
    }
    // This ensures that the version used for server rendering matches the one
    // that is eventually read during hydration.
    // If they don't match there's a potential tear and a full deopt render is required.
    function registerMutableSourceForHydration(root, mutableSource) {
        var getVersion = mutableSource._getVersion;
        var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
        // Retaining it forever may interfere with GC.
        if (root.mutableSourceEagerHydrationData == null) root.mutableSourceEagerHydrationData = [
            mutableSource,
            version
        ];
        else root.mutableSourceEagerHydrationData.push(mutableSource, version);
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
    var didWarnAboutMismatchedHooksForComponent;
    var didWarnUncachedGetSnapshot;
    didWarnAboutMismatchedHooksForComponent = new Set();
    // These are set right before calling the component.
    var renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.
    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.
    var currentHook = null;
    var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
    // does not get reset if we do another render pass; only when we're completely
    // finished evaluating this component. This is an optimization so we know
    // whether we need to clear render phase updates after a throw.
    var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
    // gets reset after each attempt.
    // TODO: Maybe there's some way to consolidate this with
    // `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.
    var didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.
    var localIdCounter = 0; // Used for ids that are generated completely client-side (i.e. not during
    // hydration). This counter is global, so client ids are not stable across
    // render attempts.
    var globalClientIdCounter = 0;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook
    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.
    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.
    var ignorePreviousDependencies = false;
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev === null) hookTypesDev = [
            hookName
        ];
        else hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev !== null) {
            hookTypesUpdateIndexDev++;
            if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) warnOnHookMismatchInDev(hookName);
        }
    }
    function checkDepsAreArrayDev(deps) {
        if (deps !== undefined && deps !== null && !isArray(deps)) // Verify deps, but only on mount to avoid extra checks.
        // It's unlikely their type would change as usually you define them inline.
        error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnHookMismatchInDev(currentHookName) {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
            didWarnAboutMismatchedHooksForComponent.add(componentName);
            if (hookTypesDev !== null) {
                var table = "";
                var secondColumnStart = 30;
                for(var i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i];
                    var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
                    // lol @ IE not supporting String#repeat
                    while(row.length < secondColumnStart)row += " ";
                    row += newHookName + "\n";
                    table += row;
                }
                error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function throwInvalidHookError() {
        throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) // Only true when this component is being hot reloaded.
        return false;
        if (prevDeps === null) {
            error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            return false;
        }
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++){
            if (objectIs(nextDeps[i], prevDeps[i])) continue;
            return false;
        }
        return true;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes = nextRenderLanes;
        currentlyRenderingFiber$1 = workInProgress;
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:
        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = NoLanes; // The following should have already been reset
        if (current !== null && current.memoizedState !== null) ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        else if (hookTypesDev !== null) // This dispatcher handles an edge case where a component is updating,
        // but no stateful hooks have been used.
        // We want to match the production code behavior (which will use HooksDispatcherOnMount),
        // but with the extra DEV validation to ensure hooks ordering hasn't changed.
        // This dispatcher does that.
        ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        else ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        var children = Component(props, secondArg); // Check if there was a render phase update
        if (didScheduleRenderPhaseUpdateDuringThisPass) {
            // Keep rendering in a loop for as long as render phase updates continue to
            // be scheduled. Use a counter to prevent infinite loops.
            var numberOfReRenders = 0;
            do {
                didScheduleRenderPhaseUpdateDuringThisPass = false;
                localIdCounter = 0;
                if (numberOfReRenders >= RE_RENDER_LIMIT) throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                numberOfReRenders += 1;
                // Even when hot reloading, allow dependencies to stabilize
                // after first render to prevent infinite render phase updates.
                ignorePreviousDependencies = false;
                currentHook = null;
                workInProgressHook = null;
                workInProgress.updateQueue = null;
                // Also validate hook order for cascading updates.
                hookTypesUpdateIndexDev = -1;
                ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                children = Component(props, secondArg);
            }while (didScheduleRenderPhaseUpdateDuringThisPass);
        } // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        workInProgress._debugHookTypes = hookTypesDev;
        // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
        var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
        renderLanes = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook = null;
        workInProgressHook = null;
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last
        // render. If this fires, it suggests that we incorrectly reset the static
        // flags in some other part of the codebase. This has happened before, for
        // example, in the SuspenseList implementation.
        if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
        // and creates false positives. To make this work in legacy mode, we'd
        // need to mark fibers that commit in an incomplete state, somehow. For
        // now I'll disable the warning that most of the bugs that would trigger
        // it are either exclusive to concurrent mode or exist in both.
        (current.mode & ConcurrentMode) !== NoMode) error("Internal React error: Expected static flag was missing. Please notify the React team.");
        didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook
        // localIdCounter = 0;
        if (didRenderTooFewHooks) throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        return children;
    }
    function checkDidRenderIdHook() {
        // This should be called immediately after every renderWithHooks call.
        // Conceptually, it's part of the return value of renderWithHooks; it's only a
        // separate function to avoid using an array tuple.
        var didRenderIdHook = localIdCounter !== 0;
        localIdCounter = 0;
        return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the
        // complete phase (bubbleProperties).
        if ((workInProgress.mode & StrictEffectsMode) !== NoMode) workInProgress.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
        else workInProgress.flags &= ~(Passive | Update);
        current.lanes = removeLanes(current.lanes, lanes);
    }
    function resetHooksAfterThrow() {
        // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        if (didScheduleRenderPhaseUpdate) {
            // There were render phase updates. These are only valid for this render
            // phase, which we are now aborting. Remove the updates from the queues so
            // they do not persist to the next render. Do not remove updates from hooks
            // that weren't processed.
            //
            // Only reset the updates from the queue if it has a clone. If it does
            // not have a clone, that means it wasn't processed, and the updates were
            // scheduled before we entered the render phase.
            var hook = currentlyRenderingFiber$1.memoizedState;
            while(hook !== null){
                var queue = hook.queue;
                if (queue !== null) queue.pending = null;
                hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
        }
        renderLanes = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook = null;
        workInProgressHook = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        isUpdatingOpaqueValueInRenderPhase = false;
        didScheduleRenderPhaseUpdateDuringThisPass = false;
        localIdCounter = 0;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        if (workInProgressHook === null) // This is the first hook in the list
        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
        else // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        // This function is used both for updates and for re-renders triggered by a
        // render phase update. It assumes there is either a current hook we can
        // clone, or a work-in-progress hook from a previous render pass that we can
        // use as a base. When we reach the end of the base list, we must switch to
        // the dispatcher used for mounts.
        var nextCurrentHook;
        if (currentHook === null) {
            var current = currentlyRenderingFiber$1.alternate;
            if (current !== null) nextCurrentHook = current.memoizedState;
            else nextCurrentHook = null;
        } else nextCurrentHook = currentHook.next;
        var nextWorkInProgressHook;
        if (workInProgressHook === null) nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
        else nextWorkInProgressHook = workInProgressHook.next;
        if (nextWorkInProgressHook !== null) {
            // There's already a work-in-progress. Reuse it.
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook = nextCurrentHook;
        } else {
            // Clone from the current hook.
            if (nextCurrentHook === null) throw new Error("Rendered more hooks than during the previous render.");
            currentHook = nextCurrentHook;
            var newHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
            };
            if (workInProgressHook === null) // This is the first hook in the list.
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            else // Append to the end of the list.
            workInProgressHook = workInProgressHook.next = newHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null,
            stores: null
        };
    }
    function basicStateReducer(state, action) {
        // $FlowFixMe: Flow doesn't like mixed types
        return typeof action === "function" ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        var initialState;
        if (init !== undefined) initialState = init(initialArg);
        else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer;
        var current = currentHook; // The last rebase update that is NOT part of the base state.
        var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.
        var pendingQueue = queue.pending;
        if (pendingQueue !== null) {
            // We have new updates that haven't been processed yet.
            // We'll add them to the base queue.
            if (baseQueue !== null) {
                // Merge the pending queue and the base queue.
                var baseFirst = baseQueue.next;
                var pendingFirst = pendingQueue.next;
                baseQueue.next = pendingFirst;
                pendingQueue.next = baseFirst;
            }
            if (current.baseQueue !== baseQueue) // Internal invariant that should never happen, but feasibly could in
            // the future if we implement resuming, or some form of that.
            error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        if (baseQueue !== null) {
            // We have a queue to process.
            var first = baseQueue.next;
            var newState = current.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
                var updateLane = update.lane;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        lane: updateLane,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    };
                    if (newBaseQueueLast === null) {
                        newBaseQueueFirst = newBaseQueueLast = clone;
                        newBaseState = newState;
                    } else newBaseQueueLast = newBaseQueueLast.next = clone;
                     // Update the remaining priority in the queue.
                    // TODO: Don't need to accumulate this. Instead, we can remove
                    // renderLanes from the original lanes.
                    currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                    markSkippedUpdateLanes(updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newBaseQueueLast !== null) {
                        var _clone = {
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            action: update.action,
                            hasEagerState: update.hasEagerState,
                            eagerState: update.eagerState,
                            next: null
                        };
                        newBaseQueueLast = newBaseQueueLast.next = _clone;
                    } // Process this update.
                    if (update.hasEagerState) // If this update is a state update (not a reducer) and was processed eagerly,
                    // we can use the eagerly computed state
                    newState = update.eagerState;
                    else {
                        var action = update.action;
                        newState = reducer(newState, action);
                    }
                }
                update = update.next;
            }while (update !== null && update !== first);
            if (newBaseQueueLast === null) newBaseState = newState;
            else newBaseQueueLast.next = newBaseQueueFirst;
             // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
        } // Interleaved updates are stored on a separate queue. We aren't going to
        // process them during this render, but we do need to track which lanes
        // are remaining.
        var lastInterleaved = queue.interleaved;
        if (lastInterleaved !== null) {
            var interleaved = lastInterleaved;
            do {
                var interleavedLane = interleaved.lane;
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
                markSkippedUpdateLanes(interleavedLane);
                interleaved = interleaved.next;
            }while (interleaved !== lastInterleaved);
        } else if (baseQueue === null) // `queue.lanes` is used for entangling transitions. We can set it back to
        // zero once the queue is empty.
        queue.lanes = NoLanes;
        var dispatch = queue.dispatch;
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function rerenderReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
        // work-in-progress hook.
        var dispatch = queue.dispatch;
        var lastRenderPhaseUpdate = queue.pending;
        var newState = hook.memoizedState;
        if (lastRenderPhaseUpdate !== null) {
            // The queue doesn't persist past this render pass.
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
                // Process this render phase update. We don't have to check the
                // priority because it will always be the same as the current
                // render's.
                var action = update.action;
                newState = reducer(newState, action);
                update = update.next;
            }while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.
            if (hook.baseQueue === null) hook.baseState = newState;
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function mountMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function updateMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = mountWorkInProgressHook();
        var nextSnapshot;
        var isHydrating = getIsHydrating();
        if (isHydrating) {
            if (getServerSnapshot === undefined) throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            nextSnapshot = getServerSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                if (nextSnapshot !== getServerSnapshot()) {
                    error("The result of getServerSnapshot should be cached to avoid an infinite loop");
                    didWarnUncachedGetSnapshot = true;
                }
            }
        } else {
            nextSnapshot = getSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                var cachedSnapshot = getSnapshot();
                if (!objectIs(nextSnapshot, cachedSnapshot)) {
                    error("The result of getSnapshot should be cached to avoid an infinite loop");
                    didWarnUncachedGetSnapshot = true;
                }
            }
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            //
            // We won't do this if we're hydrating server-rendered content, because if
            // the content is stale, it's already visible anyway. Instead we'll patch
            // it up in a passive effect.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            if (!includesBlockingLane(root, renderLanes)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        } // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        hook.memoizedState = nextSnapshot;
        var inst = {
            value: nextSnapshot,
            getSnapshot: getSnapshot
        };
        hook.queue = inst; // Schedule an effect to subscribe to the store.
        mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Schedule an effect to update the mutable instance fields. We will update
        // this whenever subscribe, getSnapshot, or value changes. Because there's no
        // clean-up function, and we track the deps correctly, we can call pushEffect
        // directly, without storing any additional state. For the same reason, we
        // don't need to set a static flag, either.
        // TODO: We can move this to the passive phase once we add a pre-commit
        // consistency check. See the next comment.
        fiber.flags |= Passive;
        pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);
        return nextSnapshot;
    }
    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        var nextSnapshot = getSnapshot();
        if (!didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            if (!objectIs(nextSnapshot, cachedSnapshot)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
            }
        }
        var prevSnapshot = hook.memoizedState;
        var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
        if (snapshotChanged) {
            hook.memoizedState = nextSnapshot;
            markWorkInProgressReceivedUpdate();
        }
        var inst = hook.queue;
        updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Whenever getSnapshot or subscribe changes, we need to check in the
        // commit phase if there was an interleaved mutation. In concurrent mode
        // this can happen all the time, but even in synchronous mode, an earlier
        // effect may have mutated the store.
        if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by
        // checking whether we scheduled a subscription effect above.
        workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= Passive;
            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            if (!includesBlockingLane(root, renderLanes)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        return nextSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= StoreConsistency;
        var check = {
            getSnapshot: getSnapshot,
            value: renderedSnapshot
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.stores = [
                check
            ];
        } else {
            var stores = componentUpdateQueue.stores;
            if (stores === null) componentUpdateQueue.stores = [
                check
            ];
            else stores.push(check);
        }
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        // These are updated in the passive phase
        inst.value = nextSnapshot;
        inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could
        // have been in an event that fired before the passive effects, or it could
        // have been in a layout effect. In that case, we would have used the old
        // snapsho and getSnapshot values to bail out. We need to check one more time.
        if (checkIfSnapshotChanged(inst)) // Force a re-render.
        forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
        var handleStoreChange = function() {
            // The store changed. Check if the snapshot changed since the last time we
            // read from the store.
            if (checkIfSnapshotChanged(inst)) // Force a re-render.
            forceStoreRerender(fiber);
        }; // Subscribe to the store and return a clean-up function.
        return subscribe(handleStoreChange);
    }
    function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        var prevValue = inst.value;
        try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
        } catch (error) {
            return true;
        }
    }
    function forceStoreRerender(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
    function mountState(initialState) {
        var hook = mountWorkInProgressHook();
        if (typeof initialState === "function") // $FlowFixMe: Flow doesn't like mixed types
        initialState = initialState();
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateState(initialState) {
        return updateReducer(basicStateReducer);
    }
    function rerenderState(initialState) {
        return rerenderReducer(basicStateReducer);
    }
    function pushEffect(tag, create, destroy, deps) {
        var effect = {
            tag: tag,
            create: create,
            destroy: destroy,
            deps: deps,
            // Circular
            next: null
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) componentUpdateQueue.lastEffect = effect.next = effect;
            else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
            }
        }
        return effect;
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        var _ref2 = {
            current: initialValue
        };
        hook.memoizedState = _ref2;
        return _ref2;
    }
    function updateRef(initialValue) {
        var hook = updateWorkInProgressHook();
        return hook.memoizedState;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var destroy = undefined;
        if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                    hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
                    return;
                }
            }
        }
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
    }
    function mountEffect(create, deps) {
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
        else return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
    }
    function updateEffect(create, deps) {
        return updateEffectImpl(Passive, Passive$1, create, deps);
    }
    function mountInsertionEffect(create, deps) {
        return mountEffectImpl(Update, Insertion, create, deps);
    }
    function updateInsertionEffect(create, deps) {
        return updateEffectImpl(Update, Insertion, create, deps);
    }
    function mountLayoutEffect(create, deps) {
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function updateLayoutEffect(create, deps) {
        return updateEffectImpl(Update, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if (typeof ref === "function") {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
                refCallback(null);
            };
        } else if (ref !== null && ref !== undefined) {
            var refObject = ref;
            if (!refObject.hasOwnProperty("current")) error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
                refObject.current = null;
            };
        }
    }
    function mountImperativeHandle(ref, create, deps) {
        if (typeof create !== "function") error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function updateImperativeHandle(ref, create, deps) {
        if (typeof create !== "function") error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function mountDebugValue(value, formatterFn) {
    // The react-debug-hooks package injects its own implementation
    // so that e.g. DevTools can display custom hook values.
    }
    var updateDebugValue = mountDebugValue;
    function mountCallback(callback, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) // Assume these are defined. If they're not, areHookInputsEqual will warn.
        {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function mountDeferredValue(value) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = value;
        return value;
    }
    function updateDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        var resolvedCurrentHook = currentHook;
        var prevValue = resolvedCurrentHook.memoizedState;
        return updateDeferredValueImpl(hook, prevValue, value);
    }
    function rerenderDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        if (currentHook === null) {
            // This is a rerender during a mount.
            hook.memoizedState = value;
            return value;
        } else {
            // This is a rerender during an update.
            var prevValue = currentHook.memoizedState;
            return updateDeferredValueImpl(hook, prevValue, value);
        }
    }
    function updateDeferredValueImpl(hook, prevValue, value) {
        var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
        if (shouldDeferValue) {
            // This is an urgent update. If the value has changed, keep using the
            // previous value and spawn a deferred render to update it later.
            if (!objectIs(value, prevValue)) {
                // Schedule a deferred render
                var deferredLane = claimNextTransitionLane();
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
                markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent
                // from the latest value. The name "baseState" doesn't really match how we
                // use it because we're reusing a state hook field instead of creating a
                // new one.
                hook.baseState = true;
            } // Reuse the previous value
            return prevValue;
        } else {
            // This is not an urgent update, so we can use the latest value regardless
            // of what it is. No need to defer it.
            // However, if we're currently inside a spawned render, then we need to mark
            // this as an update to prevent the fiber from bailing out.
            //
            // `baseState` is true when the current value is different from the rendered
            // value. The name doesn't really match how we use it because we're reusing
            // a state hook field instead of creating a new one.
            if (hook.baseState) {
                // Flip this back to false.
                hook.baseState = false;
                markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = value;
            return value;
        }
    }
    function startTransition(setPending, callback, options) {
        var previousPriority = getCurrentUpdatePriority();
        setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
        setPending(true);
        var prevTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition = {};
        var currentTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition._updatedFibers = new Set();
        try {
            setPending(false);
            callback();
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$2.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    function mountTransition() {
        var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1]; // The `start` method never changes.
        var start = startTransition.bind(null, setPending);
        var hook = mountWorkInProgressHook();
        hook.memoizedState = start;
        return [
            isPending,
            start
        ];
    }
    function updateTransition() {
        var _updateState = updateState(), isPending = _updateState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    function rerenderTransition() {
        var _rerenderState = rerenderState(), isPending = _rerenderState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    var isUpdatingOpaqueValueInRenderPhase = false;
    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
        return isUpdatingOpaqueValueInRenderPhase;
    }
    function mountId() {
        var hook = mountWorkInProgressHook();
        var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we
        // should do this in Fiber, too? Deferring this decision for now because
        // there's no other place to store the prefix except for an internal field on
        // the public createRoot object, which the fiber tree does not currently have
        // a reference to.
        var identifierPrefix = root.identifierPrefix;
        var id;
        if (getIsHydrating()) {
            var treeId = getTreeId(); // Use a captial R prefix for server-generated ids.
            id = ":" + identifierPrefix + "R" + treeId; // Unless this is the first id at this level, append a number at the end
            // that represents the position of this useId hook among all the useId
            // hooks for this fiber.
            var localId = localIdCounter++;
            if (localId > 0) id += "H" + localId.toString(32);
            id += ":";
        } else {
            // Use a lowercase r prefix for client-generated ids.
            var globalClientId = globalClientIdCounter++;
            id = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
        }
        hook.memoizedState = id;
        return id;
    }
    function updateId() {
        var hook = updateWorkInProgressHook();
        var id = hook.memoizedState;
        return id;
    }
    function dispatchReducerAction(fiber, queue, action) {
        if (typeof arguments[3] === "function") error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitionUpdate(root, queue, lane);
            }
        }
        markUpdateInDevTools(fiber, lane);
    }
    function dispatchSetState(fiber, queue, action) {
        if (typeof arguments[3] === "function") error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var alternate = fiber.alternate;
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                // The queue is currently empty, which means we can eagerly compute the
                // next state before entering the render phase. If the new state is the
                // same as the current state, we may be able to bail out entirely.
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                    var prevDispatcher;
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                    try {
                        var currentState = queue.lastRenderedState;
                        var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
                        // it, on the update object. If the reducer hasn't changed by the
                        // time we enter the render phase, then the eager state can be used
                        // without calling the reducer again.
                        update.hasEagerState = true;
                        update.eagerState = eagerState;
                        if (objectIs(eagerState, currentState)) {
                            // Fast path. We can bail out without scheduling React to re-render.
                            // It's still possible that we'll need to rebase this update later,
                            // if the component re-renders for a different reason and by that
                            // time the reducer has changed.
                            // TODO: Do we still need to entangle transitions in this case?
                            enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
                            return;
                        }
                    } catch (error) {} finally{
                        ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                }
            }
            var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitionUpdate(root, queue, lane);
            }
        }
        markUpdateInDevTools(fiber, lane);
    }
    function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
    }
    function enqueueRenderPhaseUpdate(queue, update) {
        // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
        var pending = queue.pending;
        if (pending === null) // This is the first update. Create a circular list.
        update.next = update;
        else {
            update.next = pending.next;
            pending.next = update;
        }
        queue.pending = update;
    } // TODO: Move to ReactFiberConcurrentUpdates?
    function entangleTransitionUpdate(root, queue, lane) {
        if (isTransitionLane(lane)) {
            var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they
            // must have finished. We can remove them from the shared queue, which
            // represents a superset of the actually pending lanes. In some cases we
            // may entangle more than we need to, but that's OK. In fact it's worse if
            // we *don't* entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function markUpdateInDevTools(fiber, lane, action) {
        markStateUpdateScheduled(fiber, lane);
    }
    var ContextOnlyDispatcher = {
        readContext: readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useMutableSource: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        unstable_isNewReconciler: enableNewReconciler
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var HooksDispatcherOnRerenderInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    var warnInvalidContextAccess = function() {
        error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    };
    var warnInvalidHookAccess = function() {
        error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
    };
    HooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            updateHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    var now$1 = Scheduler.unstable_now;
    var commitTime = 0;
    var layoutEffectStartTime = -1;
    var profilerStartTime = -1;
    var passiveEffectStartTime = -1;
    /**
 * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).
 *
 * The overall sequence is:
 *   1. render
 *   2. commit (and call `onRender`, `onCommit`)
 *   3. check for nested updates
 *   4. flush passive effects (and call `onPostCommit`)
 *
 * Nested updates are identified in step 3 above,
 * but step 4 still applies to the work that was just committed.
 * We use two flags to track nested updates then:
 * one tracks whether the upcoming update is a nested update,
 * and the other tracks whether the current update was a nested update.
 * The first value gets synced to the second at the start of the render phase.
 */ var currentUpdateIsNested = false;
    var nestedUpdateScheduled = false;
    function isCurrentUpdateNested() {
        return currentUpdateIsNested;
    }
    function markNestedUpdateScheduled() {
        nestedUpdateScheduled = true;
    }
    function resetNestedUpdateFlag() {
        currentUpdateIsNested = false;
        nestedUpdateScheduled = false;
    }
    function syncNestedUpdateFlag() {
        currentUpdateIsNested = nestedUpdateScheduled;
        nestedUpdateScheduled = false;
    }
    function getCommitTime() {
        return commitTime;
    }
    function recordCommitTime() {
        commitTime = now$1();
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now$1();
        if (fiber.actualStartTime < 0) fiber.actualStartTime = now$1();
    }
    function stopProfilerTimerIfRunning(fiber) {
        profilerStartTime = -1;
    }
    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
        if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function recordLayoutEffectDuration(fiber) {
        if (layoutEffectStartTime >= 0) {
            var elapsedTime = now$1() - layoutEffectStartTime;
            layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        root.effectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        parentStateNode.effectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function recordPassiveEffectDuration(fiber) {
        if (passiveEffectStartTime >= 0) {
            var elapsedTime = now$1() - passiveEffectStartTime;
            passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        if (root !== null) root.passiveEffectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        if (parentStateNode !== null) // Detached fibers have their state node cleared out.
                        // In this case, the return pointer is also cleared out,
                        // so we won't be able to report the time spent in this Profiler's subtree.
                        parentStateNode.passiveEffectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function startLayoutEffectTimer() {
        layoutEffectStartTime = now$1();
    }
    function startPassiveEffectTimer() {
        passiveEffectStartTime = now$1();
    }
    function transferActualDuration(fiber) {
        // Transfer time spent rendering these children so we don't lose it
        // after we rerender. This is used as a helper in special cases
        // where we should count the work of multiple passes.
        var child = fiber.child;
        while(child){
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
        }
    }
    function resolveDefaultProps(Component, baseProps) {
        if (Component && Component.defaultProps) {
            // Resolve default props. Taken from ReactElement
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for(var propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
            return props;
        }
        return baseProps;
    }
    var fakeInternalInstance = {};
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    var didWarnAboutLegacyContext$1;
    didWarnAboutStateAssignmentForComponent = new Set();
    didWarnAboutUninitializedState = new Set();
    didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    didWarnAboutDirectlyAssigningPropsToState = new Set();
    didWarnAboutUndefinedDerivedState = new Set();
    didWarnAboutContextTypeAndContextTypes = new Set();
    didWarnAboutInvalidateContextType = new Set();
    didWarnAboutLegacyContext$1 = new Set();
    var didWarnOnInvalidCallback = new Set();
    warnOnInvalidCallback = function(callback, callerName) {
        if (callback === null || typeof callback === "function") return;
        var key = callerName + "_" + callback;
        if (!didWarnOnInvalidCallback.has(key)) {
            didWarnOnInvalidCallback.add(key);
            error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
        }
    };
    warnOnUndefinedDerivedState = function(type, partialState) {
        if (partialState === undefined) {
            var componentName = getComponentNameFromType(type) || "Component";
            if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
            }
        }
    }; // This is so gross but it's at least non-critical and can be removed if
    // it causes problems. This is meant to give a nicer error message for
    // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
    // ...)) which otherwise throws a "_processChildContext is not a function"
    // exception.
    Object.defineProperty(fakeInternalInstance, "_processChildContext", {
        enumerable: false,
        value: function() {
            throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
    });
    Object.freeze(fakeInternalInstance);
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState;
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                // Invoke the function an extra time to help detect side-effects.
                partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        warnOnUndefinedDerivedState(ctor, partialState);
        var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);
        workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
        // base state.
        if (workInProgress.lanes === NoLanes) {
            // Queue is always non-null for classes
            var updateQueue = workInProgress.updateQueue;
            updateQueue.baseState = memoizedState;
        }
    }
    var classComponentUpdater = {
        isMounted: isMounted,
        enqueueSetState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, "setState");
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, "replaceState");
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, "forceUpdate");
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markForceUpdateScheduled(fiber, lane);
        }
    };
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if (typeof instance.shouldComponentUpdate === "function") {
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    // Invoke the function an extra time to help detect side-effects.
                    shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (shouldUpdate === undefined) error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
            return shouldUpdate;
        }
        if (ctor.prototype && ctor.prototype.isPureReactComponent) return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
        return true;
    }
    function checkClassInstance(workInProgress, ctor, newProps) {
        var instance = workInProgress.stateNode;
        var name = getComponentNameFromType(ctor) || "Component";
        var renderPresent = instance.render;
        if (!renderPresent) {
            if (ctor.prototype && typeof ctor.prototype.render === "function") error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
            else error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
        }
        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
        if (instance.propTypes) error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
        if (instance.contextType) error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
        if (ctor.childContextTypes && !didWarnAboutLegacyContext$1.has(ctor) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (workInProgress.mode & StrictLegacyMode) === NoMode) {
            didWarnAboutLegacyContext$1.add(ctor);
            error("%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() instead\n\n.Learn more about this warning here: https://reactjs.org/link/legacy-context", name);
        }
        if (ctor.contextTypes && !didWarnAboutLegacyContext$1.has(ctor) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (workInProgress.mode & StrictLegacyMode) === NoMode) {
            didWarnAboutLegacyContext$1.add(ctor);
            error("%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() with static contextType instead.\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", name);
        }
        if (instance.contextTypes) error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
        if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
        }
        if (typeof instance.componentShouldUpdate === "function") error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
        if (typeof instance.componentDidUnmount === "function") error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
        if (typeof instance.componentDidReceiveProps === "function") error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
        if (typeof instance.componentWillRecieveProps === "function") error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
        if (typeof instance.UNSAFE_componentWillRecieveProps === "function") error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
        var hasMutatedProps = instance.props !== newProps;
        if (instance.props !== undefined && hasMutatedProps) error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
        if (instance.defaultProps) error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
        if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
            error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
        }
        if (typeof instance.getDerivedStateFromProps === "function") error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof instance.getDerivedStateFromError === "function") error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof ctor.getSnapshotBeforeUpdate === "function") error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
        var _state = instance.state;
        if (_state && (typeof _state !== "object" || isArray(_state))) error("%s.state: must be set to an object or null", name);
        if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = classComponentUpdater;
        workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates
        set(instance, workInProgress);
        instance._reactInternalInstance = fakeInternalInstance;
    }
    function constructClassInstance(workInProgress, ctor, props) {
        var isLegacyContextConsumer = false;
        var unmaskedContext = emptyContextObject;
        var context = emptyContextObject;
        var contextType = ctor.contextType;
        if ("contextType" in ctor) {
            var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>
            if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === undefined) addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                else if (typeof contextType !== "object") addendum = " However, it is set to a " + typeof contextType + ".";
                else if (contextType.$$typeof === REACT_PROVIDER_TYPE) addendum = " Did you accidentally pass the Context.Provider instead?";
                else if (contextType._context !== undefined) // <Context.Consumer>
                addendum = " Did you accidentally pass the Context.Consumer instead?";
                else addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
            }
        }
        if (typeof contextType === "object" && contextType !== null) context = readContext(contextType);
        else {
            unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
        }
        var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                instance = new ctor(props, context); // eslint-disable-line no-new
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
        adoptClassInstance(workInProgress, instance);
        if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
            }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.
        if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
            var foundWillMountName = null;
            var foundWillReceivePropsName = null;
            var foundWillUpdateName = null;
            if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) foundWillMountName = "componentWillMount";
            else if (typeof instance.UNSAFE_componentWillMount === "function") foundWillMountName = "UNSAFE_componentWillMount";
            if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) foundWillReceivePropsName = "componentWillReceiveProps";
            else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
            if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) foundWillUpdateName = "componentWillUpdate";
            else if (typeof instance.UNSAFE_componentWillUpdate === "function") foundWillUpdateName = "UNSAFE_componentWillUpdate";
            if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
            }
        }
        // ReactFiberContext usually updates this cache but can't for newly-created instances.
        if (isLegacyContextConsumer) cacheContext(workInProgress, unmaskedContext, context);
        return instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount === "function") instance.componentWillMount();
        if (typeof instance.UNSAFE_componentWillMount === "function") instance.UNSAFE_componentWillMount();
        if (oldState !== instance.state) {
            error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress) || "Component");
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        if (typeof instance.componentWillReceiveProps === "function") instance.componentWillReceiveProps(newProps, nextContext);
        if (typeof instance.UNSAFE_componentWillReceiveProps === "function") instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        if (instance.state !== oldState) {
            var componentName = getComponentNameFromFiber(workInProgress) || "Component";
            if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    } // Invokes the mount life-cycles on a previously never rendered instance.
    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        checkClassInstance(workInProgress, ctor, newProps);
        var instance = workInProgress.stateNode;
        instance.props = newProps;
        instance.state = workInProgress.memoizedState;
        instance.refs = {};
        initializeUpdateQueue(workInProgress);
        var contextType = ctor.contextType;
        if (typeof contextType === "object" && contextType !== null) instance.context = readContext(contextType);
        else {
            var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            instance.context = getMaskedContext(workInProgress, unmaskedContext);
        }
        if (instance.state === newProps) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        instance.state = workInProgress.memoizedState;
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress.memoizedState;
        } // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
            // process them now.
            processUpdateQueue(workInProgress, newProps, instance, renderLanes);
            instance.state = workInProgress.memoizedState;
        }
        if (typeof instance.componentDidMount === "function") {
            var fiberFlags = Update;
            fiberFlags |= LayoutStatic;
            if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
            workInProgress.flags |= fiberFlags;
        }
    }
    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        var oldProps = workInProgress.memoizedProps;
        instance.props = oldProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === "object" && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function"; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (oldProps !== newProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === "function") {
                var fiberFlags = Update;
                fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
                workInProgress.flags |= fiberFlags;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
                if (typeof instance.componentWillMount === "function") instance.componentWillMount();
                if (typeof instance.UNSAFE_componentWillMount === "function") instance.UNSAFE_componentWillMount();
            }
            if (typeof instance.componentDidMount === "function") {
                var _fiberFlags = Update;
                _fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags;
            }
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === "function") {
                var _fiberFlags2 = Update;
                _fiberFlags2 |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags2 |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags2;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.
    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        cloneUpdateQueue(current, workInProgress);
        var unresolvedOldProps = workInProgress.memoizedProps;
        var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
        instance.props = oldProps;
        var unresolvedNewProps = workInProgress.pendingProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === "object" && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function"; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,
        // both before and after `shouldComponentUpdate` has been called. Not ideal,
        // but I'm loath to refactor this function. This only happens for memoized
        // components so it's not that common.
        enableLazyContextPropagation;
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === "function" || typeof instance.componentWillUpdate === "function")) {
                if (typeof instance.componentWillUpdate === "function") instance.componentWillUpdate(newProps, newState, nextContext);
                if (typeof instance.UNSAFE_componentWillUpdate === "function") instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
            }
            if (typeof instance.componentDidUpdate === "function") workInProgress.flags |= Update;
            if (typeof instance.getSnapshotBeforeUpdate === "function") workInProgress.flags |= Snapshot;
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized props/state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    }
    function createCapturedValueAtFiber(value, source) {
        // If the value is an error, call this function immediately after it is thrown
        // so the stack is accurate.
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source),
            digest: null
        };
    }
    function createCapturedValue(value, digest, stack) {
        return {
            value: value,
            source: null,
            stack: stack != null ? stack : null,
            digest: digest != null ? digest : null
        };
    }
    // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.
    function showErrorDialog(boundary, errorInfo) {
        return true;
    }
    function logCapturedError(boundary, errorInfo) {
        try {
            var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
            // This enables renderers like ReactNative to better manage redbox behavior.
            if (logError === false) return;
            var error = errorInfo.value;
            var source = errorInfo.source;
            var stack = errorInfo.stack;
            var componentStack = stack !== null ? stack : ""; // Browsers support silencing uncaught errors by calling
            // `preventDefault()` in window `error` handler.
            // We record this information as an expando on the error.
            if (error != null && error._suppressLogging) {
                if (boundary.tag === ClassComponent) // The error is recoverable and was silenced.
                // Ignore it and don't print the stack addendum.
                // This is handy for testing error boundaries without noise.
                return;
                 // The error is fatal. Since the silencing might have
                // been accidental, we'll surface it anyway.
                // However, the browser would have silenced the original error
                // so we'll print it first, and then print the stack addendum.
                console["error"](error); // Don't transform to our wrapper
            // For a more detailed description of this block, see:
            // https://github.com/facebook/react/pull/13384
            }
            var componentName = source ? getComponentNameFromFiber(source) : null;
            var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
            var errorBoundaryMessage;
            if (boundary.tag === HostRoot) errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
            else {
                var errorBoundaryName = getComponentNameFromFiber(boundary) || "Anonymous";
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
            }
            var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
            // We don't include the original error message and JS stack because the browser
            // has already printed it. Even if the application swallows the error, it is still
            // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
            console["error"](combinedMessage); // Don't transform to our wrapper
        } catch (e) {
            // This method must not throw, or React internal state will get messed up.
            // If console.error is overridden, or logCapturedError() shows a dialog that throws,
            // we want to report this error outside of the normal stack as a last resort.
            // https://github.com/facebook/react/issues/13188
            setTimeout(function() {
                throw e;
            });
        }
    }
    var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
    function createRootErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.
        update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: null
        };
        var error = errorInfo.value;
        update.callback = function() {
            onUncaughtError(error);
            logCapturedError(fiber, errorInfo);
        };
        return update;
    }
    function createClassErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane);
        update.tag = CaptureUpdate;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if (typeof getDerivedStateFromError === "function") {
            var error$1 = errorInfo.value;
            update.payload = function() {
                return getDerivedStateFromError(error$1);
            };
            update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
                logCapturedError(fiber, errorInfo);
            };
        }
        var inst = fiber.stateNode;
        if (inst !== null && typeof inst.componentDidCatch === "function") update.callback = function callback() {
            markFailedErrorBoundaryForHotReloading(fiber);
            logCapturedError(fiber, errorInfo);
            if (typeof getDerivedStateFromError !== "function") // To preserve the preexisting retry behavior of error boundaries,
            // we keep track of which ones already failed during this batch.
            // This gets reset before we yield back to the browser.
            // TODO: Warn in strict mode if getDerivedStateFromError is
            // not defined.
            markLegacyErrorBoundaryAsFailed(this);
            var error$1 = errorInfo.value;
            var stack = errorInfo.stack;
            this.componentDidCatch(error$1, {
                componentStack: stack !== null ? stack : ""
            });
            if (typeof getDerivedStateFromError !== "function") // If componentDidCatch is the only error boundary method defined,
            // then it needs to call setState to recover from errors.
            // If no state update is scheduled then the boundary will swallow the error.
            {
                if (!includesSomeLane(fiber.lanes, SyncLane)) error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
            }
        };
        return update;
    }
    function attachPingListener(root, wakeable, lanes) {
        // Attach a ping listener
        //
        // The data might resolve before we have a chance to commit the fallback. Or,
        // in the case of a refresh, we'll never commit a fallback. So we need to
        // attach a listener now. When it resolves ("pings"), we can decide whether to
        // try rendering the tree again.
        //
        // Only attach a listener if one does not already exist for the lanes
        // we're currently rendering (which acts like a "thread ID" here).
        //
        // We only need to do this in concurrent mode. Legacy Suspense always
        // commits fallbacks synchronously, so there are no pings.
        var pingCache = root.pingCache;
        var threadIDs;
        if (pingCache === null) {
            pingCache = root.pingCache = new PossiblyWeakMap$1();
            threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === undefined) {
                threadIDs = new Set();
                pingCache.set(wakeable, threadIDs);
            }
        }
        if (!threadIDs.has(lanes)) {
            // Memoize using the thread ID to prevent redundant listeners.
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
            if (isDevToolsPresent) // If we have pending work still, restore the original updaters
            restorePendingUpdaters(root, lanes);
            wakeable.then(ping, ping);
        }
    }
    function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {
        // Retry listener
        //
        // If the fallback does commit, we need to attach a different type of
        // listener. This one schedules an update on the Suspense boundary to turn
        // the fallback state off.
        //
        // Stash the wakeable on the boundary fiber so we can access it in the
        // commit phase.
        //
        // When the wakeable resolves, we'll attempt to render the boundary
        // again ("retry").
        var wakeables = suspenseBoundary.updateQueue;
        if (wakeables === null) {
            var updateQueue = new Set();
            updateQueue.add(wakeable);
            suspenseBoundary.updateQueue = updateQueue;
        } else wakeables.add(wakeable);
    }
    function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
        // A legacy mode Suspense quirk, only relevant to hook components.
        var tag = sourceFiber.tag;
        if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
            var currentSource = sourceFiber.alternate;
            if (currentSource) {
                sourceFiber.updateQueue = currentSource.updateQueue;
                sourceFiber.memoizedState = currentSource.memoizedState;
                sourceFiber.lanes = currentSource.lanes;
            } else {
                sourceFiber.updateQueue = null;
                sourceFiber.memoizedState = null;
            }
        }
    }
    function getNearestSuspenseBoundaryToCapture(returnFiber) {
        var node = returnFiber;
        do {
            if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) return node;
             // This boundary already captured during this render. Continue to the next
            // boundary.
            node = node.return;
        }while (node !== null);
        return null;
    }
    function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {
        // This marks a Suspense boundary so that when we're unwinding the stack,
        // it captures the suspended "exception" and does a second (fallback) pass.
        if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
            // Legacy Mode Suspense
            //
            // If the boundary is in legacy mode, we should *not*
            // suspend the commit. Pretend as if the suspended component rendered
            // null and keep rendering. When the Suspense boundary completes,
            // we'll do a second pass to render the fallback.
            if (suspenseBoundary === returnFiber) // Special case where we suspended while reconciling the children of
            // a Suspense boundary's inner Offscreen wrapper fiber. This happens
            // when a React.lazy component is a direct child of a
            // Suspense boundary.
            //
            // Suspense boundaries are implemented as multiple fibers, but they
            // are a single conceptual unit. The legacy mode behavior where we
            // pretend the suspended fiber committed as `null` won't work,
            // because in this case the "suspended" fiber is the inner
            // Offscreen wrapper.
            //
            // Because the contents of the boundary haven't started rendering
            // yet (i.e. nothing in the tree has partially rendered) we can
            // switch to the regular, concurrent mode behavior: mark the
            // boundary with ShouldCapture and enter the unwind phase.
            suspenseBoundary.flags |= ShouldCapture;
            else {
                suspenseBoundary.flags |= DidCapture;
                sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
                // But we shouldn't call any lifecycle methods or callbacks. Remove
                // all lifecycle effect tags.
                sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                if (sourceFiber.tag === ClassComponent) {
                    var currentSourceFiber = sourceFiber.alternate;
                    if (currentSourceFiber === null) // This is a new mount. Change the tag so it's not mistaken for a
                    // completed class component. For example, we should not call
                    // componentWillUnmount if it is deleted.
                    sourceFiber.tag = IncompleteClassComponent;
                    else {
                        // When we try rendering again, we should not reuse the current fiber,
                        // since it's known to be in an inconsistent state. Use a force update to
                        // prevent a bail out.
                        var update = createUpdate(NoTimestamp, SyncLane);
                        update.tag = ForceUpdate;
                        enqueueUpdate(sourceFiber, update, SyncLane);
                    }
                } // The source fiber did not complete. Mark it with Sync priority to
                // indicate that it still has pending work.
                sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
            }
            return suspenseBoundary;
        } // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.
        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. Transitions apply
        // to this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.
        suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in
        // the begin phase to prevent an early bailout.
        suspenseBoundary.lanes = rootRenderLanes;
        return suspenseBoundary;
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        // The source fiber did not complete.
        sourceFiber.flags |= Incomplete;
        if (isDevToolsPresent) // If we have pending work still, restore the original updaters
        restorePendingUpdaters(root, rootRenderLanes);
        if (value !== null && typeof value === "object" && typeof value.then === "function") {
            // This is a wakeable. The component suspended.
            var wakeable = value;
            resetSuspendedComponent(sourceFiber);
            if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) markDidThrowWhileHydratingDEV();
            var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
            if (suspenseBoundary !== null) {
                suspenseBoundary.flags &= ~ForceClientRender;
                markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always
                // commits fallbacks synchronously, so there are no pings.
                if (suspenseBoundary.mode & ConcurrentMode) attachPingListener(root, wakeable, rootRenderLanes);
                attachRetryListener(suspenseBoundary, root, wakeable);
                return;
            } else {
                // No boundary was found. Unless this is a sync update, this is OK.
                // We can suspend and wait for more data to arrive.
                if (!includesSyncLane(rootRenderLanes)) {
                    // This is not a sync update. Suspend. Since we're not activating a
                    // Suspense boundary, this will unwind all the way to the root without
                    // performing a second pass to render a fallback. (This is arguably how
                    // refresh transitions should work, too, since we're not going to commit
                    // the fallbacks anyway.)
                    //
                    // This case also applies to initial hydration.
                    attachPingListener(root, wakeable, rootRenderLanes);
                    renderDidSuspendDelayIfPossible();
                    return;
                } // This is a sync/discrete update. We treat this case like an error
                // because discrete renders are expected to produce a complete tree
                // synchronously to maintain consistency with external state.
                var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition."); // If we're outside a transition, fall through to the regular error path.
                // The error will be caught by the nearest suspense boundary.
                value = uncaughtSuspenseError;
            }
        } else // This is a regular error, not a Suspense wakeable.
        if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
            markDidThrowWhileHydratingDEV();
            var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber); // If the error was thrown during hydration, we may be able to recover by
            // discarding the dehydrated content and switching to a client render.
            // Instead of surfacing the error, find the nearest Suspense boundary
            // and render it again without hydration.
            if (_suspenseBoundary !== null) {
                if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) // Set a flag to indicate that we should try rendering the normal
                // children again, not the fallback.
                _suspenseBoundary.flags |= ForceClientRender;
                markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // Even though the user may not be affected by this error, we should
                // still log it so it can be fixed.
                queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
                return;
            }
        }
        value = createCapturedValueAtFiber(value, sourceFiber);
        renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start
        // over and traverse parent path again, this time treating the exception
        // as an error.
        var workInProgress = returnFiber;
        do {
            switch(workInProgress.tag){
                case HostRoot:
                    var _errorInfo = value;
                    workInProgress.flags |= ShouldCapture;
                    var lane = pickArbitraryLane(rootRenderLanes);
                    workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);
                    var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);
                    enqueueCapturedUpdate(workInProgress, update);
                    return;
                case ClassComponent:
                    // Capture and retry
                    var errorInfo = value;
                    var ctor = workInProgress.type;
                    var instance = workInProgress.stateNode;
                    if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                        workInProgress.flags |= ShouldCapture;
                        var _lane = pickArbitraryLane(rootRenderLanes);
                        workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state
                        var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);
                        enqueueCapturedUpdate(workInProgress, _update);
                        return;
                    }
                    break;
            }
            workInProgress = workInProgress.return;
        }while (workInProgress !== null);
    }
    function getSuspendedCache() {
        return null;
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    var didWarnAboutDefaultPropsOnFunctionComponent;
    didWarnAboutBadClass = {};
    didWarnAboutModulePatternComponent = {};
    didWarnAboutContextTypeOnFunctionComponent = {};
    didWarnAboutGetDerivedStateOnFunctionComponent = {};
    didWarnAboutFunctionRefs = {};
    didWarnAboutReassigningProps = false;
    didWarnAboutRevealOrder = {};
    didWarnAboutTailOptions = {};
    didWarnAboutDefaultPropsOnFunctionComponent = {};
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        if (current === null) // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
        else // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
    }
    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
        // This function is fork of reconcileChildren. It's used in cases where we
        // want to reconcile without matching against the existing set. This has the
        // effect of all current children being unmounted; even if the type and key
        // are the same, the old child is unmounted and a new child is created.
        //
        // To do this, we're going to go through the reconcile algorithm twice. In
        // the first pass, we schedule a deletion for all the current children by
        // passing null.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
        // pass null in place of where we usually pass the current child set. This has
        // the effect of remounting all children regardless of whether their
        // identities match.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
        }
        var render = Component.render;
        var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (current === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
            Component.defaultProps === undefined) {
                var resolvedType = type;
                resolvedType = resolveFunctionForHotReloading(type);
                // and with only the default shallow comparison, we upgrade it
                // to a SimpleMemoComponent to allow fast path updates.
                workInProgress.tag = SimpleMemoComponent;
                workInProgress.type = resolvedType;
                validateFunctionComponentInDev(workInProgress, type);
                return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);
            }
            var innerPropTypes = type.propTypes;
            if (innerPropTypes) // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(type));
            if (Component.defaultProps !== undefined) {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
                    error("%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.", componentName);
                    didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
                }
            }
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            child.ref = workInProgress.ref;
            child.return = workInProgress;
            workInProgress.child = child;
            return child;
        }
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;
        if (_innerPropTypes) // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(_innerPropTypes, nextProps, "prop", getComponentNameFromType(_type));
        var currentChild = current.child; // This is always exactly one child
        var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
        if (!hasScheduledUpdateOrContext) {
            // This will be the props with resolved defaultProps,
            // unlike current.memoizedProps which will be the unresolved ones.
            var prevProps = currentChild.memoizedProps; // Default to shallow comparison
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        var newChild = createWorkInProgress(currentChild, nextProps);
        newChild.ref = workInProgress.ref;
        newChild.return = workInProgress;
        workInProgress.child = newChild;
        return newChild;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var outerMemoType = workInProgress.elementType;
            if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                // We warn when you define propTypes on lazy()
                // so let's just skip over it to find memo() outer wrapper.
                // Inner props for memo are validated later.
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    outerMemoType = init(payload);
                } catch (x) {
                    outerMemoType = null;
                } // Inner propTypes will be validated in the function component path.
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) checkPropTypes(outerPropTypes, nextProps, "prop", getComponentNameFromType(outerMemoType));
            }
        }
        if (current !== null) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we
                // would during a normal fiber bailout.
                //
                // We don't have strong guarantees that the props object is referentially
                // equal during updates where we can't bail out anyway — like if the props
                // are shallowly equal, but there's a local state or context update in the
                // same batch.
                //
                // However, as a principle, we should aim to make the behavior consistent
                // across different ways of memoizing a component. For example, React.memo
                // has a different internal Fiber layout if you pass a normal function
                // component (SimpleMemoComponent) versus if you pass a different type
                // like forwardRef (MemoComponent). But this is an implementation detail.
                // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't
                // affect whether the props object is reused during a bailout.
                workInProgress.pendingProps = nextProps = prevProps;
                if (!checkScheduledUpdateOrContext(current, renderLanes)) {
                    // The pending lanes were cleared at the beginning of beginWork. We're
                    // about to bail out, but there might be other lanes that weren't
                    // included in the current render. Usually, the priority level of the
                    // remaining updates is accumulated during the evaluation of the
                    // component (i.e. when processing the update queue). But since since
                    // we're bailing out early *without* evaluating the component, we need
                    // to account for it here, too. Reset to the value of the current fiber.
                    // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
                    // because a MemoComponent fiber does not have hooks or an update queue;
                    // rather, it wraps around an inner component, which may or may not
                    // contains hooks.
                    // TODO: Move the reset at in beginWork out of the common path so that
                    // this is no longer necessary.
                    workInProgress.lanes = current.lanes;
                    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        var prevState = current !== null ? current.memoizedState : null;
        if (nextProps.mode === "hidden" || enableLegacyHidden) {
            // Rendering a hidden tree.
            if ((workInProgress.mode & ConcurrentMode) === NoMode) {
                // In legacy sync mode, don't defer the subtree. Render it now.
                // TODO: Consider how Offscreen should work with transitions in the future
                var nextState = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = nextState;
                pushRenderLanes(workInProgress, renderLanes);
            } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
                var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out
                // and resume this tree later.
                var nextBaseLanes;
                if (prevState !== null) {
                    var prevBaseLanes = prevState.baseLanes;
                    nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
                } else nextBaseLanes = renderLanes;
                 // Schedule this fiber to re-render at offscreen priority. Then bailout.
                workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
                var _nextState = {
                    baseLanes: nextBaseLanes,
                    cachePool: spawnedCachePool,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState;
                workInProgress.updateQueue = null;
                // to avoid a push/pop misalignment.
                pushRenderLanes(workInProgress, nextBaseLanes);
                return null;
            } else {
                // This is the second render. The surrounding visible content has already
                // committed. Now we resume rendering the hidden tree.
                // Rendering at offscreen, so we can clear the base lanes.
                var _nextState2 = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.
                var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
                pushRenderLanes(workInProgress, subtreeRenderLanes);
            }
        } else {
            // Rendering a visible tree.
            var _subtreeRenderLanes;
            if (prevState !== null) {
                // We're going from hidden -> visible.
                _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);
                workInProgress.memoizedState = null;
            } else // We weren't previously hidden, and we still aren't, so there's nothing
            // special to do. Need to push to the stack regardless, though, to avoid
            // a push/pop misalignment.
            _subtreeRenderLanes = renderLanes;
            pushRenderLanes(workInProgress, _subtreeRenderLanes);
        }
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    } // Note: These happen to have identical begin phases, for now. We shouldn't hold
    function updateFragment(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMode(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateProfiler(current, workInProgress, renderLanes) {
        workInProgress.flags |= Update;
        // Reset effect durations for the next eventual effect phase.
        // These are reset during render to allow the DevTools commit hook a chance to read them,
        var stateNode = workInProgress.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (current === null && ref !== null || current !== null && current.ref !== ref) {
            // Schedule a Ref effect
            workInProgress.flags |= Ref;
            workInProgress.flags |= RefStatic;
        }
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
        }
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        // This is used by DevTools to force a boundary to error.
        switch(shouldError(workInProgress)){
            case false:
                var _instance = workInProgress.stateNode;
                var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.
                // Is there a better way to do this?
                var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);
                var state = tempInstance.state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
            case true:
                workInProgress.flags |= DidCapture;
                workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes
                var error$1 = new Error("Simulated error coming from DevTools");
                var lane = pickArbitraryLane(renderLanes);
                workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state
                var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);
                enqueueCapturedUpdate(workInProgress, update);
                break;
        }
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
        }
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        var instance = workInProgress.stateNode;
        var shouldUpdate;
        if (instance === null) {
            resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.
            constructClassInstance(workInProgress, Component, nextProps);
            mountClassInstance(workInProgress, Component, nextProps, renderLanes);
            shouldUpdate = true;
        } else if (current === null) // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
        else shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
        var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);
        var inst = workInProgress.stateNode;
        if (shouldUpdate && inst.props !== nextProps) {
            if (!didWarnAboutReassigningProps) error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress) || "a component");
            didWarnAboutReassigningProps = true;
        }
        return nextUnitOfWork;
    }
    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
        // Refs should update even if shouldComponentUpdate returns false
        markRef(current, workInProgress);
        var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;
        if (!shouldUpdate && !didCaptureError) {
            // Context providers should defer to sCU for rendering
            if (hasContext) invalidateContextProvider(workInProgress, Component, false);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        var instance = workInProgress.stateNode; // Rerender
        ReactCurrentOwner$1.current = workInProgress;
        var nextChildren;
        if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
            // If we captured an error, but getDerivedStateFromError is not defined,
            // unmount all the children. componentDidCatch will schedule an update to
            // re-render a fallback. This is temporary until we migrate everyone to
            // the new API.
            // TODO: Warn in a future release.
            nextChildren = null;
            stopProfilerTimerIfRunning();
        } else {
            markComponentRenderStarted(workInProgress);
            setIsRendering(true);
            nextChildren = instance.render();
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    instance.render();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            setIsRendering(false);
            markComponentRenderStopped();
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        if (current !== null && didCaptureError) // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
         // Memoize state using the values we just used to render.
        // TODO: Restructure so we never read values from the instance.
        workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.
        if (hasContext) invalidateContextProvider(workInProgress, Component, true);
        return workInProgress.child;
    }
    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        if (root.pendingContext) pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
        else if (root.context) // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
        pushHostContainer(workInProgress, root.containerInfo);
    }
    function updateHostRoot(current, workInProgress, renderLanes) {
        pushHostRootContext(workInProgress);
        if (current === null) throw new Error("Should have a current fiber. This is a bug in React.");
        var nextProps = workInProgress.pendingProps;
        var prevState = workInProgress.memoizedState;
        var prevChildren = prevState.element;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        var nextState = workInProgress.memoizedState;
        var root = workInProgress.stateNode;
        // being called "element".
        var nextChildren = nextState.element;
        if (prevState.isDehydrated) {
            // This is a hydration root whose shell has not yet hydrated. We should
            // attempt to hydrate.
            // Flip isDehydrated to false to indicate that when this render
            // finishes, the root will no longer be dehydrated.
            var overrideState = {
                element: nextChildren,
                isDehydrated: false,
                cache: nextState.cache,
                pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
                transitions: nextState.transitions
            };
            var updateQueue = workInProgress.updateQueue; // `baseState` can always be the last state because the root doesn't
            // have reducer functions so it doesn't need rebasing.
            updateQueue.baseState = overrideState;
            workInProgress.memoizedState = overrideState;
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during a previous attempt to hydrate the shell, so we
                // forced a client render.
                var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress);
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError);
            } else if (nextChildren !== prevChildren) {
                var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress);
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, _recoverableError);
            } else {
                // The outermost shell has not hydrated yet. Start hydrating.
                enterHydrationState(workInProgress);
                var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
                workInProgress.child = child;
                var node = child;
                while(node){
                    // Mark each child as hydrating. This is a fast path to know whether this
                    // tree is part of a hydrating tree. This is used to determine if a child
                    // node has fully mounted yet, and for scheduling event replaying.
                    // Conceptually this is similar to Placement in that a new subtree is
                    // inserted into the React tree here. It just happens to not need DOM
                    // mutations because it already exists.
                    node.flags = node.flags & ~Placement | Hydrating;
                    node = node.sibling;
                }
            }
        } else {
            // Root is not dehydrated. Either this is a client-only root, or it
            // already hydrated.
            resetHydrationState();
            if (nextChildren === prevChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        }
        return workInProgress.child;
    }
    function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError) {
        // Revert to client rendering.
        resetHydrationState();
        queueHydrationError(recoverableError);
        workInProgress.flags |= ForceClientRender;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostComponent(current, workInProgress, renderLanes) {
        pushHostContext(workInProgress);
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type;
        var nextProps = workInProgress.pendingProps;
        var prevProps = current !== null ? current.memoizedProps : null;
        var nextChildren = nextProps.children;
        var isDirectTextChild = shouldSetTextContent(type, nextProps);
        if (isDirectTextChild) // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also has access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
        else if (prevProps !== null && shouldSetTextContent(type, prevProps)) // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.flags |= ContentReset;
        markRef(current, workInProgress);
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostText(current, workInProgress) {
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
         // Nothing to do here. This is terminal. We'll do the completion step
        // immediately after.
        return null;
    }
    function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
        var props = workInProgress.pendingProps;
        var lazyComponent = elementType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;
        var Component = init(payload); // Store the unwrapped component in the type.
        workInProgress.type = Component;
        var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
        var resolvedProps = resolveDefaultProps(Component, props);
        var child;
        switch(resolvedTag){
            case FunctionComponent:
                validateFunctionComponentInDev(workInProgress, Component);
                workInProgress.type = Component = resolveFunctionForHotReloading(Component);
                child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ClassComponent:
                workInProgress.type = Component = resolveClassForHotReloading(Component);
                child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ForwardRef:
                workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
                child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case MemoComponent:
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, resolvedProps, "prop", getComponentNameFromType(Component));
                }
                child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes);
                return child;
        }
        var hint = "";
        if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) hint = " Did you wrap a component in React.lazy() more than once?";
        // because the fact that it's a separate type of work is an
        // implementation detail.
        throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
    }
    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.
        workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
        // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        constructClassInstance(workInProgress, Component, nextProps);
        mountClassInstance(workInProgress, Component, nextProps, renderLanes);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
    }
    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
        var props = workInProgress.pendingProps;
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
        prepareToReadContext(workInProgress, renderLanes);
        var value;
        var hasId;
        markComponentRenderStarted(workInProgress);
        if (Component.prototype && typeof Component.prototype.render === "function") {
            var componentName = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutBadClass[componentName]) {
                error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        setIsRendering(true);
        ReactCurrentOwner$1.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        hasId = checkDidRenderIdHook();
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        // Support for module components is deprecated and is removed behind a flag.
        // Whether or not it would crash later, we want to show a good message in DEV first.
        if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === undefined) {
            var _componentName = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutModulePatternComponent[_componentName]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
            }
        }
        if (// Eventually we'll delete this branch altogether.
        typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === undefined) {
            var _componentName2 = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
            }
            workInProgress.tag = ClassComponent; // Throw out any hooks that were used.
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
            // During mounting we don't know the child context yet as the instance doesn't exist.
            // We will invalidate the child context in finishClassComponent() right after rendering.
            var hasContext = false;
            if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress);
            } else hasContext = false;
            workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
            initializeUpdateQueue(workInProgress);
            adoptClassInstance(workInProgress, value);
            mountClassInstance(workInProgress, Component, props, renderLanes);
            return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
        } else {
            // Proceed under the assumption that this is a function component
            workInProgress.tag = FunctionComponent;
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
                    hasId = checkDidRenderIdHook();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
            reconcileChildren(null, workInProgress, value, renderLanes);
            validateFunctionComponentInDev(workInProgress, Component);
            return workInProgress.child;
        }
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        if (Component) {
            if (Component.childContextTypes) error("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
        }
        if (workInProgress.ref !== null) {
            var info = "";
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) info += "\n\nCheck the render method of `" + ownerName + "`.";
            var warningKey = ownerName || "";
            var debugSource = workInProgress._debugSource;
            if (debugSource) warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
            if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
            }
        }
        if (Component.defaultProps !== undefined) {
            var componentName = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
                error("%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.", componentName);
                didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
            }
        }
        if (typeof Component.getDerivedStateFromProps === "function") {
            var _componentName3 = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
            }
        }
        if (typeof Component.contextType === "object" && Component.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
            }
        }
    }
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: NoLane
    };
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes,
            cachePool: getSuspendedCache(),
            transitions: null
        };
    }
    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
        var cachePool = null;
        return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),
            cachePool: cachePool,
            transitions: prevOffscreenState.transitions
        };
    } // TODO: Probably should inline this back
    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
        // If we're already showing a fallback, there are cases where we need to
        // remain on that fallback regardless of whether the content has resolved.
        // For example, SuspenseList coordinates when nested content appears.
        if (current !== null) {
            var suspenseState = current.memoizedState;
            if (suspenseState === null) // Currently showing content. Don't hide it, even if ForceSuspenseFallback
            // is true. More precise name might be "ForceRemainSuspenseFallback".
            // Note: This is a factoring smell. Can't remain on a fallback if there's
            // no fallback to remain on.
            return false;
        } // Not currently showing content. Consult the Suspense context.
        return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
    }
    function getRemainingWorkInPrimaryTree(current, renderLanes) {
        // TODO: Should not remove render lanes that were pinged during this render
        return removeLanes(current.childLanes, renderLanes);
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.
        if (shouldSuspend(workInProgress)) workInProgress.flags |= DidCapture;
        var suspenseContext = suspenseStackCursor.current;
        var showFallback = false;
        var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;
        if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
            // Something in this boundary's subtree already suspended. Switch to
            // rendering the fallback children.
            showFallback = true;
            workInProgress.flags &= ~DidCapture;
        } else // Attempting the main content
        if (current === null || current.memoizedState !== null) suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
        // boundary's children. This involves some custom reconciliation logic. Two
        // main reasons this is so complicated.
        //
        // First, Legacy Mode has different semantics for backwards compatibility. The
        // primary tree will commit in an inconsistent state, so when we do the
        // second pass to render the fallback, we do some exceedingly, uh, clever
        // hacks to make that not totally break. Like transferring effects and
        // deletions from hidden tree. In Concurrent Mode, it's much simpler,
        // because we bailout on the primary tree completely and leave it in its old
        // state, no effects. Same as what we do for Offscreen (except that
        // Offscreen doesn't have the first render pass).
        //
        // Second is hydration. During hydration, the Suspense fiber has a slightly
        // different layout, where the child points to a dehydrated fragment, which
        // contains the DOM rendered by the server.
        //
        // Third, even if you set all that aside, Suspense is like error boundaries in
        // that we first we try to render one tree, and if that fails, we render again
        // and switch to a different tree. Like a try/catch block. So we have to track
        // which branch we're currently rendering. Ideally we would model this using
        // a stack.
        if (current === null) {
            // Initial mount
            // Special path for hydration
            // If we're currently hydrating, try to hydrate this boundary.
            tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
            var suspenseState = workInProgress.memoizedState;
            if (suspenseState !== null) {
                var dehydrated = suspenseState.dehydrated;
                if (dehydrated !== null) return mountDehydratedSuspenseComponent(workInProgress, dehydrated);
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
                var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var primaryChildFragment = workInProgress.child;
                primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackFragment;
            } else return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);
        } else {
            // This is an update.
            // Special path for hydration
            var prevState = current.memoizedState;
            if (prevState !== null) {
                var _dehydrated = prevState.dehydrated;
                if (_dehydrated !== null) return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);
            }
            if (showFallback) {
                var _nextFallbackChildren = nextProps.fallback;
                var _nextPrimaryChildren = nextProps.children;
                var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);
                var _primaryChildFragment2 = workInProgress.child;
                var prevOffscreenState = current.child.memoizedState;
                _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
                _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
            } else {
                var _nextPrimaryChildren2 = nextProps.children;
                var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);
                workInProgress.memoizedState = null;
                return _primaryChildFragment3;
            }
        }
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
        var mode = workInProgress.mode;
        var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
        primaryChildFragment.return = workInProgress;
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var progressedPrimaryFragment = workInProgress.child;
        var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
        };
        var primaryChildFragment;
        var fallbackChildFragment;
        if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
            // In legacy mode, we commit the primary tree as if it successfully
            // completed, even though it's in an inconsistent state.
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = 0;
                primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        } else {
            primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        }
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {
        // The props argument to `createFiberFromOffscreen` is `any` typed, so we use
        // this wrapper function to constrain it.
        return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
    }
    function updateWorkInProgressOffscreenFiber(current, offscreenProps) {
        // The props argument to `createWorkInProgress` is `any` typed, so we use this
        // wrapper function to constrain it.
        return createWorkInProgress(current, offscreenProps);
    }
    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: "visible",
            children: primaryChildren
        });
        if ((workInProgress.mode & ConcurrentMode) === NoMode) primaryChildFragment.lanes = renderLanes;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = null;
        if (currentFallbackChildFragment !== null) {
            // Delete the fallback child fragment
            var deletions = workInProgress.deletions;
            if (deletions === null) {
                workInProgress.deletions = [
                    currentFallbackChildFragment
                ];
                workInProgress.flags |= ChildDeletion;
            } else deletions.push(currentFallbackChildFragment);
        }
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
        };
        var primaryChildFragment;
        if (// completed, even though it's in an inconsistent state.
        (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        workInProgress.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            } // The fallback fiber was added as a deletion during the first pass.
            // However, since we're going to remain on the fallback, we no longer want
            // to delete it.
            workInProgress.deletions = null;
        } else {
            primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps); // Since we're reusing a current tree, we need to reuse the flags, too.
            // (We don't do this in legacy mode, because in legacy mode we don't re-use
            // the current tree; see previous branch.)
            primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
        }
        var fallbackChildFragment;
        if (currentFallbackChildFragment !== null) fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
        else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
            // mounted but this is a new fiber.
            fallbackChildFragment.flags |= Placement;
        }
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {
        // Falling back to client rendering. Because this has performance
        // implications, it's considered a recoverable error, even though the user
        // likely won't observe anything wrong with the UI.
        //
        // The error is passed in as an argument to enforce that every caller provide
        // a custom message, or explicitly opt out (currently the only path that opts
        // out is legacy mode; every concurrent path provides an error).
        if (recoverableError !== null) queueHydrationError(recoverableError);
         // This will add the old fiber to the deletion list
        reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.
        var nextProps = workInProgress.pendingProps;
        var primaryChildren = nextProps.children;
        var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already
        // mounted but this is a new fiber.
        primaryChildFragment.flags |= Placement;
        workInProgress.memoizedState = null;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var fiberMode = workInProgress.mode;
        var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
        var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense
        // boundary) already mounted but this is a new fiber.
        fallbackChildFragment.flags |= Placement;
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        if ((workInProgress.mode & ConcurrentMode) !== NoMode) // We will have dropped the effect list which contains the
        // deletion. We need to reconcile to delete the current child.
        reconcileChildFibers(workInProgress, current.child, null, renderLanes);
        return fallbackChildFragment;
    }
    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {
        // During the first pass, we'll bail out and not drill into the children.
        // Instead, we'll leave the content in place and try to hydrate it later.
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            error("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
            workInProgress.lanes = laneToLanes(SyncLane);
        } else if (isSuspenseInstanceFallback(suspenseInstance)) // This is a client-only boundary. Since we won't get any content from the server
        // for this, we need to schedule that at a higher priority based on when it would
        // have timed out. In theory we could render it in this pass but it would have the
        // wrong priority associated with it and will prevent hydration of parent path.
        // Instead, we'll leave work left on it to render it in a separate commit.
        // TODO This time should be the time at which the server rendered response that is
        // a parent to this boundary was displayed. However, since we currently don't have
        // a protocol to transfer that time, we'll just estimate it by using the current
        // time. This will mean that Suspense timeouts are slightly shifted to later than
        // they should be.
        // Schedule a normal pri update to render this content.
        workInProgress.lanes = laneToLanes(DefaultHydrationLane);
        else // We'll continue hydrating the rest at offscreen priority since we'll already
        // be showing the right content coming from the server, it is no rush.
        workInProgress.lanes = laneToLanes(OffscreenLane);
        return null;
    }
    function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {
        if (!didSuspend) {
            // This is the first render pass. Attempt to hydrate.
            // We should never be hydrating at this point because it is the first pass,
            // but after we've already committed once.
            warnIfHydrating();
            if ((workInProgress.mode & ConcurrentMode) === NoMode) return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null);
            if (isSuspenseInstanceFallback(suspenseInstance)) {
                // This boundary is in a permanent fallback state. In this case, we'll never
                // get an update and we'll never be able to hydrate the final content. Let's just try the
                // client side render instead.
                var digest, message, stack;
                var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
                digest = _getSuspenseInstanceF.digest;
                message = _getSuspenseInstanceF.message;
                stack = _getSuspenseInstanceF.stack;
                var error;
                if (message) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error(message);
                else error = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                var capturedValue = createCapturedValue(error, digest, stack);
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);
            }
            // any context has changed, we need to treat is as if the input might have changed.
            var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);
            if (didReceiveUpdate || hasContextChanged) {
                // This boundary has changed since the first render. This means that we are now unable to
                // hydrate it. We might still be able to hydrate it using a higher priority lane.
                var root = getWorkInProgressRoot();
                if (root !== null) {
                    var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);
                    if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                        // Intentionally mutating since this render will get interrupted. This
                        // is one of the very rare times where we mutate the current tree
                        // during the render phase.
                        suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render
                        var eventTime = NoTimestamp;
                        enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);
                        scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);
                    }
                } // If we have scheduled higher pri work above, this will probably just abort the render
                // since we now have higher priority work, but in case it doesn't, we need to prepare to
                // render something, if we time out. Even if that requires us to delete everything and
                // skip hydration.
                // Delay having to do this as long as the suspense timeout allows us.
                renderDidSuspendDelayIfPossible();
                var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);
            } else if (isSuspenseInstancePending(suspenseInstance)) {
                // This component is still pending more data from the server, so we can't hydrate its
                // content. We treat it as if this component suspended itself. It might seem as if
                // we could just try to render it client-side instead. However, this will perform a
                // lot of unnecessary work and is unlikely to complete since it often will suspend
                // on missing data anyway. Additionally, the server might be able to render more
                // than we can on the client yet. In that case we'd end up with more fallback states
                // on the client than if we just leave it alone. If the server times out or errors
                // these should update this boundary to the permanent Fallback state instead.
                // Mark it as having captured (i.e. suspended).
                workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.
                workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.
                var retry = retryDehydratedSuspenseBoundary.bind(null, current);
                registerSuspenseInstanceRetry(suspenseInstance, retry);
                return null;
            } else {
                // This is the first attempt.
                reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);
                var primaryChildren = nextProps.children;
                var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this
                // tree is part of a hydrating tree. This is used to determine if a child
                // node has fully mounted yet, and for scheduling event replaying.
                // Conceptually this is similar to Placement in that a new subtree is
                // inserted into the React tree here. It just happens to not need DOM
                // mutations because it already exists.
                primaryChildFragment.flags |= Hydrating;
                return primaryChildFragment;
            }
        } else {
            // This is the second render pass. We already attempted to hydrated, but
            // something either suspended or errored.
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during hydration. Try again without hydrating.
                workInProgress.flags &= ~ForceClientRender;
                var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);
            } else if (workInProgress.memoizedState !== null) {
                // Something suspended and we should still be in dehydrated mode.
                // Leave the existing child in place.
                workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there
                // but the normal suspense pass doesn't.
                workInProgress.flags |= DidCapture;
                return null;
            } else {
                // Suspended but we should no longer be in dehydrated mode.
                // Therefore we now have to render the fallback.
                var nextPrimaryChildren = nextProps.children;
                var nextFallbackChildren = nextProps.fallback;
                var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var _primaryChildFragment4 = workInProgress.child;
                _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
            }
        }
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
        scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
    }
    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
        // Mark any Suspense boundaries with fallbacks as having work to do.
        // If they were previously forced into fallbacks, they may now be able
        // to unblock.
        var node = firstChild;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            } else if (node.tag === SuspenseListComponent) // If the tail is hidden there might not be an Suspense boundaries
            // to schedule work on. In this case we have to schedule it on the
            // list itself.
            // We don't have to traverse to the children of the list since
            // the list will propagate the change when it rerenders.
            scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function findLastContentRow(firstChild) {
        // This is going to find the last row among these children that is already
        // showing content on the screen, as opposed to being in fallback state or
        // new. If a row has multiple Suspense boundaries, any of them being in the
        // fallback state, counts as the whole row being in a fallback state.
        // Note that the "rows" will be workInProgress, but any nested children
        // will still be current since we haven't rendered them yet. The mounted
        // order may not be the same as the new order. We use the new order.
        var row = firstChild;
        var lastContentRow = null;
        while(row !== null){
            var currentRow = row.alternate; // New rows can't be content rows.
            if (currentRow !== null && findFirstSuspended(currentRow) === null) lastContentRow = row;
            row = row.sibling;
        }
        return lastContentRow;
    }
    function validateRevealOrder(revealOrder) {
        if (revealOrder !== undefined && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
            didWarnAboutRevealOrder[revealOrder] = true;
            if (typeof revealOrder === "string") switch(revealOrder.toLowerCase()){
                case "together":
                case "forwards":
                case "backwards":
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                case "forward":
                case "backward":
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
            }
            else error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
        }
    }
    function validateTailOptions(tailMode, revealOrder) {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
            if (tailMode !== "collapsed" && tailMode !== "hidden") {
                didWarnAboutTailOptions[tailMode] = true;
                error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
            } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                didWarnAboutTailOptions[tailMode] = true;
                error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
            }
        }
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isAnArray = isArray(childSlot);
        var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === "function";
        if (isAnArray || isIterable) {
            var type = isAnArray ? "array" : "iterable";
            error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index, type);
            return false;
        }
        return true;
    }
    function validateSuspenseListChildren(children, revealOrder) {
        if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== undefined && children !== null && children !== false) {
            if (isArray(children)) for(var i = 0; i < children.length; i++){
                if (!validateSuspenseListNestedChild(children[i], i)) return;
            }
            else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === "function") {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                        var step = childrenIterator.next();
                        var _i = 0;
                        for(; !step.done; step = childrenIterator.next()){
                            if (!validateSuspenseListNestedChild(step.value, _i)) return;
                            _i++;
                        }
                    }
                } else error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
            }
        }
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        if (renderState === null) workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode
        };
        else {
            // We can reuse the existing object from previous renders.
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
        }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var revealOrder = nextProps.revealOrder;
        var tailMode = nextProps.tail;
        var newChildren = nextProps.children;
        validateRevealOrder(revealOrder);
        validateTailOptions(tailMode, revealOrder);
        validateSuspenseListChildren(newChildren, revealOrder);
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        var suspenseContext = suspenseStackCursor.current;
        var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress.flags |= DidCapture;
        } else {
            var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) // If we previously forced a fallback, we need to schedule work
            // on any nested boundaries to let them know to try to render
            // again. This is the same as context updating.
            propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        }
        pushSuspenseContext(workInProgress, suspenseContext);
        if ((workInProgress.mode & ConcurrentMode) === NoMode) // In legacy mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
        else switch(revealOrder){
            case "forwards":
                var lastContentRow = findLastContentRow(workInProgress.child);
                var tail;
                if (lastContentRow === null) {
                    // The whole list is part of the tail.
                    // TODO: We could fast path by just rendering the tail now.
                    tail = workInProgress.child;
                    workInProgress.child = null;
                } else {
                    // Disconnect the tail rows after the content row.
                    // We're going to render them separately later.
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode);
                break;
            case "backwards":
                // We're going to find the first row that has existing content.
                // At the same time we're going to reverse the list of everything
                // we pass in the meantime. That's going to be our tail in reverse
                // order.
                var _tail = null;
                var row = workInProgress.child;
                workInProgress.child = null;
                while(row !== null){
                    var currentRow = row.alternate; // New rows can't be content rows.
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                        // This is the beginning of the main content.
                        workInProgress.child = row;
                        break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                } // TODO: If workInProgress.child is null, we can continue on the tail immediately.
                initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode);
                break;
            case "together":
                initSuspenseListRenderState(workInProgress, false, null, null, undefined);
                break;
            default:
                // The default reveal order is the same as not having
                // a boundary.
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function updatePortalComponent(current, workInProgress, renderLanes) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var nextChildren = workInProgress.pendingProps;
        if (current === null) // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
    function updateContextProvider(current, workInProgress, renderLanes) {
        var providerType = workInProgress.type;
        var context = providerType._context;
        var newProps = workInProgress.pendingProps;
        var oldProps = workInProgress.memoizedProps;
        var newValue = newProps.value;
        if (!("value" in newProps)) {
            if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
            }
        }
        var providerPropTypes = workInProgress.type.propTypes;
        if (providerPropTypes) checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
        pushProvider(workInProgress, context, newValue);
        if (oldProps !== null) {
            var oldValue = oldProps.value;
            if (objectIs(oldValue, newValue)) {
                // No change. Bailout early if children are the same.
                if (oldProps.children === newProps.children && !hasContextChanged()) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            } else // The context value changed. Search for matching consumers and schedule
            // them to update.
            propagateContextChange(workInProgress, context, renderLanes);
        }
        var newChildren = newProps.children;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingContextAsConsumer = false;
    function updateContextConsumer(current, workInProgress, renderLanes) {
        var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
        if (context._context === undefined) {
            // This may be because it's a Context (rather than a Consumer).
            // Or it may be because it's older React where they're the same thing.
            // We only want to warn if we're sure it's a new React.
            if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
            }
        } else context = context._context;
        var newProps = workInProgress.pendingProps;
        var render = newProps.children;
        if (typeof render !== "function") error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        prepareToReadContext(workInProgress, renderLanes);
        var newValue = readContext(context);
        markComponentRenderStarted(workInProgress);
        var newChildren;
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        newChildren = render(newValue);
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    function markWorkInProgressReceivedUpdate() {
        didReceiveUpdate = true;
    }
    function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            if (current !== null) {
                // A lazy component only mounts if it suspended inside a non-
                // concurrent tree, in an inconsistent state. We want to treat it like
                // a new mount, even though an empty version of it already committed.
                // Disconnect the alternate pointers.
                current.alternate = null;
                workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
                workInProgress.flags |= Placement;
            }
        }
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        if (current !== null) // Reuse previous dependencies
        workInProgress.dependencies = current.dependencies;
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning();
        markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.
        if (!includesSomeLane(renderLanes, workInProgress.childLanes)) return null;
         // This fiber doesn't have work, but its subtree does. Clone the child
        // fibers and continue.
        cloneChildFibers(current, workInProgress);
        return workInProgress.child;
    }
    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
        var returnFiber = oldWorkInProgress.return;
        if (returnFiber === null) // eslint-disable-next-line react-internal/prod-error-codes
        throw new Error("Cannot swap the root fiber.");
         // Disconnect from the old current.
        // It will get deleted.
        current.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.
        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.
        if (oldWorkInProgress === returnFiber.child) returnFiber.child = newWorkInProgress;
        else {
            var prevSibling = returnFiber.child;
            if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
            throw new Error("Expected parent to have a child.");
            while(prevSibling.sibling !== oldWorkInProgress){
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
                throw new Error("Expected to find the previous sibling.");
            }
            prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                current
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(current);
        newWorkInProgress.flags |= Placement; // Restart work from the new fiber.
        return newWorkInProgress;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
        // Before performing an early bailout, we must check if there are pending
        // updates or context.
        var updateLanes = current.lanes;
        if (includesSomeLane(updateLanes, renderLanes)) return true;
         // No pending update, but because context is propagated lazily, we need
        return false;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
        // This fiber does not have any pending work. Bailout without entering
        // the begin phase. There's still some bookkeeping we that needs to be done
        // in this optimized path, mostly pushing stuff onto the stack.
        switch(workInProgress.tag){
            case HostRoot:
                pushHostRootContext(workInProgress);
                var root = workInProgress.stateNode;
                resetHydrationState();
                break;
            case HostComponent:
                pushHostContext(workInProgress);
                break;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) pushContextProvider(workInProgress);
                break;
            case HostPortal:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            case ContextProvider:
                var newValue = workInProgress.memoizedProps.value;
                var context = workInProgress.type._context;
                pushProvider(workInProgress, context, newValue);
                break;
            case Profiler:
                // Profiler should only call onRender when one of its descendants actually rendered.
                var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (hasChildWork) workInProgress.flags |= Update;
                // Reset effect durations for the next eventual effect phase.
                // These are reset during render to allow the DevTools commit hook a chance to read them,
                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = 0;
                stateNode.passiveEffectDuration = 0;
                break;
            case SuspenseComponent:
                var state = workInProgress.memoizedState;
                if (state !== null) {
                    if (state.dehydrated !== null) {
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
                        // been unsuspended it has committed as a resolved Suspense component.
                        // If it needs to be retried, it should have work scheduled on it.
                        workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we
                        // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.
                        return null;
                    } // If this boundary is currently timed out, we need to decide
                    // whether to retry the primary children, or to skip over it and
                    // go straight to the fallback. Check the priority of the primary
                    // child fragment.
                    var primaryChildFragment = workInProgress.child;
                    var primaryChildLanes = primaryChildFragment.childLanes;
                    if (includesSomeLane(renderLanes, primaryChildLanes)) // The primary children have pending work. Use the normal path
                    // to attempt to render the primary children again.
                    return updateSuspenseComponent(current, workInProgress, renderLanes);
                    else {
                        // The primary child fragment does not have pending work marked
                        // on it
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                        // priority. Bailout.
                        var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                        if (child !== null) // The fallback children have pending work. Skip over the
                        // primary children and work on the fallback.
                        return child.sibling;
                        else // Note: We can return `null` here because we already checked
                        // whether there were nested context consumers, via the call to
                        // `bailoutOnAlreadyFinishedWork` above.
                        return null;
                    }
                } else pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                break;
            case SuspenseListComponent:
                var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;
                var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (didSuspendBefore) {
                    if (_hasChildWork) // If something was in fallback state last time, and we have all the
                    // same children then we're still in progressive loading state.
                    // Something might get unblocked by state updates or retries in the
                    // tree which will affect the tail. So we need to use the normal
                    // path to compute the correct tail.
                    return updateSuspenseListComponent(current, workInProgress, renderLanes);
                     // If none of the children had any work, that means that none of
                    // them got retried so they'll still be blocked in the same way
                    // as before. We can fast bail out.
                    workInProgress.flags |= DidCapture;
                } // If nothing suspended before and we're rendering the same children,
                // then the tail doesn't matter. Anything new that suspends will work
                // in the "together" mode, so we can continue from the state we had.
                var renderState = workInProgress.memoizedState;
                if (renderState !== null) {
                    // Reset to the "together" mode in case we've started a different
                    // update in the past but didn't complete it.
                    renderState.rendering = null;
                    renderState.tail = null;
                    renderState.lastEffect = null;
                }
                pushSuspenseContext(workInProgress, suspenseStackCursor.current);
                if (_hasChildWork) break;
                else // If none of the children had any work, that means that none of
                // them got retried so they'll still be blocked in the same way
                // as before. We can fast bail out.
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                // Need to check if the tree still needs to be deferred. This is
                // almost identical to the logic used in the normal update path,
                // so we'll just enter that. The only difference is we'll bail out
                // at the next level instead of this one, because the child props
                // have not changed. Which is fine.
                // TODO: Probably should refactor `beginWork` to split the bailout
                // path from the normal path. I'm tempted to do a labeled break here
                // but I won't :)
                workInProgress.lanes = NoLanes;
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
        if (workInProgress._debugNeedsRemount && current !== null) // This will restart the begin phase with a new fiber.
        return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
        if (current !== null) {
            var oldProps = current.memoizedProps;
            var newProps = workInProgress.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) // If props or context changed, mark the fiber as having performed work.
            // This may be unset if the props are determined to be equal later (memo).
            didReceiveUpdate = true;
            else {
                // Neither props nor legacy context changes. Check if there's a pending
                // update or context change.
                var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
                if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there
                // may not be work scheduled on `current`, so we check for this flag.
                (workInProgress.flags & DidCapture) === NoFlags) {
                    // No pending updates or context. Bail out now.
                    didReceiveUpdate = false;
                    return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
                }
                if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
                else // An update was scheduled on this fiber, but there are no new props
                // nor legacy context. Set this to false. If an update queue or context
                // consumer produces a changed value, it will set this to true. Otherwise,
                // the component will assume the children have not changed and bail out.
                didReceiveUpdate = false;
            }
        } else {
            didReceiveUpdate = false;
            if (getIsHydrating() && isForkedChild(workInProgress)) {
                // Check if this child belongs to a list of muliple children in
                // its parent.
                //
                // In a true multi-threaded implementation, we would render children on
                // parallel threads. This would represent the beginning of a new render
                // thread for this subtree.
                //
                // We only use this for id generation during hydration, which is why the
                // logic is located in this special branch.
                var slotIndex = workInProgress.index;
                var numberOfForks = getForksAtLevel();
                pushTreeId(workInProgress, numberOfForks, slotIndex);
            }
        } // Before entering the begin phase, clear pending update priority.
        // TODO: This assumes that we're about to evaluate the component and process
        // the update queue. However, there's an exception: SimpleMemoComponent
        // sometimes bails out later in the begin phase. This indicates that we should
        // move this assignment out of the common path and into each branch.
        workInProgress.lanes = NoLanes;
        switch(workInProgress.tag){
            case IndeterminateComponent:
                return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
            case LazyComponent:
                var elementType = workInProgress.elementType;
                return mountLazyComponent(current, workInProgress, elementType, renderLanes);
            case FunctionComponent:
                var Component = workInProgress.type;
                var unresolvedProps = workInProgress.pendingProps;
                var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
                return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);
            case ClassComponent:
                var _Component = workInProgress.type;
                var _unresolvedProps = workInProgress.pendingProps;
                var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
                return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);
            case HostRoot:
                return updateHostRoot(current, workInProgress, renderLanes);
            case HostComponent:
                return updateHostComponent(current, workInProgress, renderLanes);
            case HostText:
                return updateHostText(current, workInProgress);
            case SuspenseComponent:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case HostPortal:
                return updatePortalComponent(current, workInProgress, renderLanes);
            case ForwardRef:
                var type = workInProgress.type;
                var _unresolvedProps2 = workInProgress.pendingProps;
                var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
            case Fragment:
                return updateFragment(current, workInProgress, renderLanes);
            case Mode:
                return updateMode(current, workInProgress, renderLanes);
            case Profiler:
                return updateProfiler(current, workInProgress, renderLanes);
            case ContextProvider:
                return updateContextProvider(current, workInProgress, renderLanes);
            case ContextConsumer:
                return updateContextConsumer(current, workInProgress, renderLanes);
            case MemoComponent:
                var _type2 = workInProgress.type;
                var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, _resolvedProps3, "prop", getComponentNameFromType(_type2));
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);
            case SimpleMemoComponent:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case IncompleteClassComponent:
                var _Component2 = workInProgress.type;
                var _unresolvedProps4 = workInProgress.pendingProps;
                var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
                return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);
            case SuspenseListComponent:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case ScopeComponent:
                break;
            case OffscreenComponent:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + "React. Please file an issue.");
    }
    function markUpdate(workInProgress) {
        // Tag the fiber with an update effect. This turns a Placement into
        // a PlacementAndUpdate.
        workInProgress.flags |= Update;
    }
    function markRef$1(workInProgress) {
        workInProgress.flags |= Ref;
        workInProgress.flags |= RefStatic;
    }
    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent$1;
    var updateHostText$1;
    // Mutation mode
    appendAllChildren = function(parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;
        while(node !== null){
            if (node.tag === HostComponent || node.tag === HostText) appendInitialChild(parent, node.stateNode);
            else if (node.tag === HostPortal) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    };
    updateHostContainer = function(current, workInProgress) {};
    updateHostComponent$1 = function(current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;
        if (oldProps === newProps) // In mutation mode, this is sufficient for a bailout because
        // we won't touch this node even if children changed.
        return;
         // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.
        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.
        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.
        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.
        if (updatePayload) markUpdate(workInProgress);
    };
    updateHostText$1 = function(current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) markUpdate(workInProgress);
    };
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (getIsHydrating()) // If we're hydrating, we should consume as many items as we can
        // so we don't leave any behind.
        return;
        switch(renderState.tailMode){
            case "hidden":
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while(tailNode !== null){
                    if (tailNode.alternate !== null) lastTailNode = tailNode;
                    tailNode = tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (lastTailNode === null) // All remaining items in the tail are insertions.
                renderState.tail = null;
                else // Detach the insertion after the last node that was already
                // inserted.
                lastTailNode.sibling = null;
                break;
            case "collapsed":
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while(_tailNode !== null){
                    if (_tailNode.alternate !== null) _lastTailNode = _tailNode;
                    _tailNode = _tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (_lastTailNode === null) {
                    // All remaining items in the tail are insertions.
                    if (!hasRenderedATailFallback && renderState.tail !== null) // We suspended during the head. We want to show at least one
                    // row at the tail. So we'll keep on and cut off the rest.
                    renderState.tail.sibling = null;
                    else renderState.tail = null;
                } else // Detach the insertion after the last node that was already
                // inserted.
                _lastTailNode.sibling = null;
                break;
        }
    }
    function bubbleProperties(completedWork) {
        var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
        var newChildLanes = NoLanes;
        var subtreeFlags = NoFlags;
        if (!didBailout) {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var actualDuration = completedWork.actualDuration;
                var treeBaseDuration = completedWork.selfBaseDuration;
                var child = completedWork.child;
                while(child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                    subtreeFlags |= child.subtreeFlags;
                    subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will
                    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
                    // When work is done, it should bubble to the parent's actualDuration. If
                    // the fiber has not been cloned though, (meaning no work was done), then
                    // this value will reflect the amount of time spent working on a previous
                    // render. In that case it should not bubble. We determine whether it was
                    // cloned by comparing the child pointer.
                    actualDuration += child.actualDuration;
                    treeBaseDuration += child.treeBaseDuration;
                    child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
                completedWork.treeBaseDuration = treeBaseDuration;
            } else {
                var _child = completedWork.child;
                while(_child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                    subtreeFlags |= _child.subtreeFlags;
                    subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child.return = completedWork;
                    _child = _child.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        } else {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var _treeBaseDuration = completedWork.selfBaseDuration;
                var _child2 = completedWork.child;
                while(_child2 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child2.subtreeFlags & StaticMask;
                    subtreeFlags |= _child2.flags & StaticMask;
                    _treeBaseDuration += _child2.treeBaseDuration;
                    _child2 = _child2.sibling;
                }
                completedWork.treeBaseDuration = _treeBaseDuration;
            } else {
                var _child3 = completedWork.child;
                while(_child3 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child3.subtreeFlags & StaticMask;
                    subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child3.return = completedWork;
                    _child3 = _child3.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        }
        completedWork.childLanes = newChildLanes;
        return didBailout;
    }
    function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {
        if (hasUnhydratedTailNodes() && (workInProgress.mode & ConcurrentMode) !== NoMode && (workInProgress.flags & DidCapture) === NoFlags) {
            warnIfUnhydratedTailNodes(workInProgress);
            resetHydrationState();
            workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;
            return false;
        }
        var wasHydrated = popHydrationState(workInProgress);
        if (nextState !== null && nextState.dehydrated !== null) {
            // We might be inside a hydration state the first time we're picking up this
            // Suspense boundary, and also after we've reentered it for further hydration.
            if (current === null) {
                if (!wasHydrated) throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                prepareToHydrateHostSuspenseInstance(workInProgress);
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    var isTimedOutSuspense = nextState !== null;
                    if (isTimedOutSuspense) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var primaryChildFragment = workInProgress.child;
                        if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                }
                return false;
            } else {
                // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration
                // state since we're now exiting out of it. popHydrationState doesn't do that for us.
                resetHydrationState();
                if ((workInProgress.flags & DidCapture) === NoFlags) // This boundary did not suspend so it's now hydrated and unsuspended.
                workInProgress.memoizedState = null;
                 // If nothing suspended, we need to schedule an effect to mark this boundary
                // as having hydrated so events know that they're free to be invoked.
                // It's also a signal to replay events and the suspense callback.
                // If something suspended, schedule an effect to attach retry listeners.
                // So we might as well always mark this.
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    var _isTimedOutSuspense = nextState !== null;
                    if (_isTimedOutSuspense) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var _primaryChildFragment = workInProgress.child;
                        if (_primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                    }
                }
                return false;
            }
        } else {
            // Successfully completed this tree. If this was a forced client render,
            // there may have been recoverable errors during first hydration
            // attempt. If so, add them to a queue so we can log them in the
            // commit phase.
            upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path
            return true;
        }
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
                bubbleProperties(workInProgress);
                return null;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostRoot:
                var fiberRoot = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                if (fiberRoot.pendingContext) {
                    fiberRoot.context = fiberRoot.pendingContext;
                    fiberRoot.pendingContext = null;
                }
                if (current === null || current.child === null) {
                    // If we hydrated, pop so that we can delete any remaining children
                    // that weren't hydrated.
                    var wasHydrated = popHydrationState(workInProgress);
                    if (wasHydrated) // If we hydrated, then we'll need to schedule an update for
                    // the commit side-effects on the root.
                    markUpdate(workInProgress);
                    else if (current !== null) {
                        var prevState = current.memoizedState;
                        if (!prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
                        (workInProgress.flags & ForceClientRender) !== NoFlags) {
                            // Schedule an effect to clear this container at the start of the
                            // next commit. This handles the case of React rendering into a
                            // container with previous children. It's also safe to do for
                            // updates too, because current.child would only be null if the
                            // previous render was null (so the container would already
                            // be empty).
                            workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been
                            // recoverable errors during first hydration attempt. If so, add
                            // them to a queue so we can log them in the commit phase.
                            upgradeHydrationErrorsToRecoverable();
                        }
                    }
                }
                updateHostContainer(current, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostComponent:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress.type;
                if (current !== null && workInProgress.stateNode != null) {
                    updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);
                    if (current.ref !== workInProgress.ref) markRef$1(workInProgress);
                } else {
                    if (!newProps) {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
                    // "stack" as the parent. Then append children as we go in beginWork
                    // or completeWork depending on whether we want to add them top->down or
                    // bottom->up. Top->down is faster in IE11.
                    var _wasHydrated = popHydrationState(workInProgress);
                    if (_wasHydrated) // TODO: Move this and createInstance step into the beginPhase
                    // to consolidate.
                    {
                        if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) // If changes to the hydrated node need to be applied at the
                        // commit-phase we mark this as such.
                        markUpdate(workInProgress);
                    } else {
                        var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                        appendAllChildren(instance, workInProgress, false, false);
                        workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
                        // (eg DOM renderer supports auto-focus for certain elements).
                        // Make sure such renderers get scheduled for later work.
                        if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) markUpdate(workInProgress);
                    }
                    if (workInProgress.ref !== null) // If there is a ref on a host node we need to schedule a callback
                    markRef$1(workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case HostText:
                var newText = newProps;
                if (current && workInProgress.stateNode != null) {
                    var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
                    // to schedule a side-effect to do the updates.
                    updateHostText$1(current, workInProgress, oldText, newText);
                } else {
                    if (typeof newText !== "string") {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                    }
                    var _rootContainerInstance = getRootHostContainer();
                    var _currentHostContext = getHostContext();
                    var _wasHydrated2 = popHydrationState(workInProgress);
                    if (_wasHydrated2) {
                        if (prepareToHydrateHostTextInstance(workInProgress)) markUpdate(workInProgress);
                    } else workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this
                // to its own fiber type so that we can add other kinds of hydration
                // boundaries that aren't associated with a Suspense tree. In anticipation
                // of such a refactor, all the hydration logic is contained in
                // this branch.
                if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {
                    var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);
                    if (!fallthroughToNormalSuspensePath) {
                        if (workInProgress.flags & ShouldCapture) // Special case. There were remaining unhydrated nodes. We treat
                        // this as a mismatch. Revert to client rendering.
                        return workInProgress;
                        else // Did not finish hydrating, either because this is the initial
                        // render or because something suspended.
                        return null;
                    } // Continue with the normal Suspense path.
                }
                if ((workInProgress.flags & DidCapture) !== NoFlags) {
                    // Something suspended. Re-render with the fallback children.
                    workInProgress.lanes = renderLanes; // Do not reset the effect list.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                     // Don't bubble properties in this case.
                    return workInProgress;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = current !== null && current.memoizedState !== null;
                // a passive effect, which is when we process the transitions
                if (nextDidTimeout !== prevDidTimeout) // an effect to toggle the subtree's visibility. When we switch from
                // fallback -> primary, the inner Offscreen fiber schedules this effect
                // as part of its normal complete phase. But when we switch from
                // primary -> fallback, the inner Offscreen fiber does not have a complete
                // phase. So we need to schedule its effect here.
                //
                // We also use this flag to connect/disconnect the effects, but the same
                // logic applies: when re-connecting, the Offscreen fiber's complete
                // phase will handle scheduling the effect. It's only when the fallback
                // is active that we have to do anything special.
                {
                    if (nextDidTimeout) {
                        var _offscreenFiber2 = workInProgress.child;
                        _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything
                        // in the concurrent tree already suspended during this render.
                        // This is a known bug.
                        if ((workInProgress.mode & ConcurrentMode) !== NoMode) {
                            // TODO: Move this back to throwException because this is too late
                            // if this is a large tree which is common for initial loads. We
                            // don't know if we should restart a render or not until we get
                            // this marker, and this is too late.
                            // If this render already had a ping or lower pri updates,
                            // and this is the first time we know we're going to suspend we
                            // should be able to immediately restart from within throwException.
                            var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) // If this was in an invisible tree or a new render, then showing
                            // this boundary is ok.
                            renderDidSuspend();
                            else // Otherwise, we're going to have to hide content so we should
                            // suspend for longer if possible.
                            renderDidSuspendDelayIfPossible();
                        }
                    }
                }
                var wakeables = workInProgress.updateQueue;
                if (wakeables !== null) // Schedule an effect to attach a retry listener to the promise.
                // TODO: Move to passive phase
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    if (nextDidTimeout) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var primaryChildFragment = workInProgress.child;
                        if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                }
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                updateHostContainer(current, workInProgress);
                if (current === null) preparePortalMount(workInProgress.stateNode.containerInfo);
                bubbleProperties(workInProgress);
                return null;
            case ContextProvider:
                // Pop provider fiber
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case IncompleteClassComponent:
                // Same as class component case. I put it down here so that the tags are
                // sequential to ensure this switch is compiled to a jump table.
                var _Component = workInProgress.type;
                if (isContextProvider(_Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress);
                var renderState = workInProgress.memoizedState;
                if (renderState === null) {
                    // We're running in the default, "independent" mode.
                    // We don't do anything in this mode.
                    bubbleProperties(workInProgress);
                    return null;
                }
                var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                    // We just rendered the head.
                    if (!didSuspendAlready) {
                        // This is the first pass. We need to figure out if anything is still
                        // suspended in the rendered set.
                        // If new content unsuspended, but there's still some content that
                        // didn't. Then we need to do a second pass that forces everything
                        // to keep showing their fallbacks.
                        // We might be suspended if something in this render pass suspended, or
                        // something in the previous committed pass suspended. Otherwise,
                        // there's no chance so we can skip the expensive call to
                        // findFirstSuspended.
                        var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);
                        if (!cannotBeSuspended) {
                            var row = workInProgress.child;
                            while(row !== null){
                                var suspended = findFirstSuspended(row);
                                if (suspended !== null) {
                                    didSuspendAlready = true;
                                    workInProgress.flags |= DidCapture;
                                    cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                                    // part of the second pass. In that case nothing will subscribe to
                                    // its thenables. Instead, we'll transfer its thenables to the
                                    // SuspenseList so that it can retry if they resolve.
                                    // There might be multiple of these in the list but since we're
                                    // going to wait for all of them anyway, it doesn't really matter
                                    // which ones gets to ping. In theory we could get clever and keep
                                    // track of how many dependencies remain but it gets tricky because
                                    // in the meantime, we can add/remove/change items and dependencies.
                                    // We might bail out of the loop before finding any but that
                                    // doesn't matter since that means that the other boundaries that
                                    // we did find already has their listeners attached.
                                    var newThenables = suspended.updateQueue;
                                    if (newThenables !== null) {
                                        workInProgress.updateQueue = newThenables;
                                        workInProgress.flags |= Update;
                                    } // Rerender the whole list, but this time, we'll force fallbacks
                                    // to stay in place.
                                    // Reset the effect flags before doing the second pass since that's now invalid.
                                    // Reset the child fibers to their original state.
                                    workInProgress.subtreeFlags = NoFlags;
                                    resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                                    // rerender the children.
                                    pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.
                                    return workInProgress.child;
                                }
                                row = row.sibling;
                            }
                        }
                        if (renderState.tail !== null && now() > getRenderTargetTime()) {
                            // We have already passed our CPU deadline but we still have rows
                            // left in the tail. We'll just give up further attempts to render
                            // the main content and only render fallbacks.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    } else cutOffTailIfNeeded(renderState, false);
                     // Next we're going to render the tail.
                } else {
                    // Append the rendered row to the child list.
                    if (!didSuspendAlready) {
                        var _suspended = findFirstSuspended(renderedTail);
                        if (_suspended !== null) {
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
                            // get lost if this row ends up dropped during a second pass.
                            var _newThenables = _suspended.updateQueue;
                            if (_newThenables !== null) {
                                workInProgress.updateQueue = _newThenables;
                                workInProgress.flags |= Update;
                            }
                            cutOffTailIfNeeded(renderState, true); // This might have been modified.
                            if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
                            ) {
                                // We're done.
                                bubbleProperties(workInProgress);
                                return null;
                            }
                        } else if (// time we have to render. So rendering one more row would likely
                        // exceed it.
                        now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
                            // We have now passed our CPU deadline and we'll just give up further
                            // attempts to render the main content and only render fallbacks.
                            // The assumption is that this is usually faster.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    }
                    if (renderState.isBackwards) {
                        // The effect list of the backwards tail will have been added
                        // to the end. This breaks the guarantee that life-cycles fire in
                        // sibling order but that isn't a strong guarantee promised by React.
                        // Especially since these might also just pop in during future commits.
                        // Append to the beginning of the list.
                        renderedTail.sibling = workInProgress.child;
                        workInProgress.child = renderedTail;
                    } else {
                        var previousSibling = renderState.last;
                        if (previousSibling !== null) previousSibling.sibling = renderedTail;
                        else workInProgress.child = renderedTail;
                        renderState.last = renderedTail;
                    }
                }
                if (renderState.tail !== null) {
                    // We still have tail rows to render.
                    // Pop a row.
                    var next = renderState.tail;
                    renderState.rendering = next;
                    renderState.tail = next.sibling;
                    renderState.renderingStartTime = now();
                    next.sibling = null; // Restore the context.
                    // TODO: We can probably just avoid popping it instead and only
                    // setting it the first time we go from not suspended to suspended.
                    var suspenseContext = suspenseStackCursor.current;
                    if (didSuspendAlready) suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                    else suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                    pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.
                    // Don't bubble properties in this case.
                    return next;
                }
                bubbleProperties(workInProgress);
                return null;
            case ScopeComponent:
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                var _nextState = workInProgress.memoizedState;
                var nextIsHidden = _nextState !== null;
                if (current !== null) {
                    var _prevState = current.memoizedState;
                    var prevIsHidden = _prevState !== null;
                    if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) workInProgress.flags |= Visibility;
                }
                if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) bubbleProperties(workInProgress);
                else // Don't bubble properties for hidden children unless we're rendering
                // at offscreen priority.
                if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
                    bubbleProperties(workInProgress);
                    // Check if there was an insertion or update in the hidden subtree.
                    // If so, we need to hide those nodes in the commit phase, so
                    // schedule a visibility effect.
                    if (workInProgress.subtreeFlags & (Placement | Update)) workInProgress.flags |= Visibility;
                }
                return null;
            case CacheComponent:
                return null;
            case TracingMarkerComponent:
                return null;
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + "React. Please file an issue.");
    }
    function unwindWork(current, workInProgress, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                var flags = workInProgress.flags;
                if (flags & ShouldCapture) {
                    workInProgress.flags = flags & ~ShouldCapture | DidCapture;
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case HostRoot:
                var root = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                var _flags = workInProgress.flags;
                if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                    // There was an error during render that wasn't captured by a suspense
                    // boundary. Do a second pass on the root to unmount the children.
                    workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
                    return workInProgress;
                } // We unwound to the root without completing it. Exit.
                return null;
            case HostComponent:
                // TODO: popHydrationState
                popHostContext(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var suspenseState = workInProgress.memoizedState;
                if (suspenseState !== null && suspenseState.dehydrated !== null) {
                    if (workInProgress.alternate === null) throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                    resetHydrationState();
                }
                var _flags2 = workInProgress.flags;
                if (_flags2 & ShouldCapture) {
                    workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
                // caught by a nested boundary. If not, it should bubble through.
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                return null;
            case ContextProvider:
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                return null;
            case CacheComponent:
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(current, interruptedWork, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(interruptedWork);
        switch(interruptedWork.tag){
            case ClassComponent:
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== undefined) popContext(interruptedWork);
                break;
            case HostRoot:
                var root = interruptedWork.stateNode;
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                resetWorkInProgressVersions();
                break;
            case HostComponent:
                popHostContext(interruptedWork);
                break;
            case HostPortal:
                popHostContainer(interruptedWork);
                break;
            case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
            case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
            case ContextProvider:
                var context = interruptedWork.type._context;
                popProvider(context, interruptedWork);
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(interruptedWork);
                break;
        }
    }
    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    // Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.
    // Only used when enableSuspenseLayoutEffectSemantics is enabled.
    var offscreenSubtreeIsHidden = false;
    var offscreenSubtreeWasHidden = false;
    var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
    var nextEffect = null; // Used for Profiling builds to track updaters.
    var inProgressLanes = null;
    var inProgressRoot = null;
    function reportUncaughtErrorInDEV(error) {
        invokeGuardedCallback(null, function() {
            throw error;
        });
        clearCaughtError();
    }
    var callComponentWillUnmountWithTimer = function(current, instance) {
        instance.props = current.memoizedProps;
        instance.state = current.memoizedState;
        if (current.mode & ProfileMode) try {
            startLayoutEffectTimer();
            instance.componentWillUnmount();
        } finally{
            recordLayoutEffectDuration(current);
        }
        else instance.componentWillUnmount();
    }; // Capture errors so they don't interrupt mounting.
    function safelyCallCommitHookLayoutEffectListMount(current, nearestMountedAncestor) {
        try {
            commitHookEffectListMount(Layout, current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt unmounting.
    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
        try {
            callComponentWillUnmountWithTimer(current, instance);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyCallComponentDidMount(current, nearestMountedAncestor, instance) {
        try {
            instance.componentDidMount();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyAttachRef(current, nearestMountedAncestor) {
        try {
            commitAttachRef(current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
        var ref = current.ref;
        if (ref !== null) {
            if (typeof ref === "function") {
                var retVal;
                try {
                    if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        retVal = ref(null);
                    } finally{
                        recordLayoutEffectDuration(current);
                    }
                    else retVal = ref(null);
                } catch (error) {
                    captureCommitPhaseError(current, nearestMountedAncestor, error);
                }
                if (typeof retVal === "function") error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current));
            } else ref.current = null;
        }
    }
    function safelyCallDestroy(current, nearestMountedAncestor, destroy) {
        try {
            destroy();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    var focusedInstanceHandle = null;
    var shouldFireAfterActiveInstanceBlur = false;
    function commitBeforeMutationEffects(root, firstChild) {
        focusedInstanceHandle = prepareForCommit(root.containerInfo);
        nextEffect = firstChild;
        commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber
        var shouldFire = shouldFireAfterActiveInstanceBlur;
        shouldFireAfterActiveInstanceBlur = false;
        focusedInstanceHandle = null;
        return shouldFire;
    }
    function commitBeforeMutationEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.
            var child = fiber.child;
            if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitBeforeMutationEffects_complete();
        }
    }
    function commitBeforeMutationEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
                commitBeforeMutationEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitBeforeMutationEffectsOnFiber(finishedWork) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags;
        if ((flags & Snapshot) !== NoFlags) {
            setCurrentFiber(finishedWork);
            switch(finishedWork.tag){
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent:
                    break;
                case ClassComponent:
                    if (current !== null) {
                        var prevProps = current.memoizedProps;
                        var prevState = current.memoizedState;
                        var instance = finishedWork.stateNode; // We could update instance props and state here,
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                        }
                        var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                        var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                        if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                            didWarnSet.add(finishedWork.type);
                            error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                        }
                        instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    }
                    break;
                case HostRoot:
                    var root = finishedWork.stateNode;
                    clearContainer(root.containerInfo);
                    break;
                case HostComponent:
                case HostText:
                case HostPortal:
                case IncompleteClassComponent:
                    break;
                default:
                    throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
            resetCurrentFiber();
        }
    }
    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    // Unmount
                    var destroy = effect.destroy;
                    effect.destroy = undefined;
                    if (destroy !== undefined) {
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStarted(finishedWork);
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStarted(finishedWork);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                        safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStopped();
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStopped();
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect);
        }
    }
    function commitHookEffectListMount(flags, finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStarted(finishedWork);
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStarted(finishedWork);
                    var create = effect.create;
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                    effect.destroy = create();
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStopped();
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStopped();
                    var destroy = effect.destroy;
                    if (destroy !== undefined && typeof destroy !== "function") {
                        var hookName = void 0;
                        if ((effect.tag & Layout) !== NoFlags) hookName = "useLayoutEffect";
                        else if ((effect.tag & Insertion) !== NoFlags) hookName = "useInsertionEffect";
                        else hookName = "useEffect";
                        var addendum = void 0;
                        if (destroy === null) addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                        else if (typeof destroy.then === "function") addendum = "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. " + "Instead, write the async function inside your effect " + "and call it immediately:\n\n" + hookName + "(() => {\n" + "  async function fetchData() {\n" + "    // You can await here\n" + "    const response = await MyAPI.getData(someId);\n" + "    // ...\n" + "  }\n" + "  fetchData();\n" + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + "Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                        else addendum = " You returned: " + destroy;
                        error("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect);
        }
    }
    function commitPassiveEffectDurations(finishedRoot, finishedWork) {
        // Only Profilers with work in their subtree will have an Update effect scheduled.
        if ((finishedWork.flags & Update) !== NoFlags) switch(finishedWork.tag){
            case Profiler:
                var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.
                // It does not get reset until the start of the next commit phase.
                var commitTime = getCommitTime();
                var phase = finishedWork.alternate === null ? "mount" : "update";
                if (isCurrentUpdateNested()) phase = "nested-update";
                if (typeof onPostCommit === "function") onPostCommit(id, phase, passiveEffectDuration, commitTime);
                 // Bubble times to the next nearest ancestor Profiler.
                // After we process that Profiler, we'll bubble further up.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
        }
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {
        if ((finishedWork.flags & LayoutMask) !== NoFlags) switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    // At this point layout effects have already been destroyed (during mutation phase).
                    // This is done to prevent sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListMount(Layout | HasEffect, finishedWork);
                    } finally{
                        recordLayoutEffectDuration(finishedWork);
                    }
                    else commitHookEffectListMount(Layout | HasEffect, finishedWork);
                }
                break;
            case ClassComponent:
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                    if (!offscreenSubtreeWasHidden) {
                        if (current === null) {
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidMount();
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidMount();
                        } else {
                            var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                            var prevState = current.memoizedState; // We could update instance props and state here,
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                        }
                    }
                } // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                        if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                    }
                    // but instead we rely on them being set during last render.
                    // TODO: revisit this when we implement resuming.
                    commitUpdateQueue(finishedWork, updateQueue, instance);
                }
                break;
            case HostRoot:
                // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                    var _instance = null;
                    if (finishedWork.child !== null) switch(finishedWork.child.tag){
                        case HostComponent:
                            _instance = getPublicInstance(finishedWork.child.stateNode);
                            break;
                        case ClassComponent:
                            _instance = finishedWork.child.stateNode;
                            break;
                    }
                    commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                break;
            case HostComponent:
                var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
                // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                // These effects should only be committed when components are first mounted,
                // aka when there is no current/alternate.
                if (current === null && finishedWork.flags & Update) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props);
                }
                break;
            case HostText:
                break;
            case HostPortal:
                break;
            case Profiler:
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                var effectDuration = finishedWork.stateNode.effectDuration;
                var commitTime = getCommitTime();
                var phase = current === null ? "mount" : "update";
                if (isCurrentUpdateNested()) phase = "nested-update";
                if (typeof onRender === "function") onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);
                if (typeof onCommit === "function") onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);
                 // Schedule a passive effect for this Profiler to call onPostCommit hooks.
                // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,
                // because the effect is also where times bubble to parent Profilers.
                enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.
                // Do not reset these values until the next render so DevTools has a chance to read them first.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.effectDuration += effectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.effectDuration += effectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
            case SuspenseComponent:
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
            case TracingMarkerComponent:
                break;
            default:
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (!offscreenSubtreeWasHidden) {
            if (finishedWork.flags & Ref) commitAttachRef(finishedWork);
        }
    }
    function reappearLayoutEffectsOnFiber(node) {
        // Turn on layout effects in a tree that previously disappeared.
        // TODO (Offscreen) Check: flags & LayoutStatic
        switch(node.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (node.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    safelyCallCommitHookLayoutEffectListMount(node, node.return);
                } finally{
                    recordLayoutEffectDuration(node);
                }
                else safelyCallCommitHookLayoutEffectListMount(node, node.return);
                break;
            case ClassComponent:
                var instance = node.stateNode;
                if (typeof instance.componentDidMount === "function") safelyCallComponentDidMount(node, node.return, instance);
                safelyAttachRef(node, node.return);
                break;
            case HostComponent:
                safelyAttachRef(node, node.return);
                break;
        }
    }
    function hideOrUnhideAllChildren(finishedWork, isHidden) {
        // Only hide or unhide the top-most host nodes.
        var hostSubtreeRoot = null;
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;
        while(true){
            if (node.tag === HostComponent) {
                if (hostSubtreeRoot === null) {
                    hostSubtreeRoot = node;
                    try {
                        var instance = node.stateNode;
                        if (isHidden) hideInstance(instance);
                        else unhideInstance(node.stateNode, node.memoizedProps);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
            } else if (node.tag === HostText) {
                if (hostSubtreeRoot === null) try {
                    var _instance3 = node.stateNode;
                    if (isHidden) hideTextInstance(_instance3);
                    else unhideTextInstance(_instance3, node.memoizedProps);
                } catch (error) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
            } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return;
                if (hostSubtreeRoot === node) hostSubtreeRoot = null;
                node = node.return;
            }
            if (hostSubtreeRoot === node) hostSubtreeRoot = null;
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch(finishedWork.tag){
                case HostComponent:
                    instanceToUse = getPublicInstance(instance);
                    break;
                default:
                    instanceToUse = instance;
            } // Moved outside to ensure DCE works with this flag
            if (typeof ref === "function") {
                var retVal;
                if (finishedWork.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    retVal = ref(instanceToUse);
                } finally{
                    recordLayoutEffectDuration(finishedWork);
                }
                else retVal = ref(instanceToUse);
                if (typeof retVal === "function") error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
            } else {
                if (!ref.hasOwnProperty("current")) error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                ref.current = instanceToUse;
            }
        }
    }
    function detachFiberMutation(fiber) {
        // Cut off the return pointer to disconnect it from the tree.
        // This enables us to detect and warn against state updates on an unmounted component.
        // It also prevents events from bubbling from within disconnected components.
        //
        // Ideally, we should also clear the child pointer of the parent alternate to let this
        // get GC:ed but we don't know which for sure which parent is the current
        // one so we'll settle for GC:ing the subtree of this child.
        // This child itself will be GC:ed when the parent updates the next time.
        //
        // Note that we can't clear child or sibling pointers yet.
        // They're needed for passive effects and for findDOMNode.
        // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).
        //
        // Don't reset the alternate yet, either. We need that so we can detach the
        // alternate's fields in the passive phase. Clearing the return pointer is
        // sufficient for findDOMNode semantics.
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.return = null;
        fiber.return = null;
    }
    function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        if (alternate !== null) {
            fiber.alternate = null;
            detachFiberAfterEffects(alternate);
        } // Note: Defensively using negation instead of < in case
        // Clear cyclical Fiber fields. This level alone is designed to roughly
        // approximate the planned Fiber refactor. In that world, `setState` will be
        // bound to a special "instance" object instead of a Fiber. The Instance
        // object will not have any of these fields. It will only be connected to
        // the fiber tree via a single link at the root. So if this level alone is
        // sufficient to fix memory issues, that bodes well for our plans.
        fiber.child = null;
        fiber.deletions = null;
        fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host
        // tree, which has its own pointers to children, parents, and siblings.
        // The other host nodes also point back to fibers, so we should detach that
        // one, too.
        if (fiber.tag === HostComponent) {
            var hostInstance = fiber.stateNode;
            if (hostInstance !== null) detachDeletedInstance(hostInstance);
        }
        fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We
        fiber._debugOwner = null;
        // Theoretically, nothing in here should be necessary, because we already
        // disconnected the fiber from the tree. So even if something leaks this
        // particular fiber, it won't leak anything else
        //
        // The purpose of this branch is to be super aggressive so we can measure
        // if there's any difference in memory impact. If there is, that could
        // indicate a React leak we don't know about.
        fiber.return = null;
        fiber.dependencies = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.
        fiber.updateQueue = null;
    }
    function getHostParentFiber(fiber) {
        var parent = fiber.return;
        while(parent !== null){
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }
    function getHostSibling(fiber) {
        // We're going to search forward into the tree until we find a sibling host
        // node. Unfortunately, if multiple insertions are done in a row we have to
        // search past them. This leads to exponential search for the next sibling.
        // TODO: Find a more efficient way to do this.
        var node = fiber;
        siblings: while(true){
            // If we didn't find anything, let's try the next sibling.
            while(node.sibling === null){
                if (node.return === null || isHostParent(node.return)) // If we pop out of the root or hit the parent the fiber we are the
                // last sibling.
                return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
            while(node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment){
                // If it is not host node and, we might have a host node inside it.
                // Try to search down until we find one.
                if (node.flags & Placement) continue siblings;
                 // If we don't have a child, try the siblings instead.
                // We also skip portals because they are not part of this host tree.
                if (node.child === null || node.tag === HostPortal) continue siblings;
                else {
                    node.child.return = node;
                    node = node.child;
                }
            } // Check if this host node is stable or about to be placed.
            if (!(node.flags & Placement)) // Found it!
            return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.
        switch(parentFiber.tag){
            case HostComponent:
                var parent = parentFiber.stateNode;
                if (parentFiber.flags & ContentReset) {
                    // Reset the text content of the parent before doing any insertions
                    resetTextContent(parent); // Clear ContentReset from the effect tag
                    parentFiber.flags &= ~ContentReset;
                }
                var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
                // children to find all the terminal nodes.
                insertOrAppendPlacementNode(finishedWork, before, parent);
                break;
            case HostRoot:
            case HostPortal:
                var _parent = parentFiber.stateNode.containerInfo;
                var _before = getHostSibling(finishedWork);
                insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
                break;
            // eslint-disable-next-line-no-fallthrough
            default:
                throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertInContainerBefore(parent, stateNode, before);
            else appendChildToContainer(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertBefore(parent, stateNode, before);
            else appendChild(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNode(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNode(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    } // These are tracked on the stack as we recursively traverse a
    // deleted subtree.
    // TODO: Update these during the whole mutation phase, not just during
    // a deletion.
    var hostParent = null;
    var hostParentIsContainer = false;
    function commitDeletionEffects(root, returnFiber, deletedFiber) {
        // We only have the top Fiber that was deleted but we need to recurse down its
        // children to find all the terminal nodes.
        // Recursively delete all host nodes from the parent, detach refs, clean
        // up mounted layout effects, and call componentWillUnmount.
        // We only need to remove the topmost host child in each branch. But then we
        // still need to keep traversing to unmount effects, refs, and cWU. TODO: We
        // could split this into two separate traversals functions, where the second
        // one doesn't include any removeChild logic. This is maybe the same
        // function as "disappearLayoutEffects" (or whatever that turns into after
        // the layout phase is refactored to use recursion).
        // Before starting, find the nearest host parent on the stack so we know
        // which instance/container to remove the children from.
        // TODO: Instead of searching up the fiber return path on every deletion, we
        // can track the nearest host component on the JS stack as we traverse the
        // tree during the commit phase. This would make insertions faster, too.
        var parent = returnFiber;
        findParent: while(parent !== null){
            switch(parent.tag){
                case HostComponent:
                    hostParent = parent.stateNode;
                    hostParentIsContainer = false;
                    break findParent;
                case HostRoot:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                case HostPortal:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
            }
            parent = parent.return;
        }
        if (hostParent === null) throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
        hostParent = null;
        hostParentIsContainer = false;
        detachFiberMutation(deletedFiber);
    }
    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        // TODO: Use a static flag to skip trees that don't have unmount effects
        var child = parent.child;
        while(child !== null){
            commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
            child = child.sibling;
        }
    }
    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse
        // into their subtree. There are simpler cases in the inner switch
        // that don't modify the stack.
        switch(deletedFiber.tag){
            case HostComponent:
                if (!offscreenSubtreeWasHidden) safelyDetachRef(deletedFiber, nearestMountedAncestor);
                 // Intentional fallthrough to next branch
            // eslint-disable-next-line-no-fallthrough
            case HostText:
                var prevHostParent = hostParent;
                var prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (hostParent !== null) {
                    // Now that all the child effects have unmounted, we can remove the
                    // node from the tree.
                    if (hostParentIsContainer) removeChildFromContainer(hostParent, deletedFiber.stateNode);
                    else removeChild(hostParent, deletedFiber.stateNode);
                }
                return;
            case DehydratedFragment:
                if (hostParent !== null) {
                    if (hostParentIsContainer) clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                    else clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                }
                return;
            case HostPortal:
                // When we go into a portal, it becomes the parent to remove from.
                var _prevHostParent = hostParent;
                var _prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = true;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = _prevHostParent;
                hostParentIsContainer = _prevHostParentIsContainer;
                return;
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    var updateQueue = deletedFiber.updateQueue;
                    if (updateQueue !== null) {
                        var lastEffect = updateQueue.lastEffect;
                        if (lastEffect !== null) {
                            var firstEffect = lastEffect.next;
                            var effect = firstEffect;
                            do {
                                var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                                if (destroy !== undefined) {
                                    if ((tag & Insertion) !== NoFlags$1) safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                    else if ((tag & Layout) !== NoFlags$1) {
                                        markComponentLayoutEffectUnmountStarted(deletedFiber);
                                        if (deletedFiber.mode & ProfileMode) {
                                            startLayoutEffectTimer();
                                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                            recordLayoutEffectDuration(deletedFiber);
                                        } else safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                        markComponentLayoutEffectUnmountStopped();
                                    }
                                }
                                effect = effect.next;
                            }while (effect !== firstEffect);
                        }
                    }
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ClassComponent:
                if (!offscreenSubtreeWasHidden) {
                    safelyDetachRef(deletedFiber, nearestMountedAncestor);
                    var instance = deletedFiber.stateNode;
                    if (typeof instance.componentWillUnmount === "function") safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ScopeComponent:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case OffscreenComponent:
                if (deletedFiber.mode & ConcurrentMode) {
                    // If this offscreen component is hidden, we already unmounted it. Before
                    // deleting the children, track that it's already unmounted so that we
                    // don't attempt to unmount the effects again.
                    // TODO: If the tree is hidden, in most cases we should be able to skip
                    // over the nested children entirely. An exception is we haven't yet found
                    // the topmost host node to delete, which we already track on the stack.
                    // But the other case is portals, which need to be detached no matter how
                    // deeply they are nested. We should use a subtree flag to track whether a
                    // subtree includes a nested portal.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                    recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            default:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
        }
    }
    function commitSuspenseCallback(finishedWork) {
        // TODO: Move this to passive phase
        var newState = finishedWork.memoizedState;
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState === null) {
            var current = finishedWork.alternate;
            if (current !== null) {
                var prevState = current.memoizedState;
                if (prevState !== null) {
                    var suspenseInstance = prevState.dehydrated;
                    if (suspenseInstance !== null) commitHydratedSuspenseInstance(suspenseInstance);
                }
            }
        }
    }
    function attachSuspenseRetryListeners(finishedWork) {
        // If this boundary just timed out, then it will have a set of wakeables.
        // For each wakeable, attach a listener so that when it resolves, React
        // attempts to re-render the boundary in the primary (pre-timeout) state.
        var wakeables = finishedWork.updateQueue;
        if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            wakeables.forEach(function(wakeable) {
                // Memoize using the boundary fiber to prevent redundant listeners.
                var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                if (!retryCache.has(wakeable)) {
                    retryCache.add(wakeable);
                    if (isDevToolsPresent) {
                        if (inProgressLanes !== null && inProgressRoot !== null) // If we have pending work still, associate the original updaters with it.
                        restorePendingUpdaters(inProgressRoot, inProgressLanes);
                        else throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                    }
                    wakeable.then(retry, retry);
                }
            });
        }
    } // This function detects when a Suspense boundary goes from visible to hidden.
    function commitMutationEffects(root, finishedWork, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        setCurrentFiber(finishedWork);
        commitMutationEffectsOnFiber(finishedWork, root);
        setCurrentFiber(finishedWork);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {
        // Deletions effects can be scheduled on any fiber type. They need to happen
        // before the children effects hae fired.
        var deletions = parentFiber.deletions;
        if (deletions !== null) for(var i = 0; i < deletions.length; i++){
            var childToDelete = deletions[i];
            try {
                commitDeletionEffects(root, parentFiber, childToDelete);
            } catch (error) {
                captureCommitPhaseError(childToDelete, parentFiber, error);
            }
        }
        var prevDebugFiber = getCurrentFiber();
        if (parentFiber.subtreeFlags & MutationMask) {
            var child = parentFiber.child;
            while(child !== null){
                setCurrentFiber(child);
                commitMutationEffectsOnFiber(child, root);
                child = child.sibling;
            }
        }
        setCurrentFiber(prevDebugFiber);
    }
    function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,
        // because the fiber tag is more specific. An exception is any flag related
        // to reconcilation, because those can be set on all fiber types.
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    try {
                        commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                        commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    } // Layout effects are destroyed during the mutation phase so that all
                    // destroy functions for all fibers are called before any create functions.
                    // This prevents sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) {
                        try {
                            startLayoutEffectTimer();
                            commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                        recordLayoutEffectDuration(finishedWork);
                    } else try {
                        commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case ClassComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                return;
            case HostComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                // TODO: ContentReset gets cleared by the children during the commit
                // phase. This is a refactor hazard because it means we must read
                // flags the flags after `commitReconciliationEffects` has already run;
                // the order matters. We should refactor so that ContentReset does not
                // rely on mutating the flag during commit. Like by setting a flag
                // during the render phase instead.
                if (finishedWork.flags & ContentReset) {
                    var instance = finishedWork.stateNode;
                    try {
                        resetTextContent(instance);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                if (flags & Update) {
                    var _instance4 = finishedWork.stateNode;
                    if (_instance4 != null) {
                        // Commit the work prepared earlier.
                        var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                        // as the newProps. The updatePayload will contain the real change in
                        // this case.
                        var oldProps = current !== null ? current.memoizedProps : newProps;
                        var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.
                        var updatePayload = finishedWork.updateQueue;
                        finishedWork.updateQueue = null;
                        if (updatePayload !== null) try {
                            commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostText:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (finishedWork.stateNode === null) throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    var textInstance = finishedWork.stateNode;
                    var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldText = current !== null ? current.memoizedProps : newText;
                    try {
                        commitTextUpdate(textInstance, oldText, newText);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case HostRoot:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (current !== null) {
                        var prevRootState = current.memoizedState;
                        if (prevRootState.isDehydrated) try {
                            commitHydratedContainer(root.containerInfo);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostPortal:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
            case SuspenseComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                var offscreenFiber = finishedWork.child;
                if (offscreenFiber.flags & Visibility) {
                    var offscreenInstance = offscreenFiber.stateNode;
                    var newState = offscreenFiber.memoizedState;
                    var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can
                    // read it during an event
                    offscreenInstance.isHidden = isHidden;
                    if (isHidden) {
                        var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                        if (!wasHidden) // TODO: Move to passive phase
                        markCommitTimeOfFallback();
                    }
                }
                if (flags & Update) {
                    try {
                        commitSuspenseCallback(finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                    attachSuspenseRetryListeners(finishedWork);
                }
                return;
            case OffscreenComponent:
                var _wasHidden = current !== null && current.memoizedState !== null;
                if (finishedWork.mode & ConcurrentMode) {
                    // Before committing the children, track on the stack whether this
                    // offscreen subtree was already hidden, so that we don't unmount the
                    // effects again.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                    recursivelyTraverseMutationEffects(root, finishedWork);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Visibility) {
                    var _offscreenInstance = finishedWork.stateNode;
                    var _newState = finishedWork.memoizedState;
                    var _isHidden = _newState !== null;
                    var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can
                    // read it during an event
                    _offscreenInstance.isHidden = _isHidden;
                    if (_isHidden) {
                        if (!_wasHidden) {
                            if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                                nextEffect = offscreenBoundary;
                                var offscreenChild = offscreenBoundary.child;
                                while(offscreenChild !== null){
                                    nextEffect = offscreenChild;
                                    disappearLayoutEffects_begin(offscreenChild);
                                    offscreenChild = offscreenChild.sibling;
                                }
                            }
                        }
                    }
                    // TODO: This needs to run whenever there's an insertion or update
                    // inside a hidden Offscreen tree.
                    hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                }
                return;
            case SuspenseListComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) attachSuspenseRetryListeners(finishedWork);
                return;
            case ScopeComponent:
                return;
            default:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
        }
    }
    function commitReconciliationEffects(finishedWork) {
        // Placement effects (insertions, reorders) can be scheduled on any fiber
        // type. They needs to happen after the children effects have fired, but
        // before the effects on this fiber have fired.
        var flags = finishedWork.flags;
        if (flags & Placement) {
            try {
                commitPlacement(finishedWork);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            } // Clear the "placement" from effect tag so that we know that this is
            // inserted, before any life-cycles like componentDidMount gets called.
            // TODO: findDOMNode doesn't rely on this any more but isMounted does
            // and isMounted is deprecated anyway so we should be able to kill this.
            finishedWork.flags &= ~Placement;
        }
        if (flags & Hydrating) finishedWork.flags &= ~Hydrating;
    }
    function commitLayoutEffects(finishedWork, root, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        nextEffect = finishedWork;
        commitLayoutEffects_begin(finishedWork, root, committedLanes);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {
        // Suspense layout effects semantics don't change for legacy roots.
        var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent && isModernRoot) {
                // Keep track of the current Offscreen stack's state.
                var isHidden = fiber.memoizedState !== null;
                var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
                if (newOffscreenSubtreeIsHidden) {
                    // The Offscreen tree is hidden. Skip over its layout effects.
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                } else {
                    // TODO (Offscreen) Also check: subtreeFlags & LayoutMask
                    var current = fiber.alternate;
                    var wasHidden = current !== null && current.memoizedState !== null;
                    var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                    var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden; // Traverse the Offscreen subtree with the current Offscreen as the root.
                    offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                    if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                        // This is the root of a reappearing boundary. Turn its layout effects
                        // back on.
                        nextEffect = fiber;
                        reappearLayoutEffects_begin(fiber);
                    }
                    var child = firstChild;
                    while(child !== null){
                        nextEffect = child;
                        commitLayoutEffects_begin(child, root, committedLanes);
                        child = child.sibling;
                    } // Restore Offscreen state and resume in our-progress traversal.
                    nextEffect = fiber;
                    offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                }
            }
            if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
        }
    }
    function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & LayoutMask) !== NoFlags) {
                var current = fiber.alternate;
                setCurrentFiber(fiber);
                try {
                    commitLayoutEffectOnFiber(root, current, fiber, committedLanes);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function disappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child; // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)
            switch(fiber.tag){
                case FunctionComponent:
                case ForwardRef:
                case MemoComponent:
                case SimpleMemoComponent:
                    if (fiber.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    } finally{
                        recordLayoutEffectDuration(fiber);
                    }
                    else commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    break;
                case ClassComponent:
                    // TODO (Offscreen) Check: flags & RefStatic
                    safelyDetachRef(fiber, fiber.return);
                    var instance = fiber.stateNode;
                    if (typeof instance.componentWillUnmount === "function") safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                    break;
                case HostComponent:
                    safelyDetachRef(fiber, fiber.return);
                    break;
                case OffscreenComponent:
                    // Check if this is a
                    var isHidden = fiber.memoizedState !== null;
                    if (isHidden) {
                        // Nested Offscreen tree is already hidden. Don't disappear
                        // its effects.
                        disappearLayoutEffects_complete(subtreeRoot);
                        continue;
                    }
                    break;
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else disappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function disappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function reappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent) {
                var isHidden = fiber.memoizedState !== null;
                if (isHidden) {
                    // Nested Offscreen tree is still hidden. Don't re-appear its effects.
                    reappearLayoutEffects_complete(subtreeRoot);
                    continue;
                }
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else reappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function reappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect; // TODO (Offscreen) Check: flags & LayoutStatic
            setCurrentFiber(fiber);
            try {
                reappearLayoutEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {
        nextEffect = finishedWork;
        commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);
    }
    function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);
        }
    }
    function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                try {
                    commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    try {
                        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                    } finally{
                        recordPassiveEffectDuration(finishedWork);
                    }
                } else commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                break;
        }
    }
    function commitPassiveUnmountEffects(firstChild) {
        nextEffect = firstChild;
        commitPassiveUnmountEffects_begin();
    }
    function commitPassiveUnmountEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var child = fiber.child;
            if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
                var deletions = fiber.deletions;
                if (deletions !== null) {
                    for(var i = 0; i < deletions.length; i++){
                        var fiberToDelete = deletions[i];
                        nextEffect = fiberToDelete;
                        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                    }
                    // A fiber was deleted from this parent fiber, but it's still part of
                    // the previous (alternate) parent fiber's list of children. Because
                    // children are a linked list, an earlier sibling that's still alive
                    // will be connected to the deleted fiber via its `alternate`:
                    //
                    //   live fiber
                    //   --alternate--> previous live fiber
                    //   --sibling--> deleted fiber
                    //
                    // We can't disconnect `alternate` on nodes that haven't been deleted
                    // yet, but we can disconnect the `sibling` and `child` pointers.
                    var previousFiber = fiber.alternate;
                    if (previousFiber !== null) {
                        var detachedChild = previousFiber.child;
                        if (detachedChild !== null) {
                            previousFiber.child = null;
                            do {
                                var detachedSibling = detachedChild.sibling;
                                detachedChild.sibling = null;
                                detachedChild = detachedSibling;
                            }while (detachedChild !== null);
                        }
                    }
                    nextEffect = fiber;
                }
            }
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffects_complete();
        }
    }
    function commitPassiveUnmountEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                commitPassiveUnmountOnFiber(fiber);
                resetCurrentFiber();
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                    recordPassiveEffectDuration(finishedWork);
                } else commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                break;
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        while(nextEffect !== null){
            var fiber = nextEffect; // Deletion effects fire in parent -> child order
            // TODO: Check if fiber has a PassiveStatic flag
            setCurrentFiber(fiber);
            commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
            resetCurrentFiber();
            var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we
            // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)
            if (child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var sibling = fiber.sibling;
            var returnFiber = fiber.return;
            // Recursively traverse the entire deleted tree and clean up fiber fields.
            // This is more aggressive than ideal, and the long term goal is to only
            // have to detach the deleted tree at the root.
            detachFiberAfterEffects(fiber);
            if (fiber === deletedSubtreeRoot) {
                nextEffect = null;
                return;
            }
            if (sibling !== null) {
                sibling.return = returnFiber;
                nextEffect = sibling;
                return;
            }
            nextEffect = returnFiber;
        }
    }
    function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {
        switch(current.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (current.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                    recordPassiveEffectDuration(current);
                } else commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                break;
        }
    } // TODO: Reuse reappearLayoutEffects traversal here?
    function invokeLayoutEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Layout | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                try {
                    instance.componentDidMount();
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokePassiveEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokeLayoutEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                if (typeof instance.componentWillUnmount === "function") safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                break;
        }
    }
    function invokePassiveEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
        }
    }
    var COMPONENT_TYPE = 0;
    var HAS_PSEUDO_CLASS_TYPE = 1;
    var ROLE_TYPE = 2;
    var TEST_NAME_TYPE = 3;
    var TEXT_TYPE = 4;
    if (typeof Symbol === "function" && Symbol.for) {
        var symbolFor = Symbol.for;
        COMPONENT_TYPE = symbolFor("selector.component");
        HAS_PSEUDO_CLASS_TYPE = symbolFor("selector.has_pseudo_class");
        ROLE_TYPE = symbolFor("selector.role");
        TEST_NAME_TYPE = symbolFor("selector.test_id");
        TEXT_TYPE = symbolFor("selector.text");
    }
    var commitHooks = [];
    function onCommitRoot$1() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
    function isLegacyActEnvironment(fiber) {
        // Legacy mode. We preserve the behavior of React 17's act. It assumes an
        // act environment whenever `jest` is defined, but you can still turn off
        // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly
        // to false.
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest
        var jestIsDefined = typeof jest !== "undefined";
        return jestIsDefined && isReactActEnvironmentGlobal !== false;
    }
    function isConcurrentActEnvironment() {
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : undefined;
        if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) // TODO: Include link to relevant documentation page.
        error("The current testing environment is not configured to support act(...)");
        return isReactActEnvironmentGlobal;
    }
    var ceil = Math.ceil;
    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
    var NoContext = /*             */ 0;
    var BatchedContext = /*               */ 1;
    var RenderContext = /*                */ 2;
    var CommitContext = /*                */ 4;
    var RootInProgress = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5;
    var RootDidNotComplete = 6; // Describes where we are in the React execution stack
    var executionContext = NoContext; // The root we're working on
    var workInProgressRoot = null; // The fiber we're working on
    var workInProgress = null; // The lanes we're rendering
    var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
    // This is a superset of the lanes we started working on at the root. The only
    // case where it's different from `workInProgressRootRenderLanes` is when we
    // enter a subtree that is hidden and needs to be unhidden: Suspense and
    // Offscreen component.
    //
    // Most things in the work loop should deal with workInProgressRootRenderLanes.
    // Most things in begin/complete phases should deal with subtreeRenderLanes.
    var subtreeRenderLanes = NoLanes;
    var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.
    var workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown
    var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
    // slightly different than `renderLanes` because `renderLanes` can change as you
    // enter and exit an Offscreen tree. This value is the combination of all render
    // lanes for the entire render phase.
    var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.
    var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.
    var workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).
    var workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.
    var workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.
    // We will log them once the tree commits.
    var workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.
    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
    // more and prefer CPU suspense heuristics instead.
    var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
    // suspense heuristics and opt out of rendering more content.
    var RENDER_TIMEOUT_MS = 500;
    var workInProgressTransitions = null;
    function resetRenderTimer() {
        workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
    }
    function getRenderTargetTime() {
        return workInProgressRootRenderTargetTime;
    }
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsLanes = NoLanes;
    var pendingPassiveProfilerEffects = [];
    var pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates
    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var isFlushingPassiveEffects = false;
    var didScheduleUpdateDuringPassiveEffects = false;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0;
    var rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their
    // event times as simultaneous, even if the actual clock time has advanced
    // between the first and second call.
    var currentEventTime = NoTimestamp;
    var currentEventTransitionLane = NoLanes;
    var isRunningInsertionEffect = false;
    function getWorkInProgressRoot() {
        return workInProgressRoot;
    }
    function requestEventTime() {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) // We're inside React, so it's fine to read the actual time.
        return now();
         // We're not inside React, so we may be in the middle of a browser event.
        if (currentEventTime !== NoTimestamp) // Use the same start time for all updates until we enter React again.
        return currentEventTime;
         // This is the first update since React yielded. Compute a new start time.
        currentEventTime = now();
        return currentEventTime;
    }
    function requestUpdateLane(fiber) {
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) // This is a render phase update. These are not officially supported. The
        // old behavior is to give this the same "thread" (lanes) as
        // whatever is currently rendering. So if you call `setState` on a component
        // that happens later in the same render, it will flush. Ideally, we want to
        // remove the special case and treat them as if they came from an
        // interleaved event. Regardless, this pattern is not officially supported.
        // This behavior is only a fallback. The flag only exists until we can roll
        // out the setState warning, since existing code might accidentally rely on
        // the current behavior.
        return pickArbitraryLane(workInProgressRootRenderLanes);
        var isTransition = requestCurrentTransition() !== NoTransition;
        if (isTransition) {
            if (ReactCurrentBatchConfig$3.transition !== null) {
                var transition = ReactCurrentBatchConfig$3.transition;
                if (!transition._updatedFibers) transition._updatedFibers = new Set();
                transition._updatedFibers.add(fiber);
            } // The algorithm for assigning an update to a lane should be stable for all
            // updates at the same priority within the same event. To do this, the
            // inputs to the algorithm must be the same.
            //
            // The trick we use is to cache the first of each of these inputs within an
            // event. Then reset the cached values once we can be sure the event is
            // over. Our heuristic for that is whenever we enter a concurrent work loop.
            if (currentEventTransitionLane === NoLane) // All transitions within the same event are assigned the same lane.
            currentEventTransitionLane = claimNextTransitionLane();
            return currentEventTransitionLane;
        } // Updates originating inside certain React methods, like flushSync, have
        // their priority set by tracking it with a context variable.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var updateLane = getCurrentUpdatePriority();
        if (updateLane !== NoLane) return updateLane;
         // This update originated outside React. Ask the host environment for an
        // appropriate priority, based on the type of event.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var eventLane = getCurrentEventPriority();
        return eventLane;
    }
    function requestRetryLane(fiber) {
        // This is a fork of `requestUpdateLane` designed specifically for Suspense
        // "retries" — a special update that attempts to flip a Suspense boundary
        // from its placeholder state to its primary/resolved state.
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        return claimNextRetryLane();
    }
    function scheduleUpdateOnFiber(root, fiber, lane, eventTime) {
        checkForNestedUpdates();
        if (isRunningInsertionEffect) error("useInsertionEffect must not schedule updates.");
        if (isFlushingPassiveEffects) didScheduleUpdateDuringPassiveEffects = true;
        markRootUpdated(root, lane, eventTime);
        if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) // This update was dispatched during the render phase. This is a mistake
        // if the update originates from user space (with the exception of local
        // hook updates, which are handled differently and don't reach this
        // function), but there are some internal React features that use this as
        // an implementation detail, like selective hydration.
        warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase
        else {
            if (isDevToolsPresent) addFiberToLanesMap(root, fiber, lane);
            warnIfUpdatesNotWrappedWithActDEV(fiber);
            if (root === workInProgressRoot) {
                // Received an update to a tree that's in the middle of rendering. Mark
                // that there was an interleaved update work on this root. Unless the
                // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
                // phase update. In that case, we don't treat render phase updates as if
                // they were interleaved, for backwards compat reasons.
                if ((executionContext & RenderContext) === NoContext) workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
                if (workInProgressRootExitStatus === RootSuspendedWithDelay) // The root already suspended with a delay, which means this render
                // definitely won't finish. Since we have a new update, let's mark it as
                // suspended now, right before marking the incoming update. This has the
                // effect of interrupting the current render and switching to the update.
                // TODO: Make sure this doesn't override pings that happen while we've
                // already started rendering.
                markRootSuspended$1(root, workInProgressRootRenderLanes);
            }
            ensureRootIsScheduled(root, eventTime);
            if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
                // Flush the synchronous work now, unless we're already working or inside
                // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
                // scheduleCallbackForFiber to preserve the ability to schedule a callback
                // without immediately flushing it. We only do this for user-initiated
                // updates, to preserve historical behavior of legacy mode.
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function scheduleInitialHydrationOnRoot(root, lane, eventTime) {
        // This is a special fork of scheduleUpdateOnFiber that is only used to
        // schedule the initial hydration of a root that has just been created. Most
        // of the stuff in scheduleUpdateOnFiber can be skipped.
        //
        // The main reason for this separate path, though, is to distinguish the
        // initial children from subsequent updates. In fully client-rendered roots
        // (createRoot instead of hydrateRoot), all top-level renders are modeled as
        // updates, but hydration roots are special because the initial render must
        // match what was rendered on the server.
        var current = root.current;
        current.lanes = lane;
        markRootUpdated(root, lane, eventTime);
        ensureRootIsScheduled(root, eventTime);
    }
    function isUnsafeClassRenderPhaseUpdate(fiber) {
        // Check if this is a render phase update. Only called by class components,
        // which special (deprecated) behavior for UNSAFE_componentWillReceive props.
        return(// decided not to enable it.
        (executionContext & RenderContext) !== NoContext);
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the priority
    // of the existing task is the same as the priority of the next level that the
    // root has work on. This function is called on every update, and right before
    // exiting a task.
    function ensureRootIsScheduled(root, currentTime) {
        var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
        // expired so we know to work on those next.
        markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.
        var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (nextLanes === NoLanes) {
            // Special case: There's nothing to work on.
            if (existingCallbackNode !== null) cancelCallback$1(existingCallbackNode);
            root.callbackNode = null;
            root.callbackPriority = NoLane;
            return;
        } // We use the highest priority lane to represent the priority of the callback.
        var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.
        var existingCallbackPriority = root.callbackPriority;
        if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a
        // Scheduler task, rather than an `act` task, cancel it and re-scheduled
        // on the `act` queue.
        !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
            // If we're going to re-use an existing task, it needs to exist.
            // Assume that discrete update microtasks are non-cancellable and null.
            // TODO: Temporary until we confirm this warning is not fired.
            if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) error("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
            return;
        }
        if (existingCallbackNode != null) // Cancel the existing callback. We'll schedule a new one below.
        cancelCallback$1(existingCallbackNode);
         // Schedule a new callback.
        var newCallbackNode;
        if (newCallbackPriority === SyncLane) {
            // Special case: Sync React callbacks are scheduled on a special
            // internal queue
            if (root.tag === LegacyRoot) {
                if (ReactCurrentActQueue$1.isBatchingLegacy !== null) ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
                scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));
            } else scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
            // Flush the queue in a microtask.
            if (ReactCurrentActQueue$1.current !== null) // Inside `act`, use our internal `act` queue so that these get flushed
            // at the end of the current scope even when using the sync version
            // of `act`.
            ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
            else scheduleMicrotask(function() {
                // In Safari, appending an iframe forces microtasks to run.
                // https://github.com/facebook/react/issues/22459
                // We don't support running callbacks in the middle of render
                // or commit so we need to check against that.
                if ((executionContext & (RenderContext | CommitContext)) === NoContext) // Note that this would still prematurely flush the callbacks
                // if this happens outside render or commit phase (e.g. in an event).
                flushSyncCallbacks();
            });
            newCallbackNode = null;
        } else {
            var schedulerPriorityLevel;
            switch(lanesToEventPriority(nextLanes)){
                case DiscreteEventPriority:
                    schedulerPriorityLevel = ImmediatePriority;
                    break;
                case ContinuousEventPriority:
                    schedulerPriorityLevel = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    schedulerPriorityLevel = NormalPriority;
                    break;
                case IdleEventPriority:
                    schedulerPriorityLevel = IdlePriority;
                    break;
                default:
                    schedulerPriorityLevel = NormalPriority;
                    break;
            }
            newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
        }
        root.callbackPriority = newCallbackPriority;
        root.callbackNode = newCallbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.
    function performConcurrentWorkOnRoot(root, didTimeout) {
        resetNestedUpdateFlag();
        // event time. The next update will compute a new event time.
        currentEventTime = NoTimestamp;
        currentEventTransitionLane = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Should not already be working.");
         // Flush any pending passive effects before deciding which lanes to work on,
        // in case they schedule additional work.
        var originalCallbackNode = root.callbackNode;
        var didFlushPassiveEffects = flushPassiveEffects();
        if (didFlushPassiveEffects) {
            // Something in the passive effect phase may have canceled the current task.
            // Check if the task node for this root was changed.
            if (root.callbackNode !== originalCallbackNode) // The current task was canceled. Exit. We don't need to call
            // `ensureRootIsScheduled` because the check above implies either that
            // there's a new task, or that there's no remaining work on this root.
            return null;
        } // Determine the next lanes to work on, using the fields stored
        // on the root.
        var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (lanes === NoLanes) // Defensive coding. This is never expected to happen.
        return null;
         // We disable time-slicing in some cases: if the work has been CPU-bound
        // for too long ("expired" work, to prevent starvation), or we're in
        // sync-updates-by-default mode.
        // TODO: We only check `didTimeout` defensively, to account for a Scheduler
        // bug we're still investigating. Once the bug in Scheduler is fixed,
        // we can remove this, since we track expiration ourselves.
        var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && !didTimeout;
        var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);
        if (exitStatus !== RootInProgress) {
            if (exitStatus === RootErrored) {
                // If something threw an error, try rendering one more time. We'll
                // render synchronously to block concurrent data mutations, and we'll
                // includes all pending updates are included. If it still fails after
                // the second attempt, we'll give up and commit the resulting tree.
                var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                if (errorRetryLanes !== NoLanes) {
                    lanes = errorRetryLanes;
                    exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
                }
            }
            if (exitStatus === RootFatalErrored) {
                var fatalError = workInProgressRootFatalError;
                prepareFreshStack(root, NoLanes);
                markRootSuspended$1(root, lanes);
                ensureRootIsScheduled(root, now());
                throw fatalError;
            }
            if (exitStatus === RootDidNotComplete) // The render unwound without completing the tree. This happens in special
            // cases where need to exit the current render without producing a
            // consistent tree or committing.
            //
            // This should only happen during a concurrent render, not a discrete or
            // synchronous update. We should have already checked for this when we
            // unwound the stack.
            markRootSuspended$1(root, lanes);
            else {
                // The render completed.
                // Check if this render may have yielded to a concurrent event, and if so,
                // confirm that any newly rendered stores are consistent.
                // TODO: It's possible that even a concurrent render may never have yielded
                // to the main thread, if it was fast enough, or if it expired. We could
                // skip the consistency check in that case, too.
                var renderWasConcurrent = !includesBlockingLane(root, lanes);
                var finishedWork = root.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                    // A store was mutated in an interleaved event. Render again,
                    // synchronously, to block further mutations.
                    exitStatus = renderRootSync(root, lanes); // We need to check again if something threw
                    if (exitStatus === RootErrored) {
                        var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                        if (_errorRetryLanes !== NoLanes) {
                            lanes = _errorRetryLanes;
                            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any
                        // concurrent events.
                        }
                    }
                    if (exitStatus === RootFatalErrored) {
                        var _fatalError = workInProgressRootFatalError;
                        prepareFreshStack(root, NoLanes);
                        markRootSuspended$1(root, lanes);
                        ensureRootIsScheduled(root, now());
                        throw _fatalError;
                    }
                } // We now have a consistent tree. The next step is either to commit it,
                // or, if something suspended, wait to commit it after a timeout.
                root.finishedWork = finishedWork;
                root.finishedLanes = lanes;
                finishConcurrentRender(root, exitStatus, lanes);
            }
        }
        ensureRootIsScheduled(root, now());
        if (root.callbackNode === originalCallbackNode) // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
        return null;
    }
    function recoverFromConcurrentError(root, errorRetryLanes) {
        // If an error occurred during hydration, discard server response and fall
        // back to client side render.
        // Before rendering again, save the errors from the previous attempt.
        var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
        if (isRootDehydrated(root)) {
            // The shell failed to hydrate. Set a flag to force a client rendering
            // during the next attempt. To do this, we call prepareFreshStack now
            // to create the root work-in-progress fiber. This is a bit weird in terms
            // of factoring, because it relies on renderRootSync not calling
            // prepareFreshStack again in the call below, which happens because the
            // root and lanes haven't changed.
            //
            // TODO: I think what we should do is set ForceClientRender inside
            // throwException, like we do for nested Suspense boundaries. The reason
            // it's here instead is so we can switch to the synchronous work loop, too.
            // Something to consider for a future refactor.
            var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);
            rootWorkInProgress.flags |= ForceClientRender;
            errorHydratingContainer(root.containerInfo);
        }
        var exitStatus = renderRootSync(root, errorRetryLanes);
        if (exitStatus !== RootErrored) {
            // Successfully finished rendering on retry
            // The errors from the failed first attempt have been recovered. Add
            // them to the collection of recoverable errors. We'll log them in the
            // commit phase.
            var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
            workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors
            // from the first attempt, to preserve the causal sequence.
            if (errorsFromSecondAttempt !== null) queueRecoverableErrors(errorsFromSecondAttempt);
        }
        return exitStatus;
    }
    function queueRecoverableErrors(errors) {
        if (workInProgressRootRecoverableErrors === null) workInProgressRootRecoverableErrors = errors;
        else workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
    }
    function finishConcurrentRender(root, exitStatus, lanes) {
        switch(exitStatus){
            case RootInProgress:
            case RootFatalErrored:
                throw new Error("Root did not complete. This is a bug in React.");
            // Flow knows about invariant, so it complains if I add a break
            // statement, but eslint doesn't know about invariant, so it complains
            // if I do. eslint-disable-next-line no-fallthrough
            case RootErrored:
                // We should have already attempted to retry this tree. If we reached
                // this point, it errored again. Commit it.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspended:
                markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
                // should immediately commit it or wait a bit.
                if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
                !shouldForceFlushFallbacksInDEV()) {
                    // This render only included retries, no updates. Throttle committing
                    // retries so that we don't show too many loading states too quickly.
                    var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.
                    if (msUntilTimeout > 10) {
                        var nextLanes = getNextLanes(root, NoLanes);
                        if (nextLanes !== NoLanes) break;
                        var suspendedLanes = root.suspendedLanes;
                        if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                            // We should prefer to render the fallback of at the last
                            // suspended level. Ping the last suspended level to try
                            // rendering it again.
                            // FIXME: What if the suspended lanes are Idle? Should not restart.
                            var eventTime = requestEventTime();
                            markRootPinged(root, suspendedLanes);
                            break;
                        } // The render is suspended, it hasn't timed out, and there's no
                        // lower priority work to do. Instead of committing the fallback
                        // immediately, wait for more data to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                        break;
                    }
                } // The work expired. Commit immediately.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspendedWithDelay:
                markRootSuspended$1(root, lanes);
                if (includesOnlyTransitions(lanes)) break;
                if (!shouldForceFlushFallbacksInDEV()) {
                    // This is not a transition, but we did trigger an avoided state.
                    // Schedule a placeholder to display after a short delay, using the Just
                    // Noticeable Difference.
                    // TODO: Is the JND optimization worth the added complexity? If this is
                    // the only reason we track the event time, then probably not.
                    // Consider removing.
                    var mostRecentEventTime = getMostRecentEventTime(root, lanes);
                    var eventTimeMs = mostRecentEventTime;
                    var timeElapsedMs = now() - eventTimeMs;
                    var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.
                    if (_msUntilTimeout > 10) {
                        // Instead of committing the fallback immediately, wait for more data
                        // to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                        break;
                    }
                } // Commit the placeholder.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootCompleted:
                // The work completed. Ready to commit.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            default:
                throw new Error("Unknown root exit status.");
        }
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
        // Search the rendered tree for external store reads, and check whether the
        // stores were mutated in a concurrent event. Intentionally using an iterative
        // loop instead of recursion so we can exit early.
        var node = finishedWork;
        while(true){
            if (node.flags & StoreConsistency) {
                var updateQueue = node.updateQueue;
                if (updateQueue !== null) {
                    var checks = updateQueue.stores;
                    if (checks !== null) for(var i = 0; i < checks.length; i++){
                        var check = checks[i];
                        var getSnapshot = check.getSnapshot;
                        var renderedValue = check.value;
                        try {
                            if (!objectIs(getSnapshot(), renderedValue)) // Found an inconsistent store.
                            return false;
                        } catch (error) {
                            // If `getSnapshot` throws, return `false`. This will schedule
                            // a re-render, and the error will be rethrown during render.
                            return false;
                        }
                    }
                }
            }
            var child = node.child;
            if (node.subtreeFlags & StoreConsistency && child !== null) {
                child.return = node;
                node = child;
                continue;
            }
            if (node === finishedWork) return true;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return true;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        } // Flow doesn't know this is unreachable, but eslint does
        // eslint-disable-next-line no-unreachable
        return true;
    }
    function markRootSuspended$1(root, suspendedLanes) {
        // When suspending, we should always exclude lanes that were pinged or (more
        // rarely, since we try to avoid it) updated during the render phase.
        // TODO: Lol maybe there's a better way to factor this besides this
        // obnoxiously named function :)
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
        markRootSuspended(root, suspendedLanes);
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler
    function performSyncWorkOnRoot(root) {
        syncNestedUpdateFlag();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Should not already be working.");
        flushPassiveEffects();
        var lanes = getNextLanes(root, NoLanes);
        if (!includesSomeLane(lanes, SyncLane)) {
            // There's no remaining sync work left.
            ensureRootIsScheduled(root, now());
            return null;
        }
        var exitStatus = renderRootSync(root, lanes);
        if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
            // If something threw an error, try rendering one more time. We'll render
            // synchronously to block concurrent data mutations, and we'll includes
            // all pending updates are included. If it still fails after the second
            // attempt, we'll give up and commit the resulting tree.
            var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
            if (errorRetryLanes !== NoLanes) {
                lanes = errorRetryLanes;
                exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
            }
        }
        if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root, NoLanes);
            markRootSuspended$1(root, lanes);
            ensureRootIsScheduled(root, now());
            throw fatalError;
        }
        if (exitStatus === RootDidNotComplete) throw new Error("Root did not complete. This is a bug in React.");
         // We now have a consistent tree. Because this is a sync render, we
        // will commit it even if something suspended.
        var finishedWork = root.current.alternate;
        root.finishedWork = finishedWork;
        root.finishedLanes = lanes;
        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next
        // pending level.
        ensureRootIsScheduled(root, now());
        return null;
    }
    function flushRoot(root, lanes) {
        if (lanes !== NoLanes) {
            markRootEntangled(root, mergeLanes(lanes, SyncLane));
            ensureRootIsScheduled(root, now());
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                resetRenderTimer();
                flushSyncCallbacks();
            }
        }
    }
    function batchedUpdates$1(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer
            // most batchedUpdates-like method.
            if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function discreteUpdates(fn, a, b, c, d) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            return fn(a, b, c, d);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            if (executionContext === NoContext) resetRenderTimer();
        }
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync(fn) {
        // In legacy mode, we flush pending passive effects at the beginning of the
        // next event, not at the end of the previous one.
        if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) flushPassiveEffects();
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        var previousPriority = getCurrentUpdatePriority();
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            if (fn) return fn();
            else return undefined;
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
            // Note that this will happen even if batchedUpdates is higher up
            // the stack.
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) flushSyncCallbacks();
        }
    }
    function isAlreadyRendering() {
        // Used by the renderer to print a warning if certain APIs are called from
        // the wrong context.
        return (executionContext & (RenderContext | CommitContext)) !== NoContext;
    }
    function pushRenderLanes(fiber, lanes) {
        push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
        subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
        workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
    }
    function popRenderLanes(fiber) {
        subtreeRenderLanes = subtreeRenderLanesCursor.current;
        pop(subtreeRenderLanesCursor, fiber);
    }
    function prepareFreshStack(root, lanes) {
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        var timeoutHandle = root.timeoutHandle;
        if (timeoutHandle !== noTimeout) {
            // The root previous suspended and scheduled a timeout to commit a fallback
            // state. Now that we have additional work, cancel the timeout.
            root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
            cancelTimeout(timeoutHandle);
        }
        if (workInProgress !== null) {
            var interruptedWork = workInProgress.return;
            while(interruptedWork !== null){
                var current = interruptedWork.alternate;
                unwindInterruptedWork(current, interruptedWork);
                interruptedWork = interruptedWork.return;
            }
        }
        workInProgressRoot = root;
        var rootWorkInProgress = createWorkInProgress(root.current, null);
        workInProgress = rootWorkInProgress;
        workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
        workInProgressRootExitStatus = RootInProgress;
        workInProgressRootFatalError = null;
        workInProgressRootSkippedLanes = NoLanes;
        workInProgressRootInterleavedUpdatedLanes = NoLanes;
        workInProgressRootPingedLanes = NoLanes;
        workInProgressRootConcurrentErrors = null;
        workInProgressRootRecoverableErrors = null;
        finishQueueingConcurrentUpdates();
        ReactStrictModeWarnings.discardPendingWarnings();
        return rootWorkInProgress;
    }
    function handleError(root, thrownValue) {
        do {
            var erroredWork = workInProgress;
            try {
                // Reset module-level state that was set during the render phase.
                resetContextDependencies();
                resetHooksAfterThrow();
                resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
                // separate issue. Write a regression test using string refs.
                ReactCurrentOwner$2.current = null;
                if (erroredWork === null || erroredWork.return === null) {
                    // Expected to be working on a non-root fiber. This is a fatal error
                    // because there's no ancestor that can handle it; the root is
                    // supposed to capture all errors that weren't caught by an error
                    // boundary.
                    workInProgressRootExitStatus = RootFatalErrored;
                    workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
                    // sibling, or the parent if there are no siblings. But since the root
                    // has no siblings nor a parent, we set it to null. Usually this is
                    // handled by `completeUnitOfWork` or `unwindWork`, but since we're
                    // intentionally not calling those, we need set it here.
                    // TODO: Consider calling `unwindWork` to pop the contexts.
                    workInProgress = null;
                    return;
                }
                if (enableProfilerTimer && erroredWork.mode & ProfileMode) // Record the time spent rendering before an error was thrown. This
                // avoids inaccurate Profiler durations in the case of a
                // suspended render.
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                if (enableSchedulingProfiler) {
                    markComponentRenderStopped();
                    if (thrownValue !== null && typeof thrownValue === "object" && typeof thrownValue.then === "function") {
                        var wakeable = thrownValue;
                        markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                    } else markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                }
                throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
                // Something in the return path also threw.
                thrownValue = yetAnotherThrownValue;
                if (workInProgress === erroredWork && erroredWork !== null) {
                    // If this boundary has already errored, then we had trouble processing
                    // the error. Bubble it to the next boundary.
                    erroredWork = erroredWork.return;
                    workInProgress = erroredWork;
                } else erroredWork = workInProgress;
                continue;
            } // Return to the normal work loop.
            return;
        }while (true);
    }
    function pushDispatcher() {
        var prevDispatcher = ReactCurrentDispatcher$2.current;
        ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
        if (prevDispatcher === null) // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
        else return prevDispatcher;
    }
    function popDispatcher(prevDispatcher) {
        ReactCurrentDispatcher$2.current = prevDispatcher;
    }
    function markCommitTimeOfFallback() {
        globalMostRecentFallbackTime = now();
    }
    function markSkippedUpdateLanes(lane) {
        workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
    }
    function renderDidSuspend() {
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootSuspended;
    }
    function renderDidSuspendDelayIfPossible() {
        if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) workInProgressRootExitStatus = RootSuspendedWithDelay;
         // Check if there are updates that we skipped tree that might have unblocked
        // this render.
        if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) // Mark the current render as suspended so that we switch to working on
        // the updates that were skipped. Usually we only suspend at the end of
        // the render phase.
        // TODO: We should probably always mark the root as suspended immediately
        // (inside this function), since by suspending at the end of the render
        // phase introduces a potential mistake where we suspend lanes that were
        // pinged or updated while we were rendering.
        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
    }
    function renderDidError(error) {
        if (workInProgressRootExitStatus !== RootSuspendedWithDelay) workInProgressRootExitStatus = RootErrored;
        if (workInProgressRootConcurrentErrors === null) workInProgressRootConcurrentErrors = [
            error
        ];
        else workInProgressRootConcurrentErrors.push(error);
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.
    function renderHasNotSuspendedYet() {
        // If something errored or completed, we can't really be sure,
        // so those are false.
        return workInProgressRootExitStatus === RootInProgress;
    }
    function renderRootSync(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopSync();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        executionContext = prevExecutionContext;
        popDispatcher(prevDispatcher);
        if (workInProgress !== null) // This is a sync render, so we should have finished the whole tree.
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
        markRenderStopped();
        workInProgressRoot = null;
        workInProgressRootRenderLanes = NoLanes;
        return workInProgressRootExitStatus;
    } // The work loop is an extremely hot path. Tell Closure not to inline it.
    /** @noinline */ function workLoopSync() {
        // Already timed out, so perform work without checking if we need to yield.
        while(workInProgress !== null)performUnitOfWork(workInProgress);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            resetRenderTimer();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopConcurrent();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        popDispatcher(prevDispatcher);
        executionContext = prevExecutionContext;
        if (workInProgress !== null) {
            markRenderYielded();
            return RootInProgress;
        } else {
            markRenderStopped();
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes; // Return the final exit status.
            return workInProgressRootExitStatus;
        }
    }
    /** @noinline */ function workLoopConcurrent() {
        // Perform work until Scheduler asks us to yield
        while(workInProgress !== null && !shouldYield())performUnitOfWork(workInProgress);
    }
    function performUnitOfWork(unitOfWork) {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current = unitOfWork.alternate;
        setCurrentFiber(unitOfWork);
        var next;
        if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
        } else next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
        resetCurrentFiber();
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        if (next === null) // If this doesn't spawn new work, complete the current work.
        completeUnitOfWork(unitOfWork);
        else workInProgress = next;
        ReactCurrentOwner$2.current = null;
    }
    function completeUnitOfWork(unitOfWork) {
        // Attempt to complete the current unit of work, then move to the next
        // sibling. If there are no more siblings, return to the parent fiber.
        var completedWork = unitOfWork;
        do {
            // The current, flushed, state of this fiber is the alternate. Ideally
            // nothing should rely on this, but relying on it here means that we don't
            // need an additional field on the work in progress.
            var current = completedWork.alternate;
            var returnFiber = completedWork.return; // Check if the work completed or if something threw.
            if ((completedWork.flags & Incomplete) === NoFlags) {
                setCurrentFiber(completedWork);
                var next = void 0;
                if ((completedWork.mode & ProfileMode) === NoMode) next = completeWork(current, completedWork, subtreeRenderLanes);
                else {
                    startProfilerTimer(completedWork);
                    next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                }
                resetCurrentFiber();
                if (next !== null) {
                    // Completing this fiber spawned new work. Work on that next.
                    workInProgress = next;
                    return;
                }
            } else {
                // This fiber did not complete because something threw. Pop values off
                // the stack without entering the complete phase. If this is a boundary,
                // capture values if possible.
                var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.
                if (_next !== null) {
                    // If completing this work spawned new work, do that next. We'll come
                    // back here again.
                    // Since we're restarting, remove anything that is not a host effect
                    // from the effect tag.
                    _next.flags &= HostEffectMask;
                    workInProgress = _next;
                    return;
                }
                if ((completedWork.mode & ProfileMode) !== NoMode) {
                    // Record the render duration for the fiber that errored.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.
                    var actualDuration = completedWork.actualDuration;
                    var child = completedWork.child;
                    while(child !== null){
                        actualDuration += child.actualDuration;
                        child = child.sibling;
                    }
                    completedWork.actualDuration = actualDuration;
                }
                if (returnFiber !== null) {
                    // Mark the parent fiber as incomplete and clear its subtree flags.
                    returnFiber.flags |= Incomplete;
                    returnFiber.subtreeFlags = NoFlags;
                    returnFiber.deletions = null;
                } else {
                    // We've unwound all the way to the root.
                    workInProgressRootExitStatus = RootDidNotComplete;
                    workInProgress = null;
                    return;
                }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
                // If there is more work to do in this returnFiber, do that next.
                workInProgress = siblingFiber;
                return;
            } // Otherwise, return to the parent
            completedWork = returnFiber; // Update the next thing we're working on in case something throws.
            workInProgress = completedWork;
        }while (completedWork !== null); // We've reached the root.
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootCompleted;
    }
    function commitRoot(root, recoverableErrors, transitions) {
        // TODO: This no longer makes any sense. We already wrap the mutation and
        // layout phases. Should be able to remove.
        var previousUpdateLanePriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);
        } finally{
            ReactCurrentBatchConfig$3.transition = prevTransition;
            setCurrentUpdatePriority(previousUpdateLanePriority);
        }
        return null;
    }
    function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {
        do // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
        // means `flushPassiveEffects` will sometimes result in additional
        // passive effects. So we need to keep flushing in a loop until there are
        // no more pending effects.
        // TODO: Might be better if `flushPassiveEffects` did not automatically
        // flush synchronous work at the end, to avoid factoring hazards like this.
        flushPassiveEffects();
        while (rootWithPendingPassiveEffects !== null);
        flushRenderPhaseStrictModeWarningsInDEV();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Should not already be working.");
        var finishedWork = root.finishedWork;
        var lanes = root.finishedLanes;
        markCommitStarted(lanes);
        if (finishedWork === null) {
            markCommitStopped();
            return null;
        } else if (lanes === NoLanes) error("root.finishedLanes should not be empty during a commit. This is a bug in React.");
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        if (finishedWork === root.current) throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
         // commitRoot never returns a continuation; it always finishes synchronously.
        // So we can clear these now to allow a new callback to be scheduled.
        root.callbackNode = null;
        root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first
        // pending time is whatever is left on the root fiber.
        var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
        markRootFinished(root, remainingLanes);
        if (root === workInProgressRoot) {
            // We can reset these now that they are finished.
            workInProgressRoot = null;
            workInProgress = null;
            workInProgressRootRenderLanes = NoLanes;
        } // If there are pending passive effects, schedule a callback to process them.
        // Do this as early as possible, so it is queued before anything else that
        // might get scheduled in the commit phase. (See #16714.)
        // TODO: Delete all other places that schedule the passive effect callback
        // They're redundant.
        if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
            if (!rootDoesHavePassiveEffects) {
                rootDoesHavePassiveEffects = true;
                // to store it in pendingPassiveTransitions until they get processed
                // We need to pass this through as an argument to commitRoot
                // because workInProgressTransitions might have changed between
                // the previous render and commit if we throttle the commit
                // with setTimeout
                pendingPassiveTransitions = transitions;
                scheduleCallback$1(NormalPriority, function() {
                    flushPassiveEffects(); // This render triggered passive effects: release the root cache pool
                    // *after* passive effects fire to avoid freeing a cache pool that may
                    // be referenced by a node in the tree (HostRoot, Cache boundary etc)
                    return null;
                });
            }
        } // Check if there are any effects in the whole tree.
        // TODO: This is left over from the effect list implementation, where we had
        // to check for the existence of `firstEffect` to satisfy Flow. I think the
        // only other reason this optimization exists is because it affects profiling.
        // Reconsider whether this is necessary.
        var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        if (subtreeHasEffects || rootHasEffect) {
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            ReactCurrentBatchConfig$3.transition = null;
            var previousPriority = getCurrentUpdatePriority();
            setCurrentUpdatePriority(DiscreteEventPriority);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext; // Reset this to null before calling lifecycles
            ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
            // of the effect list for each phase: all mutation effects come before all
            // layout effects, and so on.
            // The first phase a "before mutation" phase. We use this phase to read the
            // state of the host tree right before we mutate it. This is where
            // getSnapshotBeforeUpdate is called.
            var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);
            // Mark the current commit time to be shared by all Profilers in this
            // batch. This enables them to be grouped later.
            recordCommitTime();
            commitMutationEffects(root, finishedWork, lanes);
            resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
            // the mutation phase, so that the previous tree is still current during
            // componentWillUnmount, but before the layout phase, so that the finished
            // work is current during componentDidMount/Update.
            root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
            markLayoutEffectsStarted(lanes);
            commitLayoutEffects(finishedWork, root, lanes);
            markLayoutEffectsStopped();
            // opportunity to paint.
            requestPaint();
            executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
        } else {
            // No effects.
            root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
            recordCommitTime();
        }
        var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
        if (rootDoesHavePassiveEffects) {
            // This commit has passive effects. Stash a reference to them. But don't
            // schedule a callback until after flushing layout work.
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root;
            pendingPassiveEffectsLanes = lanes;
        } else {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
        } // Read this again, since an effect might have updated it
        remainingLanes = root.pendingLanes; // Check if there's remaining work on this root
        // TODO: This is part of the `componentDidCatch` implementation. Its purpose
        // is to detect whether something might have called setState inside
        // `componentDidCatch`. The mechanism is known to be flawed because `setState`
        // inside `componentDidCatch` is itself flawed — that's why we recommend
        // `getDerivedStateFromError` instead. However, it could be improved by
        // checking if remainingLanes includes Sync work, instead of whether there's
        // any work remaining at all (which would also include stuff like Suspense
        // retries or transitions). It's been like this for a while, though, so fixing
        // it probably isn't that urgent.
        if (remainingLanes === NoLanes) // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
        if (!rootDidHavePassiveEffects) commitDoubleInvokeEffectsInDEV(root.current, false);
        onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
        if (isDevToolsPresent) root.memoizedUpdaters.clear();
        onCommitRoot$1();
        // additional work on this root is scheduled.
        ensureRootIsScheduled(root, now());
        if (recoverableErrors !== null) {
            // There were errors during this render, but recovered from them without
            // needing to surface it to the UI. We log them here.
            var onRecoverableError = root.onRecoverableError;
            for(var i = 0; i < recoverableErrors.length; i++){
                var recoverableError = recoverableErrors[i];
                var componentStack = recoverableError.stack;
                var digest = recoverableError.digest;
                onRecoverableError(recoverableError.value, {
                    componentStack: componentStack,
                    digest: digest
                });
            }
        }
        if (hasUncaughtError) {
            hasUncaughtError = false;
            var error$1 = firstUncaughtError;
            firstUncaughtError = null;
            throw error$1;
        } // If the passive effects are the result of a discrete render, flush them
        // synchronously at the end of the current task so that the result is
        // immediately observable. Otherwise, we assume that they are not
        // order-dependent and do not need to be observed by external systems, so we
        // can wait until after paint.
        // TODO: We can optimize this by not scheduling the callback earlier. Since we
        // currently schedule the callback in multiple places, will wait until those
        // are consolidated.
        if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) flushPassiveEffects();
         // Read this again, since a passive effect might have updated it
        remainingLanes = root.pendingLanes;
        if (includesSomeLane(remainingLanes, SyncLane)) {
            markNestedUpdateScheduled();
            // finishing. If there are too many, it indicates an infinite update loop.
            if (root === rootWithNestedUpdates) nestedUpdateCount++;
            else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root;
            }
        } else nestedUpdateCount = 0;
         // If layout work was scheduled, flush it now.
        flushSyncCallbacks();
        markCommitStopped();
        return null;
    }
    function flushPassiveEffects() {
        // Returns whether passive effects were flushed.
        // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should
        // probably just combine the two functions. I believe they were only separate
        // in the first place because we used to wrap it with
        // `Scheduler.runWithPriority`, which accepts a function. But now we track the
        // priority within React itself, so we can mutate the variable directly.
        if (rootWithPendingPassiveEffects !== null) {
            var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
            var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            var previousPriority = getCurrentUpdatePriority();
            try {
                ReactCurrentBatchConfig$3.transition = null;
                setCurrentUpdatePriority(priority);
                return flushPassiveEffectsImpl();
            } finally{
                setCurrentUpdatePriority(previousPriority);
                ReactCurrentBatchConfig$3.transition = prevTransition; // Once passive effects have run for the tree - giving components a
            }
        }
        return false;
    }
    function enqueuePendingPassiveProfilerEffect(fiber) {
        pendingPassiveProfilerEffects.push(fiber);
        if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
            });
        }
    }
    function flushPassiveEffectsImpl() {
        if (rootWithPendingPassiveEffects === null) return false;
         // Cache and clear the transitions flag
        var transitions = pendingPassiveTransitions;
        pendingPassiveTransitions = null;
        var root = rootWithPendingPassiveEffects;
        var lanes = pendingPassiveEffectsLanes;
        rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.
        // Figure out why and fix it. It's not causing any known issues (probably
        // because it's only used for profiling), but it's a refactor hazard.
        pendingPassiveEffectsLanes = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Cannot flush passive effects while already rendering.");
        isFlushingPassiveEffects = true;
        didScheduleUpdateDuringPassiveEffects = false;
        markPassiveEffectsStarted(lanes);
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        commitPassiveUnmountEffects(root.current);
        commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects
        var profilerEffects = pendingPassiveProfilerEffects;
        pendingPassiveProfilerEffects = [];
        for(var i = 0; i < profilerEffects.length; i++){
            var _fiber = profilerEffects[i];
            commitPassiveEffectDurations(root, _fiber);
        }
        markPassiveEffectsStopped();
        commitDoubleInvokeEffectsInDEV(root.current, true);
        executionContext = prevExecutionContext;
        flushSyncCallbacks();
        // If additional passive effects were scheduled, increment a counter. If this
        // exceeds the limit, we'll fire a warning.
        if (didScheduleUpdateDuringPassiveEffects) {
            if (root === rootWithPassiveNestedUpdates) nestedPassiveUpdateCount++;
            else {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = root;
            }
        } else nestedPassiveUpdateCount = 0;
        isFlushingPassiveEffects = false;
        didScheduleUpdateDuringPassiveEffects = false;
        onPostCommitRoot(root);
        var stateNode = root.current.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        return true;
    }
    function isAlreadyFailedLegacyErrorBoundary(instance) {
        return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }
    function markLegacyErrorBoundaryAsFailed(instance) {
        if (legacyErrorBoundariesThatAlreadyFailed === null) legacyErrorBoundariesThatAlreadyFailed = new Set([
            instance
        ]);
        else legacyErrorBoundariesThatAlreadyFailed.add(instance);
    }
    function prepareToThrowUncaughtError(error) {
        if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error;
        }
    }
    var onUncaughtError = prepareToThrowUncaughtError;
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        var errorInfo = createCapturedValueAtFiber(error, sourceFiber);
        var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
        var root = enqueueUpdate(rootFiber, update, SyncLane);
        var eventTime = requestEventTime();
        if (root !== null) {
            markRootUpdated(root, SyncLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
        reportUncaughtErrorInDEV(error$1);
        setIsRunningInsertionEffect(false);
        if (sourceFiber.tag === HostRoot) {
            // Error was thrown at the root. There is no parent, so the root
            // itself should capture it.
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
            return;
        }
        var fiber = null;
        fiber = nearestMountedAncestor;
        while(fiber !== null){
            if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
                return;
            } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === "function" || typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                    var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
                    var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                    var root = enqueueUpdate(fiber, update, SyncLane);
                    var eventTime = requestEventTime();
                    if (root !== null) {
                        markRootUpdated(root, SyncLane, eventTime);
                        ensureRootIsScheduled(root, eventTime);
                    }
                    return;
                }
            }
            fiber = fiber.return;
        }
        // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning
        // will fire for errors that are thrown by destroy functions inside deleted
        // trees. What it should instead do is propagate the error to the parent of
        // the deleted tree. In the meantime, do not add this warning to the
        // allowlist; this is only for our internal use.
        error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        if (pingCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(wakeable);
        var eventTime = requestEventTime();
        markRootPinged(root, pingedLanes);
        warnIfSuspenseResolutionNotWrappedWithActDEV(root);
        if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            // Received a ping at the same priority level at which we're currently
            // rendering. We might want to restart this render. This should mirror
            // the logic of whether or not a root suspends once it completes.
            // TODO: If we're rendering sync either due to Sync, Batched or expired,
            // we should probably never restart.
            // If we're suspended with delay, or if it's a retry, we'll always suspend
            // so we can always restart.
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) // Restart from the root.
            prepareFreshStack(root, NoLanes);
            else // Even though we can't restart right now, we might get an
            // opportunity later. So we mark this render as having a ping.
            workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
        }
        ensureRootIsScheduled(root, eventTime);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        // The boundary fiber (a Suspense component or SuspenseList component)
        // previously was rendered in its fallback state. One of the promises that
        // suspended it has resolved, which means at least part of the tree was
        // likely unblocked. Try rendering again, at a new lanes.
        if (retryLane === NoLane) // TODO: Assign this to `suspenseState.retryLane`? to avoid
        // unnecessary entanglement?
        retryLane = requestRetryLane(boundaryFiber);
         // TODO: Special case idle priority?
        var eventTime = requestEventTime();
        var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
        if (root !== null) {
            markRootUpdated(root, retryLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState;
        var retryLane = NoLane;
        if (suspenseState !== null) retryLane = suspenseState.retryLane;
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = NoLane; // Default
        var retryCache;
        switch(boundaryFiber.tag){
            case SuspenseComponent:
                retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                if (suspenseState !== null) retryLane = suspenseState.retryLane;
                break;
            case SuspenseListComponent:
                retryCache = boundaryFiber.stateNode;
                break;
            default:
                throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        if (retryCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.
    function jnd(timeElapsed) {
        return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }
    function checkForNestedUpdates() {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        }
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
            error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
        }
    }
    function flushRenderPhaseStrictModeWarningsInDEV() {
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
    function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
        // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects
        // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.
        // Maybe not a big deal since this is DEV only behavior.
        setCurrentFiber(fiber);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
        resetCurrentFiber();
    }
    function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        var current = firstChild;
        var subtreeRoot = null;
        while(current !== null){
            var primarySubtreeFlag = current.subtreeFlags & fiberFlags;
            if (current !== subtreeRoot && current.child !== null && primarySubtreeFlag !== NoFlags) current = current.child;
            else {
                if ((current.flags & fiberFlags) !== NoFlags) invokeEffectFn(current);
                if (current.sibling !== null) current = current.sibling;
                else current = subtreeRoot = current.return;
            }
        }
    }
    var didWarnStateUpdateForNotYetMountedComponent = null;
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) !== NoContext) // We let the other warning about render phase updates deal with this one.
        return;
        if (!(fiber.mode & ConcurrentMode)) return;
        var tag = fiber.tag;
        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) // Only warn for user-defined components, not internal ones like Suspense.
        return;
         // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentNameFromFiber(fiber) || "ReactComponent";
        if (didWarnStateUpdateForNotYetMountedComponent !== null) {
            if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) return;
            didWarnStateUpdateForNotYetMountedComponent.add(componentName);
        } else didWarnStateUpdateForNotYetMountedComponent = new Set([
            componentName
        ]);
        var previousFiber = current;
        try {
            setCurrentFiber(fiber);
            error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally{
            if (previousFiber) setCurrentFiber(fiber);
            else resetCurrentFiber();
        }
    }
    var beginWork$1;
    var dummyFiber = null;
    beginWork$1 = function(current, unitOfWork, lanes) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
        try {
            return beginWork(current, unitOfWork, lanes);
        } catch (originalError) {
            if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") // Don't replay promises.
            // Don't replay errors if we are hydrating and have already suspended or handled an error
            throw originalError;
             // Keep this code in sync with handleError; any changes here must have
            // corresponding changes there.
            resetContextDependencies();
            resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
            // same fiber again.
            // Unwind the failed stack frame
            unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.
            assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
            if (unitOfWork.mode & ProfileMode) // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
             // Run beginWork again.
            invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);
            if (hasCaughtError()) {
                var replayError = clearCaughtError();
                if (typeof replayError === "object" && replayError !== null && replayError._suppressLogging && typeof originalError === "object" && originalError !== null && !originalError._suppressLogging) // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.
                originalError._suppressLogging = true;
            } // We always throw the original error in case the second render pass is not idempotent.
            // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.
            throw originalError;
        }
    };
    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInRenderForAnotherComponent;
    didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    function warnAboutRenderPhaseUpdatesInDEV(fiber) {
        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown"; // Dedupe by the rendering component because it's the one that needs to be fixed.
                var dedupeKey = renderingComponentName;
                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentNameFromFiber(fiber) || "Unknown";
                    error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                }
                break;
            case ClassComponent:
                if (!didWarnAboutUpdateInRender) {
                    error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                }
                break;
        }
    }
    function restorePendingUpdaters(root, lanes) {
        if (isDevToolsPresent) {
            var memoizedUpdaters = root.memoizedUpdaters;
            memoizedUpdaters.forEach(function(schedulingFiber) {
                addFiberToLanesMap(root, schedulingFiber, lanes);
            }); // This function intentionally does not clear memoized updaters.
        // Those may still be relevant to the current commit
        // and a future one (e.g. Suspense).
        }
    }
    var fakeActCallbackNode = {};
    function scheduleCallback$1(priorityLevel, callback) {
        // If we're currently inside an `act` scope, bypass Scheduler and push to
        // the `act` queue instead.
        var actQueue = ReactCurrentActQueue$1.current;
        if (actQueue !== null) {
            actQueue.push(callback);
            return fakeActCallbackNode;
        } else return scheduleCallback(priorityLevel, callback);
    }
    function cancelCallback$1(callbackNode) {
        if (callbackNode === fakeActCallbackNode) return;
         // In production, always call Scheduler. This function will be stripped out.
        return cancelCallback(callbackNode);
    }
    function shouldForceFlushFallbacksInDEV() {
        // Never force flush in production. This function should get stripped out.
        return ReactCurrentActQueue$1.current !== null;
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        if (fiber.mode & ConcurrentMode) {
            if (!isConcurrentActEnvironment()) // Not in an act environment. No need to warn.
            return;
        } else {
            // Legacy mode has additional cases where we suppress a warning.
            if (!isLegacyActEnvironment()) // Not in an act environment. No need to warn.
            return;
            if (executionContext !== NoContext) // Legacy mode doesn't warn if the update is batched, i.e.
            // batchedUpdates or flushSync.
            return;
            if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) // For backwards compatibility with pre-hooks code, legacy mode only
            // warns for updates that originate from a hook.
            return;
        }
        if (ReactCurrentActQueue$1.current === null) {
            var previousFiber = current;
            try {
                setCurrentFiber(fiber);
                error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {
        if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
    }
    function setIsRunningInsertionEffect(isRunning) {
        isRunningInsertionEffect = isRunning;
    }
    /* eslint-disable react-internal/prod-error-codes */ var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.
    var failedBoundaries = null;
    var setRefreshHandler = function(handler) {
        resolveFamily = handler;
    };
    function resolveFunctionForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) return type;
         // Use the latest known implementation.
        return family.current;
    }
    function resolveClassForHotReloading(type) {
        // No implementation differences.
        return resolveFunctionForHotReloading(type);
    }
    function resolveForwardRefForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) {
            // Check if we're dealing with a real forwardRef. Don't want to crash early.
            if (type !== null && type !== undefined && typeof type.render === "function") {
                // ForwardRef is special because its resolved .type is an object,
                // but it's possible that we only have its inner render function in the map.
                // If that inner render function is different, we'll build a new forwardRef type.
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                    var syntheticType = {
                        $$typeof: REACT_FORWARD_REF_TYPE,
                        render: currentRender
                    };
                    if (type.displayName !== undefined) syntheticType.displayName = type.displayName;
                    return syntheticType;
                }
            }
            return type;
        } // Use the latest known implementation.
        return family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return false;
        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.
        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
        switch(fiber.tag){
            case ClassComponent:
                if (typeof nextType === "function") needsCompareFamilies = true;
                break;
            case FunctionComponent:
                if (typeof nextType === "function") needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
                break;
            case ForwardRef:
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            case MemoComponent:
            case SimpleMemoComponent:
                if ($$typeofNextType === REACT_MEMO_TYPE) // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            default:
                return false;
        } // Check if both types have a family and it's the same one.
        if (needsCompareFamilies) {
            // Note: memo() and forwardRef() we'll compare outer rather than inner type.
            // This means both of them need to be registered to preserve state.
            // If we unwrapped and compared the inner types for wrappers instead,
            // then we would risk falsely saying two separate memo(Foo)
            // calls are equivalent because they wrap the same Foo function.
            var prevFamily = resolveFamily(prevType);
            if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) return true;
        }
        return false;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        if (typeof WeakSet !== "function") return;
        if (failedBoundaries === null) failedBoundaries = new WeakSet();
        failedBoundaries.add(fiber);
    }
    var scheduleRefresh = function(root, update) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function() {
            scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
    };
    var scheduleRoot = function(root, element) {
        if (root.context !== emptyContextObject) // Super edge case: root has a legacy _renderSubtree context
        // but we don't know the parentComponent so we can't pass it.
        // Just ignore. We'll delete this with _renderSubtree code path later.
        return;
        flushPassiveEffects();
        flushSync(function() {
            updateContainer(element, root, null, null);
        });
    };
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        if (resolveFamily === null) throw new Error("Expected resolveFamily to be set during hot reload.");
        var needsRender = false;
        var needsRemount = false;
        if (candidateType !== null) {
            var family = resolveFamily(candidateType);
            if (family !== undefined) {
                if (staleFamilies.has(family)) needsRemount = true;
                else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) needsRemount = true;
                    else needsRender = true;
                }
            }
        }
        if (failedBoundaries !== null) {
            if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) needsRemount = true;
        }
        if (needsRemount) fiber._debugNeedsRemount = true;
        if (needsRemount || needsRender) {
            var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (_root !== null) scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
        }
        if (child !== null && !needsRemount) scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        if (sibling !== null) scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    var findHostInstancesForRefresh = function(root, families) {
        var hostInstances = new Set();
        var types = new Set(families.map(function(family) {
            return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
    };
    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
        var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        var didMatch = false;
        if (candidateType !== null) {
            if (types.has(candidateType)) didMatch = true;
        }
        if (didMatch) // We have a match. This only drills down to the closest host components.
        // There's no need to search deeper because for the purpose of giving
        // visual feedback, "flashing" outermost parent rectangles is sufficient.
        findHostInstancesForFiberShallowly(fiber, hostInstances);
        else // If there's no match, maybe there will be one further down in the child tree.
        if (child !== null) findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
        if (sibling !== null) findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
        if (foundHostInstances) return;
         // If we didn't find any host children, fallback to closest host parent.
        var node = fiber;
        while(true){
            switch(node.tag){
                case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
            }
            if (node.return === null) throw new Error("Expected to reach root first.");
            node = node.return;
        }
    }
    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
        var node = fiber;
        var foundHostInstances = false;
        while(true){
            if (node.tag === HostComponent) {
                // We got a match.
                foundHostInstances = true;
                hostInstances.add(node.stateNode); // There may still be more, so keep searching.
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === fiber) return foundHostInstances;
            while(node.sibling === null){
                if (node.return === null || node.return === fiber) return foundHostInstances;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return false;
    }
    var hasBadMapPolyfill;
    hasBadMapPolyfill = false;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        /* eslint-disable no-new */ new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    /* eslint-enable no-new */ } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
    }
    function FiberNode(tag, pendingProps, key, mode) {
        // Instance
        this.tag = tag;
        this.key = key;
        this.elementType = null;
        this.type = null;
        this.stateNode = null; // Fiber
        this.return = null;
        this.child = null;
        this.sibling = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = pendingProps;
        this.memoizedProps = null;
        this.updateQueue = null;
        this.memoizedState = null;
        this.dependencies = null;
        this.mode = mode; // Effects
        this.flags = NoFlags;
        this.subtreeFlags = NoFlags;
        this.deletions = null;
        this.lanes = NoLanes;
        this.childLanes = NoLanes;
        this.alternate = null;
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).
        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
        // This isn't directly used but is handy for debugging internals:
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;
        if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") Object.preventExtensions(this);
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.
    var createFiber = function(tag, pendingProps, key, mode) {
        // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
        return new FiberNode(tag, pendingProps, key, mode);
    };
    function shouldConstruct$1(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function isSimpleFunctionComponent(type) {
        return typeof type === "function" && !shouldConstruct$1(type) && type.defaultProps === undefined;
    }
    function resolveLazyComponentTag(Component) {
        if (typeof Component === "function") return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
        else if (Component !== undefined && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) return ForwardRef;
            if ($$typeof === REACT_MEMO_TYPE) return MemoComponent;
        }
        return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        if (workInProgress === null) {
            // We use a double buffering pooling technique because we know that we'll
            // only ever need at most two versions of a tree. We pool the "other" unused
            // node that we're free to reuse. This is lazily created to avoid allocating
            // extra objects for things that are never updated. It also allow us to
            // reclaim the extra memory if needed.
            workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
            workInProgress.elementType = current.elementType;
            workInProgress.type = current.type;
            workInProgress.stateNode = current.stateNode;
            // DEV-only fields
            workInProgress._debugSource = current._debugSource;
            workInProgress._debugOwner = current._debugOwner;
            workInProgress._debugHookTypes = current._debugHookTypes;
            workInProgress.alternate = current;
            current.alternate = workInProgress;
        } else {
            workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // We already have an alternate.
            // Reset the effect tag.
            workInProgress.flags = NoFlags; // The effects are no longer valid.
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            // We intentionally reset, rather than copy, actualDuration & actualStartTime.
            // This prevents time from endlessly accumulating in new commits.
            // This has the downside of resetting values for different priority renders,
            // But works for yielding (the common case) and should support resuming.
            workInProgress.actualDuration = 0;
            workInProgress.actualStartTime = -1;
        } // Reset all effects except static ones.
        // Static effects are not specific to a render.
        workInProgress.flags = current.flags & StaticMask;
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.
        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
        }; // These will be overridden during the parent's reconciliation
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case FunctionComponent:
            case SimpleMemoComponent:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case ClassComponent:
                workInProgress.type = resolveClassForHotReloading(current.type);
                break;
            case ForwardRef:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
                break;
        }
        return workInProgress;
    } // Used to reuse a Fiber for a second pass.
    function resetWorkInProgress(workInProgress, renderLanes) {
        // This resets the Fiber to what createFiber or createWorkInProgress would
        // have set the values to before during the first pass. Ideally this wouldn't
        // be necessary but unfortunately many code paths reads from the workInProgress
        // when they should be reading from current and writing to workInProgress.
        // We assume pendingProps, index, key, ref, return are still untouched to
        // avoid doing another reconciliation.
        // Reset the effect flags but keep any Placement tags, since that's something
        // that child fiber is setting, not the reconciliation.
        workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.
        var current = workInProgress.alternate;
        if (current === null) {
            // Reset to createFiber's initial values.
            workInProgress.childLanes = NoLanes;
            workInProgress.lanes = renderLanes;
            workInProgress.child = null;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.memoizedProps = null;
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null;
            workInProgress.dependencies = null;
            workInProgress.stateNode = null;
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = 0;
            workInProgress.treeBaseDuration = 0;
        } else {
            // Reset to the cloned values that createWorkInProgress would've.
            workInProgress.childLanes = current.childLanes;
            workInProgress.lanes = current.lanes;
            workInProgress.child = current.child;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            workInProgress.memoizedProps = current.memoizedProps;
            workInProgress.memoizedState = current.memoizedState;
            workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
            // it cannot be shared with the current fiber.
            var currentDependencies = current.dependencies;
            workInProgress.dependencies = currentDependencies === null ? null : {
                lanes: currentDependencies.lanes,
                firstContext: currentDependencies.firstContext
            };
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = current.selfBaseDuration;
            workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
        return workInProgress;
    }
    function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
        var mode;
        if (tag === ConcurrentRoot) {
            mode = ConcurrentMode;
            if (isStrictMode === true) {
                mode |= StrictLegacyMode;
                mode |= StrictEffectsMode;
            }
        } else mode = NoMode;
        if (isDevToolsPresent) // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
        return createFiber(HostRoot, null, null, mode);
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
        var resolvedType = type;
        if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
                fiberTag = ClassComponent;
                resolvedType = resolveClassForHotReloading(resolvedType);
            } else resolvedType = resolveFunctionForHotReloading(resolvedType);
        } else if (typeof type === "string") fiberTag = HostComponent;
        else getTag: switch(type){
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_STRICT_MODE_TYPE:
                fiberTag = Mode;
                mode |= StrictLegacyMode;
                if ((mode & ConcurrentMode) !== NoMode) // Strict effects should never run on legacy roots
                mode |= StrictEffectsMode;
                break;
            case REACT_PROFILER_TYPE:
                return createFiberFromProfiler(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_TYPE:
                return createFiberFromSuspense(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_LIST_TYPE:
                return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
            case REACT_OFFSCREEN_TYPE:
                return createFiberFromOffscreen(pendingProps, mode, lanes, key);
            case REACT_LEGACY_HIDDEN_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_SCOPE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_CACHE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_TRACING_MARKER_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_DEBUG_TRACING_MODE_TYPE:
            // eslint-disable-next-line no-fallthrough
            default:
                if (typeof type === "object" && type !== null) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                    case REACT_CONTEXT_TYPE:
                        // This is a consumer
                        fiberTag = ContextConsumer;
                        break getTag;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break getTag;
                    case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                    case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                }
                var info = "";
                if (type === undefined || typeof type === "object" && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                if (ownerName) info += "\n\nCheck the render method of `" + ownerName + "`.";
                throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
        var fiber = createFiber(fiberTag, pendingProps, key, mode);
        fiber.elementType = type;
        fiber.type = resolvedType;
        fiber.lanes = lanes;
        fiber._debugOwner = owner;
        return fiber;
    }
    function createFiberFromElement(element, mode, lanes) {
        var owner = null;
        owner = element._owner;
        var type = element.type;
        var key = element.key;
        var pendingProps = element.props;
        var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
        return fiber;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        var fiber = createFiber(Fragment, elements, key, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromProfiler(pendingProps, mode, lanes, key) {
        if (typeof pendingProps.id !== "string") error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
        var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
        fiber.elementType = REACT_PROFILER_TYPE;
        fiber.lanes = lanes;
        fiber.stateNode = {
            effectDuration: 0,
            passiveEffectDuration: 0
        };
        return fiber;
    }
    function createFiberFromSuspense(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
        var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
        fiber.elementType = REACT_OFFSCREEN_TYPE;
        fiber.lanes = lanes;
        var primaryChildInstance = {
            isHidden: false
        };
        fiber.stateNode = primaryChildInstance;
        return fiber;
    }
    function createFiberFromText(content, mode, lanes) {
        var fiber = createFiber(HostText, content, null, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent, null, null, NoMode);
        fiber.elementType = "DELETED";
        return fiber;
    }
    function createFiberFromDehydratedFragment(dehydratedNode) {
        var fiber = createFiber(DehydratedFragment, null, null, NoMode);
        fiber.stateNode = dehydratedNode;
        return fiber;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        var pendingProps = portal.children !== null ? portal.children : [];
        var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
        fiber.lanes = lanes;
        fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            // Used by persistent updates
            implementation: portal.implementation
        };
        return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.
    function assignFiberPropertiesInDEV(target, source) {
        if (target === null) // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
         // This is intentionally written as a list of all properties.
        // We tried to use Object.assign() instead but this is called in
        // the hottest path, and Object.assign() was too slow:
        // https://github.com/facebook/react/issues/12502
        // This code is DEV-only so size is not a concern.
        target.tag = source.tag;
        target.key = source.key;
        target.elementType = source.elementType;
        target.type = source.type;
        target.stateNode = source.stateNode;
        target.return = source.return;
        target.child = source.child;
        target.sibling = source.sibling;
        target.index = source.index;
        target.ref = source.ref;
        target.pendingProps = source.pendingProps;
        target.memoizedProps = source.memoizedProps;
        target.updateQueue = source.updateQueue;
        target.memoizedState = source.memoizedState;
        target.dependencies = source.dependencies;
        target.mode = source.mode;
        target.flags = source.flags;
        target.subtreeFlags = source.subtreeFlags;
        target.deletions = source.deletions;
        target.lanes = source.lanes;
        target.childLanes = source.childLanes;
        target.alternate = source.alternate;
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
        target._debugSource = source._debugSource;
        target._debugOwner = source._debugOwner;
        target._debugNeedsRemount = source._debugNeedsRemount;
        target._debugHookTypes = source._debugHookTypes;
        return target;
    }
    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {
        this.tag = tag;
        this.containerInfo = containerInfo;
        this.pendingChildren = null;
        this.current = null;
        this.pingCache = null;
        this.finishedWork = null;
        this.timeoutHandle = noTimeout;
        this.context = null;
        this.pendingContext = null;
        this.callbackNode = null;
        this.callbackPriority = NoLane;
        this.eventTimes = createLaneMap(NoLanes);
        this.expirationTimes = createLaneMap(NoTimestamp);
        this.pendingLanes = NoLanes;
        this.suspendedLanes = NoLanes;
        this.pingedLanes = NoLanes;
        this.expiredLanes = NoLanes;
        this.mutableReadLanes = NoLanes;
        this.finishedLanes = NoLanes;
        this.entangledLanes = NoLanes;
        this.entanglements = createLaneMap(NoLanes);
        this.identifierPrefix = identifierPrefix;
        this.onRecoverableError = onRecoverableError;
        this.mutableSourceEagerHydrationData = null;
        this.effectDuration = 0;
        this.passiveEffectDuration = 0;
        this.memoizedUpdaters = new Set();
        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
        for(var _i = 0; _i < TotalLanes; _i++)pendingUpdatersLaneMap.push(new Set());
        switch(tag){
            case ConcurrentRoot:
                this._debugRootType = hydrate ? "hydrateRoot()" : "createRoot()";
                break;
            case LegacyRoot:
                this._debugRootType = hydrate ? "hydrate()" : "render()";
                break;
        }
    }
    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // host config, but because they are passed in at runtime, we have to thread
    // them through the root constructor. Perhaps we should put them all into a
    // single type, like a DynamicHostConfig that is defined by the renderer.
    identifierPrefix, onRecoverableError, transitionCallbacks) {
        var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);
        // stateNode is any.
        var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        var _initialState = {
            element: initialChildren,
            isDehydrated: hydrate,
            cache: null,
            // not enabled yet
            transitions: null,
            pendingSuspenseBoundaries: null
        };
        uninitializedFiber.memoizedState = _initialState;
        initializeUpdateQueue(uninitializedFiber);
        return root;
    }
    var ReactVersion = "18.3.1";
    function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        checkKeyStringCoercion(key);
        return {
            // This tag allow us to uniquely identify this as a React Portal
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    didWarnAboutNestedUpdates = false;
    didWarnAboutFindNodeInStrictMode = {};
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        var fiber = get(parentComponent);
        var parentContext = findCurrentUnmaskedContext(fiber);
        if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) return processChildContext(fiber, Component, parentContext);
        }
        return parentContext;
    }
    function findHostInstanceWithWarning(component, methodName) {
        var fiber = get(component);
        if (fiber === undefined) {
            if (typeof component.render === "function") throw new Error("Unable to find node on an unmounted component.");
            else {
                var keys = Object.keys(component).join(",");
                throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
            }
        }
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        if (hostFiber.mode & StrictLegacyMode) {
            var componentName = getComponentNameFromFiber(fiber) || "Component";
            if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current;
                try {
                    setCurrentFiber(hostFiber);
                    if (fiber.mode & StrictLegacyMode) error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    else error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                } finally{
                    // Ideally this should reset to previous but this shouldn't be called in
                    // render and there's another warning for that anyway.
                    if (previousFiber) setCurrentFiber(previousFiber);
                    else resetCurrentFiber();
                }
            }
        }
        return hostFiber.stateNode;
    }
    function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = false;
        var initialChildren = null;
        return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
    }
    function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = true;
        var root = createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError); // TODO: Move this to FiberRoot constructor
        root.context = getContextForSubtree(null); // Schedule the initial render. In a hydration root, this is different from
        // a regular update because the initial render must match was was rendered
        // on the server.
        // NOTE: This update intentionally doesn't have a payload. We're only using
        // the update to schedule work on the root fiber (and, for legacy roots, to
        // enqueue the callback if one is provided).
        var current = root.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current);
        var update = createUpdate(eventTime, lane);
        update.callback = callback !== undefined && callback !== null ? callback : null;
        enqueueUpdate(current, update, lane);
        scheduleInitialHydrationOnRoot(root, lane, eventTime);
        return root;
    }
    function updateContainer(element, container, parentComponent, callback) {
        onScheduleRoot(container, element);
        var current$1 = container.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current$1);
        markRenderScheduled(lane);
        var context = getContextForSubtree(parentComponent);
        if (container.context === null) container.context = context;
        else container.pendingContext = context;
        if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
            didWarnAboutNestedUpdates = true;
            error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown");
        }
        var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: element
        };
        callback = callback === undefined ? null : callback;
        if (callback !== null) {
            if (typeof callback !== "function") error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
            update.callback = callback;
        }
        var root = enqueueUpdate(current$1, update, lane);
        if (root !== null) {
            scheduleUpdateOnFiber(root, current$1, lane, eventTime);
            entangleTransitions(root, current$1, lane);
        }
        return lane;
    }
    function getPublicRootInstance(container) {
        var containerFiber = container.current;
        if (!containerFiber.child) return null;
        switch(containerFiber.child.tag){
            case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
            default:
                return containerFiber.child.stateNode;
        }
    }
    function attemptSynchronousHydration$1(fiber) {
        switch(fiber.tag){
            case HostRoot:
                var root = fiber.stateNode;
                if (isRootDehydrated(root)) {
                    // Flush the first scheduled "update".
                    var lanes = getHighestPriorityPendingLanes(root);
                    flushRoot(root, lanes);
                }
                break;
            case SuspenseComponent:
                flushSync(function() {
                    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
                    if (root !== null) {
                        var eventTime = requestEventTime();
                        scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);
                    }
                }); // If we're still blocked after this, we need to increase
                // the priority of any promises resolving within this
                // boundary so that they next attempt also has higher pri.
                var retryLane = SyncLane;
                markRetryLaneIfNotHydrated(fiber, retryLane);
                break;
        }
    }
    function markRetryLaneImpl(fiber, retryLane) {
        var suspenseState = fiber.memoizedState;
        if (suspenseState !== null && suspenseState.dehydrated !== null) suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
    } // Increases the priority of thenables when they resolve within this boundary.
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        var alternate = fiber.alternate;
        if (alternate) markRetryLaneImpl(alternate, retryLane);
    }
    function attemptContinuousHydration$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
        var lane = SelectiveHydrationLane;
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, lane, eventTime);
        }
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function attemptHydrationAtCurrentPriority$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority other than synchronously flush it.
        return;
        var lane = requestUpdateLane(fiber);
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, lane, eventTime);
        }
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function findHostInstanceWithNoPortals(fiber) {
        var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    var shouldErrorImpl = function(fiber) {
        return null;
    };
    function shouldError(fiber) {
        return shouldErrorImpl(fiber);
    }
    var shouldSuspendImpl = function(fiber) {
        return false;
    };
    function shouldSuspend(fiber) {
        return shouldSuspendImpl(fiber);
    }
    var overrideHookState = null;
    var overrideHookStateDeletePath = null;
    var overrideHookStateRenamePath = null;
    var overrideProps = null;
    var overridePropsDeletePath = null;
    var overridePropsRenamePath = null;
    var scheduleUpdate = null;
    var setErrorHandler = null;
    var setSuspenseHandler = null;
    var copyWithDeleteImpl = function(obj, path, index) {
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === path.length) {
            if (isArray(updated)) updated.splice(key, 1);
            else delete updated[key];
            return updated;
        } // $FlowFixMe number or string is fine here
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    };
    var copyWithDelete = function(obj, path) {
        return copyWithDeleteImpl(obj, path, 0);
    };
    var copyWithRenameImpl = function(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === oldPath.length) {
            var newKey = newPath[index]; // $FlowFixMe number or string is fine here
            updated[newKey] = updated[oldKey];
            if (isArray(updated)) updated.splice(oldKey, 1);
            else delete updated[oldKey];
        } else // $FlowFixMe number or string is fine here
        updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    };
    var copyWithRename = function(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) {
            warn("copyWithRename() expects paths of the same length");
            return;
        } else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                warn("copyWithRename() expects paths to be the same except for the deepest key");
                return;
            }
        }
        return copyWithRenameImpl(obj, oldPath, newPath, 0);
    };
    var copyWithSetImpl = function(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    };
    var copyWithSet = function(obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
    };
    var findHook = function(fiber, id) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;
        while(currentHook !== null && id > 0){
            currentHook = currentHook.next;
            id--;
        }
        return currentHook;
    }; // Support DevTools editable values for useState and useReducer.
    overrideHookState = function(fiber, id, path, value) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithSet(hook.memoizedState, path, value);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithDelete(hook.memoizedState, path);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    }; // Support DevTools props for function components, forwardRef, memo, host components, etc.
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    scheduleUpdate = function(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    setErrorHandler = function(newShouldErrorImpl) {
        shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    function findHostInstanceByFiber(fiber) {
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    function emptyFindFiberByHostInstance(instance) {
        return null;
    }
    function getCurrentFiberForDevTools() {
        return current;
    }
    function injectIntoDevTools(devToolsConfig) {
        var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState: overrideHookState,
            overrideHookStateDeletePath: overrideHookStateDeletePath,
            overrideHookStateRenamePath: overrideHookStateRenamePath,
            overrideProps: overrideProps,
            overridePropsDeletePath: overridePropsDeletePath,
            overridePropsRenamePath: overridePropsRenamePath,
            setErrorHandler: setErrorHandler,
            setSuspenseHandler: setSuspenseHandler,
            scheduleUpdate: scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher,
            findHostInstanceByFiber: findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            // React Refresh
            findHostInstancesForRefresh: findHostInstancesForRefresh,
            scheduleRefresh: scheduleRefresh,
            scheduleRoot: scheduleRoot,
            setRefreshHandler: setRefreshHandler,
            // Enables DevTools to append owner stacks to error messages in DEV mode.
            getCurrentFiber: getCurrentFiberForDevTools,
            // Enables DevTools to detect reconciler version rather than renderer version
            // which may not match for third party renderers.
            reconcilerVersion: ReactVersion
        });
    }
    /* global reportError */ var defaultOnRecoverableError = typeof reportError === "function" ? // emulating an uncaught JavaScript error.
    reportError : function(error) {
        // In older browsers and test environments, fallback to console.error.
        // eslint-disable-next-line react-internal/no-production-logging
        console["error"](error);
    };
    function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (root === null) throw new Error("Cannot update an unmounted root.");
        if (typeof arguments[1] === "function") error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        else if (isValidContainer(arguments[1])) error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
        else if (typeof arguments[1] !== "undefined") error("You passed a second argument to root.render(...) but it only accepts one argument.");
        var container = root.containerInfo;
        if (container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(root.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
            }
        }
        updateContainer(children, root, null, null);
    };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
        if (typeof arguments[0] === "function") error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var root = this._internalRoot;
        if (root !== null) {
            this._internalRoot = null;
            var container = root.containerInfo;
            if (isAlreadyRendering()) error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
            flushSync(function() {
                updateContainer(null, root, null, null);
            });
            unmarkContainerAsRoot(container);
        }
    };
    function createRoot(container, options) {
        if (!isValidContainer(container)) throw new Error("createRoot(...): Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = "";
        var onRecoverableError = defaultOnRecoverableError;
        var transitionCallbacks = null;
        if (options !== null && options !== undefined) {
            if (options.hydrate) warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.");
            else if (typeof options === "object" && options !== null && options.$$typeof === REACT_ELEMENT_TYPE) error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
            if (options.transitionCallbacks !== undefined) transitionCallbacks = options.transitionCallbacks;
        }
        var root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container);
        var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
        listenToAllSupportedEvents(rootContainerElement);
        return new ReactDOMRoot(root);
    }
    function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function scheduleHydration(target) {
        if (target) queueExplicitHydrationTarget(target);
    }
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
    function hydrateRoot(container, initialChildren, options) {
        if (!isValidContainer(container)) throw new Error("hydrateRoot(...): Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        if (initialChildren === undefined) error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        // the hydration callbacks.
        var hydrationCallbacks = options != null ? options : null; // TODO: Delete this option
        var mutableSources = options != null && options.hydratedSources || null;
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = "";
        var onRecoverableError = defaultOnRecoverableError;
        if (options !== null && options !== undefined) {
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
        }
        var root = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container); // This can't be a comment node since hydration doesn't work on comment nodes anyway.
        listenToAllSupportedEvents(container);
        if (mutableSources) for(var i = 0; i < mutableSources.length; i++){
            var mutableSource = mutableSources[i];
            registerMutableSourceForHydration(root, mutableSource);
        }
        return new ReactDOMHydrationRoot(root);
    }
    function isValidContainer(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
    } // TODO: Remove this function which also includes comment nodes.
    // We only use it in places that are currently more relaxed.
    function isValidContainerLegacy(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
    }
    function warnIfReactDOMContainerInDEV(container) {
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") error("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
        if (isContainerMarkedAsRoot(container)) {
            if (container._reactRootContainer) error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
            else error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
        }
    }
    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    topLevelUpdateWarnings = function(container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
            }
        }
        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
        if (hasNonRootReactChild && !isRootRenderedBySomeReact) error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function getReactRootElementInContainer(container) {
        if (!container) return null;
        if (container.nodeType === DOCUMENT_NODE) return container.documentElement;
        else return container.firstChild;
    }
    function noopOnRecoverableError() {
    // legacy API.
    }
    function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
        if (isHydrationContainer) {
            if (typeof callback === "function") {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            }
            var root = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, false, false, "", noopOnRecoverableError);
            container._reactRootContainer = root;
            markContainerAsRoot(root.current, container);
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
            flushSync();
            return root;
        } else {
            // First clear any existing content.
            var rootSibling;
            while(rootSibling = container.lastChild)container.removeChild(rootSibling);
            if (typeof callback === "function") {
                var _originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(_root);
                    _originalCallback.call(instance);
                };
            }
            var _root = createContainer(container, LegacyRoot, null, false, false, "", noopOnRecoverableError);
            container._reactRootContainer = _root;
            markContainerAsRoot(_root.current, container);
            var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(_rootContainerElement); // Initial mount should not be batched.
            flushSync(function() {
                updateContainer(initialChildren, _root, parentComponent, callback);
            });
            return _root;
        }
    }
    function warnOnInvalidCallback$1(callback, callerName) {
        if (callback !== null && typeof callback !== "function") error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
    }
    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback$1(callback === undefined ? null : callback, "render");
        var maybeRoot = container._reactRootContainer;
        var root;
        if (!maybeRoot) // Initial mount
        root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
        else {
            root = maybeRoot;
            if (typeof callback === "function") {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            } // Update
            updateContainer(children, root, parentComponent, callback);
        }
        return getPublicRootInstance(root);
    }
    var didWarnAboutFindDOMNode = false;
    function findDOMNode(componentOrElement) {
        if (!didWarnAboutFindDOMNode) {
            didWarnAboutFindDOMNode = true;
            error("findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node");
        }
        var owner = ReactCurrentOwner$3.current;
        if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            if (!warnedAboutRefsInRender) error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || "A component");
            owner.stateNode._warnedAboutRefsInRender = true;
        }
        if (componentOrElement == null) return null;
        if (componentOrElement.nodeType === ELEMENT_NODE) return componentOrElement;
        return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
    }
    function hydrate(element, container, callback) {
        error("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error("Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
    }
    function render(element, container, callback) {
        error("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error("Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
    }
    function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        error("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(containerNode)) throw new Error("Target container is not a DOM element.");
        if (parentComponent == null || !has(parentComponent)) throw new Error("parentComponent must be a valid React Component");
        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
    }
    var didWarnAboutUnmountComponentAtNode = false;
    function unmountComponentAtNode(container) {
        if (!didWarnAboutUnmountComponentAtNode) {
            didWarnAboutUnmountComponentAtNode = true;
            error("unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot");
        }
        if (!isValidContainerLegacy(container)) throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
        if (container._reactRootContainer) {
            var rootEl = getReactRootElementInContainer(container);
            var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
            if (renderedByDifferentReact) error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
            flushSync(function() {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                    // $FlowFixMe This should probably use `delete container._reactRootContainer`
                    container._reactRootContainer = null;
                    unmarkContainerAsRoot(container);
                });
            }); // If you call unmountComponentAtNode twice in quick succession, you'll
            // get `true` twice. That's probably fine?
            return true;
        } else {
            var _rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.
            var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;
            if (hasNonRootReactChild) error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
            return false;
        }
    }
    setAttemptSynchronousHydration(attemptSynchronousHydration$1);
    setAttemptContinuousHydration(attemptContinuousHydration$1);
    setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
    setGetCurrentUpdatePriority(getCurrentUpdatePriority);
    setAttemptHydrationAtPriority(runWithPriority);
    if (typeof Map !== "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    setRestoreImplementation(restoreControlledState$3);
    setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
    function createPortal$1(children, container) {
        var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (!isValidContainer(container)) throw new Error("Target container is not a DOM element.");
         // TODO: pass ReactDOM portal implementation as third argument
        // $FlowFixMe The Flow type is opaque but there's no way to actually create it.
        return createPortal(children, container, null, key);
    }
    function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
    }
    var Internals = {
        usingClientEntryPoint: false,
        // Keep in sync with ReactTestUtils.js.
        // This is an array for better minification.
        Events: [
            getInstanceFromNode,
            getNodeFromInstance,
            getFiberCurrentPropsFromNode,
            enqueueStateRestore,
            restoreStateIfNeeded,
            batchedUpdates$1
        ]
    };
    function createRoot$1(container, options) {
        if (!Internals.usingClientEntryPoint && true) error('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return createRoot(container, options);
    }
    function hydrateRoot$1(container, initialChildren, options) {
        if (!Internals.usingClientEntryPoint && true) error('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return hydrateRoot(container, initialChildren, options);
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync$1(fn) {
        if (isAlreadyRendering()) error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
        return flushSync(fn);
    }
    var foundDevTools = injectIntoDevTools({
        findFiberByHostInstance: getClosestInstanceFromNode,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: "react-dom"
    });
    if (!foundDevTools && canUseDOM && window.top === window.self) // If we're in Chrome or Firefox, provide a download link if not installed.
    {
        if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
            var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.
            if (/^(https?|file):$/.test(protocol)) // eslint-disable-next-line react-internal/no-production-logging
            console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
        }
    }
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
    exports.createPortal = createPortal$1;
    exports.createRoot = createRoot$1;
    exports.findDOMNode = findDOMNode;
    exports.flushSync = flushSync$1;
    exports.hydrate = hydrate;
    exports.hydrateRoot = hydrateRoot$1;
    exports.render = render;
    exports.unmountComponentAtNode = unmountComponentAtNode;
    exports.unstable_batchedUpdates = batchedUpdates$1;
    exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{"6f0162e9ab224cd4":"21dqq","8ad4ca65319d28a7":"juvHo"}],"juvHo":[function(require,module,exports) {
"use strict";
module.exports = require("ef03b89c8fe2794e");

},{"ef03b89c8fe2794e":"RqdIf"}],"RqdIf":[function(require,module,exports) {
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var enableSchedulerDebugging = false;
    var enableProfiling = false;
    var frameYieldMs = 5;
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        siftUp(heap, node, index);
    }
    function peek(heap) {
        return heap.length === 0 ? null : heap[0];
    }
    function pop(heap) {
        if (heap.length === 0) return null;
        var first = heap[0];
        var last = heap.pop();
        if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
        }
        return first;
    }
    function siftUp(heap, node, i) {
        var index = i;
        while(index > 0){
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
                // The parent is larger. Swap positions.
                heap[parentIndex] = node;
                heap[index] = parent;
                index = parentIndex;
            } else // The parent is smaller. Exit.
            return;
        }
    }
    function siftDown(heap, node, i) {
        var index = i;
        var length = heap.length;
        var halfLength = length >>> 1;
        while(index < halfLength){
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
            if (compare(left, node) < 0) {
                if (rightIndex < length && compare(right, left) < 0) {
                    heap[index] = right;
                    heap[rightIndex] = node;
                    index = rightIndex;
                } else {
                    heap[index] = left;
                    heap[leftIndex] = node;
                    index = leftIndex;
                }
            } else if (rightIndex < length && compare(right, node) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
            } else // Neither child is smaller. Exit.
            return;
        }
    }
    function compare(a, b) {
        // Compare sort index first, then task id.
        var diff = a.sortIndex - b.sortIndex;
        return diff !== 0 ? diff : a.id - b.id;
    }
    // TODO: Use symbols?
    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;
    function markTaskErrored(task, ms) {}
    /* eslint-disable no-var */ var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
    if (hasPerformanceNow) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        var initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111
    var maxSigned31BitInt = 1073741823; // Times out immediately
    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.
    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.
    var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
    var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
    var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null; // IE and Node.js + jsdom
    var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
    function advanceTimers(currentTime) {
        // Check for tasks that are no longer delayed and add them to the queue.
        var timer = peek(timerQueue);
        while(timer !== null){
            if (timer.callback === null) // Timer was cancelled.
            pop(timerQueue);
            else if (timer.startTime <= currentTime) {
                // Timer fired. Transfer to the task queue.
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
            } else // Remaining timers are pending.
            return;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = false;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function flushWork(hasTimeRemaining, initialTime) {
        isHostCallbackScheduled = false;
        if (isHostTimeoutScheduled) {
            // We scheduled a timeout but it's no longer needed. Cancel it.
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
        }
        isPerformingWork = true;
        var previousPriorityLevel = currentPriorityLevel;
        try {
            if (enableProfiling) try {
                return workLoop(hasTimeRemaining, initialTime);
            } catch (error) {
                if (currentTask !== null) {
                    var currentTime = exports.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                }
                throw error;
            }
            else // No catch in prod code path.
            return workLoop(hasTimeRemaining, initialTime);
        } finally{
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
        }
    }
    function workLoop(hasTimeRemaining, initialTime) {
        var currentTime = initialTime;
        advanceTimers(currentTime);
        currentTask = peek(taskQueue);
        while(currentTask !== null && !enableSchedulerDebugging){
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) break;
            var callback = currentTask.callback;
            if (typeof callback === "function") {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports.unstable_now();
                if (typeof continuationCallback === "function") currentTask.callback = continuationCallback;
                else if (currentTask === peek(taskQueue)) pop(taskQueue);
                advanceTimers(currentTime);
            } else pop(taskQueue);
            currentTask = peek(taskQueue);
        } // Return whether there's additional work
        if (currentTask !== null) return true;
        else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            return false;
        }
    }
    function unstable_runWithPriority(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
                break;
            default:
                priorityLevel = NormalPriority;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_next(eventHandler) {
        var priorityLevel;
        switch(currentPriorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
                // Shift down to normal priority
                priorityLevel = NormalPriority;
                break;
            default:
                // Anything lower than normal priority should remain at the current level.
                priorityLevel = currentPriorityLevel;
                break;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_wrapCallback(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            // This is a fork of runWithPriority, inlined for performance.
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    }
    function unstable_scheduleCallback(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        var startTime;
        if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) startTime = currentTime + delay;
            else startTime = currentTime;
        } else startTime = currentTime;
        var timeout;
        switch(priorityLevel){
            case ImmediatePriority:
                timeout = IMMEDIATE_PRIORITY_TIMEOUT;
                break;
            case UserBlockingPriority:
                timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
                break;
            case IdlePriority:
                timeout = IDLE_PRIORITY_TIMEOUT;
                break;
            case LowPriority:
                timeout = LOW_PRIORITY_TIMEOUT;
                break;
            case NormalPriority:
            default:
                timeout = NORMAL_PRIORITY_TIMEOUT;
                break;
        }
        var expirationTime = startTime + timeout;
        var newTask = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: startTime,
            expirationTime: expirationTime,
            sortIndex: -1
        };
        if (startTime > currentTime) {
            // This is a delayed task.
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                // All tasks are delayed, and this is the task with the earliest delay.
                if (isHostTimeoutScheduled) // Cancel an existing timeout.
                cancelHostTimeout();
                else isHostTimeoutScheduled = true;
                 // Schedule a timeout.
                requestHostTimeout(handleTimeout, startTime - currentTime);
            }
        } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            // wait until the next time we yield.
            if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            }
        }
        return newTask;
    }
    function unstable_pauseExecution() {}
    function unstable_continueExecution() {
        if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
        }
    }
    function unstable_getFirstCallbackNode() {
        return peek(taskQueue);
    }
    function unstable_cancelCallback(task) {
        // remove from the queue because you can't remove arbitrary nodes from an
        // array based heap, only the first one.)
        task.callback = null;
    }
    function unstable_getCurrentPriorityLevel() {
        return currentPriorityLevel;
    }
    var isMessageLoopRunning = false;
    var scheduledHostCallback = null;
    var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
    // thread, like user events. By default, it yields multiple times per frame.
    // It does not attempt to align with frame boundaries, since most tasks don't
    // need to be frame aligned; for those that do, use requestAnimationFrame.
    var frameInterval = frameYieldMs;
    var startTime = -1;
    function shouldYieldToHost() {
        var timeElapsed = exports.unstable_now() - startTime;
        if (timeElapsed < frameInterval) // The main thread has only been blocked for a really short amount of time;
        // smaller than a single frame. Don't yield yet.
        return false;
         // The main thread has been blocked for a non-negligible amount of time. We
        return true;
    }
    function requestPaint() {}
    function forceFrameRate(fps) {
        if (fps < 0 || fps > 125) {
            // Using console['error'] to evade Babel and ESLint
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
        }
        if (fps > 0) frameInterval = Math.floor(1000 / fps);
        else // reset the framerate
        frameInterval = frameYieldMs;
    }
    var performWorkUntilDeadline = function() {
        if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
            // has been blocked.
            startTime = currentTime;
            var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
            // error can be observed.
            //
            // Intentionally not using a try-catch, since that makes some debugging
            // techniques harder. Instead, if `scheduledHostCallback` errors, then
            // `hasMoreWork` will remain true, and we'll continue the work loop.
            var hasMoreWork = true;
            try {
                hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally{
                if (hasMoreWork) // If there's more work, schedule the next message event at the end
                // of the preceding one.
                schedulePerformWorkUntilDeadline();
                else {
                    isMessageLoopRunning = false;
                    scheduledHostCallback = null;
                }
            }
        } else isMessageLoopRunning = false;
         // Yielding to the browser will give it a chance to paint, so we can
    };
    var schedulePerformWorkUntilDeadline;
    if (typeof localSetImmediate === "function") // Node.js and old IE.
    // There's a few reasons for why we prefer setImmediate.
    //
    // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
    // (Even though this is a DOM fork of the Scheduler, you could get here
    // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
    // https://github.com/facebook/react/issues/20756
    //
    // But also, it runs earlier which is the semantic we want.
    // If other browsers ever implement it, it's better to use it.
    // Although both of these would be inferior to native scheduling.
    schedulePerformWorkUntilDeadline = function() {
        localSetImmediate(performWorkUntilDeadline);
    };
    else if (typeof MessageChannel !== "undefined") {
        // DOM and Worker environments.
        // We prefer MessageChannel because of the 4ms setTimeout clamping.
        var channel = new MessageChannel();
        var port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
        };
    } else // We should only fallback here in non-browser environments.
    schedulePerformWorkUntilDeadline = function() {
        localSetTimeout(performWorkUntilDeadline, 0);
    };
    function requestHostCallback(callback) {
        scheduledHostCallback = callback;
        if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
        }
    }
    function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
        }, ms);
    }
    function cancelHostTimeout() {
        localClearTimeout(taskTimeoutID);
        taskTimeoutID = -1;
    }
    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = null;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_Profiling = unstable_Profiling;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_forceFrameRate = forceFrameRate;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_next = unstable_next;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = unstable_wrapCallback;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"gkKU3":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"km3Ru":[function(require,module,exports) {
"use strict";
var Refresh = require("7422ead32dcc1e6b");
function debounce(func, delay) {
    {
        let timeout = undefined;
        let lastTime = 0;
        return function(args) {
            // Call immediately if last call was more than the delay ago.
            // Otherwise, set a timeout. This means the first call is fast
            // (for the common case of a single update), and subsequent updates
            // are batched.
            let now = Date.now();
            if (now - lastTime > delay) {
                lastTime = now;
                func.call(null, args);
            } else {
                clearTimeout(timeout);
                timeout = setTimeout(function() {
                    timeout = undefined;
                    lastTime = Date.now();
                    func.call(null, args);
                }, delay);
            }
        };
    }
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30);
// Everthing below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module1) {
    window.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module1.id + " " + id);
    };
    window.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module1) {
    if (isReactRefreshBoundary(module1.exports)) {
        registerExportsForReactRefresh(module1);
        if (module1.hot) {
            module1.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module1.exports;
            });
            module1.hot.accept(function(getParents) {
                var prevExports = module1.hot.data.prevExports;
                var nextExports = module1.exports;
                // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports);
                // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== "object") // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = "__esModule" in exports;
    for(var key in exports){
        hasExports = true;
        if (key === "__esModule") continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
}
// When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== "object") // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = "__esModule" in exports;
    for(var key in exports){
        if (key === "__esModule") continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module1) {
    var exports = module1.exports, id = module1.id;
    Refresh.register(exports, id + " %exports%");
    if (exports == null || typeof exports !== "object") // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = "__esModule" in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        var typeID = id + " %exports% " + key;
        Refresh.register(exportValue, typeID);
    }
}

},{"7422ead32dcc1e6b":"786KC"}],"igX3A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Element", ()=>(0, _element.Element));
var _element = require("./Element");

},{"./Element":"2LCZI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2LCZI":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$6bb5 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$6bb5.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Element", ()=>Element);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _breakpoints = require("../../breakpoints");
var _headerTextDefault = require("../../components/HeaderTextDefault");
var _logoToriiiWhite = require("../../components/LogoToriiiWhite");
var _logoAceWhite1 = require("../../icons/LogoAceWhite1");
var _logoAceWhite3 = require("../../icons/LogoAceWhite3");
var _logoAceWhite4 = require("../../icons/LogoAceWhite4");
var _logoAceWhite5 = require("../../icons/LogoAceWhite5");
var _logoAceWhite7 = require("../../icons/LogoAceWhite7");
var _logoAceWhite8 = require("../../icons/LogoAceWhite8");
var _logoBinanceWhite1 = require("../../icons/LogoBinanceWhite1");
var _logoBinanceWhite2 = require("../../icons/LogoBinanceWhite2");
var _logoBinanceWhite3 = require("../../icons/LogoBinanceWhite3");
var _logoBinanceWhite4 = require("../../icons/LogoBinanceWhite4");
var _logoBinanceWhite7 = require("../../icons/LogoBinanceWhite7");
var _logoBinanceWhite8 = require("../../icons/LogoBinanceWhite8");
var _logoBitmexWhite3 = require("../../icons/LogoBitmexWhite3");
var _logoBitmexWhite4 = require("../../icons/LogoBitmexWhite4");
var _logoBitmexWhite5 = require("../../icons/LogoBitmexWhite5");
var _logoBitmexWhite6 = require("../../icons/LogoBitmexWhite6");
var _logoBitmexWhite7 = require("../../icons/LogoBitmexWhite7");
var _logoBitmexWhite8 = require("../../icons/LogoBitmexWhite8");
var _logoBitoproWhite1 = require("../../icons/LogoBitoproWhite1");
var _logoBitoproWhite2 = require("../../icons/LogoBitoproWhite2");
var _logoBitoproWhite6 = require("../../icons/LogoBitoproWhite6");
var _logoBitoproWhite7 = require("../../icons/LogoBitoproWhite7");
var _logoBitoproWhite8 = require("../../icons/LogoBitoproWhite8");
var _logoGateioWhite1 = require("../../icons/LogoGateioWhite1");
var _logoGateioWhite2 = require("../../icons/LogoGateioWhite2");
var _logoGateioWhite3 = require("../../icons/LogoGateioWhite3");
var _logoGateioWhite4 = require("../../icons/LogoGateioWhite4");
var _logoGateioWhite5 = require("../../icons/LogoGateioWhite5");
var _logoGateioWhite6 = require("../../icons/LogoGateioWhite6");
var _logoGateioWhite7 = require("../../icons/LogoGateioWhite7");
var _logoGateioWhite8 = require("../../icons/LogoGateioWhite8");
var _logoToriiiWhite34 = require("../../icons/LogoToriiiWhite34");
var _logoToriiiWhite41 = require("../../icons/LogoToriiiWhite41");
var _logoToriiiWhite61 = require("../../icons/LogoToriiiWhite61");
var _logoToriiiWhite65 = require("../../icons/LogoToriiiWhite65");
var _logoToriiiWhite69 = require("../../icons/LogoToriiiWhite69");
var _logoToriiiWhite315 = require("../../icons/LogoToriiiWhite315");
var _logoToriiiWhite317 = require("../../icons/LogoToriiiWhite317");
var _logoToriiiWhite318 = require("../../icons/LogoToriiiWhite318");
var _logoToriiiWhite319 = require("../../icons/LogoToriiiWhite319");
var _logoToriiiWhite611 = require("../../icons/LogoToriiiWhite611");
var _logoWooxWhite2 = require("../../icons/LogoWooxWhite2");
var _logoWooxWhite3 = require("../../icons/LogoWooxWhite3");
var _styleCss = require("./style.css");
var _s = $RefreshSig$();
const Element = ()=>{
    _s();
    const screenWidth = (0, _breakpoints.useWindowWidth)();
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "element",
        style: {
            gap: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "24px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "48px" : undefined,
            minWidth: screenWidth < 375 ? "320px" : screenWidth >= 375 && screenWidth < 414 ? "375px" : screenWidth >= 414 && screenWidth < 500 ? "414px" : screenWidth >= 500 && screenWidth < 768 ? "500px" : screenWidth >= 768 && screenWidth < 992 ? "768px" : screenWidth >= 992 && screenWidth < 1366 ? "992px" : screenWidth >= 1366 && screenWidth < 1920 ? "1366px" : screenWidth >= 1920 ? "1920px" : undefined
        },
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("header", {
                className: "header",
                style: {
                    padding: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth < 375 ? "24px" : screenWidth >= 992 && screenWidth < 1366 ? "24px 36px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "24px 48px" : undefined
                },
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "logo",
                        style: {
                            backgroundImage: screenWidth >= 768 && screenWidth < 992 ? "url(https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-4-5.svg)" : screenWidth >= 992 && screenWidth < 1366 ? "url(https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-4-6.svg)" : screenWidth >= 1366 && screenWidth < 1920 ? "url(https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-4-7.svg)" : screenWidth >= 1920 ? "url(https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-4-8.svg)" : screenWidth >= 375 && screenWidth < 414 ? "url(https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-4-2.svg)" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "url(https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-4-4.svg)" : undefined,
                            backgroundSize: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "100% 100%" : undefined,
                            height: screenWidth >= 768 && screenWidth < 992 ? "40.04px" : screenWidth >= 992 && screenWidth < 1366 ? "45.45px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "48.97px" : screenWidth < 375 ? "28px" : screenWidth >= 375 && screenWidth < 414 ? "30.69px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "33.31px" : undefined,
                            width: screenWidth >= 768 && screenWidth < 992 ? "192.95px" : screenWidth >= 992 && screenWidth < 1366 ? "219.05px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "236px" : screenWidth < 375 ? "134.93px" : screenWidth >= 375 && screenWidth < 414 ? "147.9px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "160.52px" : undefined
                        },
                        children: screenWidth < 375 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite41.LogoToriiiWhite41), {
                            className: "logo-toriii-white-4-1"
                        }, void 0, false, {
                            fileName: "src/screens/Element/Element.jsx",
                            lineNumber: 170,
                            columnNumber: 13
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/screens/Element/Element.jsx",
                        lineNumber: 107,
                        columnNumber: 9
                    }, undefined),
                    (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "menu",
                        style: {
                            borderRadius: screenWidth >= 768 && screenWidth < 992 ? "20.57px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366 ? "24px" : undefined,
                            gap: screenWidth >= 768 && screenWidth < 992 ? "13.71px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366 ? "16px" : undefined,
                            padding: screenWidth >= 768 && screenWidth < 992 ? "6.86px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366 ? "8px" : undefined
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _headerTextDefault.HeaderTextDefault), {
                                className: `${screenWidth >= 768 && screenWidth < 992 && "class-2"} ${(screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366) && "class-3"}`,
                                divClassName: `${screenWidth >= 768 && screenWidth < 992 && "class-4"}`,
                                frameClassName: `${screenWidth >= 768 && screenWidth < 992 && "class"}`,
                                text: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366 ? "About Us" : undefined,
                                targetId: "about-us-section"
                            }, void 0, false, {
                                fileName: "src/screens/Element/Element.jsx",
                                lineNumber: 247,
                                columnNumber: 13
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _headerTextDefault.HeaderTextDefault), {
                                className: `${screenWidth >= 768 && screenWidth < 992 && "class-2"} ${(screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366) && "class-3"}`,
                                divClassName: `${screenWidth >= 768 && screenWidth < 992 && "class-4"}`,
                                frameClassName: `${screenWidth >= 768 && screenWidth < 992 && "class"}`,
                                text: "Service",
                                targetId: "service-section"
                            }, void 0, false, {
                                fileName: "src/screens/Element/Element.jsx",
                                lineNumber: 260,
                                columnNumber: 13
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _headerTextDefault.HeaderTextDefault), {
                                className: `${screenWidth >= 768 && screenWidth < 992 && "class-2"} ${(screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366) && "class-3"}`,
                                divClassName: `${screenWidth >= 768 && screenWidth < 992 && "class-4"}`,
                                frameClassName: `${screenWidth >= 768 && screenWidth < 992 && "class"}`,
                                text: "Liquidity",
                                targetId: "liquidity-section"
                            }, void 0, false, {
                                fileName: "src/screens/Element/Element.jsx",
                                lineNumber: 267,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/screens/Element/Element.jsx",
                        lineNumber: 218,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/screens/Element/Element.jsx",
                lineNumber: 89,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "header-placeholder"
            }, void 0, false, {
                fileName: "src/screens/Element/Element.jsx",
                lineNumber: 277,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "content",
                style: {
                    gap: screenWidth < 375 ? "54px" : screenWidth >= 375 && screenWidth < 414 ? "64px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "80px" : screenWidth >= 768 && screenWidth < 992 ? "139px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 992 && screenWidth < 1366 ? "209px" : undefined
                },
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        id: "about-us-section",
                        className: "page-about-us",
                        style: {
                            height: screenWidth < 375 ? "464.63px" : screenWidth >= 375 && screenWidth < 414 ? "535.97px" : screenWidth >= 414 && screenWidth < 500 ? "591.09px" : screenWidth >= 500 && screenWidth < 768 ? "719px" : screenWidth >= 768 && screenWidth < 992 ? "420.87px" : screenWidth >= 992 && screenWidth < 1366 ? "558.97px" : screenWidth >= 1366 && screenWidth < 1920 ? "771.75px" : screenWidth >= 1920 ? "840px" : undefined,
                            marginLeft: screenWidth < 375 ? "-1.55px" : screenWidth >= 768 && screenWidth < 992 ? "-97.00px" : screenWidth >= 992 && screenWidth < 1366 ? "-142.83px" : screenWidth >= 1366 && screenWidth < 1920 ? "-199.00px" : undefined,
                            marginRight: screenWidth < 375 ? "-1.55px" : screenWidth >= 768 && screenWidth < 992 ? "-97.00px" : screenWidth >= 992 && screenWidth < 1366 ? "-142.83px" : screenWidth >= 1366 && screenWidth < 1920 ? "-199.00px" : undefined,
                            width: screenWidth < 375 ? "323.11px" : screenWidth >= 375 && screenWidth < 414 ? "372.72px" : screenWidth >= 414 && screenWidth < 500 ? "411.05px" : screenWidth >= 500 && screenWidth < 768 ? "500px" : screenWidth >= 768 && screenWidth < 992 ? "962px" : screenWidth >= 992 && screenWidth < 1366 ? "1277.66px" : screenWidth >= 1366 && screenWidth < 1920 ? "1764px" : screenWidth >= 1920 ? "1920px" : undefined
                        },
                        children: [
                            (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "overlap",
                                        style: {
                                            height: screenWidth < 375 ? "152px" : screenWidth >= 375 && screenWidth < 414 ? "176px" : screenWidth >= 414 && screenWidth < 500 ? "194px" : screenWidth >= 500 && screenWidth < 768 ? "236px" : undefined,
                                            left: screenWidth < 375 ? "17px" : screenWidth >= 375 && screenWidth < 414 ? "20px" : screenWidth >= 414 && screenWidth < 500 ? "22px" : screenWidth >= 500 && screenWidth < 768 ? "27px" : undefined,
                                            top: screenWidth < 375 ? "60px" : screenWidth >= 375 && screenWidth < 414 ? "70px" : screenWidth >= 414 && screenWidth < 500 ? "77px" : screenWidth >= 500 && screenWidth < 768 ? "93px" : undefined,
                                            width: screenWidth < 375 ? "289px" : screenWidth >= 375 && screenWidth < 414 ? "333px" : screenWidth >= 414 && screenWidth < 500 ? "368px" : screenWidth >= 500 && screenWidth < 768 ? "447px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "overlap-group",
                                                style: {
                                                    height: screenWidth < 375 ? "149px" : screenWidth >= 375 && screenWidth < 414 ? "171px" : screenWidth >= 414 && screenWidth < 500 ? "189px" : screenWidth >= 500 && screenWidth < 768 ? "230px" : undefined,
                                                    left: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "2px" : screenWidth >= 500 && screenWidth < 768 ? "3px" : undefined,
                                                    top: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "4px" : screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "6px" : undefined,
                                                    width: screenWidth < 375 ? "287px" : screenWidth >= 375 && screenWidth < 414 ? "331px" : screenWidth >= 414 && screenWidth < 500 ? "365px" : screenWidth >= 500 && screenWidth < 768 ? "444px" : undefined
                                                },
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "div",
                                                        style: {
                                                            height: screenWidth < 375 ? "108px" : screenWidth >= 375 && screenWidth < 414 ? "124px" : screenWidth >= 414 && screenWidth < 500 ? "137px" : screenWidth >= 500 && screenWidth < 768 ? "167px" : undefined,
                                                            top: screenWidth < 375 ? "30px" : screenWidth >= 375 && screenWidth < 414 ? "35px" : screenWidth >= 414 && screenWidth < 500 ? "38px" : screenWidth >= 500 && screenWidth < 768 ? "46px" : undefined,
                                                            width: screenWidth < 375 ? "287px" : screenWidth >= 375 && screenWidth < 414 ? "331px" : screenWidth >= 414 && screenWidth < 500 ? "365px" : screenWidth >= 500 && screenWidth < 768 ? "444px" : undefined
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "toriii-name",
                                                                style: {
                                                                    height: screenWidth < 375 ? "103px" : screenWidth >= 375 && screenWidth < 414 ? "119px" : screenWidth >= 414 && screenWidth < 500 ? "132px" : screenWidth >= 500 && screenWidth < 768 ? "160px" : undefined,
                                                                    top: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "7px" : undefined,
                                                                    width: screenWidth < 375 ? "103px" : screenWidth >= 375 && screenWidth < 414 ? "119px" : screenWidth >= 414 && screenWidth < 500 ? "132px" : screenWidth >= 500 && screenWidth < 768 ? "160px" : undefined
                                                                },
                                                                alt: "Toriii name",
                                                                src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-2.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-4.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-6.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 487,
                                                                columnNumber: 21
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                className: "text-wrapper",
                                                                style: {
                                                                    fontSize: screenWidth < 375 ? "3.1px" : screenWidth >= 375 && screenWidth < 414 ? "3.5px" : screenWidth >= 414 && screenWidth < 500 ? "3.9px" : screenWidth >= 500 && screenWidth < 768 ? "4.8px" : undefined,
                                                                    height: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "25px" : screenWidth >= 414 && screenWidth < 500 ? "30px" : screenWidth >= 500 && screenWidth < 768 ? "35px" : undefined,
                                                                    left: screenWidth < 375 ? "77px" : screenWidth >= 375 && screenWidth < 414 ? "87px" : screenWidth >= 414 && screenWidth < 500 ? "98px" : screenWidth >= 500 && screenWidth < 768 ? "118px" : undefined,
                                                                    lineHeight: screenWidth < 375 ? "4.6px" : screenWidth >= 375 && screenWidth < 414 ? "5.3px" : screenWidth >= 414 && screenWidth < 500 ? "5.9px" : screenWidth >= 500 && screenWidth < 768 ? "7.1px" : undefined,
                                                                    top: screenWidth < 375 ? "40px" : screenWidth >= 375 && screenWidth < 414 ? "48px" : screenWidth >= 414 && screenWidth < 500 ? "52px" : screenWidth >= 500 && screenWidth < 768 ? "64px" : undefined,
                                                                    width: screenWidth < 375 ? "105px" : screenWidth >= 375 && screenWidth < 414 ? "122px" : screenWidth >= 414 && screenWidth < 500 ? "134px" : screenWidth >= 500 && screenWidth < 768 ? "163px" : undefined
                                                                },
                                                                children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 534,
                                                                columnNumber: 21
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "group",
                                                                style: {
                                                                    height: screenWidth < 375 ? "32px" : screenWidth >= 375 && screenWidth < 414 ? "37px" : screenWidth >= 414 && screenWidth < 500 ? "41px" : screenWidth >= 500 && screenWidth < 768 ? "50px" : undefined,
                                                                    left: screenWidth < 375 ? "156px" : screenWidth >= 375 && screenWidth < 414 ? "180px" : screenWidth >= 414 && screenWidth < 500 ? "199px" : screenWidth >= 500 && screenWidth < 768 ? "242px" : undefined,
                                                                    top: screenWidth < 375 ? "43px" : screenWidth >= 375 && screenWidth < 414 ? "50px" : screenWidth >= 414 && screenWidth < 500 ? "55px" : screenWidth >= 500 && screenWidth < 768 ? "67px" : undefined,
                                                                    width: screenWidth < 375 ? "131px" : screenWidth >= 375 && screenWidth < 414 ? "151px" : screenWidth >= 414 && screenWidth < 500 ? "166px" : screenWidth >= 500 && screenWidth < 768 ? "202px" : undefined
                                                                },
                                                                alt: "Group",
                                                                src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/group-50@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/group-50-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/group-50-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/group-50-3@2x.png" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 607,
                                                                columnNumber: 21
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 452,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "overlap-group-wrapper",
                                                        style: {
                                                            backgroundImage: screenWidth < 375 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1.svg)" : screenWidth >= 375 && screenWidth < 414 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-2.svg)" : screenWidth >= 414 && screenWidth < 500 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-4.svg)" : screenWidth >= 500 && screenWidth < 768 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-6.svg)" : undefined,
                                                            height: screenWidth < 375 ? "36px" : screenWidth >= 375 && screenWidth < 414 ? "41px" : screenWidth >= 414 && screenWidth < 500 ? "45px" : screenWidth >= 500 && screenWidth < 768 ? "55px" : undefined,
                                                            left: screenWidth < 375 ? "158px" : screenWidth >= 375 && screenWidth < 414 ? "182px" : screenWidth >= 414 && screenWidth < 500 ? "201px" : screenWidth >= 500 && screenWidth < 768 ? "244px" : undefined,
                                                            top: screenWidth < 375 ? "113px" : screenWidth >= 375 && screenWidth < 414 ? "130px" : screenWidth >= 414 && screenWidth < 500 ? "144px" : screenWidth >= 500 && screenWidth < 768 ? "175px" : undefined,
                                                            width: screenWidth < 375 ? "36px" : screenWidth >= 375 && screenWidth < 414 ? "41px" : screenWidth >= 414 && screenWidth < 500 ? "45px" : screenWidth >= 500 && screenWidth < 768 ? "55px" : undefined
                                                        },
                                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "img-wrapper",
                                                            style: {
                                                                backgroundImage: screenWidth < 375 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-2.svg)" : screenWidth >= 375 && screenWidth < 414 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-2-2.svg)" : screenWidth >= 414 && screenWidth < 500 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-2-4.svg)" : screenWidth >= 500 && screenWidth < 768 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-2-6.svg)" : undefined,
                                                                height: screenWidth < 375 ? "30px" : screenWidth >= 375 && screenWidth < 414 ? "34px" : screenWidth >= 414 && screenWidth < 500 ? "38px" : screenWidth >= 500 && screenWidth < 768 ? "46px" : undefined,
                                                                left: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "3px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "4px" : undefined,
                                                                top: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "3px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "4px" : undefined,
                                                                width: screenWidth < 375 ? "30px" : screenWidth >= 375 && screenWidth < 414 ? "34px" : screenWidth >= 414 && screenWidth < 500 ? "38px" : screenWidth >= 500 && screenWidth < 768 ? "46px" : undefined
                                                            },
                                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "img",
                                                                style: {
                                                                    height: screenWidth < 375 ? "13px" : screenWidth >= 375 && screenWidth < 414 ? "16px" : screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "21px" : undefined,
                                                                    left: screenWidth < 375 ? "13px" : screenWidth >= 375 && screenWidth < 414 ? "15px" : screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "21px" : undefined,
                                                                    top: screenWidth < 375 ? "7px" : screenWidth >= 375 && screenWidth < 414 ? "8px" : screenWidth >= 414 && screenWidth < 500 ? "9px" : screenWidth >= 500 && screenWidth < 768 ? "11px" : undefined,
                                                                    width: screenWidth < 375 ? "3px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "4px" : screenWidth >= 500 && screenWidth < 768 ? "5px" : undefined
                                                                },
                                                                alt: "Img",
                                                                src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/-.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/--2.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/--4.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/--6.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 772,
                                                                columnNumber: 23
                                                            }, undefined)
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 721,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 666,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                        className: "img-2",
                                                        style: {
                                                            height: screenWidth < 375 ? "14px" : screenWidth >= 375 && screenWidth < 414 ? "16px" : screenWidth >= 414 && screenWidth < 500 ? "18px" : screenWidth >= 500 && screenWidth < 768 ? "22px" : undefined,
                                                            left: screenWidth < 375 ? "204px" : screenWidth >= 375 && screenWidth < 414 ? "236px" : screenWidth >= 414 && screenWidth < 500 ? "260px" : screenWidth >= 500 && screenWidth < 768 ? "316px" : undefined,
                                                            top: screenWidth < 375 ? "121px" : screenWidth >= 375 && screenWidth < 414 ? "139px" : screenWidth >= 414 && screenWidth < 500 ? "154px" : screenWidth >= 500 && screenWidth < 768 ? "187px" : undefined,
                                                            width: screenWidth < 375 ? "81px" : screenWidth >= 375 && screenWidth < 414 ? "94px" : screenWidth >= 414 && screenWidth < 500 ? "103px" : screenWidth >= 500 && screenWidth < 768 ? "126px" : undefined
                                                        },
                                                        alt: "Element",
                                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/99--.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/99---1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/99---2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/99---3.svg" : undefined
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 831,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                        className: "group-2",
                                                        style: {
                                                            height: screenWidth < 375 ? "61px" : screenWidth >= 375 && screenWidth < 414 ? "70px" : screenWidth >= 414 && screenWidth < 500 ? "77px" : screenWidth >= 500 && screenWidth < 768 ? "94px" : undefined,
                                                            left: screenWidth < 375 ? "158px" : screenWidth >= 375 && screenWidth < 414 ? "182px" : screenWidth >= 414 && screenWidth < 500 ? "201px" : screenWidth >= 500 && screenWidth < 768 ? "244px" : undefined,
                                                            width: screenWidth < 375 ? "129px" : screenWidth >= 375 && screenWidth < 414 ? "149px" : screenWidth >= 414 && screenWidth < 500 ? "164px" : screenWidth >= 500 && screenWidth < 768 ? "200px" : undefined
                                                        },
                                                        alt: "Group",
                                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/group-39@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-3@2x.png" : undefined
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 889,
                                                        columnNumber: 19
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 410,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "text-wrapper-2",
                                                style: {
                                                    fontSize: screenWidth < 375 ? "17.3px" : screenWidth >= 375 && screenWidth < 414 ? "20px" : screenWidth >= 414 && screenWidth < 500 ? "22px" : screenWidth >= 500 && screenWidth < 768 ? "26.8px" : undefined,
                                                    height: screenWidth < 375 ? "17px" : screenWidth >= 375 && screenWidth < 414 ? "20px" : screenWidth >= 414 && screenWidth < 500 ? "22px" : screenWidth >= 500 && screenWidth < 768 ? "27px" : undefined
                                                },
                                                children: "TORIII TECHNOLOGY CORP."
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 938,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 365,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        className: "p",
                                        style: {
                                            fontSize: screenWidth < 375 ? "2.7px" : screenWidth >= 375 && screenWidth < 414 ? "3.2px" : screenWidth >= 414 && screenWidth < 500 ? "3.5px" : screenWidth >= 500 && screenWidth < 768 ? "4.2px" : undefined,
                                            height: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "20px" : screenWidth >= 500 && screenWidth < 768 ? "24px" : undefined,
                                            left: screenWidth < 375 ? "26px" : screenWidth >= 375 && screenWidth < 414 ? "30px" : screenWidth >= 414 && screenWidth < 500 ? "33px" : screenWidth >= 500 && screenWidth < 768 ? "40px" : undefined,
                                            letterSpacing: screenWidth < 375 ? "0.01px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "0.02px" : undefined,
                                            lineHeight: screenWidth < 375 ? "4.1px" : screenWidth >= 375 && screenWidth < 414 ? "4.8px" : screenWidth >= 414 && screenWidth < 500 ? "5.2px" : screenWidth >= 500 && screenWidth < 768 ? "6.4px" : undefined,
                                            top: screenWidth < 375 ? "350px" : screenWidth >= 375 && screenWidth < 414 ? "404px" : screenWidth >= 414 && screenWidth < 500 ? "445px" : screenWidth >= 500 && screenWidth < 768 ? "541px" : undefined,
                                            width: screenWidth < 375 ? "118px" : screenWidth >= 375 && screenWidth < 414 ? "136px" : screenWidth >= 414 && screenWidth < 500 ? "150px" : screenWidth >= 500 && screenWidth < 768 ? "183px" : undefined
                                        },
                                        children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 967,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "battery",
                                        style: {
                                            height: screenWidth < 375 ? "20px" : screenWidth >= 375 && screenWidth < 414 ? "23px" : screenWidth >= 414 && screenWidth < 500 ? "25px" : screenWidth >= 500 && screenWidth < 768 ? "31px" : undefined,
                                            left: screenWidth < 375 ? "26px" : screenWidth >= 375 && screenWidth < 414 ? "30px" : screenWidth >= 414 && screenWidth < 500 ? "33px" : screenWidth >= 500 && screenWidth < 768 ? "40px" : undefined,
                                            top: screenWidth < 375 ? "325px" : screenWidth >= 375 && screenWidth < 414 ? "375px" : screenWidth >= 414 && screenWidth < 500 ? "414px" : screenWidth >= 500 && screenWidth < 768 ? "504px" : undefined,
                                            width: screenWidth < 375 ? "120px" : screenWidth >= 375 && screenWidth < 414 ? "139px" : screenWidth >= 414 && screenWidth < 500 ? "153px" : screenWidth >= 500 && screenWidth < 768 ? "186px" : undefined
                                        },
                                        alt: "Battery",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/battery@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/battery-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/battery-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/battery-3@2x.png" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 1047,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "group-3",
                                        style: {
                                            height: screenWidth < 375 ? "25px" : screenWidth >= 375 && screenWidth < 414 ? "29px" : screenWidth >= 414 && screenWidth < 500 ? "32px" : screenWidth >= 500 && screenWidth < 768 ? "39px" : undefined,
                                            left: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "19px" : screenWidth >= 414 && screenWidth < 500 ? "21px" : screenWidth >= 500 && screenWidth < 768 ? "25px" : undefined,
                                            top: screenWidth < 375 ? "7px" : screenWidth >= 375 && screenWidth < 414 ? "8px" : screenWidth >= 414 && screenWidth < 500 ? "9px" : screenWidth >= 500 && screenWidth < 768 ? "11px" : undefined,
                                            width: screenWidth < 375 ? "293px" : screenWidth >= 375 && screenWidth < 414 ? "338px" : screenWidth >= 414 && screenWidth < 500 ? "372px" : screenWidth >= 500 && screenWidth < 768 ? "453px" : undefined
                                        },
                                        alt: "Group",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/group-40@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/group-40-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/group-40-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/group-40-3@2x.png" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 1105,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "overlap-2",
                                        style: {
                                            height: screenWidth < 375 ? "136px" : screenWidth >= 375 && screenWidth < 414 ? "157px" : screenWidth >= 414 && screenWidth < 500 ? "173px" : screenWidth >= 500 && screenWidth < 768 ? "211px" : undefined,
                                            left: screenWidth < 375 ? "198px" : screenWidth >= 375 && screenWidth < 414 ? "228px" : screenWidth >= 414 && screenWidth < 500 ? "252px" : screenWidth >= 500 && screenWidth < 768 ? "306px" : undefined,
                                            top: screenWidth < 375 ? "328px" : screenWidth >= 375 && screenWidth < 414 ? "378px" : screenWidth >= 414 && screenWidth < 500 ? "417px" : screenWidth >= 500 && screenWidth < 768 ? "507px" : undefined,
                                            width: screenWidth < 375 ? "109px" : screenWidth >= 375 && screenWidth < 414 ? "125px" : screenWidth >= 414 && screenWidth < 500 ? "138px" : screenWidth >= 500 && screenWidth < 768 ? "168px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "toriii-name-2",
                                                style: {
                                                    height: screenWidth < 375 ? "117px" : screenWidth >= 375 && screenWidth < 414 ? "135px" : screenWidth >= 414 && screenWidth < 500 ? "149px" : screenWidth >= 500 && screenWidth < 768 ? "181px" : undefined,
                                                    left: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "1px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                    top: screenWidth < 375 ? "19px" : screenWidth >= 375 && screenWidth < 414 ? "22px" : screenWidth >= 414 && screenWidth < 500 ? "24px" : screenWidth >= 500 && screenWidth < 768 ? "30px" : undefined,
                                                    width: screenWidth < 375 ? "107px" : screenWidth >= 375 && screenWidth < 414 ? "124px" : screenWidth >= 414 && screenWidth < 500 ? "136px" : screenWidth >= 500 && screenWidth < 768 ? "166px" : undefined
                                                },
                                                alt: "Toriii name",
                                                src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-1.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-3.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-5.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-7.svg" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 1208,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                className: "text-wrapper-3",
                                                style: {
                                                    fontSize: screenWidth < 375 ? "2.7px" : screenWidth >= 375 && screenWidth < 414 ? "3.2px" : screenWidth >= 414 && screenWidth < 500 ? "3.5px" : screenWidth >= 500 && screenWidth < 768 ? "4.2px" : undefined,
                                                    height: screenWidth < 375 ? "19px" : screenWidth >= 375 && screenWidth < 414 ? "22px" : screenWidth >= 414 && screenWidth < 500 ? "25px" : screenWidth >= 500 && screenWidth < 768 ? "30px" : undefined,
                                                    letterSpacing: screenWidth < 375 ? "0.01px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "0.02px" : undefined,
                                                    lineHeight: screenWidth < 375 ? "4.1px" : screenWidth >= 375 && screenWidth < 414 ? "4.8px" : screenWidth >= 414 && screenWidth < 500 ? "5.2px" : screenWidth >= 500 && screenWidth < 768 ? "6.4px" : undefined,
                                                    width: screenWidth < 375 ? "106px" : screenWidth >= 375 && screenWidth < 414 ? "122px" : screenWidth >= 414 && screenWidth < 500 ? "135px" : screenWidth >= 500 && screenWidth < 768 ? "164px" : undefined
                                                },
                                                children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 1264,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 1163,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "group-4",
                                        style: {
                                            border: screenWidth < 375 ? "0.81px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.94px solid" : screenWidth >= 414 && screenWidth < 500 ? "1.03px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.26px solid" : undefined,
                                            borderRadius: screenWidth < 375 ? "8.14px" : screenWidth >= 375 && screenWidth < 414 ? "9.38px" : screenWidth >= 414 && screenWidth < 500 ? "10.35px" : screenWidth >= 500 && screenWidth < 768 ? "12.59px" : undefined,
                                            height: screenWidth < 375 ? "89px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "114px" : screenWidth >= 500 && screenWidth < 768 ? "138px" : undefined,
                                            left: screenWidth < 375 ? "25px" : screenWidth >= 375 && screenWidth < 414 ? "28px" : screenWidth >= 414 && screenWidth < 500 ? "31px" : screenWidth >= 500 && screenWidth < 768 ? "38px" : undefined,
                                            top: screenWidth < 375 ? "375px" : screenWidth >= 375 && screenWidth < 414 ? "432px" : screenWidth >= 414 && screenWidth < 500 ? "477px" : screenWidth >= 500 && screenWidth < 768 ? "580px" : undefined,
                                            width: screenWidth < 375 ? "122px" : screenWidth >= 375 && screenWidth < 414 ? "140px" : screenWidth >= 414 && screenWidth < 500 ? "155px" : screenWidth >= 500 && screenWidth < 768 ? "188px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "crypto-ASSETS",
                                                style: {
                                                    height: screenWidth < 375 ? "33px" : screenWidth >= 375 && screenWidth < 414 ? "38px" : screenWidth >= 414 && screenWidth < 500 ? "42px" : screenWidth >= 500 && screenWidth < 768 ? "51px" : undefined,
                                                    left: screenWidth < 375 ? "8px" : screenWidth >= 375 && screenWidth < 414 ? "9px" : screenWidth >= 414 && screenWidth < 500 ? "10px" : screenWidth >= 500 && screenWidth < 768 ? "12px" : undefined,
                                                    top: screenWidth < 375 ? "13px" : screenWidth >= 375 && screenWidth < 414 ? "15px" : screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "20px" : undefined,
                                                    width: screenWidth < 375 ? "105px" : screenWidth >= 375 && screenWidth < 414 ? "122px" : screenWidth >= 414 && screenWidth < 500 ? "134px" : screenWidth >= 500 && screenWidth < 768 ? "163px" : undefined
                                                },
                                                alt: "Crypto ASSETS",
                                                src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/crypto-assets.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/crypto-assets-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/crypto-assets-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/crypto-assets-3.svg" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 1391,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-wrapper",
                                                style: {
                                                    borderRadius: screenWidth < 375 ? "0px 0px 6.51px 6.51px" : screenWidth >= 375 && screenWidth < 414 ? "0px 0px 7.51px 7.51px" : screenWidth >= 414 && screenWidth < 500 ? "0px 0px 8.28px 8.28px" : screenWidth >= 500 && screenWidth < 768 ? "0px 0px 10.07px 10.07px" : undefined,
                                                    height: screenWidth < 375 ? "32px" : screenWidth >= 375 && screenWidth < 414 ? "37px" : screenWidth >= 414 && screenWidth < 500 ? "40px" : screenWidth >= 500 && screenWidth < 768 ? "49px" : undefined,
                                                    left: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "2px" : screenWidth >= 500 && screenWidth < 768 ? "3px" : undefined,
                                                    top: screenWidth < 375 ? "56px" : screenWidth >= 375 && screenWidth < 414 ? "65px" : screenWidth >= 414 && screenWidth < 500 ? "71px" : screenWidth >= 500 && screenWidth < 768 ? "87px" : undefined,
                                                    width: screenWidth < 375 ? "118px" : screenWidth >= 375 && screenWidth < 414 ? "136px" : screenWidth >= 414 && screenWidth < 500 ? "150px" : screenWidth >= 500 && screenWidth < 768 ? "183px" : undefined
                                                },
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-2",
                                                    style: {
                                                        gap: screenWidth < 375 ? "13.4px" : screenWidth >= 375 && screenWidth < 414 ? "15.45px" : screenWidth >= 414 && screenWidth < 500 ? "17.04px" : screenWidth >= 500 && screenWidth < 768 ? "20.73px" : undefined,
                                                        height: screenWidth < 375 ? "21px" : screenWidth >= 375 && screenWidth < 414 ? "24px" : screenWidth >= 414 && screenWidth < 500 ? "26px" : screenWidth >= 500 && screenWidth < 768 ? "32px" : undefined,
                                                        left: screenWidth < 375 ? "15px" : screenWidth >= 375 && screenWidth < 414 ? "17px" : screenWidth >= 414 && screenWidth < 500 ? "19px" : screenWidth >= 500 && screenWidth < 768 ? "23px" : undefined,
                                                        top: screenWidth < 375 ? "5px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "6px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                                        width: screenWidth < 375 ? "89px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "114px" : screenWidth >= 500 && screenWidth < 768 ? "138px" : undefined
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "frame-3",
                                                            style: {
                                                                height: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.23px" : undefined,
                                                                width: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.22px" : undefined
                                                            },
                                                            alt: "Frame",
                                                            src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39904.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39904-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39904-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39904-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1556,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "tether-usdt-seeklogo",
                                                            style: {
                                                                height: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.22px" : undefined,
                                                                width: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.22px" : undefined
                                                            },
                                                            alt: "Tether usdt seeklogo",
                                                            src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/tether-usdt-seeklogo.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/tether-usdt-seeklogo-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/tether-usdt-seeklogo-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/tether-usdt-seeklogo-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1594,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "group-wrapper",
                                                            style: {
                                                                border: screenWidth < 375 ? "0.92px solid" : screenWidth >= 375 && screenWidth < 414 ? "1.07px solid" : screenWidth >= 414 && screenWidth < 500 ? "1.18px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.43px solid" : undefined,
                                                                borderRadius: screenWidth < 375 ? "10.41px" : screenWidth >= 375 && screenWidth < 414 ? "12.01px" : screenWidth >= 414 && screenWidth < 500 ? "13.24px" : screenWidth >= 500 && screenWidth < 768 ? "16.11px" : undefined,
                                                                height: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.22px" : undefined,
                                                                width: screenWidth < 375 ? "20.82px" : screenWidth >= 375 && screenWidth < 414 ? "24.02px" : screenWidth >= 414 && screenWidth < 500 ? "26.49px" : screenWidth >= 500 && screenWidth < 768 ? "32.22px" : undefined
                                                            },
                                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "group-5",
                                                                style: {
                                                                    height: screenWidth < 375 ? "17px" : screenWidth >= 375 && screenWidth < 414 ? "20px" : screenWidth >= 414 && screenWidth < 500 ? "22px" : screenWidth >= 500 && screenWidth < 768 ? "27px" : undefined,
                                                                    left: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "6px" : undefined,
                                                                    width: screenWidth < 375 ? "11px" : screenWidth >= 375 && screenWidth < 414 ? "12px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined
                                                                },
                                                                alt: "Group",
                                                                src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/group-54@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/group-54-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/group-54-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/group-54-3@2x.png" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 1677,
                                                                columnNumber: 23
                                                            }, undefined)
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 1632,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 1502,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 1449,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 1326,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "liquidity",
                                        style: {
                                            height: screenWidth < 375 ? "140px" : screenWidth >= 375 && screenWidth < 414 ? "161px" : screenWidth >= 414 && screenWidth < 500 ? "178px" : screenWidth >= 500 && screenWidth < 768 ? "216px" : undefined,
                                            left: screenWidth < 375 ? "163px" : screenWidth >= 375 && screenWidth < 414 ? "189px" : screenWidth >= 414 && screenWidth < 500 ? "208px" : screenWidth >= 500 && screenWidth < 768 ? "253px" : undefined,
                                            top: screenWidth < 375 ? "326px" : screenWidth >= 375 && screenWidth < 414 ? "376px" : screenWidth >= 414 && screenWidth < 500 ? "414px" : screenWidth >= 500 && screenWidth < 768 ? "504px" : undefined,
                                            width: screenWidth < 375 ? "19px" : screenWidth >= 375 && screenWidth < 414 ? "22px" : screenWidth >= 414 && screenWidth < 500 ? "24px" : screenWidth >= 500 && screenWidth < 768 ? "30px" : undefined
                                        },
                                        alt: "Liquidity",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity-.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity--1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity--2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity--3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 1728,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "frame-4",
                                        style: {
                                            gap: screenWidth < 375 ? "9.23px" : screenWidth >= 375 && screenWidth < 414 ? "10.64px" : screenWidth >= 414 && screenWidth < 500 ? "11.74px" : screenWidth >= 500 && screenWidth < 768 ? "14.28px" : undefined,
                                            left: screenWidth < 375 ? "18px" : screenWidth >= 375 && screenWidth < 414 ? "21px" : screenWidth >= 414 && screenWidth < 500 ? "23px" : screenWidth >= 500 && screenWidth < 768 ? "29px" : undefined,
                                            top: screenWidth < 375 ? "44px" : screenWidth >= 375 && screenWidth < 414 ? "51px" : screenWidth >= 414 && screenWidth < 500 ? "56px" : screenWidth >= 500 && screenWidth < 768 ? "68px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "rectangle",
                                                style: {
                                                    border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                    borderRadius: screenWidth < 375 ? "10.36px" : screenWidth >= 375 && screenWidth < 414 ? "11.95px" : screenWidth >= 414 && screenWidth < 500 ? "13.18px" : screenWidth >= 500 && screenWidth < 768 ? "16.03px" : undefined,
                                                    height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                    width: screenWidth < 375 ? "89.29px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "113.59px" : screenWidth >= 500 && screenWidth < 768 ? "138.17px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 1821,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse",
                                                style: {
                                                    border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                    borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                    height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                    width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 1867,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-2",
                                                style: {
                                                    border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                    borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                    height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                    width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 1913,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-3",
                                                style: {
                                                    border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                    borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                    height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                    width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 1959,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-4",
                                                style: {
                                                    border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                    borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                    height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                    width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 2005,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-5",
                                                style: {
                                                    border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                    borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                    height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                    width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 2051,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-6",
                                                style: {
                                                    border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                    borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                    height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                    width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 2097,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-7",
                                                style: {
                                                    border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                    borderRadius: screenWidth < 375 ? "2.64px" : screenWidth >= 375 && screenWidth < 414 ? "3.04px" : screenWidth >= 414 && screenWidth < 500 ? "3.35px" : screenWidth >= 500 && screenWidth < 768 ? "4.08px" : undefined,
                                                    height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                    width: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 2143,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "rectangle-2",
                                                style: {
                                                    border: screenWidth < 375 ? "0.69px solid" : screenWidth >= 375 && screenWidth < 414 ? "0.8px solid" : screenWidth >= 414 && screenWidth < 500 ? "0.88px solid" : screenWidth >= 500 && screenWidth < 768 ? "1.07px solid" : undefined,
                                                    borderRadius: screenWidth < 375 ? "10.36px" : screenWidth >= 375 && screenWidth < 414 ? "11.95px" : screenWidth >= 414 && screenWidth < 500 ? "13.18px" : screenWidth >= 500 && screenWidth < 768 ? "16.03px" : undefined,
                                                    height: screenWidth < 375 ? "5.27px" : screenWidth >= 375 && screenWidth < 414 ? "6.08px" : screenWidth >= 414 && screenWidth < 500 ? "6.71px" : screenWidth >= 500 && screenWidth < 768 ? "8.16px" : undefined,
                                                    width: screenWidth < 375 ? "89.29px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "113.59px" : screenWidth >= 500 && screenWidth < 768 ? "138.17px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 2189,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 1786,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "overlap-3",
                                        style: {
                                            height: screenWidth < 375 ? "65px" : screenWidth >= 375 && screenWidth < 414 ? "77px" : screenWidth >= 414 && screenWidth < 500 ? "83px" : screenWidth >= 500 && screenWidth < 768 ? "102px" : undefined,
                                            left: screenWidth < 375 ? "36px" : screenWidth >= 375 && screenWidth < 414 ? "41px" : screenWidth >= 414 && screenWidth < 500 ? "45px" : screenWidth >= 500 && screenWidth < 768 ? "55px" : undefined,
                                            top: screenWidth < 375 ? "220px" : screenWidth >= 375 && screenWidth < 414 ? "253px" : screenWidth >= 414 && screenWidth < 500 ? "280px" : screenWidth >= 500 && screenWidth < 768 ? "340px" : undefined,
                                            width: screenWidth < 375 ? "266px" : screenWidth >= 375 && screenWidth < 414 ? "307px" : screenWidth >= 414 && screenWidth < 500 ? "339px" : screenWidth >= 500 && screenWidth < 768 ? "412px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "vector",
                                                style: {
                                                    height: screenWidth < 375 ? "55px" : screenWidth >= 375 && screenWidth < 414 ? "63px" : screenWidth >= 414 && screenWidth < 500 ? "70px" : screenWidth >= 500 && screenWidth < 768 ? "85px" : undefined,
                                                    left: screenWidth < 375 ? "192px" : screenWidth >= 375 && screenWidth < 414 ? "222px" : screenWidth >= 414 && screenWidth < 500 ? "245px" : screenWidth >= 500 && screenWidth < 768 ? "297px" : undefined,
                                                    width: screenWidth < 375 ? "74px" : screenWidth >= 375 && screenWidth < 414 ? "86px" : screenWidth >= 414 && screenWidth < 500 ? "94px" : screenWidth >= 500 && screenWidth < 768 ? "115px" : undefined
                                                },
                                                alt: "Vector",
                                                src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/vector.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/vector-4.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/vector-8.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/vector-12.svg" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 2281,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                className: "text-wrapper-4",
                                                style: {
                                                    fontSize: screenWidth < 375 ? "14.2px" : screenWidth >= 375 && screenWidth < 414 ? "16.4px" : screenWidth >= 414 && screenWidth < 500 ? "18.1px" : screenWidth >= 500 && screenWidth < 768 ? "22px" : undefined,
                                                    height: screenWidth < 375 ? "42px" : screenWidth >= 375 && screenWidth < 414 ? "50px" : screenWidth >= 414 && screenWidth < 500 ? "54px" : screenWidth >= 500 && screenWidth < 768 ? "66px" : undefined,
                                                    letterSpacing: screenWidth < 375 ? "0.07px" : screenWidth >= 375 && screenWidth < 414 ? "0.08px" : screenWidth >= 414 && screenWidth < 500 ? "0.09px" : screenWidth >= 500 && screenWidth < 768 ? "0.11px" : undefined,
                                                    lineHeight: screenWidth < 375 ? "21.3px" : screenWidth >= 375 && screenWidth < 414 ? "24.6px" : screenWidth >= 414 && screenWidth < 500 ? "27.1px" : screenWidth >= 500 && screenWidth < 768 ? "32.9px" : undefined,
                                                    top: screenWidth < 375 ? "23px" : screenWidth >= 375 && screenWidth < 414 ? "27px" : screenWidth >= 414 && screenWidth < 500 ? "29px" : screenWidth >= 500 && screenWidth < 768 ? "36px" : undefined,
                                                    width: screenWidth < 375 ? "257px" : screenWidth >= 375 && screenWidth < 414 ? "296px" : screenWidth >= 414 && screenWidth < 500 ? "327px" : screenWidth >= 500 && screenWidth < 768 ? "397px" : undefined
                                                },
                                                children: "Specializing in high frequency and low latency solutions for digital asset markets."
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 2329,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2236,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "vector-2",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "12px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined,
                                            left: screenWidth < 375 ? "292px" : screenWidth >= 375 && screenWidth < 414 ? "337px" : screenWidth >= 414 && screenWidth < 500 ? "371px" : screenWidth >= 500 && screenWidth < 768 ? "452px" : undefined,
                                            top: screenWidth < 375 ? "292px" : screenWidth >= 375 && screenWidth < 414 ? "337px" : screenWidth >= 414 && screenWidth < 500 ? "371px" : screenWidth >= 500 && screenWidth < 768 ? "452px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "12px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined
                                        },
                                        alt: "Vector",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/vector-1.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/vector-5.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/vector-9.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/vector-13.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2399,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "vector-3",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "12px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined,
                                            left: screenWidth < 375 ? "26px" : screenWidth >= 375 && screenWidth < 414 ? "31px" : screenWidth >= 414 && screenWidth < 500 ? "34px" : screenWidth >= 500 && screenWidth < 768 ? "41px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "342px" : screenWidth >= 414 && screenWidth < 500 ? "377px" : screenWidth >= 500 && screenWidth < 768 ? "459px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "12px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined
                                        },
                                        alt: "Vector",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/vector-2.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/vector-6.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/vector-10.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/vector-15.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2457,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "ellipse-8",
                                        style: {
                                            borderRadius: screenWidth < 375 ? "4.93px" : screenWidth >= 375 && screenWidth < 414 ? "5.69px" : screenWidth >= 414 && screenWidth < 500 ? "6.28px" : screenWidth >= 500 && screenWidth < 768 ? "7.64px" : undefined,
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "79px" : screenWidth >= 375 && screenWidth < 414 ? "91px" : screenWidth >= 414 && screenWidth < 500 ? "100px" : screenWidth >= 500 && screenWidth < 768 ? "122px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        }
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2515,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "ellipse-9",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "89px" : screenWidth >= 375 && screenWidth < 414 ? "102px" : screenWidth >= 414 && screenWidth < 500 ? "113px" : screenWidth >= 500 && screenWidth < 768 ? "137px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        },
                                        alt: "Ellipse",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-6.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-6-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-6-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-6-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2571,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "ellipse-10",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "99px" : screenWidth >= 375 && screenWidth < 414 ? "114px" : screenWidth >= 414 && screenWidth < 500 ? "125px" : screenWidth >= 500 && screenWidth < 768 ? "153px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        },
                                        alt: "Ellipse",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-7.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-7-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-7-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-7-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2629,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "ellipse-11",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "108px" : screenWidth >= 375 && screenWidth < 414 ? "125px" : screenWidth >= 414 && screenWidth < 500 ? "138px" : screenWidth >= 500 && screenWidth < 768 ? "168px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        },
                                        alt: "Ellipse",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-8.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-8-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-8-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-8-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2687,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "ellipse-12",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "118px" : screenWidth >= 375 && screenWidth < 414 ? "136px" : screenWidth >= 414 && screenWidth < 500 ? "151px" : screenWidth >= 500 && screenWidth < 768 ? "183px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        },
                                        alt: "Ellipse",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-9.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-9-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-9-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-9-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2745,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "ellipse-13",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "128px" : screenWidth >= 375 && screenWidth < 414 ? "148px" : screenWidth >= 414 && screenWidth < 500 ? "163px" : screenWidth >= 500 && screenWidth < 768 ? "198px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        },
                                        alt: "Ellipse",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-10.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-10-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-10-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-10-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2803,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "ellipse-14",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "138px" : screenWidth >= 375 && screenWidth < 414 ? "159px" : screenWidth >= 414 && screenWidth < 500 ? "176px" : screenWidth >= 500 && screenWidth < 768 ? "214px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        },
                                        alt: "Ellipse",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-11.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-11-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-11-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-11-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2861,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "ellipse-15",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "148px" : screenWidth >= 375 && screenWidth < 414 ? "171px" : screenWidth >= 414 && screenWidth < 500 ? "188px" : screenWidth >= 500 && screenWidth < 768 ? "229px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        },
                                        alt: "Ellipse",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-13.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-13-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-13-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-13-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2919,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "ellipse-16",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "158px" : screenWidth >= 375 && screenWidth < 414 ? "182px" : screenWidth >= 414 && screenWidth < 500 ? "201px" : screenWidth >= 500 && screenWidth < 768 ? "244px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        },
                                        alt: "Ellipse",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-14.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-14-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-14-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-14-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 2977,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "ellipse-17",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "168px" : screenWidth >= 375 && screenWidth < 414 ? "193px" : screenWidth >= 414 && screenWidth < 500 ? "213px" : screenWidth >= 500 && screenWidth < 768 ? "259px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        },
                                        alt: "Ellipse",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-15.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-15-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-15-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-15-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 3035,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "ellipse-18",
                                        style: {
                                            height: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined,
                                            left: screenWidth < 375 ? "178px" : screenWidth >= 375 && screenWidth < 414 ? "205px" : screenWidth >= 414 && screenWidth < 500 ? "226px" : screenWidth >= 500 && screenWidth < 768 ? "275px" : undefined,
                                            top: screenWidth < 375 ? "297px" : screenWidth >= 375 && screenWidth < 414 ? "343px" : screenWidth >= 414 && screenWidth < 500 ? "378px" : screenWidth >= 500 && screenWidth < 768 ? "460px" : undefined,
                                            width: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 ? "11px" : screenWidth >= 414 && screenWidth < 500 ? "13px" : screenWidth >= 500 && screenWidth < 768 ? "15px" : undefined
                                        },
                                        alt: "Ellipse",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-12.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-12-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-12-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-12-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 3093,
                                        columnNumber: 15
                                    }, undefined)
                                ]
                            }, void 0, true),
                            (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "group-6",
                                style: {
                                    height: screenWidth >= 768 && screenWidth < 992 ? "421px" : screenWidth >= 992 && screenWidth < 1366 ? "559px" : screenWidth >= 1366 && screenWidth < 1920 ? "771px" : screenWidth >= 1920 ? "839px" : undefined,
                                    left: screenWidth >= 768 && screenWidth < 992 ? "34px" : screenWidth >= 992 && screenWidth < 1366 ? "45px" : screenWidth >= 1366 && screenWidth < 1920 ? "62px" : screenWidth >= 1920 ? "68px" : undefined,
                                    width: screenWidth >= 768 && screenWidth < 992 ? "787px" : screenWidth >= 992 && screenWidth < 1366 ? "1043px" : screenWidth >= 1366 && screenWidth < 1920 ? "1437px" : screenWidth >= 1920 ? "1563px" : undefined
                                },
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "overlap-4",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "148px" : screenWidth >= 992 && screenWidth < 1366 ? "196px" : screenWidth >= 1366 && screenWidth < 1920 ? "271px" : screenWidth >= 1920 ? "295px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "124px" : screenWidth >= 992 && screenWidth < 1366 ? "165px" : screenWidth >= 1366 && screenWidth < 1920 ? "228px" : screenWidth >= 1920 ? "248px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "101px" : screenWidth >= 992 && screenWidth < 1366 ? "134px" : screenWidth >= 1366 && screenWidth < 1920 ? "186px" : screenWidth >= 1920 ? "202px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "605px" : screenWidth >= 992 && screenWidth < 1366 ? "803px" : screenWidth >= 1366 && screenWidth < 1920 ? "1109px" : screenWidth >= 1920 ? "1207px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "div-wrapper",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "146px" : screenWidth >= 992 && screenWidth < 1366 ? "194px" : screenWidth >= 1366 && screenWidth < 1920 ? "267px" : screenWidth >= 1920 ? "291px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 ? "87px" : screenWidth >= 992 && screenWidth < 1366 ? "115px" : screenWidth >= 1366 && screenWidth < 1920 ? "159px" : screenWidth >= 1920 ? "173px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "518px" : screenWidth >= 992 && screenWidth < 1366 ? "688px" : screenWidth >= 1366 && screenWidth < 1920 ? "950px" : screenWidth >= 1920 ? "1034px" : undefined
                                                },
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "overlap-group-2",
                                                    style: {
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "146px" : screenWidth >= 992 && screenWidth < 1366 ? "194px" : screenWidth >= 1366 && screenWidth < 1920 ? "267px" : screenWidth >= 1920 ? "291px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "506px" : screenWidth >= 992 && screenWidth < 1366 ? "672px" : screenWidth >= 1366 && screenWidth < 1920 ? "927px" : screenWidth >= 1920 ? "1009px" : undefined
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "vector-4",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "107px" : screenWidth >= 992 && screenWidth < 1366 ? "142px" : screenWidth >= 1366 && screenWidth < 1920 ? "196px" : screenWidth >= 1920 ? "214px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "12px" : screenWidth >= 992 && screenWidth < 1366 ? "16px" : screenWidth >= 1366 && screenWidth < 1920 ? "22px" : screenWidth >= 1920 ? "24px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "12px" : screenWidth >= 992 && screenWidth < 1366 ? "16px" : screenWidth >= 1366 && screenWidth < 1920 ? "22px" : screenWidth >= 1920 ? "24px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "107px" : screenWidth >= 992 && screenWidth < 1366 ? "142px" : screenWidth >= 1366 && screenWidth < 1920 ? "196px" : screenWidth >= 1920 ? "214px" : undefined
                                                            },
                                                            alt: "Vector",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/vector-17.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/vector-20.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/vector-23.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/vector-26.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 3306,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "group-7",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "146px" : screenWidth >= 992 && screenWidth < 1366 ? "194px" : screenWidth >= 1366 && screenWidth < 1920 ? "267px" : screenWidth >= 1920 ? "291px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "506px" : screenWidth >= 992 && screenWidth < 1366 ? "672px" : screenWidth >= 1366 && screenWidth < 1920 ? "927px" : screenWidth >= 1920 ? "1009px" : undefined
                                                            },
                                                            alt: "Group",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/group.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/group-1.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-2.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-3.png" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 3364,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "line",
                                                            style: {
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "11px" : screenWidth >= 992 && screenWidth < 1366 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 ? "20px" : screenWidth >= 1920 ? "22px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "69px" : screenWidth >= 992 && screenWidth < 1366 ? "91px" : screenWidth >= 1366 && screenWidth < 1920 ? "126px" : screenWidth >= 1920 ? "137px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "108px" : screenWidth >= 992 && screenWidth < 1366 ? "144px" : screenWidth >= 1366 && screenWidth < 1920 ? "198px" : screenWidth >= 1920 ? "216px" : undefined
                                                            },
                                                            alt: "Line",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "/img/line-2-3.svg" : screenWidth >= 992 && screenWidth < 1366 ? "/img/line-2-2.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "/img/image.svg" : screenWidth >= 1920 ? "/img/line-2.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 3402,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "line-2",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "108px" : screenWidth >= 992 && screenWidth < 1366 ? "144px" : screenWidth >= 1366 && screenWidth < 1920 ? "198px" : screenWidth >= 1920 ? "216px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "63px" : screenWidth >= 992 && screenWidth < 1366 ? "84px" : screenWidth >= 1366 && screenWidth < 1920 ? "116px" : screenWidth >= 1920 ? "126px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "11px" : screenWidth >= 992 && screenWidth < 1366 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 ? "20px" : screenWidth >= 1920 ? "22px" : undefined
                                                            },
                                                            alt: "Line",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/line-3.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/line-3-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/line-3-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/line-3-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 3450,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "frame-5",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "83px" : screenWidth >= 992 && screenWidth < 1366 ? "110px" : screenWidth >= 1366 && screenWidth < 1920 ? "152px" : screenWidth >= 1920 ? "165px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "23px" : screenWidth >= 992 && screenWidth < 1366 ? "30px" : screenWidth >= 1366 && screenWidth < 1920 ? "42px" : screenWidth >= 1920 ? "46px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "22px" : screenWidth >= 992 && screenWidth < 1366 ? "29px" : screenWidth >= 1366 && screenWidth < 1920 ? "40px" : screenWidth >= 1920 ? "43px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "82px" : screenWidth >= 992 && screenWidth < 1366 ? "108px" : screenWidth >= 1366 && screenWidth < 1920 ? "150px" : screenWidth >= 1920 ? "163px" : undefined
                                                            },
                                                            alt: "Frame",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39887.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39887-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39887-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39887-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 3498,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "frame-6",
                                                            style: {
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "234px" : screenWidth >= 992 && screenWidth < 1366 ? "310px" : screenWidth >= 1366 && screenWidth < 1920 ? "429px" : screenWidth >= 1920 ? "467px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "119px" : screenWidth >= 992 && screenWidth < 1366 ? "158px" : screenWidth >= 1366 && screenWidth < 1920 ? "219px" : screenWidth >= 1920 ? "238px" : undefined
                                                            },
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                    className: "ellipse-19",
                                                                    style: {
                                                                        borderRadius: screenWidth >= 768 && screenWidth < 992 ? "9.97px" : screenWidth >= 992 && screenWidth < 1366 ? "13.24px" : screenWidth >= 1366 && screenWidth < 1920 ? "18.28px" : screenWidth >= 1920 ? "19.9px" : undefined,
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    }
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3581,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-20",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-6-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-6-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-6-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-6-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3617,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-21",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-7-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-7-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-7-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-7-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3655,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-22",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-8-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-8-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-8-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-8-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3693,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-23",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-9-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-9-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-9-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-9-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3731,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-24",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-10-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-10-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-10-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-10-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3769,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-25",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-11-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-11-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-11-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-11-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3807,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-26",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-13-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-13-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-13-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-13-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3845,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-27",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-14-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-14-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-14-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-14-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3883,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-28",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-15-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-15-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-15-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-15-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3921,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "ellipse-29",
                                                                    style: {
                                                                        height: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined,
                                                                        width: screenWidth >= 768 && screenWidth < 992 ? "19.94px" : screenWidth >= 992 && screenWidth < 1366 ? "26.48px" : screenWidth >= 1366 && screenWidth < 1920 ? "36.56px" : screenWidth >= 1920 ? "39.8px" : undefined
                                                                    },
                                                                    alt: "Ellipse",
                                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-12-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-12-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-12-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/ellipse-12-7.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 3959,
                                                                    columnNumber: 23
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 3556,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                            className: "text-wrapper-5",
                                                            style: {
                                                                fontSize: screenWidth >= 768 && screenWidth < 992 ? "18px" : screenWidth >= 992 && screenWidth < 1366 ? "24px" : screenWidth >= 1366 && screenWidth < 1920 ? "33.1px" : screenWidth >= 1920 ? "36px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "54px" : screenWidth >= 992 && screenWidth < 1366 ? "72px" : screenWidth >= 1366 && screenWidth < 1920 ? "100px" : screenWidth >= 1920 ? "108px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "167px" : screenWidth >= 992 && screenWidth < 1366 ? "222px" : screenWidth >= 1366 && screenWidth < 1920 ? "307px" : screenWidth >= 1920 ? "334px" : undefined,
                                                                letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.09px" : screenWidth >= 992 && screenWidth < 1366 ? "0.12px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.17px" : screenWidth >= 1920 ? "0.18px" : undefined,
                                                                lineHeight: screenWidth >= 768 && screenWidth < 992 ? "27.1px" : screenWidth >= 992 && screenWidth < 1366 ? "35.9px" : screenWidth >= 1366 && screenWidth < 1920 ? "49.6px" : screenWidth >= 1920 ? "54px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "37px" : screenWidth >= 992 && screenWidth < 1366 ? "50px" : screenWidth >= 1366 && screenWidth < 1920 ? "69px" : screenWidth >= 1920 ? "75px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "326px" : screenWidth >= 992 && screenWidth < 1366 ? "433px" : screenWidth >= 1366 && screenWidth < 1920 ? "598px" : screenWidth >= 1920 ? "651px" : undefined
                                                            },
                                                            children: "Specializing in high frequency and low latency solutions for digital asset markets."
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 3998,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 3281,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 3237,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                className: "text-wrapper-6",
                                                style: {
                                                    fontSize: screenWidth >= 768 && screenWidth < 992 ? "4.2px" : screenWidth >= 992 && screenWidth < 1366 ? "5.6px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.8px" : screenWidth >= 1920 ? "8.5px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "30px" : screenWidth >= 992 && screenWidth < 1366 ? "40px" : screenWidth >= 1366 && screenWidth < 1920 ? "60px" : screenWidth >= 1920 ? "65px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 ? "-26px" : screenWidth >= 992 && screenWidth < 1366 ? "-34px" : screenWidth >= 1366 && screenWidth < 1920 ? "-45px" : screenWidth >= 1920 ? "-49px" : undefined,
                                                    letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.02px" : screenWidth >= 992 && screenWidth < 1366 ? "0.03px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "0.04px" : undefined,
                                                    lineHeight: screenWidth >= 768 && screenWidth < 992 ? "6.4px" : screenWidth >= 992 && screenWidth < 1366 ? "8.5px" : screenWidth >= 1366 && screenWidth < 1920 ? "11.7px" : screenWidth >= 1920 ? "12.7px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "60px" : screenWidth >= 992 && screenWidth < 1366 ? "79px" : screenWidth >= 1366 && screenWidth < 1920 ? "107px" : screenWidth >= 1920 ? "117px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "146px" : screenWidth >= 992 && screenWidth < 1366 ? "194px" : screenWidth >= 1366 && screenWidth < 1920 ? "267px" : screenWidth >= 1920 ? "291px" : undefined
                                                },
                                                children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 4079,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "battery-2",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "148px" : screenWidth >= 992 && screenWidth < 1366 ? "196px" : screenWidth >= 1366 && screenWidth < 1920 ? "271px" : screenWidth >= 1920 ? "295px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "25px" : screenWidth >= 992 && screenWidth < 1366 ? "33px" : screenWidth >= 1366 && screenWidth < 1920 ? "45px" : screenWidth >= 1920 ? "49px" : undefined
                                                },
                                                alt: "Battery",
                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/battery-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/battery-5@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/battery-6@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/battery-7@2x.png" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 4162,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 3192,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "text-wrapper-7",
                                        style: {
                                            fontSize: screenWidth >= 768 && screenWidth < 992 ? "26.8px" : screenWidth >= 992 && screenWidth < 1366 ? "35.6px" : screenWidth >= 1366 && screenWidth < 1920 ? "49.1px" : screenWidth >= 1920 ? "53.5px" : undefined,
                                            height: screenWidth >= 768 && screenWidth < 992 ? "27px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "49px" : screenWidth >= 1920 ? "53px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "118px" : screenWidth >= 992 && screenWidth < 1366 ? "156px" : screenWidth >= 1366 && screenWidth < 1920 ? "216px" : screenWidth >= 1920 ? "235px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "394px" : screenWidth >= 992 && screenWidth < 1366 ? "523px" : screenWidth >= 1366 && screenWidth < 1920 ? "722px" : screenWidth >= 1920 ? "786px" : undefined
                                        },
                                        children: "TORIII TECHNOLOGY CORP."
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 4201,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "group-8",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "35px" : screenWidth >= 992 && screenWidth < 1366 ? "47px" : screenWidth >= 1366 && screenWidth < 1920 ? "65px" : screenWidth >= 1920 ? "71px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "127px" : screenWidth >= 992 && screenWidth < 1366 ? "169px" : screenWidth >= 1366 && screenWidth < 1920 ? "233px" : screenWidth >= 1920 ? "254px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "14px" : screenWidth >= 992 && screenWidth < 1366 ? "19px" : screenWidth >= 1366 && screenWidth < 1920 ? "26px" : screenWidth >= 1920 ? "29px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "413px" : screenWidth >= 992 && screenWidth < 1366 ? "548px" : screenWidth >= 1366 && screenWidth < 1920 ? "756px" : screenWidth >= 1920 ? "823px" : undefined
                                        },
                                        alt: "Group",
                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/group-40-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/group-40-5.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-40-6.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-40-7.png" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 4249,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "group-9",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "95px" : screenWidth >= 992 && screenWidth < 1366 ? "126px" : screenWidth >= 1366 && screenWidth < 1920 ? "174px" : screenWidth >= 1920 ? "190px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "574px" : screenWidth >= 992 && screenWidth < 1366 ? "762px" : screenWidth >= 1366 && screenWidth < 1920 ? "1052px" : screenWidth >= 1920 ? "1145px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "202px" : screenWidth >= 992 && screenWidth < 1366 ? "268px" : screenWidth >= 1366 && screenWidth < 1920 ? "370px" : screenWidth >= 1920 ? "403px" : undefined
                                        },
                                        alt: "Group",
                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-6@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-8@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-10@2x.png" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 4307,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "toriii-name-3",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "149px" : screenWidth >= 992 && screenWidth < 1366 ? "198px" : screenWidth >= 1366 && screenWidth < 1920 ? "273px" : screenWidth >= 1920 ? "297px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "564px" : screenWidth >= 992 && screenWidth < 1366 ? "750px" : screenWidth >= 1366 && screenWidth < 1920 ? "1035px" : screenWidth >= 1920 ? "1126px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "269px" : screenWidth >= 992 && screenWidth < 1366 ? "357px" : screenWidth >= 1366 && screenWidth < 1920 ? "493px" : screenWidth >= 1920 ? "537px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "152px" : screenWidth >= 992 && screenWidth < 1366 ? "202px" : screenWidth >= 1366 && screenWidth < 1920 ? "278px" : screenWidth >= 1920 ? "303px" : undefined
                                        },
                                        alt: "Toriii name",
                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-8.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-9.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-10.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/toriii-name-11.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 4355,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        className: "text-wrapper-8",
                                        style: {
                                            fontSize: screenWidth >= 768 && screenWidth < 992 ? "4.8px" : screenWidth >= 992 && screenWidth < 1366 ? "6.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "8.7px" : screenWidth >= 1920 ? "9.5px" : undefined,
                                            height: screenWidth >= 768 && screenWidth < 992 ? "28px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "52px" : screenWidth >= 1920 ? "56px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "122px" : screenWidth >= 992 && screenWidth < 1366 ? "162px" : screenWidth >= 1366 && screenWidth < 1920 ? "223px" : screenWidth >= 1920 ? "243px" : undefined,
                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.02px" : screenWidth >= 992 && screenWidth < 1366 ? "0.03px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.04px" : screenWidth >= 1920 ? "0.05px" : undefined,
                                            lineHeight: screenWidth >= 768 && screenWidth < 992 ? "7.1px" : screenWidth >= 992 && screenWidth < 1366 ? "9.5px" : screenWidth >= 1366 && screenWidth < 1920 ? "13.1px" : screenWidth >= 1920 ? "14.2px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "354px" : screenWidth >= 992 && screenWidth < 1366 ? "471px" : screenWidth >= 1366 && screenWidth < 1920 ? "650px" : screenWidth >= 1920 ? "707px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "204px" : screenWidth >= 992 && screenWidth < 1366 ? "270px" : screenWidth >= 1366 && screenWidth < 1920 ? "373px" : screenWidth >= 1920 ? "406px" : undefined
                                        },
                                        children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 4413,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        className: "text-wrapper-9",
                                        style: {
                                            fontSize: screenWidth >= 768 && screenWidth < 992 ? "4.2px" : screenWidth >= 992 && screenWidth < 1366 ? "5.6px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.8px" : screenWidth >= 1920 ? "8.5px" : undefined,
                                            height: screenWidth >= 768 && screenWidth < 992 ? "30px" : screenWidth >= 992 && screenWidth < 1366 ? "40px" : screenWidth >= 1366 && screenWidth < 1920 ? "60px" : screenWidth >= 1920 ? "65px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "355px" : screenWidth >= 992 && screenWidth < 1366 ? "472px" : screenWidth >= 1366 && screenWidth < 1920 ? "652px" : screenWidth >= 1920 ? "709px" : undefined,
                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.02px" : screenWidth >= 992 && screenWidth < 1366 ? "0.03px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "0.04px" : undefined,
                                            lineHeight: screenWidth >= 768 && screenWidth < 992 ? "6.4px" : screenWidth >= 992 && screenWidth < 1366 ? "8.5px" : screenWidth >= 1366 && screenWidth < 1920 ? "11.7px" : screenWidth >= 1920 ? "12.7px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "280px" : screenWidth >= 992 && screenWidth < 1366 ? "372px" : screenWidth >= 1366 && screenWidth < 1920 ? "514px" : screenWidth >= 1920 ? "559px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "127px" : screenWidth >= 992 && screenWidth < 1366 ? "168px" : screenWidth >= 1366 && screenWidth < 1920 ? "232px" : screenWidth >= 1920 ? "253px" : undefined
                                        },
                                        children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 4497,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "overlap-wrapper",
                                        style: {
                                            backgroundImage: screenWidth >= 768 && screenWidth < 992 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-8.svg)" : screenWidth >= 992 && screenWidth < 1366 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-9.svg)" : screenWidth >= 1366 && screenWidth < 1920 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-10.svg)" : screenWidth >= 1920 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-11.svg)" : undefined,
                                            height: screenWidth >= 768 && screenWidth < 992 ? "72px" : screenWidth >= 992 && screenWidth < 1366 ? "96px" : screenWidth >= 1366 && screenWidth < 1920 ? "132px" : screenWidth >= 1920 ? "144px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "115px" : screenWidth >= 992 && screenWidth < 1366 ? "153px" : screenWidth >= 1366 && screenWidth < 1920 ? "211px" : screenWidth >= 1920 ? "229px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "279px" : screenWidth >= 992 && screenWidth < 1366 ? "370px" : screenWidth >= 1366 && screenWidth < 1920 ? "511px" : screenWidth >= 1920 ? "556px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "72px" : screenWidth >= 992 && screenWidth < 1366 ? "96px" : screenWidth >= 1366 && screenWidth < 1920 ? "132px" : screenWidth >= 1920 ? "144px" : undefined
                                        },
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "overlap-5",
                                            style: {
                                                backgroundImage: screenWidth >= 768 && screenWidth < 992 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-2-8.svg)" : screenWidth >= 992 && screenWidth < 1366 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-2-9.svg)" : screenWidth >= 1366 && screenWidth < 1920 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-2-10.svg)" : screenWidth >= 1920 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-2-11.svg)" : undefined,
                                                height: screenWidth >= 768 && screenWidth < 992 ? "60px" : screenWidth >= 992 && screenWidth < 1366 ? "80px" : screenWidth >= 1366 && screenWidth < 1920 ? "111px" : screenWidth >= 1920 ? "120px" : undefined,
                                                left: screenWidth >= 768 && screenWidth < 992 ? "6px" : screenWidth >= 992 && screenWidth < 1366 ? "8px" : screenWidth >= 1366 && screenWidth < 1920 ? "11px" : screenWidth >= 1920 ? "12px" : undefined,
                                                top: screenWidth >= 768 && screenWidth < 992 ? "6px" : screenWidth >= 992 && screenWidth < 1366 ? "8px" : screenWidth >= 1366 && screenWidth < 1920 ? "11px" : screenWidth >= 1920 ? "12px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "60px" : screenWidth >= 992 && screenWidth < 1366 ? "80px" : screenWidth >= 1366 && screenWidth < 1920 ? "111px" : screenWidth >= 1920 ? "120px" : undefined
                                            },
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "img-3",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "27px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "50px" : screenWidth >= 1920 ? "55px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 ? "27px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "50px" : screenWidth >= 1920 ? "54px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "14px" : screenWidth >= 992 && screenWidth < 1366 ? "19px" : screenWidth >= 1366 && screenWidth < 1920 ? "26px" : screenWidth >= 1920 ? "28px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "7px" : screenWidth >= 992 && screenWidth < 1366 ? "9px" : screenWidth >= 1366 && screenWidth < 1920 ? "12px" : screenWidth >= 1920 ? "13px" : undefined
                                                },
                                                alt: "Img",
                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/--8.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/--9.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/--10.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/--11.svg" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 4689,
                                                columnNumber: 19
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 4634,
                                            columnNumber: 17
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 4579,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "group-10",
                                        style: {
                                            border: screenWidth >= 768 && screenWidth < 992 ? "0.88px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.62px solid" : screenWidth >= 1920 ? "1.76px solid" : undefined,
                                            borderRadius: screenWidth >= 768 && screenWidth < 992 ? "8.82px" : screenWidth >= 992 && screenWidth < 1366 ? "11.72px" : screenWidth >= 1366 && screenWidth < 1920 ? "16.18px" : screenWidth >= 1920 ? "17.61px" : undefined,
                                            height: screenWidth >= 768 && screenWidth < 992 ? "97px" : screenWidth >= 992 && screenWidth < 1366 ? "129px" : screenWidth >= 1366 && screenWidth < 1920 ? "178px" : screenWidth >= 1920 ? "194px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "352px" : screenWidth >= 992 && screenWidth < 1366 ? "468px" : screenWidth >= 1366 && screenWidth < 1920 ? "646px" : screenWidth >= 1920 ? "703px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "324px" : screenWidth >= 992 && screenWidth < 1366 ? "430px" : screenWidth >= 1366 && screenWidth < 1920 ? "593px" : screenWidth >= 1920 ? "646px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "132px" : screenWidth >= 992 && screenWidth < 1366 ? "175px" : screenWidth >= 1366 && screenWidth < 1920 ? "242px" : screenWidth >= 1920 ? "263px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "crypto-ASSETS-2",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "36px" : screenWidth >= 992 && screenWidth < 1366 ? "48px" : screenWidth >= 1366 && screenWidth < 1920 ? "66px" : screenWidth >= 1920 ? "72px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 ? "9px" : screenWidth >= 992 && screenWidth < 1366 ? "11px" : screenWidth >= 1366 && screenWidth < 1920 ? "16px" : screenWidth >= 1920 ? "17px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "14px" : screenWidth >= 992 && screenWidth < 1366 ? "19px" : screenWidth >= 1366 && screenWidth < 1920 ? "26px" : screenWidth >= 1920 ? "28px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "114px" : screenWidth >= 992 && screenWidth < 1366 ? "152px" : screenWidth >= 1366 && screenWidth < 1920 ? "209px" : screenWidth >= 1920 ? "228px" : undefined
                                                },
                                                alt: "Crypto ASSETS",
                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/crypto-assets-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/crypto-assets-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/crypto-assets-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/crypto-assets-7.svg" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 4814,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "overlap-6",
                                                style: {
                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0px 0px 7.06px 7.06px" : screenWidth >= 992 && screenWidth < 1366 ? "0px 0px 9.37px 9.37px" : screenWidth >= 1366 && screenWidth < 1920 ? "0px 0px 12.94px 12.94px" : screenWidth >= 1920 ? "0px 0px 14.09px 14.09px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "34px" : screenWidth >= 992 && screenWidth < 1366 ? "46px" : screenWidth >= 1366 && screenWidth < 1920 ? "63px" : screenWidth >= 1920 ? "69px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "61px" : screenWidth >= 992 && screenWidth < 1366 ? "81px" : screenWidth >= 1366 && screenWidth < 1920 ? "112px" : screenWidth >= 1920 ? "122px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "128px" : screenWidth >= 992 && screenWidth < 1366 ? "170px" : screenWidth >= 1366 && screenWidth < 1920 ? "235px" : screenWidth >= 1920 ? "255px" : undefined
                                                },
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-7",
                                                    style: {
                                                        gap: screenWidth >= 768 && screenWidth < 992 ? "14.53px" : screenWidth >= 992 && screenWidth < 1366 ? "19.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "26.64px" : screenWidth >= 1920 ? "29px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 ? "16px" : screenWidth >= 992 && screenWidth < 1366 ? "22px" : screenWidth >= 1366 && screenWidth < 1920 ? "30px" : screenWidth >= 1920 ? "32px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "5px" : screenWidth >= 992 && screenWidth < 1366 ? "7px" : screenWidth >= 1366 && screenWidth < 1920 ? "10px" : screenWidth >= 1920 ? "11px" : undefined
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "frame-8",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "22.59px" : screenWidth >= 992 && screenWidth < 1366 ? "30px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.08px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "22.58px" : screenWidth >= 992 && screenWidth < 1366 ? "29.99px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.07px" : undefined
                                                            },
                                                            alt: "Frame",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39904-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39904-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39904-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39904-7.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 4961,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "tether-usdt-seeklogo-2",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "22.58px" : screenWidth >= 992 && screenWidth < 1366 ? "29.99px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.07px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "22.58px" : screenWidth >= 992 && screenWidth < 1366 ? "29.99px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.07px" : undefined
                                                            },
                                                            alt: "Tether usdt seeklogo",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/tether-usdt-seeklogo-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/tether-usdt-seeklogo-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/tether-usdt-seeklogo-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/tether-usdt-seeklogo-7.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 4999,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "frame-9",
                                                            style: {
                                                                border: screenWidth >= 768 && screenWidth < 992 ? "1px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.33px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.84px solid" : screenWidth >= 1920 ? "2px solid" : undefined,
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "11.29px" : screenWidth >= 992 && screenWidth < 1366 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 ? "20.7px" : screenWidth >= 1920 ? "22.54px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "22.58px" : screenWidth >= 992 && screenWidth < 1366 ? "29.99px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.07px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "22.58px" : screenWidth >= 992 && screenWidth < 1366 ? "29.99px" : screenWidth >= 1366 && screenWidth < 1920 ? "41.41px" : screenWidth >= 1920 ? "45.07px" : undefined
                                                            },
                                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "group-11",
                                                                style: {
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "19px" : screenWidth >= 992 && screenWidth < 1366 ? "25px" : screenWidth >= 1366 && screenWidth < 1920 ? "34px" : screenWidth >= 1920 ? "37px" : undefined,
                                                                    left: screenWidth >= 768 && screenWidth < 992 ? "5px" : screenWidth >= 992 && screenWidth < 1366 ? "6px" : screenWidth >= 1366 && screenWidth < 1920 ? "8px" : screenWidth >= 1920 ? "9px" : undefined,
                                                                    top: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "1px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "2px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 ? "11px" : screenWidth >= 992 && screenWidth < 1366 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 ? "21px" : screenWidth >= 1920 ? "23px" : undefined
                                                                },
                                                                alt: "Group",
                                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/group-54-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/group-54-5@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-54-6@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-54-7@2x.png" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 5082,
                                                                columnNumber: 23
                                                            }, undefined)
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 5037,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 4926,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 4872,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 4749,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "liquidity-2",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "266px" : screenWidth >= 992 && screenWidth < 1366 ? "353px" : screenWidth >= 1366 && screenWidth < 1920 ? "488px" : screenWidth >= 1920 ? "531px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "743px" : screenWidth >= 992 && screenWidth < 1366 ? "986px" : screenWidth >= 1366 && screenWidth < 1920 ? "1362px" : screenWidth >= 1920 ? "1482px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "135px" : screenWidth >= 992 && screenWidth < 1366 ? "179px" : screenWidth >= 1366 && screenWidth < 1920 ? "248px" : screenWidth >= 1920 ? "269px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "36px" : screenWidth >= 992 && screenWidth < 1366 ? "48px" : screenWidth >= 1366 && screenWidth < 1920 ? "67px" : screenWidth >= 1920 ? "73px" : undefined
                                        },
                                        alt: "Liquidity",
                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity--4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity--5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity--6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity--7.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 5142,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "frame-10",
                                        style: {
                                            gap: screenWidth >= 768 && screenWidth < 992 ? "14.03px" : screenWidth >= 992 && screenWidth < 1366 ? "18.63px" : screenWidth >= 1366 && screenWidth < 1920 ? "25.72px" : screenWidth >= 1920 ? "28px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "124px" : screenWidth >= 992 && screenWidth < 1366 ? "165px" : screenWidth >= 1366 && screenWidth < 1920 ? "228px" : screenWidth >= 1920 ? "248px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "68px" : screenWidth >= 992 && screenWidth < 1366 ? "91px" : screenWidth >= 1366 && screenWidth < 1920 ? "125px" : screenWidth >= 1920 ? "136px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "rectangle-3",
                                                style: {
                                                    border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "15.75px" : screenWidth >= 992 && screenWidth < 1366 ? "20.92px" : screenWidth >= 1366 && screenWidth < 1920 ? "28.88px" : screenWidth >= 1920 ? "31.44px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "135.78px" : screenWidth >= 992 && screenWidth < 1366 ? "180.34px" : screenWidth >= 1366 && screenWidth < 1920 ? "248.98px" : screenWidth >= 1920 ? "271px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 5235,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-30",
                                                style: {
                                                    border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 5281,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-31",
                                                style: {
                                                    border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 5327,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-32",
                                                style: {
                                                    border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 5373,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-33",
                                                style: {
                                                    border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 5419,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-34",
                                                style: {
                                                    border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 5465,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "ellipse-35",
                                                style: {
                                                    border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 5511,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "rectangle-4",
                                                style: {
                                                    border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                    borderRadius: screenWidth >= 768 && screenWidth < 992 ? "15.75px" : screenWidth >= 992 && screenWidth < 1366 ? "20.92px" : screenWidth >= 1366 && screenWidth < 1920 ? "28.88px" : screenWidth >= 1920 ? "31.44px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "135.78px" : screenWidth >= 992 && screenWidth < 1366 ? "180.34px" : screenWidth >= 1366 && screenWidth < 1920 ? "248.98px" : screenWidth >= 1920 ? "271px" : undefined
                                                }
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 5557,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 5200,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "img-4",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "22px" : screenWidth >= 992 && screenWidth < 1366 ? "30px" : screenWidth >= 1366 && screenWidth < 1920 ? "41px" : screenWidth >= 1920 ? "45px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "197px" : screenWidth >= 992 && screenWidth < 1366 ? "262px" : screenWidth >= 1366 && screenWidth < 1920 ? "362px" : screenWidth >= 1920 ? "393px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "300px" : screenWidth >= 992 && screenWidth < 1366 ? "398px" : screenWidth >= 1366 && screenWidth < 1920 ? "550px" : screenWidth >= 1920 ? "598px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "127px" : screenWidth >= 992 && screenWidth < 1366 ? "169px" : screenWidth >= 1366 && screenWidth < 1920 ? "234px" : screenWidth >= 1920 ? "254px" : undefined
                                        },
                                        alt: "Element",
                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/99---4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/99---5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/99---6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/99---7.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 5604,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "group-12",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "159px" : screenWidth >= 992 && screenWidth < 1366 ? "211px" : screenWidth >= 1366 && screenWidth < 1920 ? "292px" : screenWidth >= 1920 ? "318px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "508px" : screenWidth >= 992 && screenWidth < 1366 ? "675px" : screenWidth >= 1366 && screenWidth < 1920 ? "932px" : screenWidth >= 1920 ? "1015px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "260px" : screenWidth >= 992 && screenWidth < 1366 ? "345px" : screenWidth >= 1366 && screenWidth < 1920 ? "476px" : screenWidth >= 1920 ? "518px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "39px" : screenWidth >= 992 && screenWidth < 1366 ? "52px" : screenWidth >= 1366 && screenWidth < 1920 ? "72px" : screenWidth >= 1920 ? "79px" : undefined
                                        },
                                        alt: "Group",
                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/group-50-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/group-50-5@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-50-6@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-50-7@2x.png" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 5662,
                                        columnNumber: 15
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/screens/Element/Element.jsx",
                                lineNumber: 3157,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/screens/Element/Element.jsx",
                        lineNumber: 298,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        id: "service-section",
                        className: "page-service",
                        style: {
                            height: screenWidth < 375 ? "508px" : screenWidth >= 375 && screenWidth < 414 ? "461px" : screenWidth >= 414 && screenWidth < 500 ? "463px" : screenWidth >= 500 && screenWidth < 768 ? "445px" : screenWidth >= 768 && screenWidth < 992 ? "505.05px" : screenWidth >= 992 && screenWidth < 1366 ? "670.77px" : screenWidth >= 1366 && screenWidth < 1920 ? "926.1px" : screenWidth >= 1920 ? "1008px" : undefined,
                            marginLeft: screenWidth < 375 ? "-2.00px" : screenWidth >= 768 && screenWidth < 992 ? "-97.00px" : screenWidth >= 992 && screenWidth < 1366 ? "-142.83px" : screenWidth >= 1366 && screenWidth < 1920 ? "-199.00px" : undefined,
                            marginRight: screenWidth < 375 ? "-2.00px" : screenWidth >= 768 && screenWidth < 992 ? "-97.00px" : screenWidth >= 992 && screenWidth < 1366 ? "-142.83px" : screenWidth >= 1366 && screenWidth < 1920 ? "-199.00px" : undefined,
                            width: screenWidth < 375 ? "324px" : screenWidth >= 375 && screenWidth < 414 ? "373px" : screenWidth >= 414 && screenWidth < 500 ? "412px" : screenWidth >= 500 && screenWidth < 768 ? "500px" : screenWidth >= 768 && screenWidth < 992 ? "962px" : screenWidth >= 992 && screenWidth < 1366 ? "1277.66px" : screenWidth >= 1366 && screenWidth < 1920 ? "1764px" : screenWidth >= 1920 ? "1920px" : undefined
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "frame-11",
                                style: {
                                    height: screenWidth < 375 ? "289px" : screenWidth >= 375 && screenWidth < 414 ? "334px" : screenWidth >= 414 && screenWidth < 500 ? "368px" : screenWidth >= 500 && screenWidth < 768 ? "447px" : screenWidth >= 768 && screenWidth < 992 ? "505px" : screenWidth >= 992 && screenWidth < 1366 ? "671px" : screenWidth >= 1366 && screenWidth < 1920 ? "926px" : screenWidth >= 1920 ? "1008px" : undefined,
                                    left: screenWidth < 375 ? "22px" : screenWidth >= 375 && screenWidth < 414 ? "26px" : screenWidth >= 414 && screenWidth < 500 ? "28px" : screenWidth >= 500 && screenWidth < 768 ? "34px" : screenWidth >= 768 && screenWidth < 992 ? "-154px" : screenWidth >= 992 && screenWidth < 1366 ? "-204px" : screenWidth >= 1366 && screenWidth < 1920 ? "-282px" : screenWidth >= 1920 ? "-307px" : undefined,
                                    top: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "-1px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "-2px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "0" : undefined,
                                    width: screenWidth < 375 ? "252px" : screenWidth >= 375 && screenWidth < 414 ? "291px" : screenWidth >= 414 && screenWidth < 500 ? "321px" : screenWidth >= 500 && screenWidth < 768 ? "390px" : screenWidth >= 768 && screenWidth < 992 ? "593px" : screenWidth >= 992 && screenWidth < 1366 ? "788px" : screenWidth >= 1366 && screenWidth < 1920 ? "1088px" : screenWidth >= 1920 ? "1184px" : undefined
                                },
                                children: [
                                    (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "frame-12",
                                        style: {
                                            gap: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "18px" : screenWidth >= 414 && screenWidth < 500 ? "35px" : undefined,
                                            width: screenWidth < 375 ? "252px" : screenWidth >= 375 && screenWidth < 414 ? "291px" : screenWidth >= 414 && screenWidth < 500 ? "321px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-13",
                                                style: {
                                                    gap: screenWidth < 375 ? "3px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "4px" : undefined
                                                },
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-14",
                                                        style: {
                                                            gap: screenWidth < 375 ? "3.87px" : screenWidth >= 375 && screenWidth < 414 ? "4.46px" : screenWidth >= 414 && screenWidth < 500 ? "4.92px" : undefined,
                                                            padding: screenWidth < 375 ? "1.55px 0px" : screenWidth >= 375 && screenWidth < 414 ? "1.78px 0px" : screenWidth >= 414 && screenWidth < 500 ? "1.97px 0px" : undefined
                                                        },
                                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "text-wrapper-10",
                                                            style: {
                                                                fontSize: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "16.1px" : screenWidth >= 414 && screenWidth < 500 ? "17.7px" : undefined,
                                                                letterSpacing: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "0.08px" : screenWidth >= 414 && screenWidth < 500 ? "0.09px" : undefined
                                                            },
                                                            children: "Liquidity provider"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 5913,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 5892,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                        className: "text-wrapper-11",
                                                        children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 5937,
                                                        columnNumber: 19
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 5880,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-15",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-16",
                                                        style: {
                                                            gap: screenWidth < 375 ? "3.87px" : screenWidth >= 375 && screenWidth < 414 ? "4.46px" : screenWidth >= 414 && screenWidth < 500 ? "4.92px" : undefined,
                                                            padding: screenWidth < 375 ? "1.55px 0px" : screenWidth >= 375 && screenWidth < 414 ? "1.78px 0px" : screenWidth >= 414 && screenWidth < 500 ? "1.97px 0px" : undefined
                                                        },
                                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "text-wrapper-12",
                                                            style: {
                                                                fontSize: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "16.1px" : screenWidth >= 414 && screenWidth < 500 ? "17.7px" : undefined,
                                                                letterSpacing: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "0.08px" : screenWidth >= 414 && screenWidth < 500 ? "0.09px" : undefined
                                                            },
                                                            children: "Comprehensive Financial Services"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 5970,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 5949,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                        className: "text-wrapper-11",
                                                        children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 5994,
                                                        columnNumber: 19
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 5948,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-17",
                                                style: {
                                                    gap: screenWidth < 375 ? "2px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "3px" : undefined
                                                },
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-18",
                                                        style: {
                                                            gap: screenWidth < 375 ? "3.87px" : screenWidth >= 375 && screenWidth < 414 ? "4.46px" : screenWidth >= 414 && screenWidth < 500 ? "4.92px" : undefined,
                                                            padding: screenWidth < 375 ? "1.55px 0px" : screenWidth >= 375 && screenWidth < 414 ? "1.78px 0px" : screenWidth >= 414 && screenWidth < 500 ? "1.97px 0px" : undefined
                                                        },
                                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "text-wrapper-13",
                                                            style: {
                                                                fontSize: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "16.1px" : screenWidth >= 414 && screenWidth < 500 ? "17.7px" : undefined,
                                                                letterSpacing: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "0.08px" : screenWidth >= 414 && screenWidth < 500 ? "0.09px" : undefined
                                                            },
                                                            children: "Technical Expertise and Optimization"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6038,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 6017,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                        className: "text-wrapper-11",
                                                        children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 6062,
                                                        columnNumber: 19
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6005,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 5859,
                                        columnNumber: 15
                                    }, undefined),
                                    screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                className: "text-wrapper-14",
                                                children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6077,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                className: "text-wrapper-15",
                                                children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6087,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                className: "text-wrapper-16",
                                                children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6096,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-19",
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "text-wrapper-17",
                                                    children: "Liquidity provider"
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 6107,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6106,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-20",
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "text-wrapper-17",
                                                    children: "Comprehensive Financial Services"
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 6111,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6110,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-21",
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "text-wrapper-17",
                                                    children: "Technical Expertise and Optimization"
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 6117,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6116,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true),
                                    (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "group-13",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "478px" : screenWidth >= 992 && screenWidth < 1366 ? "635px" : screenWidth >= 1366 && screenWidth < 1920 ? "877px" : screenWidth >= 1920 ? "954px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "27px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "50px" : screenWidth >= 1920 ? "54px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "556px" : screenWidth >= 992 && screenWidth < 1366 ? "738px" : screenWidth >= 1366 && screenWidth < 1920 ? "1019px" : screenWidth >= 1920 ? "1109px" : undefined
                                                },
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "overlap-group-3",
                                                    style: {
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "478px" : screenWidth >= 992 && screenWidth < 1366 ? "635px" : screenWidth >= 1366 && screenWidth < 1920 ? "877px" : screenWidth >= 1920 ? "954px" : undefined
                                                    },
                                                    children: [
                                                        (screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite317.LogoToriiiWhite317), {
                                                            className: `${screenWidth >= 768 && screenWidth < 992 && "class-5"} ${screenWidth >= 992 && screenWidth < 1366 && "class-6"}`
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6181,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        screenWidth >= 1366 && screenWidth < 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite318.LogoToriiiWhite318), {
                                                            className: "logo-toriii-white-3-18"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6187,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite.LogoToriiiWhite), {
                                                            className: `${screenWidth >= 768 && screenWidth < 992 && "class-7"} ${screenWidth >= 992 && screenWidth < 1366 && "class-8"} ${screenWidth >= 1366 && screenWidth < 1920 && "class-9"}`,
                                                            logoToriiiWhite: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-6-13.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-6-14.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-6-15.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6193,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite319.LogoToriiiWhite319), {
                                                                    className: "logo-toriii-white-3-19"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6209,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite.LogoToriiiWhite), {
                                                                    className: "logo-toriii-white-6",
                                                                    logoToriiiWhite: "https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-6-16.svg"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 6210,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 6164,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6129,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "frame-22",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "281px" : screenWidth >= 992 && screenWidth < 1366 ? "373px" : screenWidth >= 1366 && screenWidth < 1920 ? "514px" : screenWidth >= 1920 ? "560px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 ? "520px" : screenWidth >= 992 && screenWidth < 1366 ? "691px" : screenWidth >= 1366 && screenWidth < 1920 ? "954px" : screenWidth >= 1920 ? "1038px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "128px" : screenWidth >= 992 && screenWidth < 1366 ? "170px" : screenWidth >= 1366 && screenWidth < 1920 ? "234px" : screenWidth >= 1920 ? "255px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "73px" : screenWidth >= 992 && screenWidth < 1366 ? "97px" : screenWidth >= 1366 && screenWidth < 1920 ? "134px" : screenWidth >= 1920 ? "146px" : undefined
                                                },
                                                alt: "Frame",
                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39921.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39921-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39921-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39921-3.svg" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6219,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "group-14",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "81px" : screenWidth >= 992 && screenWidth < 1366 ? "108px" : screenWidth >= 1366 && screenWidth < 1920 ? "149px" : screenWidth >= 1920 ? "162px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 ? "299px" : screenWidth >= 992 && screenWidth < 1366 ? "397px" : screenWidth >= 1366 && screenWidth < 1920 ? "548px" : screenWidth >= 1920 ? "596px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "131px" : screenWidth >= 992 && screenWidth < 1366 ? "174px" : screenWidth >= 1366 && screenWidth < 1920 ? "241px" : screenWidth >= 1920 ? "262px" : undefined
                                                },
                                                alt: "Group",
                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-5@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-7@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-9@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-39-11@2x.png" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6277,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true)
                                ]
                            }, void 0, true, {
                                fileName: "src/screens/Element/Element.jsx",
                                lineNumber: 5785,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "logo-list",
                                style: {
                                    alignItems: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "flex-start" : undefined,
                                    display: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "flex" : undefined,
                                    flexDirection: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "column" : undefined,
                                    gap: screenWidth < 375 ? "16px" : screenWidth >= 375 && screenWidth < 414 ? "18px" : screenWidth >= 414 && screenWidth < 500 ? "20px" : undefined,
                                    height: screenWidth >= 500 && screenWidth < 768 ? "440px" : screenWidth >= 768 && screenWidth < 992 ? "421px" : screenWidth >= 992 && screenWidth < 1366 ? "560px" : screenWidth >= 1366 && screenWidth < 1920 ? "773px" : screenWidth >= 1920 ? "841px" : undefined,
                                    left: screenWidth < 375 ? "291px" : screenWidth >= 375 && screenWidth < 414 ? "336px" : screenWidth >= 414 && screenWidth < 500 ? "370px" : screenWidth >= 500 && screenWidth < 768 ? "450px" : screenWidth >= 768 && screenWidth < 992 ? "446px" : screenWidth >= 992 && screenWidth < 1366 ? "593px" : screenWidth >= 1366 && screenWidth < 1920 ? "819px" : screenWidth >= 1920 ? "891px" : undefined,
                                    top: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "0" : screenWidth >= 414 && screenWidth < 500 ? "10px" : screenWidth >= 768 && screenWidth < 992 ? "55px" : screenWidth >= 992 && screenWidth < 1366 ? "73px" : screenWidth >= 1366 && screenWidth < 1920 ? "100px" : screenWidth >= 1920 ? "109px" : undefined,
                                    width: screenWidth < 375 ? "51px" : screenWidth >= 375 && screenWidth < 414 ? "59px" : screenWidth >= 414 && screenWidth < 500 ? "65px" : screenWidth >= 500 && screenWidth < 768 ? "79px" : screenWidth >= 768 && screenWidth < 992 ? "371px" : screenWidth >= 992 && screenWidth < 1366 ? "492px" : screenWidth >= 1366 && screenWidth < 1920 ? "680px" : screenWidth >= 1920 ? "740px" : undefined
                                },
                                children: [
                                    (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite34.LogoToriiiWhite34), {
                                        className: `${screenWidth >= 375 && screenWidth < 414 && "instance-node"} ${screenWidth >= 414 && screenWidth < 500 && "logo-toriii-white-2"} ${screenWidth >= 500 && screenWidth < 768 && "class-10"} ${screenWidth < 375 && "logo-toriii-white-3"}`
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 6427,
                                        columnNumber: 15
                                    }, undefined),
                                    screenWidth < 375 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite61.LogoToriiiWhite61), {
                                        className: "logo-toriii-white-3"
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 6433,
                                        columnNumber: 15
                                    }, undefined),
                                    screenWidth >= 375 && screenWidth < 414 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite65.LogoToriiiWhite65), {
                                        className: "instance-node"
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 6437,
                                        columnNumber: 15
                                    }, undefined),
                                    (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite34.LogoToriiiWhite34), {
                                        className: `${screenWidth >= 500 && screenWidth < 768 && "class-11"} ${screenWidth < 375 && "logo-toriii-white-3"} ${screenWidth >= 375 && screenWidth < 414 && "instance-node"}`
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 6443,
                                        columnNumber: 15
                                    }, undefined),
                                    screenWidth >= 375 && screenWidth < 414 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite65.LogoToriiiWhite65), {
                                                className: "instance-node"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6450,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite34.LogoToriiiWhite34), {
                                                className: "instance-node"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6451,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite65.LogoToriiiWhite65), {
                                                className: "instance-node"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6452,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite34.LogoToriiiWhite34), {
                                                className: "instance-node"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6453,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true),
                                    screenWidth >= 414 && screenWidth < 500 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite69.LogoToriiiWhite69), {
                                                className: "logo-toriii-white-2"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6459,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite34.LogoToriiiWhite34), {
                                                className: "logo-toriii-white-2"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6460,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite69.LogoToriiiWhite69), {
                                                className: "logo-toriii-white-2"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6461,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite34.LogoToriiiWhite34), {
                                                className: "logo-toriii-white-2"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6462,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite69.LogoToriiiWhite69), {
                                                className: "logo-toriii-white-2"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6463,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true),
                                    screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite315.LogoToriiiWhite315), {
                                                className: "logo-toriii-white-3-15"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6469,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite611.LogoToriiiWhite611), {
                                                className: "logo-toriii-white-6-11"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6470,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite611.LogoToriiiWhite611), {
                                                className: "logo-toriii-white-6-12"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6471,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true),
                                    (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-23",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "375px" : screenWidth >= 992 && screenWidth < 1366 ? "498px" : screenWidth >= 1366 && screenWidth < 1920 ? "687px" : screenWidth >= 1920 ? "748px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 ? "22px" : screenWidth >= 992 && screenWidth < 1366 ? "29px" : screenWidth >= 1366 && screenWidth < 1920 ? "40px" : screenWidth >= 1920 ? "44px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "22px" : screenWidth >= 992 && screenWidth < 1366 ? "29px" : screenWidth >= 1366 && screenWidth < 1920 ? "40px" : screenWidth >= 1920 ? "44px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "327px" : screenWidth >= 992 && screenWidth < 1366 ? "434px" : screenWidth >= 1366 && screenWidth < 1920 ? "599px" : screenWidth >= 1920 ? "652px" : undefined
                                                },
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                        className: "text-wrapper-18",
                                                        style: {
                                                            fontSize: screenWidth >= 768 && screenWidth < 992 ? "10px" : screenWidth >= 992 && screenWidth < 1366 ? "13.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "18.4px" : screenWidth >= 1920 ? "20px" : undefined,
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "75px" : screenWidth >= 992 && screenWidth < 1366 ? "100px" : screenWidth >= 1366 && screenWidth < 1920 ? "140px" : screenWidth >= 1920 ? "150px" : undefined,
                                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.05px" : screenWidth >= 992 && screenWidth < 1366 ? "0.07px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.09px" : screenWidth >= 1920 ? "0.10px" : undefined,
                                                            lineHeight: screenWidth >= 768 && screenWidth < 992 ? "15.0px" : screenWidth >= 992 && screenWidth < 1366 ? "20.0px" : screenWidth >= 1366 && screenWidth < 1920 ? "27.6px" : screenWidth >= 1920 ? "30px" : undefined,
                                                            top: screenWidth >= 768 && screenWidth < 992 ? "26px" : screenWidth >= 992 && screenWidth < 1366 ? "34px" : screenWidth >= 1366 && screenWidth < 1920 ? "47px" : screenWidth >= 1920 ? "51px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "326px" : screenWidth >= 992 && screenWidth < 1366 ? "433px" : screenWidth >= 1366 && screenWidth < 1920 ? "598px" : screenWidth >= 1920 ? "651px" : undefined
                                                        },
                                                        children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 6525,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                        className: "text-wrapper-19",
                                                        style: {
                                                            fontSize: screenWidth >= 768 && screenWidth < 992 ? "10px" : screenWidth >= 992 && screenWidth < 1366 ? "13.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "18.4px" : screenWidth >= 1920 ? "20px" : undefined,
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "75px" : screenWidth >= 992 && screenWidth < 1366 ? "100px" : screenWidth >= 1366 && screenWidth < 1920 ? "140px" : screenWidth >= 1920 ? "150px" : undefined,
                                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.05px" : screenWidth >= 992 && screenWidth < 1366 ? "0.07px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.09px" : screenWidth >= 1920 ? "0.10px" : undefined,
                                                            lineHeight: screenWidth >= 768 && screenWidth < 992 ? "15.0px" : screenWidth >= 992 && screenWidth < 1366 ? "20.0px" : screenWidth >= 1366 && screenWidth < 1920 ? "27.6px" : screenWidth >= 1920 ? "30px" : undefined,
                                                            top: screenWidth >= 768 && screenWidth < 992 ? "162px" : screenWidth >= 992 && screenWidth < 1366 ? "216px" : screenWidth >= 1366 && screenWidth < 1920 ? "298px" : screenWidth >= 1920 ? "324px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "326px" : screenWidth >= 992 && screenWidth < 1366 ? "433px" : screenWidth >= 1366 && screenWidth < 1920 ? "598px" : screenWidth >= 1920 ? "651px" : undefined
                                                        },
                                                        children: "We provide a wide array of financial services tailored to the cryptocurrency ecosystem. In the exchange space, we enhance liquidity while limiting volatility through high-frequency and quantitative trading strategies. Our asset management division employs a multi-strategy approach to deliver consistent and uncorrelated returns from the market."
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 6599,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                        className: "text-wrapper-20",
                                                        style: {
                                                            fontSize: screenWidth >= 768 && screenWidth < 992 ? "10px" : screenWidth >= 992 && screenWidth < 1366 ? "13.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "18.4px" : screenWidth >= 1920 ? "20px" : undefined,
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "75px" : screenWidth >= 992 && screenWidth < 1366 ? "100px" : screenWidth >= 1366 && screenWidth < 1920 ? "140px" : screenWidth >= 1920 ? "150px" : undefined,
                                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.05px" : screenWidth >= 992 && screenWidth < 1366 ? "0.07px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.09px" : screenWidth >= 1920 ? "0.10px" : undefined,
                                                            lineHeight: screenWidth >= 768 && screenWidth < 992 ? "15.0px" : screenWidth >= 992 && screenWidth < 1366 ? "20.0px" : screenWidth >= 1366 && screenWidth < 1920 ? "27.6px" : screenWidth >= 1920 ? "30px" : undefined,
                                                            top: screenWidth >= 768 && screenWidth < 992 ? "299px" : screenWidth >= 992 && screenWidth < 1366 ? "397px" : screenWidth >= 1366 && screenWidth < 1920 ? "548px" : screenWidth >= 1920 ? "597px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "326px" : screenWidth >= 992 && screenWidth < 1366 ? "433px" : screenWidth >= 1366 && screenWidth < 1920 ? "598px" : screenWidth >= 1920 ? "651px" : undefined
                                                        },
                                                        children: "Our technical prowess extends beyond trading to provide valuable support and optimization services. We specialize in enhancing trading systems, improving execution speed, and building stable, robust trading infrastructure. Combined with our trading acumen, positions us as a comprehensive solution provider in the quantitative trading and cryptocurrency market-making landscape."
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 6673,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-24",
                                                        style: {
                                                            gap: screenWidth >= 768 && screenWidth < 992 ? "5.01px" : screenWidth >= 992 && screenWidth < 1366 ? "6.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "9.19px" : screenWidth >= 1920 ? "10px" : undefined,
                                                            padding: screenWidth >= 768 && screenWidth < 992 ? "2px 0px" : screenWidth >= 992 && screenWidth < 1366 ? "2.66px 0px" : screenWidth >= 1366 && screenWidth < 1920 ? "3.67px 0px" : screenWidth >= 1920 ? "4px 0px" : undefined
                                                        },
                                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "text-wrapper-21",
                                                            style: {
                                                                fontSize: screenWidth >= 768 && screenWidth < 992 ? "18px" : screenWidth >= 992 && screenWidth < 1366 ? "24px" : screenWidth >= 1366 && screenWidth < 1920 ? "33.1px" : screenWidth >= 1920 ? "36px" : undefined,
                                                                letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.09px" : screenWidth >= 992 && screenWidth < 1366 ? "0.12px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.17px" : screenWidth >= 1920 ? "0.18px" : undefined
                                                            },
                                                            children: "Liquidity provider"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6772,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 6747,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-25",
                                                        style: {
                                                            gap: screenWidth >= 768 && screenWidth < 992 ? "5.01px" : screenWidth >= 992 && screenWidth < 1366 ? "6.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "9.19px" : screenWidth >= 1920 ? "10px" : undefined,
                                                            padding: screenWidth >= 768 && screenWidth < 992 ? "2px 0px" : screenWidth >= 992 && screenWidth < 1366 ? "2.66px 0px" : screenWidth >= 1366 && screenWidth < 1920 ? "3.67px 0px" : screenWidth >= 1920 ? "4px 0px" : undefined,
                                                            top: screenWidth >= 768 && screenWidth < 992 ? "140px" : screenWidth >= 992 && screenWidth < 1366 ? "186px" : screenWidth >= 1366 && screenWidth < 1920 ? "256px" : screenWidth >= 1920 ? "279px" : undefined
                                                        },
                                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "text-wrapper-22",
                                                            style: {
                                                                fontSize: screenWidth >= 768 && screenWidth < 992 ? "18px" : screenWidth >= 992 && screenWidth < 1366 ? "24px" : screenWidth >= 1366 && screenWidth < 1920 ? "33.1px" : screenWidth >= 1920 ? "36px" : undefined,
                                                                letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.09px" : screenWidth >= 992 && screenWidth < 1366 ? "0.12px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.17px" : screenWidth >= 1920 ? "0.18px" : undefined
                                                            },
                                                            children: "Comprehensive Financial Services"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6836,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 6801,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "frame-26",
                                                        style: {
                                                            gap: screenWidth >= 768 && screenWidth < 992 ? "5.01px" : screenWidth >= 992 && screenWidth < 1366 ? "6.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "9.19px" : screenWidth >= 1920 ? "10px" : undefined,
                                                            padding: screenWidth >= 768 && screenWidth < 992 ? "2px 0px" : screenWidth >= 992 && screenWidth < 1366 ? "2.66px 0px" : screenWidth >= 1366 && screenWidth < 1920 ? "3.67px 0px" : screenWidth >= 1920 ? "4px 0px" : undefined,
                                                            top: screenWidth >= 768 && screenWidth < 992 ? "275px" : screenWidth >= 992 && screenWidth < 1366 ? "365px" : screenWidth >= 1366 && screenWidth < 1920 ? "503px" : screenWidth >= 1920 ? "548px" : undefined
                                                        },
                                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "text-wrapper-23",
                                                            style: {
                                                                fontSize: screenWidth >= 768 && screenWidth < 992 ? "18px" : screenWidth >= 992 && screenWidth < 1366 ? "24px" : screenWidth >= 1366 && screenWidth < 1920 ? "33.1px" : screenWidth >= 1920 ? "36px" : undefined,
                                                                letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.09px" : screenWidth >= 992 && screenWidth < 1366 ? "0.12px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.17px" : screenWidth >= 1920 ? "0.18px" : undefined
                                                            },
                                                            children: "Technical Expertise and Optimization"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 6900,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 6865,
                                                        columnNumber: 19
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6480,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "group-15",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "421px" : screenWidth >= 992 && screenWidth < 1366 ? "560px" : screenWidth >= 1366 && screenWidth < 1920 ? "773px" : screenWidth >= 1920 ? "841px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "371px" : screenWidth >= 992 && screenWidth < 1366 ? "492px" : screenWidth >= 1366 && screenWidth < 1920 ? "680px" : screenWidth >= 1920 ? "740px" : undefined
                                                },
                                                alt: "Group",
                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/group-63@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/group-63-1.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-63-2.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-63-3.png" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6930,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true),
                                    screenWidth < 375 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite61.LogoToriiiWhite61), {
                                                className: "logo-toriii-white-3"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6972,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite34.LogoToriiiWhite34), {
                                                className: "logo-toriii-white-3"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6973,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite61.LogoToriiiWhite61), {
                                                className: "logo-toriii-white-3"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6974,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite34.LogoToriiiWhite34), {
                                                className: "logo-toriii-white-3"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6975,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite61.LogoToriiiWhite61), {
                                                className: "logo-toriii-white-3"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6976,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoToriiiWhite34.LogoToriiiWhite34), {
                                                className: "logo-toriii-white-3"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 6977,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true)
                                ]
                            }, void 0, true, {
                                fileName: "src/screens/Element/Element.jsx",
                                lineNumber: 6328,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/screens/Element/Element.jsx",
                        lineNumber: 5723,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        id: "liquidity-section",
                        className: "page-liquidity",
                        style: {
                            height: screenWidth < 375 ? "495.65px" : screenWidth >= 375 && screenWidth < 414 ? "571.76px" : screenWidth >= 414 && screenWidth < 500 ? "630.55px" : screenWidth >= 500 && screenWidth < 768 ? "767px" : screenWidth >= 768 && screenWidth < 992 ? "378.79px" : screenWidth >= 992 && screenWidth < 1366 ? "503.08px" : screenWidth >= 1366 && screenWidth < 1920 ? "694.57px" : screenWidth >= 1920 ? "756px" : undefined,
                            marginLeft: screenWidth < 375 ? "-1.55px" : screenWidth >= 768 && screenWidth < 992 ? "-97.00px" : screenWidth >= 992 && screenWidth < 1366 ? "-142.83px" : screenWidth >= 1366 && screenWidth < 1920 ? "-199.00px" : undefined,
                            marginRight: screenWidth < 375 ? "-1.55px" : screenWidth >= 768 && screenWidth < 992 ? "-97.00px" : screenWidth >= 992 && screenWidth < 1366 ? "-142.83px" : screenWidth >= 1366 && screenWidth < 1920 ? "-199.00px" : undefined,
                            width: screenWidth < 375 ? "323.11px" : screenWidth >= 375 && screenWidth < 414 ? "372.72px" : screenWidth >= 414 && screenWidth < 500 ? "411.05px" : screenWidth >= 500 && screenWidth < 768 ? "500px" : screenWidth >= 768 && screenWidth < 992 ? "962px" : screenWidth >= 992 && screenWidth < 1366 ? "1277.66px" : screenWidth >= 1366 && screenWidth < 1920 ? "1764px" : screenWidth >= 1920 ? "1920px" : undefined
                        },
                        children: [
                            (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "overlap-7",
                                style: {
                                    height: screenWidth >= 768 && screenWidth < 992 ? "215px" : screenWidth >= 992 && screenWidth < 1366 ? "285px" : screenWidth >= 1366 && screenWidth < 1920 ? "394px" : screenWidth >= 1920 ? "429px" : undefined,
                                    left: screenWidth >= 768 && screenWidth < 992 ? "476px" : screenWidth >= 992 && screenWidth < 1366 ? "633px" : screenWidth >= 1366 && screenWidth < 1920 ? "874px" : screenWidth >= 1920 ? "951px" : undefined,
                                    top: screenWidth >= 768 && screenWidth < 992 ? "76px" : screenWidth >= 992 && screenWidth < 1366 ? "100px" : screenWidth >= 1366 && screenWidth < 1920 ? "139px" : screenWidth >= 1920 ? "151px" : undefined,
                                    width: screenWidth >= 768 && screenWidth < 992 ? "315px" : screenWidth >= 992 && screenWidth < 1366 ? "419px" : screenWidth >= 1366 && screenWidth < 1920 ? "578px" : screenWidth >= 1920 ? "629px" : undefined
                                },
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "frame-27",
                                        style: {
                                            gap: screenWidth >= 768 && screenWidth < 992 ? "72px 27.57px" : screenWidth >= 992 && screenWidth < 1366 ? "72px 36.61px" : screenWidth >= 1366 && screenWidth < 1920 ? "72px 50.55px" : screenWidth >= 1920 ? "72px 55.02px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "6px" : screenWidth >= 992 && screenWidth < 1366 ? "8px" : screenWidth >= 1366 && screenWidth < 1920 ? "11px" : screenWidth >= 1920 ? "12px" : undefined,
                                            padding: screenWidth >= 768 && screenWidth < 992 ? "27.06px 9.52px" : screenWidth >= 992 && screenWidth < 1366 ? "35.93px 12.64px" : screenWidth >= 1366 && screenWidth < 1920 ? "49.61px 17.46px" : screenWidth >= 1920 ? "54px 19px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "10px" : screenWidth >= 992 && screenWidth < 1366 ? "13px" : screenWidth >= 1366 && screenWidth < 1920 ? "18px" : screenWidth >= 1920 ? "20px" : undefined
                                        },
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "frame-28",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "142px" : screenWidth >= 992 && screenWidth < 1366 ? "188.6px" : screenWidth >= 1366 && screenWidth < 1920 ? "260.38px" : screenWidth >= 1920 ? "283.41px" : undefined,
                                                width: screenWidth >= 768 && screenWidth < 992 ? "280.11px" : screenWidth >= 992 && screenWidth < 1366 ? "372.02px" : screenWidth >= 1366 && screenWidth < 1920 ? "513.64px" : screenWidth >= 1920 ? "559.06px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-29",
                                                    style: {
                                                        gap: screenWidth >= 768 && screenWidth < 992 ? "27.57px" : screenWidth >= 992 && screenWidth < 1366 ? "36.61px" : screenWidth >= 1366 && screenWidth < 1920 ? "50.55px" : screenWidth >= 1920 ? "55.02px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 ? "17px" : screenWidth >= 992 && screenWidth < 1366 ? "23px" : screenWidth >= 1366 && screenWidth < 1920 ? "32px" : screenWidth >= 1920 ? "34px" : undefined
                                                    },
                                                    children: [
                                                        screenWidth >= 768 && screenWidth < 992 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite2.LogoBinanceWhite2), {
                                                                    className: "logo-binance-white"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 7191,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite5.LogoGateioWhite5), {
                                                                    className: "logo-gateio-white"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 7192,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true),
                                                        screenWidth >= 992 && screenWidth < 1366 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite4.LogoBinanceWhite4), {
                                                                    className: "logo-binance-white-4"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 7198,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite6.LogoGateioWhite6), {
                                                                    className: "logo-gateio-white-6"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 7199,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true),
                                                        screenWidth >= 1366 && screenWidth < 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite7.LogoBinanceWhite7), {
                                                                    className: "logo-binance-white-7"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 7205,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite7.LogoGateioWhite7), {
                                                                    className: "logo-gateio-white-7"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 7206,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true),
                                                        screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite8.LogoBinanceWhite8), {
                                                                    className: "logo-binance-white-8"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 7212,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite8.LogoGateioWhite8), {
                                                                    className: "logo-gateio-white-8"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 7213,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 7164,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-30",
                                                    style: {
                                                        gap: screenWidth >= 768 && screenWidth < 992 ? "27.57px" : screenWidth >= 992 && screenWidth < 1366 ? "36.61px" : screenWidth >= 1366 && screenWidth < 1920 ? "50.55px" : screenWidth >= 1920 ? "55.02px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 ? "28px" : screenWidth >= 992 && screenWidth < 1366 ? "37px" : screenWidth >= 1366 && screenWidth < 1920 ? "51px" : screenWidth >= 1920 ? "55px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "59px" : screenWidth >= 992 && screenWidth < 1366 ? "79px" : screenWidth >= 1366 && screenWidth < 1920 ? "109px" : screenWidth >= 1920 ? "118px" : undefined
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "logo-max-white",
                                                            style: {
                                                                height: screenWidth >= 992 && screenWidth < 1366 ? "30.92px" : screenWidth >= 1366 && screenWidth < 1920 ? "42.69px" : screenWidth >= 1920 ? "46.47px" : screenWidth >= 768 && screenWidth < 992 ? "23.28px" : undefined,
                                                                width: screenWidth >= 992 && screenWidth < 1366 ? "144.71px" : screenWidth >= 1366 && screenWidth < 1920 ? "199.79px" : screenWidth >= 1920 ? "217.46px" : screenWidth >= 768 && screenWidth < 992 ? "108.96px" : undefined
                                                            },
                                                            alt: "Logo max white",
                                                            src: screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/logo-max-white-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/logo-max-white-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/logo-max-white-7.svg" : screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/logo-max-white-4.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7253,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        screenWidth >= 768 && screenWidth < 992 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite5.LogoBitmexWhite5), {
                                                            className: "logo-bitmex-white"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7292,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        screenWidth >= 992 && screenWidth < 1366 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite6.LogoBitmexWhite6), {
                                                            className: "logo-bitmex-white-6"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7296,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        screenWidth >= 1366 && screenWidth < 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite7.LogoBitmexWhite7), {
                                                            className: "logo-bitmex-white-7"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7300,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite8.LogoBitmexWhite8), {
                                                            className: "logo-bitmex-white-8"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7304,
                                                            columnNumber: 23
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 7218,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-31",
                                                    style: {
                                                        gap: screenWidth >= 768 && screenWidth < 992 ? "17.54px" : screenWidth >= 992 && screenWidth < 1366 ? "23.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "32.16px" : screenWidth >= 1920 ? "35px" : undefined,
                                                        left: screenWidth >= 768 && screenWidth < 992 ? "5px" : screenWidth >= 992 && screenWidth < 1366 ? "6px" : screenWidth >= 1366 && screenWidth < 1920 ? "8px" : screenWidth >= 1920 ? "9px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "119px" : screenWidth >= 992 && screenWidth < 1366 ? "158px" : screenWidth >= 1366 && screenWidth < 1920 ? "218px" : screenWidth >= 1920 ? "237px" : undefined
                                                    },
                                                    children: [
                                                        screenWidth >= 768 && screenWidth < 992 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite5.LogoAceWhite5), {
                                                            className: "logo-ace-white"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7344,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        screenWidth >= 992 && screenWidth < 1366 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite4.LogoAceWhite4), {
                                                            className: "logo-ace-white-4"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7348,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        (screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoWooxWhite2.LogoWooxWhite2), {
                                                            className: `${screenWidth >= 768 && screenWidth < 992 && "class-12"} ${screenWidth >= 992 && screenWidth < 1366 && "class-13"}`
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7353,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        screenWidth >= 992 && screenWidth < 1366 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite6.LogoBitoproWhite6), {
                                                            className: "logo-bitopro-white"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7359,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        screenWidth >= 1366 && screenWidth < 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite7.LogoAceWhite7), {
                                                            className: "logo-ace-white-7"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7363,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite8.LogoAceWhite8), {
                                                            className: "logo-ace-white-8"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7367,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoWooxWhite3.LogoWooxWhite3), {
                                                            className: `${screenWidth >= 1920 && "class-14"} ${screenWidth >= 1366 && screenWidth < 1920 && "class-15"}`
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7372,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        screenWidth >= 1920 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite8.LogoBitoproWhite8), {
                                                            className: "logo-bitopro-white-8"
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7378,
                                                            columnNumber: 23
                                                        }, undefined),
                                                        (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 768 && screenWidth < 992) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite7.LogoBitoproWhite7), {
                                                            className: `${screenWidth >= 768 && screenWidth < 992 && "class-16"} ${screenWidth >= 1366 && screenWidth < 1920 && "class-17"}`
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7383,
                                                            columnNumber: 23
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 7308,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 7139,
                                            columnNumber: 17
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 7094,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "group-16",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "215px" : screenWidth >= 992 && screenWidth < 1366 ? "285px" : screenWidth >= 1366 && screenWidth < 1920 ? "394px" : screenWidth >= 1920 ? "429px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "315px" : screenWidth >= 992 && screenWidth < 1366 ? "419px" : screenWidth >= 1366 && screenWidth < 1920 ? "578px" : screenWidth >= 1920 ? "629px" : undefined
                                        },
                                        alt: "Group",
                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/group-51-4@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/group-51-5@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-51-6.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-51-7.png" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 7391,
                                        columnNumber: 15
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/screens/Element/Element.jsx",
                                lineNumber: 7049,
                                columnNumber: 13
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                className: "frame-32",
                                style: {
                                    height: screenWidth >= 768 && screenWidth < 992 ? "53px" : screenWidth >= 992 && screenWidth < 1366 ? "70px" : screenWidth >= 1366 && screenWidth < 1920 ? "97px" : screenWidth >= 1920 ? "106px" : screenWidth < 375 ? "118px" : screenWidth >= 375 && screenWidth < 414 ? "136px" : screenWidth >= 414 && screenWidth < 500 ? "150px" : screenWidth >= 500 && screenWidth < 768 ? "171px" : undefined,
                                    left: screenWidth >= 768 && screenWidth < 992 ? "159px" : screenWidth >= 992 && screenWidth < 1366 ? "212px" : screenWidth >= 1366 && screenWidth < 1920 ? "292px" : screenWidth >= 1920 ? "318px" : screenWidth < 375 ? "237px" : screenWidth >= 375 && screenWidth < 414 ? "272px" : screenWidth >= 414 && screenWidth < 500 ? "303px" : screenWidth >= 500 && screenWidth < 768 ? "369px" : undefined,
                                    top: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "1px" : screenWidth < 375 ? "47px" : screenWidth >= 375 && screenWidth < 414 ? "54px" : screenWidth >= 414 && screenWidth < 500 ? "55px" : screenWidth >= 500 && screenWidth < 768 ? "82px" : undefined,
                                    width: screenWidth >= 768 && screenWidth < 992 ? "142px" : screenWidth >= 992 && screenWidth < 1366 ? "188px" : screenWidth >= 1366 && screenWidth < 1920 ? "260px" : screenWidth >= 1920 ? "283px" : screenWidth < 375 ? "44px" : screenWidth >= 375 && screenWidth < 414 ? "51px" : screenWidth >= 414 && screenWidth < 500 ? "56px" : screenWidth >= 500 && screenWidth < 768 ? "64px" : undefined
                                },
                                alt: "Frame",
                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39912-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39912-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39912-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39912-7.svg" : screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39912.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39912-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39912-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39912-3.svg" : undefined
                            }, void 0, false, {
                                fileName: "src/screens/Element/Element.jsx",
                                lineNumber: 7431,
                                columnNumber: 11
                            }, undefined),
                            (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "frame-33",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "53px" : screenWidth >= 992 && screenWidth < 1366 ? "71px" : screenWidth >= 1366 && screenWidth < 1920 ? "98px" : screenWidth >= 1920 ? "106px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "319px" : screenWidth >= 992 && screenWidth < 1366 ? "423px" : screenWidth >= 1366 && screenWidth < 1920 ? "584px" : screenWidth >= 1920 ? "636px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "474px" : screenWidth >= 992 && screenWidth < 1366 ? "629px" : screenWidth >= 1366 && screenWidth < 1920 ? "868px" : screenWidth >= 1920 ? "945px" : undefined
                                        },
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "overlap-group-4",
                                            style: {
                                                height: screenWidth >= 768 && screenWidth < 992 ? "53px" : screenWidth >= 992 && screenWidth < 1366 ? "71px" : screenWidth >= 1366 && screenWidth < 1920 ? "98px" : screenWidth >= 1920 ? "106px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "group-17",
                                                    style: {
                                                        backgroundImage: screenWidth >= 768 && screenWidth < 992 ? "url(https://c.animaapp.com/N6qZcdUt/img/vector-14-4.svg)" : screenWidth >= 992 && screenWidth < 1366 ? "url(https://c.animaapp.com/N6qZcdUt/img/vector-14-5.svg)" : screenWidth >= 1366 && screenWidth < 1920 ? "url(https://c.animaapp.com/N6qZcdUt/img/vector-14-6.svg)" : screenWidth >= 1920 ? "url(https://c.animaapp.com/N6qZcdUt/img/vector-14-7.svg)" : undefined,
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "53px" : screenWidth >= 992 && screenWidth < 1366 ? "70px" : screenWidth >= 1366 && screenWidth < 1920 ? "97px" : screenWidth >= 1920 ? "106px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "474px" : screenWidth >= 992 && screenWidth < 1366 ? "629px" : screenWidth >= 1366 && screenWidth < 1920 ? "868px" : screenWidth >= 1920 ? "945px" : undefined
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "RL",
                                                            style: {
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "6px" : screenWidth >= 992 && screenWidth < 1366 ? "8px" : screenWidth >= 1366 && screenWidth < 1920 ? "11px" : screenWidth >= 1920 ? "12px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "9px" : screenWidth >= 992 && screenWidth < 1366 ? "12px" : screenWidth >= 1366 && screenWidth < 1920 ? "17px" : screenWidth >= 1920 ? "18px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "5px" : screenWidth >= 992 && screenWidth < 1366 ? "6px" : screenWidth >= 1366 && screenWidth < 1920 ? "8px" : screenWidth >= 1920 ? "9px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 ? "11px" : screenWidth >= 992 && screenWidth < 1366 ? "15px" : screenWidth >= 1366 && screenWidth < 1920 ? "20px" : screenWidth >= 1920 ? "22px" : undefined
                                                            },
                                                            alt: "Rl",
                                                            src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/rl-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/rl-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/rl-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/rl-7.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7616,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-36",
                                                            style: {
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0.88px/0.97px" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px/1.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "1.61px/1.78px" : screenWidth >= 1920 ? "1.75px/1.94px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "467px" : screenWidth >= 992 && screenWidth < 1366 ? "620px" : screenWidth >= 1366 && screenWidth < 1920 ? "856px" : screenWidth >= 1920 ? "932px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "39px" : screenWidth >= 992 && screenWidth < 1366 ? "52px" : screenWidth >= 1366 && screenWidth < 1920 ? "71px" : screenWidth >= 1920 ? "78px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7674,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-37",
                                                            style: {
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0.88px/0.97px" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px/1.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "1.61px/1.78px" : screenWidth >= 1920 ? "1.75px/1.94px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "463px" : screenWidth >= 992 && screenWidth < 1366 ? "614px" : screenWidth >= 1366 && screenWidth < 1920 ? "848px" : screenWidth >= 1920 ? "923px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "44px" : screenWidth >= 992 && screenWidth < 1366 ? "58px" : screenWidth >= 1366 && screenWidth < 1920 ? "80px" : screenWidth >= 1920 ? "87px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7728,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-38",
                                                            style: {
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0.88px/0.97px" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px/1.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "1.61px/1.78px" : screenWidth >= 1920 ? "1.75px/1.94px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "457px" : screenWidth >= 992 && screenWidth < 1366 ? "607px" : screenWidth >= 1366 && screenWidth < 1920 ? "839px" : screenWidth >= 1920 ? "913px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "44px" : screenWidth >= 992 && screenWidth < 1366 ? "58px" : screenWidth >= 1366 && screenWidth < 1920 ? "80px" : screenWidth >= 1920 ? "87px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7782,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-39",
                                                            style: {
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0.88px/0.97px" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px/1.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "1.61px/1.78px" : screenWidth >= 1920 ? "1.75px/1.94px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "466px" : screenWidth >= 992 && screenWidth < 1366 ? "619px" : screenWidth >= 1366 && screenWidth < 1920 ? "855px" : screenWidth >= 1920 ? "930px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "34px" : screenWidth >= 992 && screenWidth < 1366 ? "45px" : screenWidth >= 1366 && screenWidth < 1920 ? "62px" : screenWidth >= 1920 ? "68px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7836,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-40",
                                                            style: {
                                                                borderRadius: screenWidth >= 768 && screenWidth < 992 ? "0.88px/0.97px" : screenWidth >= 992 && screenWidth < 1366 ? "1.17px/1.29px" : screenWidth >= 1366 && screenWidth < 1920 ? "1.61px/1.78px" : screenWidth >= 1920 ? "1.75px/1.94px" : undefined,
                                                                height: screenWidth >= 768 && screenWidth < 992 ? "2px" : screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "4px" : undefined,
                                                                left: screenWidth >= 768 && screenWidth < 992 ? "462px" : screenWidth >= 992 && screenWidth < 1366 ? "613px" : screenWidth >= 1366 && screenWidth < 1920 ? "847px" : screenWidth >= 1920 ? "922px" : undefined,
                                                                top: screenWidth >= 768 && screenWidth < 992 ? "39px" : screenWidth >= 992 && screenWidth < 1366 ? "52px" : screenWidth >= 1366 && screenWidth < 1920 ? "71px" : screenWidth >= 1920 ? "78px" : undefined,
                                                                width: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 ? "3px" : screenWidth >= 1920 ? "4px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 7890,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 7581,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "vector-5",
                                                    style: {
                                                        height: screenWidth >= 768 && screenWidth < 992 ? "30px" : screenWidth >= 992 && screenWidth < 1366 ? "40px" : screenWidth >= 1366 && screenWidth < 1920 ? "55px" : screenWidth >= 1920 ? "60px" : undefined,
                                                        top: screenWidth >= 768 && screenWidth < 992 ? "23px" : screenWidth >= 992 && screenWidth < 1366 ? "31px" : screenWidth >= 1366 && screenWidth < 1920 ? "42px" : screenWidth >= 1920 ? "46px" : undefined,
                                                        width: screenWidth >= 768 && screenWidth < 992 ? "231px" : screenWidth >= 992 && screenWidth < 1366 ? "307px" : screenWidth >= 1366 && screenWidth < 1920 ? "423px" : screenWidth >= 1920 ? "461px" : undefined
                                                    },
                                                    alt: "Vector",
                                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/vector-18@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/vector-21@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/vector-24@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/vector-27@2x.png" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 7945,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 7566,
                                            columnNumber: 17
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 7531,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "frame-34",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "66px" : screenWidth >= 992 && screenWidth < 1366 ? "88px" : screenWidth >= 1366 && screenWidth < 1920 ? "121px" : screenWidth >= 1920 ? "132px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "500px" : screenWidth >= 992 && screenWidth < 1366 ? "663px" : screenWidth >= 1366 && screenWidth < 1920 ? "916px" : screenWidth >= 1920 ? "997px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "311px" : screenWidth >= 992 && screenWidth < 1366 ? "413px" : screenWidth >= 1366 && screenWidth < 1920 ? "570px" : screenWidth >= 1920 ? "620px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "302px" : screenWidth >= 992 && screenWidth < 1366 ? "401px" : screenWidth >= 1366 && screenWidth < 1920 ? "554px" : screenWidth >= 1920 ? "603px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-35",
                                                style: {
                                                    gap: screenWidth >= 768 && screenWidth < 992 ? "6.7px" : screenWidth >= 992 && screenWidth < 1366 ? "8.89px" : screenWidth >= 1366 && screenWidth < 1920 ? "12.28px" : screenWidth >= 1920 ? "13.36px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "23px" : screenWidth >= 992 && screenWidth < 1366 ? "31px" : screenWidth >= 1366 && screenWidth < 1920 ? "43px" : screenWidth >= 1920 ? "47px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 ? "99px" : screenWidth >= 992 && screenWidth < 1366 ? "131px" : screenWidth >= 1366 && screenWidth < 1920 ? "181px" : screenWidth >= 1920 ? "197px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "41px" : screenWidth >= 992 && screenWidth < 1366 ? "54px" : screenWidth >= 1366 && screenWidth < 1920 ? "75px" : screenWidth >= 1920 ? "82px" : undefined
                                                },
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "text-wrapper-24",
                                                    style: {
                                                        fontSize: screenWidth >= 768 && screenWidth < 992 ? "26.8px" : screenWidth >= 992 && screenWidth < 1366 ? "35.6px" : screenWidth >= 1366 && screenWidth < 1920 ? "49.1px" : screenWidth >= 1920 ? "53.5px" : undefined,
                                                        marginBottom: screenWidth >= 768 && screenWidth < 992 ? "-1.11px" : screenWidth >= 992 && screenWidth < 1366 ? "-1.55px" : screenWidth >= 1366 && screenWidth < 1920 ? "-1.79px" : screenWidth >= 1920 ? "-1.78px" : undefined,
                                                        marginTop: screenWidth >= 768 && screenWidth < 992 ? "-2.45px" : screenWidth >= 992 && screenWidth < 1366 ? "-3.33px" : screenWidth >= 1366 && screenWidth < 1920 ? "-4.24px" : screenWidth >= 1920 ? "-4.45px" : undefined
                                                    },
                                                    children: "TORIII TECHNOLOGY CORP."
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 8085,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 8040,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                className: "text-wrapper-25",
                                                style: {
                                                    fontSize: screenWidth >= 768 && screenWidth < 992 ? "4.8px" : screenWidth >= 992 && screenWidth < 1366 ? "6.3px" : screenWidth >= 1366 && screenWidth < 1920 ? "8.7px" : screenWidth >= 1920 ? "9.5px" : undefined,
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "28px" : screenWidth >= 992 && screenWidth < 1366 ? "36px" : screenWidth >= 1366 && screenWidth < 1920 ? "52px" : screenWidth >= 1920 ? "56px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 ? "99px" : screenWidth >= 992 && screenWidth < 1366 ? "131px" : screenWidth >= 1366 && screenWidth < 1920 ? "181px" : screenWidth >= 1920 ? "197px" : undefined,
                                                    letterSpacing: screenWidth >= 768 && screenWidth < 992 ? "0.02px" : screenWidth >= 992 && screenWidth < 1366 ? "0.03px" : screenWidth >= 1366 && screenWidth < 1920 ? "0.04px" : screenWidth >= 1920 ? "0.05px" : undefined,
                                                    lineHeight: screenWidth >= 768 && screenWidth < 992 ? "7.1px" : screenWidth >= 992 && screenWidth < 1366 ? "9.5px" : screenWidth >= 1366 && screenWidth < 1920 ? "13.1px" : screenWidth >= 1920 ? "14.2px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "204px" : screenWidth >= 992 && screenWidth < 1366 ? "270px" : screenWidth >= 1366 && screenWidth < 1920 ? "373px" : screenWidth >= 1920 ? "406px" : undefined
                                                },
                                                children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 8124,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "path",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "64px" : screenWidth >= 992 && screenWidth < 1366 ? "85px" : screenWidth >= 1366 && screenWidth < 1920 ? "117px" : screenWidth >= 1920 ? "127px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "3px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "5px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "68px" : screenWidth >= 992 && screenWidth < 1366 ? "90px" : screenWidth >= 1366 && screenWidth < 1920 ? "124px" : screenWidth >= 1920 ? "135px" : undefined
                                                },
                                                alt: "Path",
                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/path7214-4.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/path7214-5.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/path7214-6.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/path7214-7.svg" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 8198,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 7995,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "frame-36",
                                        style: {
                                            height: screenWidth >= 768 && screenWidth < 992 ? "293px" : screenWidth >= 992 && screenWidth < 1366 ? "389px" : screenWidth >= 1366 && screenWidth < 1920 ? "537px" : screenWidth >= 1920 ? "585px" : undefined,
                                            left: screenWidth >= 768 && screenWidth < 992 ? "160px" : screenWidth >= 992 && screenWidth < 1366 ? "213px" : screenWidth >= 1366 && screenWidth < 1920 ? "294px" : screenWidth >= 1920 ? "320px" : undefined,
                                            top: screenWidth >= 768 && screenWidth < 992 ? "86px" : screenWidth >= 992 && screenWidth < 1366 ? "114px" : screenWidth >= 1366 && screenWidth < 1920 ? "157px" : screenWidth >= 1920 ? "171px" : undefined,
                                            width: screenWidth >= 768 && screenWidth < 992 ? "297px" : screenWidth >= 992 && screenWidth < 1366 ? "394px" : screenWidth >= 1366 && screenWidth < 1920 ? "544px" : screenWidth >= 1920 ? "592px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "liquidity-providing",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "84px" : screenWidth >= 992 && screenWidth < 1366 ? "112px" : screenWidth >= 1366 && screenWidth < 1920 ? "154px" : screenWidth >= 1920 ? "168px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "3px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "35px" : screenWidth >= 992 && screenWidth < 1366 ? "47px" : screenWidth >= 1366 && screenWidth < 1920 ? "65px" : screenWidth >= 1920 ? "70px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "274px" : screenWidth >= 992 && screenWidth < 1366 ? "364px" : screenWidth >= 1366 && screenWidth < 1920 ? "503px" : screenWidth >= 1920 ? "547px" : undefined
                                                },
                                                alt: "Liquidity providing",
                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity-providing.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity-providing-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity-providing-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/liquidity-providing-3.svg" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 8290,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "overlap-8",
                                                style: {
                                                    height: screenWidth >= 768 && screenWidth < 992 ? "152px" : screenWidth >= 992 && screenWidth < 1366 ? "202px" : screenWidth >= 1366 && screenWidth < 1920 ? "279px" : screenWidth >= 1920 ? "304px" : undefined,
                                                    top: screenWidth >= 768 && screenWidth < 992 ? "141px" : screenWidth >= 992 && screenWidth < 1366 ? "187px" : screenWidth >= 1366 && screenWidth < 1920 ? "258px" : screenWidth >= 1920 ? "281px" : undefined,
                                                    width: screenWidth >= 768 && screenWidth < 992 ? "297px" : screenWidth >= 992 && screenWidth < 1366 ? "394px" : screenWidth >= 1366 && screenWidth < 1920 ? "544px" : screenWidth >= 1920 ? "592px" : undefined
                                                },
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "overlap-9",
                                                        style: {
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "152px" : screenWidth >= 992 && screenWidth < 1366 ? "202px" : screenWidth >= 1366 && screenWidth < 1920 ? "279px" : screenWidth >= 1920 ? "304px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "297px" : screenWidth >= 992 && screenWidth < 1366 ? "394px" : screenWidth >= 1366 && screenWidth < 1920 ? "544px" : screenWidth >= 1920 ? "592px" : undefined
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "vector-6",
                                                                style: {
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "55px" : screenWidth >= 992 && screenWidth < 1366 ? "73px" : screenWidth >= 1366 && screenWidth < 1920 ? "100px" : screenWidth >= 1920 ? "109px" : undefined,
                                                                    top: screenWidth >= 768 && screenWidth < 992 ? "84px" : screenWidth >= 992 && screenWidth < 1366 ? "111px" : screenWidth >= 1366 && screenWidth < 1920 ? "153px" : screenWidth >= 1920 ? "167px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 ? "287px" : screenWidth >= 992 && screenWidth < 1366 ? "382px" : screenWidth >= 1366 && screenWidth < 1920 ? "527px" : screenWidth >= 1920 ? "574px" : undefined
                                                                },
                                                                alt: "Vector",
                                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/vector-13-1.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/vector-13-2.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/vector-13-3.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/vector-13-4.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 8406,
                                                                columnNumber: 21
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "group-18",
                                                                style: {
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "127px" : screenWidth >= 992 && screenWidth < 1366 ? "168px" : screenWidth >= 1366 && screenWidth < 1920 ? "232px" : screenWidth >= 1920 ? "253px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 ? "48px" : screenWidth >= 992 && screenWidth < 1366 ? "64px" : screenWidth >= 1366 && screenWidth < 1920 ? "88px" : screenWidth >= 1920 ? "96px" : undefined
                                                                },
                                                                alt: "Group",
                                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/group-57@2x.png" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/group-57-1@2x.png" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-57-2@2x.png" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/group-57-3@2x.png" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 8454,
                                                                columnNumber: 21
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "vector-7",
                                                                style: {
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "53px" : screenWidth >= 992 && screenWidth < 1366 ? "71px" : screenWidth >= 1366 && screenWidth < 1920 ? "97px" : screenWidth >= 1920 ? "106px" : undefined,
                                                                    left: screenWidth >= 768 && screenWidth < 992 ? "84px" : screenWidth >= 992 && screenWidth < 1366 ? "112px" : screenWidth >= 1366 && screenWidth < 1920 ? "154px" : screenWidth >= 1920 ? "168px" : undefined,
                                                                    top: screenWidth >= 768 && screenWidth < 992 ? "99px" : screenWidth >= 992 && screenWidth < 1366 ? "132px" : screenWidth >= 1366 && screenWidth < 1920 ? "182px" : screenWidth >= 1920 ? "198px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 ? "212px" : screenWidth >= 992 && screenWidth < 1366 ? "282px" : screenWidth >= 1366 && screenWidth < 1920 ? "390px" : screenWidth >= 1920 ? "424px" : undefined
                                                                },
                                                                alt: "Vector",
                                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/vector-19.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/vector-22.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/vector-25.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/vector-28.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 8492,
                                                                columnNumber: 21
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                className: "vector-8",
                                                                style: {
                                                                    height: screenWidth >= 768 && screenWidth < 992 ? "6px" : screenWidth >= 992 && screenWidth < 1366 ? "8px" : screenWidth >= 1366 && screenWidth < 1920 ? "11px" : screenWidth >= 1920 ? "12px" : undefined,
                                                                    left: screenWidth >= 768 && screenWidth < 992 ? "192px" : screenWidth >= 992 && screenWidth < 1366 ? "255px" : screenWidth >= 1366 && screenWidth < 1920 ? "352px" : screenWidth >= 1920 ? "383px" : undefined,
                                                                    top: screenWidth >= 768 && screenWidth < 992 ? "99px" : screenWidth >= 992 && screenWidth < 1366 ? "132px" : screenWidth >= 1366 && screenWidth < 1920 ? "182px" : screenWidth >= 1920 ? "198px" : undefined,
                                                                    width: screenWidth >= 768 && screenWidth < 992 ? "102px" : screenWidth >= 992 && screenWidth < 1366 ? "136px" : screenWidth >= 1366 && screenWidth < 1920 ? "187px" : screenWidth >= 1920 ? "204px" : undefined
                                                                },
                                                                alt: "Vector",
                                                                src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/vector-10-1.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/vector-10-2.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/vector-10-3.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/vector-10-4.svg" : undefined
                                                            }, void 0, false, {
                                                                fileName: "src/screens/Element/Element.jsx",
                                                                lineNumber: 8550,
                                                                columnNumber: 21
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 8381,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                        className: "frame-37",
                                                        style: {
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "20px" : screenWidth >= 992 && screenWidth < 1366 ? "27px" : screenWidth >= 1366 && screenWidth < 1920 ? "37px" : screenWidth >= 1920 ? "40px" : undefined,
                                                            left: screenWidth >= 768 && screenWidth < 992 ? "82px" : screenWidth >= 992 && screenWidth < 1366 ? "108px" : screenWidth >= 1366 && screenWidth < 1920 ? "150px" : screenWidth >= 1920 ? "163px" : undefined,
                                                            top: screenWidth >= 768 && screenWidth < 992 ? "54px" : screenWidth >= 992 && screenWidth < 1366 ? "71px" : screenWidth >= 1366 && screenWidth < 1920 ? "98px" : screenWidth >= 1920 ? "107px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "202px" : screenWidth >= 992 && screenWidth < 1366 ? "269px" : screenWidth >= 1366 && screenWidth < 1920 ? "371px" : screenWidth >= 1920 ? "404px" : undefined
                                                        },
                                                        alt: "Frame",
                                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39913.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39913-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39913-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39913-3.svg" : undefined
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 8609,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                        className: "img-5",
                                                        style: {
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "40px" : screenWidth >= 992 && screenWidth < 1366 ? "53px" : screenWidth >= 1366 && screenWidth < 1920 ? "73px" : screenWidth >= 1920 ? "80px" : undefined,
                                                            left: screenWidth >= 768 && screenWidth < 992 ? "69px" : screenWidth >= 992 && screenWidth < 1366 ? "91px" : screenWidth >= 1366 && screenWidth < 1920 ? "126px" : screenWidth >= 1920 ? "137px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "218px" : screenWidth >= 992 && screenWidth < 1366 ? "289px" : screenWidth >= 1366 && screenWidth < 1920 ? "400px" : screenWidth >= 1920 ? "435px" : undefined
                                                        },
                                                        alt: "Element",
                                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/----1.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/----1-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/----1-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/----1-3.svg" : undefined
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 8667,
                                                        columnNumber: 19
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 8346,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-38",
                                                style: {
                                                    gap: screenWidth >= 768 && screenWidth < 992 ? "14.03px" : screenWidth >= 992 && screenWidth < 1366 ? "18.63px" : screenWidth >= 1366 && screenWidth < 1920 ? "25.72px" : screenWidth >= 1920 ? "28px" : undefined,
                                                    left: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "2px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "3px" : undefined
                                                },
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                        className: "rectangle-5",
                                                        style: {
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "65.14px" : screenWidth >= 992 && screenWidth < 1366 ? "86.51px" : screenWidth >= 1366 && screenWidth < 1920 ? "119.44px" : screenWidth >= 1920 ? "130px" : undefined
                                                        },
                                                        alt: "Rectangle",
                                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/rectangle-46.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/rectangle-46-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/rectangle-46-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/rectangle-46-3.svg" : undefined
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 8739,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "ellipse-41",
                                                        style: {
                                                            border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                            borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                        }
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 8777,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "ellipse-42",
                                                        style: {
                                                            border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                            borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                        }
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 8823,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "ellipse-43",
                                                        style: {
                                                            border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                            borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                        }
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 8869,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "ellipse-44",
                                                        style: {
                                                            border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                            borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                        }
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 8915,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "ellipse-45",
                                                        style: {
                                                            border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                            borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                        }
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 8961,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "ellipse-46",
                                                        style: {
                                                            border: screenWidth >= 768 && screenWidth < 992 ? "1.05px solid" : screenWidth >= 992 && screenWidth < 1366 ? "1.39px solid" : screenWidth >= 1366 && screenWidth < 1920 ? "1.93px solid" : screenWidth >= 1920 ? "2.1px solid" : undefined,
                                                            borderRadius: screenWidth >= 768 && screenWidth < 992 ? "4.01px" : screenWidth >= 992 && screenWidth < 1366 ? "5.32px" : screenWidth >= 1366 && screenWidth < 1920 ? "7.35px" : screenWidth >= 1920 ? "8px" : undefined,
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined
                                                        }
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 9007,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                        className: "rectangle-6",
                                                        style: {
                                                            height: screenWidth >= 768 && screenWidth < 992 ? "8.02px" : screenWidth >= 992 && screenWidth < 1366 ? "10.65px" : screenWidth >= 1366 && screenWidth < 1920 ? "14.7px" : screenWidth >= 1920 ? "16px" : undefined,
                                                            width: screenWidth >= 768 && screenWidth < 992 ? "65.14px" : screenWidth >= 992 && screenWidth < 1366 ? "86.51px" : screenWidth >= 1366 && screenWidth < 1920 ? "119.44px" : screenWidth >= 1920 ? "130px" : undefined
                                                        },
                                                        alt: "Rectangle",
                                                        src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/rectangle-53.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/rectangle-53-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/rectangle-53-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/rectangle-53-3.svg" : undefined
                                                    }, void 0, false, {
                                                        fileName: "src/screens/Element/Element.jsx",
                                                        lineNumber: 9053,
                                                        columnNumber: 19
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 8716,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 8245,
                                        columnNumber: 15
                                    }, undefined)
                                ]
                            }, void 0, true),
                            (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "frame-39",
                                        style: {
                                            height: screenWidth < 375 ? "41px" : screenWidth >= 375 && screenWidth < 414 ? "47px" : screenWidth >= 414 && screenWidth < 500 ? "56px" : screenWidth >= 500 && screenWidth < 768 ? "72px" : undefined,
                                            left: screenWidth < 375 ? "236px" : screenWidth >= 375 && screenWidth < 414 ? "270px" : screenWidth >= 414 && screenWidth < 500 ? "299px" : screenWidth >= 500 && screenWidth < 768 ? "358px" : undefined,
                                            top: screenWidth < 375 ? "177px" : screenWidth >= 375 && screenWidth < 414 ? "204px" : screenWidth >= 414 && screenWidth < 500 ? "216px" : screenWidth >= 500 && screenWidth < 768 ? "270px" : undefined,
                                            width: screenWidth < 375 ? "48px" : screenWidth >= 375 && screenWidth < 414 ? "55px" : screenWidth >= 414 && screenWidth < 500 ? "66px" : screenWidth >= 500 && screenWidth < 768 ? "85px" : undefined
                                        },
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "overlap-group-5",
                                            style: {
                                                backgroundImage: screenWidth < 375 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-1.svg)" : screenWidth >= 375 && screenWidth < 414 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-3.svg)" : screenWidth >= 414 && screenWidth < 500 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-5.svg)" : screenWidth >= 500 && screenWidth < 768 ? "url(https://c.animaapp.com/N6qZcdUt/img/polygon-1-7.svg)" : undefined,
                                                height: screenWidth < 375 ? "48px" : screenWidth >= 375 && screenWidth < 414 ? "55px" : screenWidth >= 414 && screenWidth < 500 ? "66px" : screenWidth >= 500 && screenWidth < 768 ? "85px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "polygon",
                                                    style: {
                                                        height: screenWidth < 375 ? "40px" : screenWidth >= 375 && screenWidth < 414 ? "46px" : screenWidth >= 414 && screenWidth < 500 ? "55px" : screenWidth >= 500 && screenWidth < 768 ? "71px" : undefined,
                                                        left: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "7px" : undefined,
                                                        top: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "7px" : undefined,
                                                        width: screenWidth < 375 ? "40px" : screenWidth >= 375 && screenWidth < 414 ? "46px" : screenWidth >= 414 && screenWidth < 500 ? "55px" : screenWidth >= 500 && screenWidth < 768 ? "71px" : undefined
                                                    },
                                                    alt: "Polygon",
                                                    src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/polygon-2-1.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/polygon-2-3.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/polygon-2-5.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/polygon-2-7.svg" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 9170,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "img-6",
                                                    style: {
                                                        height: screenWidth < 375 ? "18px" : screenWidth >= 375 && screenWidth < 414 ? "21px" : screenWidth >= 414 && screenWidth < 500 ? "25px" : screenWidth >= 500 && screenWidth < 768 ? "32px" : undefined,
                                                        left: screenWidth < 375 ? "22px" : screenWidth >= 375 && screenWidth < 414 ? "25px" : screenWidth >= 414 && screenWidth < 500 ? "30px" : screenWidth >= 500 && screenWidth < 768 ? "39px" : undefined,
                                                        top: screenWidth < 375 ? "13px" : screenWidth >= 375 && screenWidth < 414 ? "15px" : screenWidth >= 414 && screenWidth < 500 ? "18px" : screenWidth >= 500 && screenWidth < 768 ? "24px" : undefined,
                                                        width: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 ? "5px" : screenWidth >= 414 && screenWidth < 500 ? "6px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined
                                                    },
                                                    alt: "Img",
                                                    src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/--1.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/--3.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/--5.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/--7.svg" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 9226,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 9145,
                                            columnNumber: 17
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 9100,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "frame-40",
                                        style: {
                                            height: screenWidth < 375 ? "31px" : screenWidth >= 375 && screenWidth < 414 ? "36px" : screenWidth >= 414 && screenWidth < 500 ? "40px" : screenWidth >= 500 && screenWidth < 768 ? "48px" : undefined,
                                            left: screenWidth < 375 ? "22px" : screenWidth >= 375 && screenWidth < 414 ? "25px" : screenWidth >= 414 && screenWidth < 500 ? "28px" : screenWidth >= 500 && screenWidth < 768 ? "34px" : undefined,
                                            width: screenWidth < 375 ? "278px" : screenWidth >= 375 && screenWidth < 414 ? "321px" : screenWidth >= 414 && screenWidth < 500 ? "354px" : screenWidth >= 500 && screenWidth < 768 ? "430px" : undefined
                                        },
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "overlap-10",
                                            style: {
                                                height: screenWidth < 375 ? "31px" : screenWidth >= 375 && screenWidth < 414 ? "36px" : screenWidth >= 414 && screenWidth < 500 ? "40px" : screenWidth >= 500 && screenWidth < 768 ? "48px" : undefined
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "group-19",
                                                    style: {
                                                        backgroundImage: screenWidth < 375 ? "url(https://c.animaapp.com/N6qZcdUt/img/vector-14.svg)" : screenWidth >= 375 && screenWidth < 414 ? "url(https://c.animaapp.com/N6qZcdUt/img/vector-14-1.svg)" : screenWidth >= 414 && screenWidth < 500 ? "url(https://c.animaapp.com/N6qZcdUt/img/vector-14-2.svg)" : screenWidth >= 500 && screenWidth < 768 ? "url(https://c.animaapp.com/N6qZcdUt/img/vector-14-3.svg)" : undefined,
                                                        height: screenWidth < 375 ? "31px" : screenWidth >= 375 && screenWidth < 414 ? "36px" : screenWidth >= 414 && screenWidth < 500 ? "40px" : screenWidth >= 500 && screenWidth < 768 ? "48px" : undefined,
                                                        width: screenWidth < 375 ? "278px" : screenWidth >= 375 && screenWidth < 414 ? "321px" : screenWidth >= 414 && screenWidth < 500 ? "354px" : screenWidth >= 500 && screenWidth < 768 ? "430px" : undefined
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                            className: "RL-2",
                                                            style: {
                                                                height: screenWidth < 375 ? "3px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "4px" : screenWidth >= 500 && screenWidth < 768 ? "5px" : undefined,
                                                                left: screenWidth < 375 ? "5px" : screenWidth >= 375 && screenWidth < 414 ? "6px" : screenWidth >= 414 && screenWidth < 500 ? "7px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                                                top: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "3px" : screenWidth >= 500 && screenWidth < 768 ? "4px" : undefined,
                                                                width: screenWidth < 375 ? "6px" : screenWidth >= 375 && screenWidth < 414 ? "7px" : screenWidth >= 414 && screenWidth < 500 ? "8px" : screenWidth >= 500 && screenWidth < 768 ? "10px" : undefined
                                                            },
                                                            alt: "Rl",
                                                            src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/rl.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/rl-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/rl-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/rl-3.svg" : undefined
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 9371,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-47",
                                                            style: {
                                                                borderRadius: screenWidth < 375 ? "0.52px/0.57px" : screenWidth >= 375 && screenWidth < 414 ? "0.59px/0.66px" : screenWidth >= 414 && screenWidth < 500 ? "0.66px/0.73px" : screenWidth >= 500 && screenWidth < 768 ? "0.8px/0.88px" : undefined,
                                                                height: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                                left: screenWidth < 375 ? "274px" : screenWidth >= 375 && screenWidth < 414 ? "316px" : screenWidth >= 414 && screenWidth < 500 ? "349px" : screenWidth >= 500 && screenWidth < 768 ? "424px" : undefined,
                                                                top: screenWidth < 375 ? "23px" : screenWidth >= 375 && screenWidth < 414 ? "26px" : screenWidth >= 414 && screenWidth < 500 ? "29px" : screenWidth >= 500 && screenWidth < 768 ? "35px" : undefined,
                                                                width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 9426,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-48",
                                                            style: {
                                                                borderRadius: screenWidth < 375 ? "0.52px/0.57px" : screenWidth >= 375 && screenWidth < 414 ? "0.59px/0.66px" : screenWidth >= 414 && screenWidth < 500 ? "0.66px/0.73px" : screenWidth >= 500 && screenWidth < 768 ? "0.8px/0.88px" : undefined,
                                                                height: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                                left: screenWidth < 375 ? "271px" : screenWidth >= 375 && screenWidth < 414 ? "313px" : screenWidth >= 414 && screenWidth < 500 ? "345px" : screenWidth >= 500 && screenWidth < 768 ? "420px" : undefined,
                                                                top: screenWidth < 375 ? "26px" : screenWidth >= 375 && screenWidth < 414 ? "30px" : screenWidth >= 414 && screenWidth < 500 ? "33px" : screenWidth >= 500 && screenWidth < 768 ? "40px" : undefined,
                                                                width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 9478,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-49",
                                                            style: {
                                                                borderRadius: screenWidth < 375 ? "0.52px/0.57px" : screenWidth >= 375 && screenWidth < 414 ? "0.59px/0.66px" : screenWidth >= 414 && screenWidth < 500 ? "0.66px/0.73px" : screenWidth >= 500 && screenWidth < 768 ? "0.8px/0.88px" : undefined,
                                                                height: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                                left: screenWidth < 375 ? "268px" : screenWidth >= 375 && screenWidth < 414 ? "310px" : screenWidth >= 414 && screenWidth < 500 ? "341px" : screenWidth >= 500 && screenWidth < 768 ? "415px" : undefined,
                                                                top: screenWidth < 375 ? "26px" : screenWidth >= 375 && screenWidth < 414 ? "30px" : screenWidth >= 414 && screenWidth < 500 ? "33px" : screenWidth >= 500 && screenWidth < 768 ? "40px" : undefined,
                                                                width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 9530,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-50",
                                                            style: {
                                                                borderRadius: screenWidth < 375 ? "0.52px/0.57px" : screenWidth >= 375 && screenWidth < 414 ? "0.59px/0.66px" : screenWidth >= 414 && screenWidth < 500 ? "0.66px/0.73px" : screenWidth >= 500 && screenWidth < 768 ? "0.8px/0.88px" : undefined,
                                                                height: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                                left: screenWidth < 375 ? "273px" : screenWidth >= 375 && screenWidth < 414 ? "315px" : screenWidth >= 414 && screenWidth < 500 ? "348px" : screenWidth >= 500 && screenWidth < 768 ? "423px" : undefined,
                                                                top: screenWidth < 375 ? "20px" : screenWidth >= 375 && screenWidth < 414 ? "23px" : screenWidth >= 414 && screenWidth < 500 ? "25px" : screenWidth >= 500 && screenWidth < 768 ? "31px" : undefined,
                                                                width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 9582,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "ellipse-51",
                                                            style: {
                                                                borderRadius: screenWidth < 375 ? "0.52px/0.57px" : screenWidth >= 375 && screenWidth < 414 ? "0.59px/0.66px" : screenWidth >= 414 && screenWidth < 500 ? "0.66px/0.73px" : screenWidth >= 500 && screenWidth < 768 ? "0.8px/0.88px" : undefined,
                                                                height: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined,
                                                                left: screenWidth < 375 ? "271px" : screenWidth >= 375 && screenWidth < 414 ? "313px" : screenWidth >= 414 && screenWidth < 500 ? "345px" : screenWidth >= 500 && screenWidth < 768 ? "419px" : undefined,
                                                                top: screenWidth < 375 ? "23px" : screenWidth >= 375 && screenWidth < 414 ? "26px" : screenWidth >= 414 && screenWidth < 500 ? "29px" : screenWidth >= 500 && screenWidth < 768 ? "35px" : undefined,
                                                                width: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth < 375 ? "1px" : screenWidth >= 500 && screenWidth < 768 ? "2px" : undefined
                                                            }
                                                        }, void 0, false, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 9634,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 9336,
                                                    columnNumber: 19
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                    className: "vector-9",
                                                    style: {
                                                        height: screenWidth < 375 ? "18px" : screenWidth >= 375 && screenWidth < 414 ? "20px" : screenWidth >= 414 && screenWidth < 500 ? "23px" : screenWidth >= 500 && screenWidth < 768 ? "27px" : undefined,
                                                        top: screenWidth < 375 ? "14px" : screenWidth >= 375 && screenWidth < 414 ? "16px" : screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "21px" : undefined,
                                                        width: screenWidth < 375 ? "135px" : screenWidth >= 375 && screenWidth < 414 ? "156px" : screenWidth >= 414 && screenWidth < 500 ? "172px" : screenWidth >= 500 && screenWidth < 768 ? "210px" : undefined
                                                    },
                                                    alt: "Vector",
                                                    src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/vector-3@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/vector-7@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/vector-11@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/vector-16@2x.png" : undefined
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 9687,
                                                    columnNumber: 19
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 9321,
                                            columnNumber: 17
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 9286,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "frame-41",
                                        style: {
                                            height: screenWidth < 375 ? "64px" : screenWidth >= 375 && screenWidth < 414 ? "74px" : screenWidth >= 414 && screenWidth < 500 ? "81px" : screenWidth >= 500 && screenWidth < 768 ? "99px" : undefined,
                                            left: screenWidth < 375 ? "17px" : screenWidth >= 375 && screenWidth < 414 ? "20px" : screenWidth >= 414 && screenWidth < 500 ? "22px" : screenWidth >= 500 && screenWidth < 768 ? "27px" : undefined,
                                            top: screenWidth < 375 ? "428px" : screenWidth >= 375 && screenWidth < 414 ? "494px" : screenWidth >= 414 && screenWidth < 500 ? "543px" : screenWidth >= 500 && screenWidth < 768 ? "662px" : undefined,
                                            width: screenWidth < 375 ? "292px" : screenWidth >= 375 && screenWidth < 414 ? "337px" : screenWidth >= 414 && screenWidth < 500 ? "372px" : screenWidth >= 500 && screenWidth < 768 ? "452px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-42",
                                                style: {
                                                    gap: screenWidth < 375 ? "6.47px" : screenWidth >= 375 && screenWidth < 414 ? "7.47px" : screenWidth >= 414 && screenWidth < 500 ? "8.24px" : screenWidth >= 500 && screenWidth < 768 ? "10.02px" : undefined,
                                                    height: screenWidth < 375 ? "23px" : screenWidth >= 375 && screenWidth < 414 ? "26px" : screenWidth >= 414 && screenWidth < 500 ? "29px" : screenWidth >= 500 && screenWidth < 768 ? "35px" : undefined,
                                                    left: screenWidth < 375 ? "89px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "113px" : screenWidth >= 500 && screenWidth < 768 ? "138px" : undefined,
                                                    top: screenWidth < 375 ? "40px" : screenWidth >= 375 && screenWidth < 414 ? "46px" : screenWidth >= 414 && screenWidth < 500 ? "50px" : screenWidth >= 500 && screenWidth < 768 ? "61px" : undefined
                                                },
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "text-wrapper-26",
                                                    style: {
                                                        fontSize: screenWidth < 375 ? "25.9px" : screenWidth >= 375 && screenWidth < 414 ? "29.9px" : screenWidth >= 414 && screenWidth < 500 ? "32.9px" : screenWidth >= 500 && screenWidth < 768 ? "40.1px" : undefined,
                                                        marginBottom: screenWidth < 375 ? "-1.02px" : screenWidth >= 375 && screenWidth < 414 ? "-1.18px" : screenWidth >= 414 && screenWidth < 500 ? "-1.26px" : screenWidth >= 500 && screenWidth < 768 ? "-1.47px" : undefined,
                                                        marginTop: screenWidth < 375 ? "-2.32px" : screenWidth >= 375 && screenWidth < 414 ? "-2.68px" : screenWidth >= 414 && screenWidth < 500 ? "-2.91px" : screenWidth >= 500 && screenWidth < 768 ? "-3.47px" : undefined
                                                    },
                                                    children: "TORIII TECHNOLOGY CORP."
                                                }, void 0, false, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 9827,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 9782,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                className: "text-wrapper-27",
                                                style: {
                                                    fontSize: screenWidth < 375 ? "4.6px" : screenWidth >= 375 && screenWidth < 414 ? "5.3px" : screenWidth >= 414 && screenWidth < 500 ? "5.8px" : screenWidth >= 500 && screenWidth < 768 ? "7.1px" : undefined,
                                                    height: screenWidth < 375 ? "28px" : screenWidth >= 375 && screenWidth < 414 ? "32px" : screenWidth >= 414 && screenWidth < 500 ? "36px" : screenWidth >= 500 && screenWidth < 768 ? "44px" : undefined,
                                                    left: screenWidth < 375 ? "89px" : screenWidth >= 375 && screenWidth < 414 ? "103px" : screenWidth >= 414 && screenWidth < 500 ? "113px" : screenWidth >= 500 && screenWidth < 768 ? "138px" : undefined,
                                                    letterSpacing: screenWidth < 375 ? "0.02px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "0.03px" : screenWidth >= 500 && screenWidth < 768 ? "0.04px" : undefined,
                                                    lineHeight: screenWidth < 375 ? "6.9px" : screenWidth >= 375 && screenWidth < 414 ? "8.0px" : screenWidth >= 414 && screenWidth < 500 ? "8.8px" : screenWidth >= 500 && screenWidth < 768 ? "10.7px" : undefined,
                                                    top: screenWidth < 375 ? "0" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "-1px" : undefined,
                                                    width: screenWidth < 375 ? "197px" : screenWidth >= 375 && screenWidth < 414 ? "227px" : screenWidth >= 414 && screenWidth < 500 ? "250px" : screenWidth >= 500 && screenWidth < 768 ? "305px" : undefined
                                                },
                                                children: "Our firm excels in sophisticated trading approaches, leveraging cutting-edge technology and quantitative methods. We offer market-making services with a custom trading engine capable of millisecond reactions, ensuring optimal liquidity provision. Our statistical arbitrage models employ complex mathematical algorithms to identify and exploit co-integrating relationships between assets."
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 9866,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "path-2",
                                                style: {
                                                    height: screenWidth < 375 ? "54px" : screenWidth >= 375 && screenWidth < 414 ? "62px" : screenWidth >= 414 && screenWidth < 500 ? "68px" : screenWidth >= 500 && screenWidth < 768 ? "83px" : undefined,
                                                    left: screenWidth < 375 ? "13px" : screenWidth >= 375 && screenWidth < 414 ? "15px" : screenWidth >= 414 && screenWidth < 500 ? "16px" : screenWidth >= 500 && screenWidth < 768 ? "20px" : undefined,
                                                    top: screenWidth < 375 ? "5px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "6px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                                    width: screenWidth < 375 ? "57px" : screenWidth >= 375 && screenWidth < 414 ? "66px" : screenWidth >= 414 && screenWidth < 500 ? "72px" : screenWidth >= 500 && screenWidth < 768 ? "88px" : undefined
                                                },
                                                alt: "Path",
                                                src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/path7214.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/path7214-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/path7214-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/path7214-3.svg" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 9947,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 9737,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                        className: "frame-43",
                                        style: {
                                            height: screenWidth < 375 ? "170px" : screenWidth >= 375 && screenWidth < 414 ? "196px" : screenWidth >= 414 && screenWidth < 500 ? "216px" : screenWidth >= 500 && screenWidth < 768 ? "263px" : undefined,
                                            left: screenWidth < 375 ? "34px" : screenWidth >= 375 && screenWidth < 414 ? "39px" : screenWidth >= 414 && screenWidth < 500 ? "40px" : screenWidth >= 500 && screenWidth < 768 ? "52px" : undefined,
                                            top: screenWidth < 375 ? "43px" : screenWidth >= 375 && screenWidth < 414 ? "51px" : screenWidth >= 414 && screenWidth < 500 ? "55px" : screenWidth >= 500 && screenWidth < 768 ? "69px" : undefined,
                                            width: screenWidth < 375 ? "192px" : screenWidth >= 375 && screenWidth < 414 ? "221px" : screenWidth >= 414 && screenWidth < 500 ? "244px" : screenWidth >= 500 && screenWidth < 768 ? "297px" : undefined
                                        },
                                        alt: "Frame",
                                        src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39923.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39923-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39923-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/frame-39923-3.svg" : undefined
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 10005,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "overlap-11",
                                        style: {
                                            height: screenWidth < 375 ? "189px" : screenWidth >= 375 && screenWidth < 414 ? "218px" : screenWidth >= 414 && screenWidth < 500 ? "241px" : screenWidth >= 500 && screenWidth < 768 ? "293px" : undefined,
                                            left: screenWidth < 375 ? "23px" : screenWidth >= 375 && screenWidth < 414 ? "26px" : screenWidth >= 414 && screenWidth < 500 ? "29px" : screenWidth >= 500 && screenWidth < 768 ? "35px" : undefined,
                                            top: screenWidth < 375 ? "224px" : screenWidth >= 375 && screenWidth < 414 ? "259px" : screenWidth >= 414 && screenWidth < 500 ? "285px" : screenWidth >= 500 && screenWidth < 768 ? "347px" : undefined,
                                            width: screenWidth < 375 ? "277px" : screenWidth >= 375 && screenWidth < 414 ? "320px" : screenWidth >= 414 && screenWidth < 500 ? "353px" : screenWidth >= 500 && screenWidth < 768 ? "429px" : undefined
                                        },
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "frame-44",
                                                style: {
                                                    gap: screenWidth < 375 ? "72px 24.25px" : screenWidth >= 375 && screenWidth < 414 ? "72px 27.97px" : screenWidth >= 414 && screenWidth < 500 ? "72px 30.85px" : screenWidth >= 500 && screenWidth < 768 ? "72px 37.53px" : undefined,
                                                    left: screenWidth < 375 ? "5px" : screenWidth >= 375 && screenWidth < 414 ? "6px" : screenWidth >= 414 && screenWidth < 500 ? "7px" : screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                                    padding: screenWidth < 375 ? "23.8px 8.37px" : screenWidth >= 375 && screenWidth < 414 ? "27.45px 9.66px" : screenWidth >= 414 && screenWidth < 500 ? "30.28px 10.65px" : screenWidth >= 500 && screenWidth < 768 ? "36.83px 12.96px" : undefined,
                                                    top: screenWidth < 375 ? "9px" : screenWidth >= 375 && screenWidth < 414 ? "10px" : screenWidth >= 414 && screenWidth < 500 ? "11px" : screenWidth >= 500 && screenWidth < 768 ? "14px" : undefined
                                                },
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "frame-45",
                                                    style: {
                                                        height: screenWidth < 375 ? "124.91px" : screenWidth >= 375 && screenWidth < 414 ? "144.09px" : screenWidth >= 414 && screenWidth < 500 ? "158.91px" : screenWidth >= 500 && screenWidth < 768 ? "193.3px" : undefined,
                                                        width: screenWidth < 375 ? "246.4px" : screenWidth >= 375 && screenWidth < 414 ? "284.24px" : screenWidth >= 414 && screenWidth < 500 ? "313.46px" : screenWidth >= 500 && screenWidth < 768 ? "381.3px" : undefined
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "frame-46",
                                                            style: {
                                                                gap: screenWidth < 375 ? "24.25px" : screenWidth >= 375 && screenWidth < 414 ? "27.97px" : screenWidth >= 414 && screenWidth < 500 ? "30.85px" : screenWidth >= 500 && screenWidth < 768 ? "37.53px" : undefined,
                                                                left: screenWidth < 375 ? "15px" : screenWidth >= 375 && screenWidth < 414 ? "17px" : screenWidth >= 414 && screenWidth < 500 ? "19px" : screenWidth >= 500 && screenWidth < 768 ? "23px" : undefined
                                                            },
                                                            children: [
                                                                screenWidth < 375 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite1.LogoBinanceWhite1), {
                                                                            className: "logo-binance-white-1"
                                                                        }, void 0, false, {
                                                                            fileName: "src/screens/Element/Element.jsx",
                                                                            lineNumber: 10205,
                                                                            columnNumber: 27
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite1.LogoGateioWhite1), {
                                                                            className: "logo-gateio-white-1"
                                                                        }, void 0, false, {
                                                                            fileName: "src/screens/Element/Element.jsx",
                                                                            lineNumber: 10206,
                                                                            columnNumber: 27
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true),
                                                                screenWidth >= 375 && screenWidth < 414 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite2.LogoBinanceWhite2), {
                                                                            className: "logo-binance-white-2"
                                                                        }, void 0, false, {
                                                                            fileName: "src/screens/Element/Element.jsx",
                                                                            lineNumber: 10212,
                                                                            columnNumber: 27
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite2.LogoGateioWhite2), {
                                                                            className: "logo-gateio-white-2"
                                                                        }, void 0, false, {
                                                                            fileName: "src/screens/Element/Element.jsx",
                                                                            lineNumber: 10213,
                                                                            columnNumber: 27
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true),
                                                                screenWidth >= 414 && screenWidth < 500 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite3.LogoBinanceWhite3), {
                                                                            className: "logo-binance-white-3"
                                                                        }, void 0, false, {
                                                                            fileName: "src/screens/Element/Element.jsx",
                                                                            lineNumber: 10219,
                                                                            columnNumber: 27
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite3.LogoGateioWhite3), {
                                                                            className: "logo-gateio-white-3"
                                                                        }, void 0, false, {
                                                                            fileName: "src/screens/Element/Element.jsx",
                                                                            lineNumber: 10220,
                                                                            columnNumber: 27
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true),
                                                                screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBinanceWhite4.LogoBinanceWhite4), {
                                                                            className: "logo-binance-white-6"
                                                                        }, void 0, false, {
                                                                            fileName: "src/screens/Element/Element.jsx",
                                                                            lineNumber: 10226,
                                                                            columnNumber: 27
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoGateioWhite4.LogoGateioWhite4), {
                                                                            className: "logo-gateio-white-4"
                                                                        }, void 0, false, {
                                                                            fileName: "src/screens/Element/Element.jsx",
                                                                            lineNumber: 10227,
                                                                            columnNumber: 27
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 10178,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "frame-47",
                                                            style: {
                                                                gap: screenWidth < 375 ? "24.25px" : screenWidth >= 375 && screenWidth < 414 ? "27.97px" : screenWidth >= 414 && screenWidth < 500 ? "30.85px" : screenWidth >= 500 && screenWidth < 768 ? "37.53px" : undefined,
                                                                left: screenWidth < 375 ? "24px" : screenWidth >= 375 && screenWidth < 414 ? "28px" : screenWidth >= 414 && screenWidth < 500 ? "31px" : screenWidth >= 500 && screenWidth < 768 ? "38px" : undefined,
                                                                top: screenWidth < 375 ? "52px" : screenWidth >= 375 && screenWidth < 414 ? "60px" : screenWidth >= 414 && screenWidth < 500 ? "66px" : screenWidth >= 500 && screenWidth < 768 ? "81px" : undefined
                                                            },
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                                    className: "logo-max-white-2",
                                                                    style: {
                                                                        height: screenWidth >= 414 && screenWidth < 500 ? "26.06px" : screenWidth >= 500 && screenWidth < 768 ? "31.69px" : screenWidth < 375 ? "20.45px" : screenWidth >= 375 && screenWidth < 414 ? "23.63px" : undefined,
                                                                        width: screenWidth >= 414 && screenWidth < 500 ? "121.93px" : screenWidth >= 500 && screenWidth < 768 ? "148.32px" : screenWidth < 375 ? "95.71px" : screenWidth >= 375 && screenWidth < 414 ? "110.56px" : undefined
                                                                    },
                                                                    alt: "Logo max white",
                                                                    src: screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/logo-max-white-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/logo-max-white-3.svg" : screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/logo-max-white.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/logo-max-white-1.svg" : undefined
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10267,
                                                                    columnNumber: 23
                                                                }, undefined),
                                                                (screenWidth >= 375 && screenWidth < 414 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite5.LogoBitmexWhite5), {
                                                                    className: `${screenWidth < 375 && "class-18"} ${screenWidth >= 375 && screenWidth < 414 && "class-19"}`
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10307,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                screenWidth >= 414 && screenWidth < 500 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite3.LogoBitmexWhite3), {
                                                                    className: "logo-bitmex-white-3"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10313,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitmexWhite4.LogoBitmexWhite4), {
                                                                    className: "logo-bitmex-white-4"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10317,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 10232,
                                                            columnNumber: 21
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: "frame-48",
                                                            style: {
                                                                gap: screenWidth < 375 ? "15.43px" : screenWidth >= 375 && screenWidth < 414 ? "17.79px" : screenWidth >= 414 && screenWidth < 500 ? "19.62px" : screenWidth >= 500 && screenWidth < 768 ? "23.87px" : undefined,
                                                                left: screenWidth < 375 ? "4px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "5px" : screenWidth >= 500 && screenWidth < 768 ? "6px" : undefined,
                                                                top: screenWidth < 375 ? "104px" : screenWidth >= 375 && screenWidth < 414 ? "120px" : screenWidth >= 414 && screenWidth < 500 ? "133px" : screenWidth >= 500 && screenWidth < 768 ? "162px" : undefined
                                                            },
                                                            children: [
                                                                screenWidth < 375 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite1.LogoAceWhite1), {
                                                                    className: "logo-ace-white-1"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10356,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                screenWidth >= 375 && screenWidth < 414 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite5.LogoAceWhite5), {
                                                                    className: "logo-ace-white-5"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10360,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                (screenWidth >= 375 && screenWidth < 414 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoWooxWhite2.LogoWooxWhite2), {
                                                                    className: `${screenWidth < 375 && "class-20"} ${screenWidth >= 375 && screenWidth < 414 && "class-21"}`
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10365,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                screenWidth >= 375 && screenWidth < 414 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite2.LogoBitoproWhite2), {
                                                                    className: "logo-bitopro-white-2"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10371,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                screenWidth >= 414 && screenWidth < 500 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite3.LogoAceWhite3), {
                                                                    className: "logo-ace-white-3"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10375,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoAceWhite4.LogoAceWhite4), {
                                                                    className: "logo-ace-white-6"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10379,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                (screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoWooxWhite3.LogoWooxWhite3), {
                                                                    className: `${screenWidth >= 500 && screenWidth < 768 && "class-22"} ${screenWidth >= 414 && screenWidth < 500 && "class-23"}`
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10384,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                screenWidth >= 500 && screenWidth < 768 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite8.LogoBitoproWhite8), {
                                                                    className: "logo-bitopro-white-4"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10390,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                screenWidth < 375 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite1.LogoBitoproWhite1), {
                                                                    className: "logo-bitopro-white-1"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10394,
                                                                    columnNumber: 25
                                                                }, undefined),
                                                                screenWidth >= 414 && screenWidth < 500 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoBitoproWhite6.LogoBitoproWhite6), {
                                                                    className: "logo-bitopro-white-6"
                                                                }, void 0, false, {
                                                                    fileName: "src/screens/Element/Element.jsx",
                                                                    lineNumber: 10398,
                                                                    columnNumber: 25
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/screens/Element/Element.jsx",
                                                            lineNumber: 10321,
                                                            columnNumber: 21
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/screens/Element/Element.jsx",
                                                    lineNumber: 10153,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 10108,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                                className: "group-20",
                                                style: {
                                                    height: screenWidth < 375 ? "189px" : screenWidth >= 375 && screenWidth < 414 ? "218px" : screenWidth >= 414 && screenWidth < 500 ? "241px" : screenWidth >= 500 && screenWidth < 768 ? "293px" : undefined,
                                                    width: screenWidth < 375 ? "277px" : screenWidth >= 375 && screenWidth < 414 ? "320px" : screenWidth >= 414 && screenWidth < 500 ? "353px" : screenWidth >= 500 && screenWidth < 768 ? "429px" : undefined
                                                },
                                                alt: "Group",
                                                src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/group-51@2x.png" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/group-51-1@2x.png" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/group-51-2@2x.png" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/group-51-3@2x.png" : undefined
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 10404,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 10063,
                                        columnNumber: 15
                                    }, undefined)
                                ]
                            }, void 0, true)
                        ]
                    }, void 0, true, {
                        fileName: "src/screens/Element/Element.jsx",
                        lineNumber: 6983,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/screens/Element/Element.jsx",
                lineNumber: 278,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "footer-container-placeholder"
            }, void 0, false, {
                fileName: "src/screens/Element/Element.jsx",
                lineNumber: 10447,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("footer", {
                className: "footer",
                style: {
                    padding: screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "16px" : undefined
                },
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "footer-container",
                    style: {
                        borderRadius: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "18px 18px 0px 0px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "16px" : undefined,
                        gap: screenWidth < 375 ? "48px" : screenWidth >= 375 && screenWidth < 414 ? "64px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "100px" : undefined,
                        justifyContent: screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375 ? "center" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "space-between" : undefined,
                        padding: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "18px 0px" : screenWidth >= 414 && screenWidth < 500 ? "18px 34px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 500 && screenWidth < 768 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "26px 34px" : screenWidth >= 1920 ? "26px 79px" : undefined
                    },
                    children: [
                        (screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 || screenWidth < 375) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "cc",
                                    style: {
                                        marginLeft: screenWidth >= 414 && screenWidth < 500 ? "-6.00px" : undefined
                                    },
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        className: "text-wrapper-28",
                                        style: {
                                            fontSize: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "12px" : screenWidth >= 500 && screenWidth < 768 ? "14px" : undefined,
                                            letterSpacing: screenWidth < 375 ? "0.05px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "0.06px" : screenWidth >= 500 && screenWidth < 768 ? "0.07px" : undefined
                                        },
                                        children: "\xa9 2024 Toriii Technology Corp."
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 10525,
                                        columnNumber: 17
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 10516,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "email",
                                    style: {
                                        gap: screenWidth >= 375 && screenWidth < 414 || screenWidth < 375 ? "4px" : screenWidth >= 414 && screenWidth < 500 || screenWidth >= 500 && screenWidth < 768 ? "8px" : undefined,
                                        marginRight: screenWidth >= 414 && screenWidth < 500 ? "-6.00px" : undefined
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                            className: "email-icon",
                                            style: {
                                                height: screenWidth < 375 ? "10.75px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "12.75px" : screenWidth >= 500 && screenWidth < 768 ? "16px" : undefined,
                                                width: screenWidth < 375 ? "14.33px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "17px" : screenWidth >= 500 && screenWidth < 768 ? "21.33px" : undefined
                                            },
                                            alt: "Email icon",
                                            src: screenWidth < 375 ? "https://c.animaapp.com/N6qZcdUt/img/email-icon.svg" : screenWidth >= 375 && screenWidth < 414 ? "https://c.animaapp.com/N6qZcdUt/img/email-icon-1.svg" : screenWidth >= 414 && screenWidth < 500 ? "https://c.animaapp.com/N6qZcdUt/img/email-icon-2.svg" : screenWidth >= 500 && screenWidth < 768 ? "https://c.animaapp.com/N6qZcdUt/img/email-icon-3.svg" : undefined
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 10569,
                                            columnNumber: 17
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "text-wrapper-28",
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "text-wrapper-30",
                                                style: {
                                                    fontSize: screenWidth < 375 ? "10px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "12px" : screenWidth >= 500 && screenWidth < 768 ? "14px" : undefined,
                                                    letterSpacing: screenWidth < 375 ? "0.05px" : screenWidth >= 375 && screenWidth < 414 || screenWidth >= 414 && screenWidth < 500 ? "0.06px" : screenWidth >= 500 && screenWidth < 768 ? "0.07px" : undefined
                                                },
                                                children: "Email: contact@toriii.tech"
                                            }, void 0, false, {
                                                fileName: "src/screens/Element/Element.jsx",
                                                lineNumber: 10606,
                                                columnNumber: 19
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/screens/Element/Element.jsx",
                                            lineNumber: 10605,
                                            columnNumber: 17
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 10552,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true),
                        (screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 || screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "cc-2",
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        className: "text-wrapper-29",
                                        style: {
                                            fontSize: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "16px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "20px" : undefined,
                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "0.08px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "0.10px" : undefined
                                        },
                                        children: "\xa9 2024 Toriii Technology Corp."
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 10642,
                                        columnNumber: 17
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 10641,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                    className: "stroke-design",
                                    style: {
                                        height: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "6px" : screenWidth >= 1366 && screenWidth < 1920 ? "12px" : screenWidth >= 1920 ? "10px" : undefined,
                                        width: screenWidth >= 768 && screenWidth < 992 ? "107px" : screenWidth >= 992 && screenWidth < 1366 ? "182px" : screenWidth >= 1366 && screenWidth < 1920 ? "301px" : screenWidth >= 1920 ? "376px" : undefined
                                    },
                                    alt: "Stroke design",
                                    src: screenWidth >= 768 && screenWidth < 992 ? "https://c.animaapp.com/N6qZcdUt/img/stroke-design.svg" : screenWidth >= 992 && screenWidth < 1366 ? "https://c.animaapp.com/N6qZcdUt/img/stroke-design-1.svg" : screenWidth >= 1366 && screenWidth < 1920 ? "https://c.animaapp.com/N6qZcdUt/img/stroke-design-2.svg" : screenWidth >= 1920 ? "https://c.animaapp.com/N6qZcdUt/img/stroke-design-3.svg" : undefined
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 10667,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "cc-3",
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "text-wrapper-30",
                                        style: {
                                            fontSize: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "16px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "20px" : undefined,
                                            letterSpacing: screenWidth >= 768 && screenWidth < 992 || screenWidth >= 992 && screenWidth < 1366 ? "0.08px" : screenWidth >= 1366 && screenWidth < 1920 || screenWidth >= 1920 ? "0.10px" : undefined
                                        },
                                        children: "Email: contact@toriii.tech"
                                    }, void 0, false, {
                                        fileName: "src/screens/Element/Element.jsx",
                                        lineNumber: 10705,
                                        columnNumber: 17
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/screens/Element/Element.jsx",
                                    lineNumber: 10704,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true)
                    ]
                }, void 0, true, {
                    fileName: "src/screens/Element/Element.jsx",
                    lineNumber: 10460,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/screens/Element/Element.jsx",
                lineNumber: 10448,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/screens/Element/Element.jsx",
        lineNumber: 54,
        columnNumber: 5
    }, undefined);
};
_s(Element, "zbzJdiwf5BpglrhHhFdxxSr152Y=", false, function() {
    return [
        (0, _breakpoints.useWindowWidth)
    ];
});
_c = Element;
var _c;
$RefreshReg$(_c, "Element");

  $parcel$ReactRefreshHelpers$6bb5.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","../../components/HeaderTextDefault":"1kkWK","../../components/LogoToriiiWhite":"fElmD","./style.css":"liMEo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru","../../icons/LogoAceWhite1":"aS3xS","../../icons/LogoBinanceWhite1":"bEpD5","../../icons/LogoBitoproWhite1":"i43NG","../../icons/LogoGateioWhite1":"k2edf","../../breakpoints":"l20Gs","../../icons/LogoAceWhite3":"7zh9u","../../icons/LogoAceWhite4":"i56jO","../../icons/LogoAceWhite5":"iFOXs","../../icons/LogoAceWhite7":"iQ8iA","../../icons/LogoAceWhite8":"ilL3N","../../icons/LogoBinanceWhite2":"gBqp2","../../icons/LogoBinanceWhite3":"f7Kt6","../../icons/LogoBinanceWhite4":"8GWIW","../../icons/LogoBinanceWhite7":"fZdZN","../../icons/LogoBinanceWhite8":"3rFIi","../../icons/LogoBitmexWhite3":"lyqZe","../../icons/LogoBitmexWhite4":"lc4Ln","../../icons/LogoBitmexWhite6":"hqlQJ","../../icons/LogoBitmexWhite7":"fcbd5","../../icons/LogoBitmexWhite8":"fW2Ka","../../icons/LogoBitoproWhite2":"c847C","../../icons/LogoBitoproWhite6":"a40ad","../../icons/LogoBitoproWhite7":"7uH3t","../../icons/LogoBitoproWhite8":"8Znww","../../icons/LogoGateioWhite2":"aaF9j","../../icons/LogoGateioWhite3":"gYswB","../../icons/LogoGateioWhite4":"cfYay","../../icons/LogoGateioWhite5":"gxJHD","../../icons/LogoGateioWhite6":"kPNsQ","../../icons/LogoGateioWhite7":"hXIor","../../icons/LogoGateioWhite8":"8D2tI","../../icons/LogoToriiiWhite34":"duRj4","../../icons/LogoToriiiWhite61":"2ETkg","../../icons/LogoToriiiWhite65":"lvXu0","../../icons/LogoToriiiWhite69":"k5byq","../../icons/LogoToriiiWhite315":"8NKo2","../../icons/LogoToriiiWhite317":"90p77","../../icons/LogoToriiiWhite318":"8vnHc","../../icons/LogoToriiiWhite319":"fJYJ7","../../icons/LogoToriiiWhite611":"7hxva","../../icons/LogoWooxWhite3":"cUkQ2","../../icons/LogoBitmexWhite5":"2P0WH","../../icons/LogoToriiiWhite41":"l4dUk","../../icons/LogoWooxWhite2":"lGlQz"}],"1kkWK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HeaderTextDefault", ()=>(0, _headerTextDefault.HeaderTextDefault));
var _headerTextDefault = require("./HeaderTextDefault");

},{"./HeaderTextDefault":"2Mofs","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Mofs":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$04a8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$04a8.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HeaderTextDefault", ()=>HeaderTextDefault);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const HeaderTextDefault = ({ className, frameClassName, divClassName, text = "About Us", targetId })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("a", {
        href: `#${targetId}`,
        className: `header-text-default ${className}`,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: `frame ${frameClassName}`,
            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `about-us ${divClassName}`,
                children: text
            }, void 0, false, {
                fileName: "src/components/HeaderTextDefault/HeaderTextDefault.jsx",
                lineNumber: 20,
                columnNumber: 9
            }, undefined)
        }, void 0, false, {
            fileName: "src/components/HeaderTextDefault/HeaderTextDefault.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/HeaderTextDefault/HeaderTextDefault.jsx",
        lineNumber: 18,
        columnNumber: 5
    }, undefined);
};
_c = HeaderTextDefault;
HeaderTextDefault.propTypes = {
    text: (0, _propTypesDefault.default).string,
    targetId: (0, _propTypesDefault.default).string.isRequired
};
var _c;
$RefreshReg$(_c, "HeaderTextDefault");

  $parcel$ReactRefreshHelpers$04a8.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"1ANA8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"7wKI2":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ReactIs = require("96e34ae03f5a2631");
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require("cb216452e2171041")(ReactIs.isElement, throwOnDirectAccess);

},{"96e34ae03f5a2631":"gfIo3","cb216452e2171041":"bBUgD"}],"gfIo3":[function(require,module,exports) {
"use strict";
module.exports = require("ad47820528c6facb");

},{"ad47820528c6facb":"7GE9i"}],"7GE9i":[function(require,module,exports) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === "function" && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 0xead4;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 0xead9;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 0xead7;
    function isValidElementType(type) {
        return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"bBUgD":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var ReactIs = require("c437388b089702c3");
var assign = require("c067a60101d8520c");
var ReactPropTypesSecret = require("74a0f89a70b9f3c2");
var has = require("18441b11647bc78");
var checkPropTypes = require("bec3f6ff89f0b072");
var printWarning = function() {};
printWarning = function(text) {
    var message = "Warning: " + text;
    if (typeof console !== "undefined") console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator"; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = "<<anonymous>>";
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = "Invariant Violation";
                    throw err;
                } else if (typeof console !== "undefined") {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ":" + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated " + "and will throw in the standalone `prop-types` package. " + "You may be seeing this warning due to a third-party PropTypes " + "library. See https://fb.me/react-warning-dont-call-proptypes " + "for details.");
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
                    return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== "function") return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. " + "A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
                else printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === "symbol") return String(value);
                return value;
            });
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== "function") return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning("Invalid argument supplied to oneOfType, expected an instance of array.");
            return emptyFunctionThatReturnsNull;
        }
        for(var i = 0; i < arrayOfTypeCheckers.length; i++){
            var checker = arrayOfTypeCheckers[i];
            if (typeof checker !== "function") {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + ".");
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) return null;
                if (checkerResult.data && has(checkerResult.data, "expectedType")) expectedTypes.push(checkerResult.data.expectedType);
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + type + "`.");
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== "function") return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== "function") return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker) return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`." + "\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
                var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case "number":
            case "string":
            case "undefined":
                return true;
            case "boolean":
                return !propValue;
            case "object":
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === "symbol") return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue["@@toStringTag"] === "Symbol") return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === "function" && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return "array";
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return "object";
        if (isSymbol(propType, propValue)) return "symbol";
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) return "" + propValue;
        var propType = getPropType(propValue);
        if (propType === "object") {
            if (propValue instanceof Date) return "date";
            else if (propValue instanceof RegExp) return "regexp";
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case "array":
            case "object":
                return "an " + type;
            case "boolean":
            case "date":
            case "regexp":
                return "a " + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"c437388b089702c3":"gfIo3","c067a60101d8520c":"7OXxh","74a0f89a70b9f3c2":"jZTZJ","18441b11647bc78":"fqKuf","bec3f6ff89f0b072":"5VwyJ"}],"7OXxh":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ "use strict";
/* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
    if (val === null || val === undefined) throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(val);
}
function shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = new String("abc"); // eslint-disable-line no-new-wrappers
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {};
        for(var i = 0; i < 10; i++)test2["_" + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join("") !== "0123456789") return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if (hasOwnProperty.call(from, key)) to[key] = from[key];
        if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

},{}],"jZTZJ":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
module.exports = ReactPropTypesSecret;

},{}],"fqKuf":[function(require,module,exports) {
module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

},{}],"5VwyJ":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var printWarning = function() {};
var ReactPropTypesSecret = require("24ba1e58d167a82c");
var loggedTypeFailures = {};
var has = require("898bc82f39d83f7c");
printWarning = function(text) {
    var message = "Warning: " + text;
    if (typeof console !== "undefined") console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                err.name = "Invariant Violation";
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker " + "function must return `null` or an `Error` but returned a " + typeof error + ". " + "You may have forgotten to pass an argument to the type checker " + "creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and " + "shape all require an argument).");
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : "";
            printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {};
};
module.exports = checkPropTypes;

},{"24ba1e58d167a82c":"jZTZJ","898bc82f39d83f7c":"fqKuf"}],"1ANA8":[function() {},{}],"fElmD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite", ()=>(0, _logoToriiiWhite.LogoToriiiWhite));
var _logoToriiiWhite = require("./LogoToriiiWhite");

},{"./LogoToriiiWhite":"bmZLR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bmZLR":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$84bc = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$84bc.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite", ()=>LogoToriiiWhite);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const LogoToriiiWhite = ({ className, logoToriiiWhite = "https://c.animaapp.com/N6qZcdUt/img/logo-toriii-white-6.png" })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
        className: `logo-toriii-white ${className}`,
        alt: "Logo toriii white",
        src: logoToriiiWhite
    }, void 0, false, {
        fileName: "src/components/LogoToriiiWhite/LogoToriiiWhite.jsx",
        lineNumber: 15,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite;
LogoToriiiWhite.propTypes = {
    logoToriiiWhite: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "LogoToriiiWhite");

  $parcel$ReactRefreshHelpers$84bc.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"2TdBb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"2TdBb":[function() {},{}],"liMEo":[function() {},{}],"aS3xS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite1", ()=>(0, _logoAceWhite1.LogoAceWhite1));
var _logoAceWhite1 = require("./LogoAceWhite1");

},{"./LogoAceWhite1":"9BfiD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9BfiD":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$e85c = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$e85c.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite1", ()=>LogoAceWhite1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-1 ${className}`,
        fill: "none",
        height: "22",
        viewBox: "0 0 62 22",
        width: "62",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10657)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M13.6601 0.9375C13.7028 1.06245 13.7881 1.16201 13.8562 1.2707C14.5492 2.37597 15.2453 3.4792 15.9423 4.58243C16.6343 5.67956 17.3283 6.77568 18.0203 7.87282C18.7011 8.95167 19.3799 10.0315 20.0597 11.1114C20.579 11.9353 21.1002 12.7581 21.6195 13.582C22.1794 14.4698 22.7372 15.3577 23.2971 16.2456C23.8164 17.0695 24.3376 17.8923 24.8569 18.7162C25.4015 19.5786 25.9462 20.4421 26.4898 21.3056C26.5111 21.3391 26.5274 21.3747 26.5457 21.4102H12.3869C12.4123 21.3391 12.454 21.2751 12.4916 21.2101C12.898 20.5071 13.3065 19.8052 13.7129 19.1022C14.1661 18.3179 14.6183 17.5337 15.0705 16.7495C15.3022 16.3482 15.5318 15.9449 15.7655 15.5457C15.8062 15.4756 15.8001 15.4258 15.7564 15.3608C15.6456 15.1972 15.542 15.0286 15.4363 14.861C14.8541 13.9365 14.2718 13.0121 13.6896 12.0876C13.6388 12.0064 13.6256 12.0064 13.5737 12.0876C13.3492 12.4432 13.1246 12.7988 12.9 13.1543C12.5769 13.6643 12.2538 14.1742 11.9317 14.6852C11.5059 15.3597 11.0822 16.0363 10.6564 16.7108C10.2977 17.2797 9.93802 17.8466 9.57932 18.4155C9.14035 19.1113 8.70037 19.8072 8.26343 20.5041C8.07443 20.8058 7.87628 21.1014 7.70049 21.4102C5.39794 21.4102 3.09538 21.4102 0.792827 21.4082C0.765391 21.4082 0.700359 21.4519 0.706456 21.3676C0.745069 21.3442 0.767424 21.3076 0.790795 21.2711C1.17896 20.6575 1.5661 20.0429 1.95427 19.4293C2.44506 18.6512 2.93585 17.873 3.42766 17.0948C3.87069 16.3929 4.31576 15.6919 4.75879 14.989C5.2882 14.1499 5.81658 13.3107 6.34599 12.4716C6.70468 11.9028 7.06439 11.3359 7.42309 10.767C7.85698 10.0803 8.28883 9.39255 8.72272 8.70481C9.07329 8.14812 9.42487 7.59244 9.77544 7.03574C10.2032 6.35714 10.629 5.67855 11.0568 5.00096C11.45 4.37722 11.8433 3.7545 12.2365 3.13075C12.6968 2.40035 13.1561 1.67096 13.6154 0.940548C13.6296 0.940548 13.6439 0.940548 13.6581 0.940548L13.6601 0.9375Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M61.1953 18.7331C60.6059 18.7331 60.0156 18.7341 59.4262 18.7351C59.3937 18.7351 59.3612 18.7361 59.3287 18.7351C59.2596 18.7331 59.2321 18.7625 59.2403 18.8347C59.2585 18.9881 59.2829 19.1404 59.3398 19.2857C59.5522 19.8272 60.1131 19.9542 60.55 19.7103C60.6689 19.6433 60.7482 19.5356 60.8102 19.4147C60.8569 19.3253 61.0307 19.2756 61.117 19.3263C61.1658 19.3548 61.1435 19.3964 61.1303 19.431C61.0632 19.6098 60.9565 19.7611 60.8081 19.882C60.4047 20.2091 59.7229 20.1949 59.3419 19.8455C59.16 19.6778 59.0523 19.4625 58.9923 19.2248C58.8755 18.7554 58.9029 18.2983 59.1153 17.8594C59.4597 17.1483 60.3915 17.1026 60.8447 17.5191C61.0134 17.6735 61.116 17.8706 61.1719 18.0911C61.179 18.1185 61.1861 18.1469 61.1933 18.1744V18.7351L61.1953 18.7331ZM60.0836 18.4527C60.3245 18.4527 60.5653 18.4537 60.8061 18.4527C60.8986 18.4527 60.9159 18.4304 60.9057 18.343C60.8905 18.2211 60.862 18.1032 60.8102 17.9905C60.6029 17.5354 59.98 17.3921 59.5939 17.7111C59.3957 17.8757 59.3195 18.1002 59.2748 18.341C59.2565 18.4415 59.2646 18.4527 59.3713 18.4527C59.6081 18.4537 59.8459 18.4527 60.0826 18.4527H60.0836Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M53.6172 9.01562C53.6172 7.52331 53.6172 6.03202 53.6172 4.53971C53.6172 4.50009 53.6182 4.46048 53.6172 4.42086C53.6162 4.35279 53.6487 4.3213 53.7158 4.32333C53.7483 4.32333 53.7808 4.32333 53.8133 4.32333C56.0437 4.32333 58.2752 4.32333 60.5056 4.32333C60.6363 4.32333 60.7017 4.38835 60.7017 4.51838C60.7017 4.92777 60.7017 5.33818 60.7017 5.74758C60.7017 5.87964 60.6339 5.94567 60.4985 5.94567C58.8869 5.94567 57.2743 5.94567 55.6627 5.94567C55.5407 5.94567 55.4798 6.00662 55.4798 6.12853C55.4798 6.7797 55.4798 7.42985 55.4798 8.08102C55.4798 8.19344 55.535 8.24966 55.6454 8.24966C57.07 8.24966 58.4946 8.24966 59.9193 8.24966C60.0507 8.24966 60.1164 8.31569 60.1164 8.44775C60.1164 8.8866 60.1164 9.32444 60.1164 9.7633C60.1164 9.90755 60.1083 9.91466 59.963 9.91466C58.5455 9.91466 57.1279 9.91466 55.7104 9.91466C55.6749 9.91466 55.6383 9.91466 55.6027 9.91466C55.4889 9.91669 55.4798 9.9238 55.4798 10.0386C55.4798 10.6715 55.4798 11.3044 55.4798 11.9372C55.4798 12.0856 55.4798 12.0856 55.6312 12.0856C57.2539 12.0856 58.8767 12.0856 60.4995 12.0856C60.6343 12.0856 60.7017 12.1519 60.7017 12.2847C60.7017 12.7164 60.7017 13.1471 60.7017 13.5789C60.7017 13.7231 60.6946 13.7303 60.5482 13.7303C58.2884 13.7303 56.0295 13.7303 53.7696 13.7303C53.6243 13.7303 53.6172 13.7231 53.6172 13.5779C53.6172 12.0571 53.6172 10.5364 53.6172 9.01562Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M40.317 9.08644C40.3048 8.29508 40.4776 7.5921 40.8098 6.92976C41.0141 6.52341 41.2701 6.15161 41.576 5.81332C41.9936 5.35009 42.4844 4.98539 43.0372 4.70603C43.6245 4.4094 44.2474 4.23771 44.9069 4.18794C45.731 4.12597 46.5195 4.2621 47.2775 4.58108C47.8191 4.80965 48.3038 5.12761 48.7326 5.53193C49.0557 5.83669 49.3423 6.17192 49.5689 6.55592C49.6329 6.66462 49.6319 6.67275 49.5171 6.71846C49.009 6.9196 48.4999 7.11871 47.9919 7.32188C47.9177 7.35134 47.874 7.33407 47.8283 7.27211C47.5072 6.83325 47.1119 6.4777 46.6302 6.22272C46.2411 6.0165 45.8285 5.89256 45.3834 5.87732C44.597 5.84989 43.909 6.10589 43.3197 6.61179C42.6805 7.16036 42.2954 7.85725 42.1999 8.6994C42.0932 9.63704 42.3869 10.4497 43.0006 11.1547C43.4619 11.685 44.0411 12.0253 44.7311 12.1584C45.5409 12.3149 46.2787 12.1249 46.9534 11.6627C47.2958 11.429 47.5834 11.1395 47.8232 10.8033C47.875 10.7301 47.9228 10.72 48.003 10.7525C48.507 10.9546 49.0131 11.1527 49.5181 11.3528C49.6309 11.3975 49.6339 11.4097 49.5709 11.5164C49.1005 12.3057 48.4471 12.901 47.6382 13.3317C47.0855 13.6263 46.4961 13.8072 45.8753 13.8752C44.9252 13.9799 44.0107 13.8437 43.1439 13.4283C42.583 13.159 42.08 12.8096 41.6563 12.3555C40.9064 11.554 40.4471 10.6143 40.3353 9.51412C40.319 9.35565 40.319 9.19819 40.317 9.08746V9.08644Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M36.8867 13.73C36.6021 13.73 36.3176 13.7259 36.0341 13.732C35.9254 13.7351 35.8655 13.7005 35.8177 13.601C35.6195 13.1936 35.4112 12.7913 35.2121 12.384C35.1684 12.2946 35.1145 12.259 35.0129 12.26C33.6066 12.2631 32.1992 12.2631 30.7929 12.26C30.6883 12.26 30.6303 12.2946 30.5856 12.389C30.3926 12.7913 30.1904 13.1885 29.9983 13.5908C29.9505 13.6914 29.8896 13.734 29.7748 13.733C29.2027 13.7279 28.6306 13.731 28.0585 13.731C28.0301 13.731 28.0006 13.731 27.9721 13.7279C27.9295 13.7239 27.9163 13.6995 27.9325 13.6599C27.9437 13.6335 27.9569 13.6081 27.9701 13.5817C28.4863 12.5942 29.0015 11.6068 29.5187 10.6184C29.7504 10.1755 29.9831 9.73356 30.2137 9.29065C30.7441 8.27478 31.2746 7.2579 31.806 6.24102C32.0458 5.78185 32.2856 5.32369 32.5254 4.86553C32.6016 4.71925 32.6809 4.57398 32.7551 4.42566C32.7866 4.36167 32.8323 4.34033 32.9014 4.34033C32.9735 4.34033 33.0223 4.35963 33.0569 4.4277C33.2123 4.73144 33.3729 5.03315 33.5314 5.33588C33.9267 6.09473 34.3209 6.85358 34.7162 7.61244C35.0485 8.24938 35.3818 8.88633 35.7151 9.52328C36.1378 10.3319 36.5605 11.1416 36.9842 11.9502C37.2606 12.4784 37.54 13.0067 37.8174 13.5339C37.8378 13.5725 37.8571 13.6111 37.8754 13.6497C37.8998 13.7005 37.8784 13.7249 37.8266 13.7269C37.7981 13.7279 37.7687 13.7279 37.7402 13.7279C37.4557 13.7279 37.1722 13.7279 36.8877 13.7279L36.8867 13.73ZM32.8882 10.6621C33.2946 10.6621 33.7001 10.6621 34.1065 10.6621C34.2305 10.6621 34.2346 10.6539 34.1797 10.5412C33.9592 10.0851 33.7377 9.62995 33.5182 9.17382C33.4105 8.95033 33.3068 8.72583 33.2001 8.50233C33.1117 8.31745 33.0213 8.13358 32.9329 7.9497C32.9136 7.90907 32.8963 7.90805 32.876 7.94767C32.8679 7.96393 32.8597 7.98018 32.8526 7.99643C32.7022 8.31034 32.5518 8.62525 32.4004 8.93814C32.1383 9.47757 31.8761 10.017 31.6129 10.5554C31.5642 10.656 31.5672 10.6621 31.681 10.6621C32.0834 10.6621 32.4858 10.6621 32.8882 10.6621Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M56.6843 18.64C56.6843 19.0169 56.6893 19.3948 56.6822 19.7717C56.6782 19.9941 56.6639 20.2156 56.5989 20.432C56.4638 20.88 56.1549 21.1177 55.7007 21.1664C55.4466 21.1939 55.1895 21.1878 54.9487 21.077C54.6764 20.9521 54.5036 20.7428 54.4366 20.4503C54.4173 20.3649 54.4315 20.3497 54.5209 20.3456C54.5565 20.3436 54.5931 20.3466 54.6286 20.3456C54.6906 20.3426 54.7282 20.367 54.7516 20.4269C54.8827 20.7591 55.1458 20.884 55.4842 20.8871C55.5564 20.8871 55.6285 20.8881 55.6996 20.8779C56.0339 20.8261 56.2402 20.6351 56.3235 20.305C56.3743 20.1008 56.3845 19.8936 56.3804 19.6843C56.3804 19.667 56.3865 19.6437 56.3662 19.6376C56.3459 19.6315 56.3388 19.6548 56.3276 19.668C55.847 20.2613 54.905 20.1648 54.5524 19.472C54.2649 18.9072 54.2882 18.3271 54.5992 17.7795C54.8065 17.4149 55.1489 17.2452 55.5747 17.2564C55.7342 17.2604 55.8897 17.2797 56.036 17.3488C56.1417 17.3986 56.2351 17.4626 56.3124 17.551C56.3276 17.5682 56.3368 17.6058 56.3662 17.5926C56.3916 17.5825 56.3794 17.5479 56.3835 17.5236C56.3886 17.4921 56.3926 17.4596 56.3967 17.427C56.4028 17.3813 56.3987 17.3265 56.4597 17.3163C56.5268 17.3041 56.5979 17.2909 56.6578 17.3326C56.6985 17.36 56.6853 17.4108 56.6863 17.4535C56.6863 17.8486 56.6863 18.2438 56.6863 18.639H56.6843V18.64ZM56.3804 18.6247C56.3896 18.4642 56.3754 18.2895 56.3327 18.1178C56.2565 17.81 56.0736 17.6099 55.7504 17.5591C55.6834 17.5489 55.6143 17.55 55.5462 17.5469C55.1834 17.5307 54.9192 17.7399 54.7963 18.0528C54.653 18.4155 54.6408 18.7883 54.7628 19.1601C54.842 19.4009 54.9894 19.5908 55.2281 19.6975C55.3846 19.7676 55.5462 19.7717 55.7139 19.7452C55.9842 19.7026 56.1772 19.5644 56.2809 19.3074C56.3672 19.0931 56.3865 18.8696 56.3804 18.6247Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M29.3295 20.0498C28.9809 20.0498 28.6314 20.0498 28.2828 20.0498C28.1528 20.0498 28.1416 20.0397 28.1416 19.9076C28.1416 18.7363 28.1416 17.565 28.1416 16.3927C28.1416 16.2546 28.1497 16.2475 28.2889 16.2475C28.9758 16.2475 29.6628 16.2475 30.3497 16.2475C30.3974 16.2475 30.4614 16.2271 30.4828 16.2871C30.5092 16.3623 30.5092 16.4425 30.4787 16.5187C30.4685 16.5441 30.4391 16.5482 30.4137 16.5502C30.3781 16.5522 30.3415 16.5532 30.306 16.5532C29.741 16.5532 29.177 16.5532 28.6121 16.5532C28.479 16.5532 28.4698 16.5614 28.4698 16.6934C28.4698 17.0459 28.4698 17.3974 28.4698 17.7499C28.4698 17.881 28.4779 17.8871 28.6131 17.8881C29.1486 17.8881 29.6851 17.8881 30.2206 17.8891C30.2745 17.8891 30.3476 17.8637 30.3771 17.9277C30.4086 17.9968 30.3974 18.076 30.3822 18.1502C30.3751 18.1827 30.3446 18.1908 30.3141 18.1928C30.2785 18.1949 30.2419 18.1949 30.2064 18.1949C29.678 18.1949 29.1486 18.1949 28.6202 18.1949C28.4739 18.1949 28.4698 18.1989 28.4698 18.3473C28.4698 18.7638 28.4698 19.1813 28.4698 19.5978C28.4698 19.737 28.4759 19.7431 28.6161 19.7431C29.2024 19.7431 29.7888 19.7431 30.3751 19.7431C30.4106 19.7431 30.4472 19.7431 30.4828 19.7451C30.5041 19.7451 30.5295 19.7461 30.5427 19.7654C30.5915 19.8385 30.5437 19.9107 30.5376 19.9838C30.5336 20.0305 30.495 20.0468 30.4513 20.0488C30.4188 20.0498 30.3862 20.0509 30.3537 20.0509C30.0123 20.0509 29.6709 20.0509 29.3284 20.0509L29.3295 20.0498Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M47.5324 18.916C47.5324 19.1314 47.5324 19.3478 47.5324 19.5631C47.5324 19.6708 47.5345 19.7785 47.5497 19.8862C47.57 20.0325 47.5497 20.0508 47.4064 20.0508C47.3922 20.0508 47.378 20.0497 47.3638 20.0508C47.2977 20.0528 47.2672 20.0172 47.255 19.9563C47.2398 19.8841 47.255 19.8059 47.2093 19.7409C47.1585 19.7907 47.1097 19.8425 47.0569 19.8902C46.9035 20.0294 46.7155 20.0812 46.5153 20.1066C46.2917 20.1351 46.0763 20.1097 45.8741 20.0101C45.5825 19.8669 45.4199 19.5398 45.4473 19.2147C45.4798 18.8337 45.6932 18.6163 46.0387 18.5016C46.2206 18.4406 46.4106 18.4162 46.6017 18.4111C46.7744 18.4061 46.9471 18.4071 47.1199 18.4101C47.1981 18.4111 47.2317 18.3797 47.2286 18.3014C47.2245 18.2009 47.2306 18.1003 47.2154 18.0007C47.1768 17.7569 47.0325 17.6167 46.7968 17.567C46.626 17.5304 46.4543 17.5324 46.2836 17.572C46.1078 17.6117 45.991 17.7153 45.928 17.8849C45.8629 18.0576 45.8518 18.0607 45.6699 18.0485C45.5957 18.0434 45.5754 18.0099 45.5896 17.9438C45.6434 17.7011 45.7603 17.504 45.9869 17.3821C46.1698 17.2845 46.3679 17.2551 46.5712 17.2592C46.7216 17.2622 46.8719 17.2724 47.0183 17.3221C47.3018 17.4186 47.4603 17.6188 47.5131 17.9073C47.5294 17.9957 47.5365 18.0851 47.5355 18.1755C47.5335 18.4233 47.5355 18.6712 47.5355 18.9201L47.5324 18.916ZM46.8526 18.6722C46.7774 18.6722 46.7012 18.6682 46.626 18.6722C46.4431 18.6834 46.2602 18.6996 46.0885 18.7748C45.8619 18.8744 45.7481 19.0674 45.7654 19.3193C45.7827 19.557 45.93 19.7358 46.1617 19.8008C46.3364 19.8496 46.5112 19.8344 46.684 19.7907C46.9268 19.7287 47.0843 19.5753 47.1585 19.3356C47.2164 19.1476 47.2296 18.9546 47.2256 18.7596C47.2245 18.6956 47.193 18.6692 47.1311 18.6702C47.0376 18.6712 46.9441 18.6702 46.8506 18.6702L46.8526 18.6722Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M41.0967 18.0464C41.0967 17.4389 41.0967 16.8324 41.0967 16.2249C41.0967 16.0451 41.1576 15.9984 41.3355 16.039C41.3761 16.0482 41.3995 16.0695 41.4005 16.1122C41.4015 16.1447 41.4025 16.1772 41.4025 16.2087C41.4025 16.6547 41.4025 17.0996 41.4025 17.5456C41.4025 17.571 41.4005 17.5964 41.4025 17.6207C41.4046 17.64 41.3914 17.6695 41.4188 17.6766C41.4361 17.6817 41.4452 17.6563 41.4564 17.6421C41.7267 17.2906 42.0925 17.2032 42.5061 17.2794C42.8952 17.3515 43.1452 17.6593 43.193 18.0891C43.2072 18.2181 43.2143 18.3461 43.2143 18.4761C43.2123 18.9505 43.2143 19.4249 43.2133 19.8993C43.2133 19.9481 43.2285 20.0111 43.1716 20.0334C43.0974 20.0629 43.0162 20.0598 42.9399 20.0334C42.9135 20.0243 42.9105 19.9948 42.9095 19.9694C42.9084 19.9369 42.9074 19.9044 42.9074 19.8729C42.9074 19.3843 42.9074 18.8957 42.9074 18.407C42.9074 18.277 42.8912 18.149 42.8566 18.024C42.7723 17.7244 42.563 17.5557 42.25 17.5537C41.8405 17.5506 41.5428 17.7203 41.4411 18.1876C41.4157 18.3034 41.4036 18.4212 41.4036 18.5401C41.4046 18.9891 41.4046 19.4381 41.4036 19.8871C41.4036 19.9379 41.4269 20.007 41.368 20.0344C41.2958 20.0669 41.2135 20.0588 41.1363 20.0375C41.1089 20.0304 41.1028 20.0019 41.1007 19.9755C41.0987 19.94 41.0977 19.9034 41.0977 19.8678C41.0977 19.2603 41.0977 18.6539 41.0977 18.0464H41.0967Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M50.0085 18.7344C50.0085 18.4113 50.0085 18.0872 50.0085 17.7642C50.0085 17.6565 50.0115 17.5488 49.9973 17.4412C49.9841 17.3386 50.0105 17.3142 50.1152 17.3101C50.1406 17.3101 50.166 17.3101 50.1904 17.3101C50.2594 17.3101 50.296 17.3406 50.2991 17.4127C50.3031 17.4919 50.3194 17.5692 50.3164 17.6494C50.3164 17.6657 50.3103 17.6911 50.3296 17.6961C50.3499 17.7022 50.356 17.6768 50.3651 17.6626C50.5003 17.4503 50.6903 17.3182 50.9382 17.2776C51.1831 17.237 51.426 17.239 51.6536 17.3609C51.8253 17.4523 51.9493 17.5885 52.0194 17.7693C52.0783 17.9206 52.1098 18.0791 52.1098 18.2437C52.1088 18.7933 52.1098 19.3439 52.1088 19.8935C52.1088 19.9442 52.1312 20.0133 52.0671 20.0367C51.996 20.0631 51.9188 20.057 51.8446 20.0377C51.8172 20.0306 51.809 20.0042 51.807 19.9778C51.805 19.9422 51.804 19.9056 51.804 19.8701C51.804 19.3561 51.804 18.842 51.804 18.328C51.804 18.2345 51.7979 18.1421 51.7775 18.0497C51.6942 17.6657 51.425 17.5255 51.0703 17.5559C50.7187 17.5854 50.4982 17.7825 50.3905 18.1126C50.3448 18.2538 50.3153 18.3971 50.3164 18.5464C50.3174 18.9853 50.3164 19.4231 50.3164 19.862C50.3164 20.0428 50.2564 20.0885 50.0765 20.0469C50.0359 20.0377 50.0125 20.0164 50.0115 19.9737C50.0105 19.9382 50.0095 19.9016 50.0095 19.866C50.0095 19.4881 50.0095 19.1112 50.0095 18.7333L50.0085 18.7344Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M37.925 17.257C38.3771 17.2682 38.7247 17.5232 38.8578 17.9773C38.8659 18.0047 38.872 18.0332 38.8771 18.0616C38.8883 18.1215 38.8629 18.15 38.8029 18.151C38.7673 18.151 38.7308 18.15 38.6952 18.152C38.619 18.1571 38.5783 18.1236 38.554 18.0504C38.495 17.8757 38.3975 17.7264 38.2298 17.636C37.8223 17.4145 37.3194 17.576 37.1192 18.0118C36.9078 18.471 36.9119 18.9434 37.1395 19.3965C37.3844 19.8851 37.9402 19.9206 38.2715 19.6941C38.3995 19.6067 38.4696 19.4798 38.5346 19.3457C38.556 19.302 38.5621 19.241 38.621 19.2299C38.6952 19.2166 38.7724 19.2146 38.8466 19.2309C38.8903 19.24 38.8791 19.2817 38.869 19.3121C38.7399 19.7043 38.5082 20.0039 38.0682 20.0883C37.4443 20.2081 36.9302 19.9044 36.7432 19.2979C36.5796 18.7666 36.6091 18.2434 36.9099 17.7619C37.1283 17.4104 37.4616 17.2499 37.925 17.256V17.257Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M34.6439 20.0511C34.5402 20.0755 34.4711 20.0156 34.4071 19.918C34.1978 19.6001 33.9803 19.2872 33.7649 18.9723C33.709 18.89 33.706 18.891 33.6491 18.9743C33.4316 19.2963 33.2152 19.6184 32.9977 19.9404C32.9327 20.0369 32.7386 20.0938 32.636 20.044C32.5821 20.0176 32.6147 19.9841 32.634 19.9556C32.7498 19.787 32.8677 19.6194 32.9845 19.4507C33.1532 19.209 33.3209 18.9662 33.4916 18.7264C33.5322 18.6695 33.5149 18.6289 33.4814 18.5812C33.2873 18.3008 33.0933 18.0194 32.9002 17.738C32.825 17.6283 32.7488 17.5196 32.6756 17.4089C32.6319 17.3438 32.6431 17.3184 32.7193 17.3123C32.7803 17.3073 32.8413 17.3103 32.9022 17.3123C32.9683 17.3144 33.0018 17.3621 33.0343 17.4109C33.2314 17.7065 33.4296 18.0031 33.6277 18.2988C33.6399 18.317 33.6511 18.3353 33.6633 18.3526C33.7131 18.4207 33.7222 18.4217 33.769 18.3546C33.9204 18.1403 34.0708 17.9249 34.2212 17.7106C34.2892 17.613 34.3563 17.5155 34.4244 17.419C34.4935 17.3215 34.6703 17.2717 34.781 17.3174C34.838 17.3408 34.8075 17.3753 34.7882 17.4028C34.714 17.5084 34.6388 17.6141 34.5626 17.7187C34.3644 17.993 34.1683 18.2673 33.9671 18.5385C33.9143 18.6096 33.9102 18.6665 33.962 18.7407C34.2273 19.1206 34.4884 19.5046 34.7506 19.8866C34.7567 19.8957 34.7638 19.9038 34.7689 19.913C34.7871 19.9495 34.839 19.981 34.8126 20.0257C34.7871 20.0674 34.7333 20.045 34.6916 20.0501C34.6815 20.0511 34.6703 20.0501 34.6418 20.0501L34.6439 20.0511Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10657",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "20.4799",
                        transform: "translate(0.707031 0.9375)",
                        width: "60.4883"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite1/LogoAceWhite1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite1;
var _c;
$RefreshReg$(_c, "LogoAceWhite1");

  $parcel$ReactRefreshHelpers$e85c.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"bEpD5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite1", ()=>(0, _logoBinanceWhite1.LogoBinanceWhite1));
var _logoBinanceWhite1 = require("./LogoBinanceWhite1");

},{"./LogoBinanceWhite1":"cSEiv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cSEiv":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$38f9 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$38f9.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite1", ()=>LogoBinanceWhite1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-1 ${className}`,
        fill: "none",
        height: "21",
        viewBox: "0 0 104 21",
        width: "104",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10651)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M7.1368 9.0756L11.109 5.10507L15.0828 9.07883L17.3928 6.76726L11.109 0.481934L4.8252 6.76565L7.1368 9.0756Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.880859 10.7085L3.19162 8.39777L5.50238 10.7085L3.19162 13.0192L0.880859 10.7085Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M7.13612 12.3405L11.1083 16.3126L15.0822 12.3389L17.3938 14.6472L17.3921 14.6488L11.1083 20.9341L4.82452 14.652L4.82129 14.6488L7.13612 12.3405Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M16.7109 10.709L19.0217 8.39826L21.3325 10.709L19.0217 13.0197L16.7109 10.709Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M13.4528 10.7073L11.1089 8.36182L9.37556 10.0951L9.17526 10.2938L8.76495 10.7041L8.76172 10.7073L8.76495 10.7122L11.1089 13.0544L13.4528 10.7089L13.4544 10.7073H13.4528Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M24.9385 5.4375H29.9655C31.2126 5.4375 32.156 5.76057 32.7957 6.40671C33.0367 6.64539 33.2267 6.93055 33.3541 7.24488C33.4816 7.55921 33.5438 7.89616 33.5371 8.23529V8.26598C33.5415 8.54379 33.5028 8.8206 33.4224 9.08658C33.3509 9.31554 33.247 9.53312 33.1139 9.73272C32.9898 9.92093 32.8397 10.0906 32.6681 10.2367C32.5003 10.3811 32.3166 10.5057 32.1204 10.6082C32.6861 10.8052 33.1947 11.1381 33.6017 11.5774C33.9614 11.9867 34.1413 12.552 34.1413 13.2736V13.3043C34.1515 13.7549 34.0534 14.2014 33.8554 14.6062C33.6634 14.9793 33.382 15.2989 33.0364 15.5367C32.6456 15.7987 32.2104 15.9875 31.7521 16.094C31.2076 16.2231 30.6495 16.2855 30.0899 16.2797H24.9385V5.4375ZM29.4615 9.82156C29.8965 9.84258 30.3293 9.749 30.7167 9.55018C30.8678 9.46194 30.9911 9.33316 31.0728 9.17842C31.1544 9.02368 31.1911 8.84918 31.1787 8.67466V8.64397C31.1867 8.48317 31.154 8.32295 31.0837 8.17811C31.0134 8.03327 30.9077 7.90849 30.7764 7.8153C30.5083 7.62468 30.1211 7.52938 29.615 7.52938H27.263V9.82156H29.4615ZM30.0964 14.1911C30.5297 14.2154 30.961 14.1162 31.3402 13.9052C31.4879 13.8103 31.6075 13.6775 31.6865 13.5206C31.7655 13.3638 31.801 13.1887 31.7893 13.0135V12.9828C31.7951 12.8163 31.76 12.6509 31.6871 12.501C31.6141 12.3512 31.5056 12.2216 31.3709 12.1234C31.0931 11.9081 30.644 11.8004 30.0237 11.8004H27.263V14.1911H30.0964Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M37.1357 5.4375H39.5217V16.283H37.1357V5.4375Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M43.1328 5.4375H45.333L50.4182 12.1121V5.4375H52.7734V16.283H50.7428L45.4913 9.38865V16.283H43.1328V5.4375Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M59.9967 5.36035H62.1936L66.8411 16.2833H64.3501L63.3583 13.8506H58.7723L57.7804 16.2833H55.3477L59.9967 5.36035ZM62.507 11.7442L61.0629 8.22598L59.6252 11.7442H62.507Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M69.4229 5.44434H71.623L76.705 12.119V5.44434H79.0602V16.2898H77.0297L71.7781 9.39548V16.2898H69.4229V5.44434Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M87.6456 16.4738C86.8852 16.4803 86.1313 16.3331 85.4293 16.0409C84.7684 15.768 84.1687 15.3656 83.6658 14.8573C83.1628 14.3491 82.7666 13.7453 82.5006 13.0816C82.2199 12.3873 82.0778 11.6448 82.0822 10.896V10.8653C82.0698 9.38924 82.6377 7.96736 83.6637 6.90608C84.1685 6.38767 84.7729 5.97668 85.4406 5.6978C86.1669 5.39696 86.9467 5.24692 87.7328 5.25681C88.1977 5.25334 88.6619 5.29499 89.1188 5.38119C89.5097 5.45512 89.8919 5.56934 90.2593 5.72203C90.5926 5.86234 90.9096 6.03894 91.2043 6.24863C91.4919 6.45314 91.762 6.68115 92.012 6.93031L90.4951 8.68135C90.1075 8.32377 89.6727 8.02103 89.2028 7.7816C88.7412 7.56088 88.2347 7.45029 87.7231 7.45853C87.2974 7.45399 86.8755 7.54008 86.4856 7.71108C86.0957 7.88208 85.7466 8.13409 85.4616 8.45035C85.179 8.76581 84.9577 9.1312 84.809 9.52779C84.6534 9.9469 84.5751 10.3908 84.578 10.8378V10.8685C84.5765 11.315 84.6547 11.7581 84.809 12.177C84.9558 12.575 85.1748 12.9424 85.4551 13.2609C85.7379 13.5811 86.0862 13.8368 86.4763 14.0107C86.8665 14.1846 87.2895 14.2726 87.7167 14.2688C88.2606 14.286 88.8004 14.1689 89.2884 13.928C89.753 13.6748 90.1826 13.362 90.5662 12.9976L92.0846 14.5321C91.8165 14.8231 91.5265 15.0932 91.2172 15.3398C90.9132 15.5801 90.5833 15.7855 90.2334 15.952C89.8606 16.1275 89.4679 16.2572 89.0639 16.3381C88.597 16.4317 88.1217 16.4772 87.6456 16.4738Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M94.9004 5.4375H103.063V7.56007H97.2475V9.76018H102.368V11.8827H97.2556V14.1604H103.144V16.283H94.9052L94.9004 5.4375Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10651",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "20.452",
                        transform: "translate(0.881836 0.481934)",
                        width: "102.26"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite1/LogoBinanceWhite1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite1;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite1");

  $parcel$ReactRefreshHelpers$38f9.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"i43NG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite1", ()=>(0, _logoBitoproWhite1.LogoBitoproWhite1));
var _logoBitoproWhite1 = require("./LogoBitoproWhite1");

},{"./LogoBitoproWhite1":"fMlgm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fMlgm":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$50b2 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$50b2.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite1", ()=>LogoBitoproWhite1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-1 ${className}`,
        fill: "none",
        height: "22",
        viewBox: "0 0 87 22",
        width: "87",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M31.5342 3.6981C31.5217 3.83591 31.4214 3.93614 31.2836 3.94867C31.221 3.93614 31.1584 3.91108 31.1082 3.86097C30.3942 3.10925 29.4296 2.69581 28.252 2.57052C28.039 2.53294 27.8386 2.52041 27.6256 2.53294C25.4959 2.53294 23.1282 3.57281 21.0612 5.25164L24.1805 5.2767H25.8216C27.3375 5.2767 28.3898 5.3644 29.0537 5.48969C29.9808 5.70267 30.6071 6.07853 31.0331 6.56714C31.4089 7.10587 31.4966 7.73231 31.1959 8.44644C31.008 8.94758 30.7074 9.38608 30.319 9.73688C29.8179 10.1754 29.2542 10.5387 28.6403 10.8143C29.5172 11.1902 30.0685 11.6036 30.3691 12.1424C30.6197 12.6811 30.6197 13.3075 30.3691 14.0217C30.1186 14.7358 29.6551 15.3497 28.941 15.9385C28.2645 16.5149 27.4753 16.9534 26.6234 17.229C25.7841 17.5171 24.6441 17.6424 23.3412 17.6424H21.3117C21.2491 17.6675 21.1739 17.68 21.0988 17.68L18.6684 17.655L18.6559 17.68V17.655L17.7289 17.6424C17.3781 17.6424 17.1025 17.3668 17.1025 17.016C17.1025 16.6652 17.3781 16.3896 17.7289 16.3896L19.1194 16.4021L22.7399 6.49197L19.6957 6.46691H19.6832C18.5682 7.60702 17.6412 8.89746 16.9146 10.3132L18.7812 10.3383C19.1194 10.3383 19.4076 10.6014 19.4076 10.9522V10.9647C19.395 11.303 19.1194 11.5786 18.7812 11.5911L16.3508 11.5661C15.975 12.5182 15.737 13.533 15.6618 14.5479H13.482C13.6324 13.1071 14.0333 11.6913 14.6596 10.3758C17.0524 5.16394 22.3139 1.24249 26.8113 1.24249C27.0619 1.22996 27.3124 1.25502 27.563 1.28008C29.2416 1.44295 30.5946 2.19466 31.4715 3.48511C31.5342 3.57281 31.5718 3.6104 31.5342 3.6981ZM28.039 8.78471C28.1643 8.40885 28.1267 8.07058 27.826 7.87012C27.5755 7.65713 27.0744 7.53185 26.3478 7.53185H24.8695L23.9049 10.1629H25.2454C25.997 10.1629 26.6359 10.0376 27.0994 9.78699C27.5379 9.57401 27.8636 9.22321 28.039 8.78471ZM21.9882 15.4123H23.4665C24.7693 15.4123 25.6964 15.287 26.2476 15.0365C26.7361 14.8235 27.1245 14.4351 27.3375 13.959C27.5504 13.4203 27.4252 12.9943 26.9992 12.7062C26.5733 12.418 25.7339 12.2426 24.5188 12.2426H23.1783L21.9882 15.4123ZM22.2388 1.53065C20.2594 1.78122 18.1172 2.85868 16.2632 4.53751C15.5491 5.17647 14.9102 5.86554 14.3339 6.61726H12.3546C14.9227 3.15937 18.706 0.816518 22.1887 0.941804C22.3515 0.941804 22.4768 1.06709 22.4768 1.21743V1.22996C22.5018 1.39283 22.3891 1.51812 22.2388 1.53065ZM10.2499 6.11612C9.16006 7.53185 8.2706 9.16056 7.80709 10.8645C7.18071 13.0695 7.18071 15.2369 7.7695 17.0786C8.07016 18.0559 8.58379 18.9579 9.28533 19.7096C9.41061 19.8349 9.41061 20.0354 9.28533 20.1732C9.22269 20.2484 9.135 20.2985 9.03478 20.2985C8.95962 20.311 8.88445 20.286 8.82181 20.2609C7.88225 19.6094 7.1306 18.7324 6.64203 17.7051C6.61697 17.7051 6.57939 17.7176 6.55434 17.7176L3.89851 17.68C3.54774 17.68 3.27213 17.4044 3.27213 17.0536C3.27213 16.7028 3.54774 16.4271 3.89851 16.4271L6.15346 16.4647C5.6273 14.6982 5.65235 12.631 6.30379 10.5137C6.72972 9.09792 7.38115 7.76989 8.24555 6.56714L7.51895 6.55462C7.16818 6.55462 6.89258 6.27899 6.89258 5.92819C6.89258 5.57739 7.16818 5.30176 7.51895 5.30176L9.12247 5.33934C9.16006 5.33934 9.21017 5.33934 9.24775 5.35187C10.488 3.98625 12.0289 2.92132 13.7451 2.25731C13.9205 2.16961 14.1209 2.24478 14.2086 2.42018V2.43271C14.2462 2.60811 14.2212 2.78351 14.1209 2.93385C12.6928 3.61039 11.3398 4.73797 10.2499 6.11612ZM4.39961 11.2027L1.04223 11.2403C0.653881 11.2528 0.31564 10.9522 0.303112 10.5638C0.290585 10.1754 0.591244 9.83711 0.979596 9.82458C1.00465 9.82458 1.01718 9.82458 1.04223 9.82458L4.36202 9.78699C4.7629 9.78699 5.08862 10.1002 5.11367 10.5011C5.10114 10.877 4.78796 11.1902 4.39961 11.2027ZM9.9994 11.4533C10.1247 11.0399 10.2499 10.5763 10.4128 10.1629C10.7009 9.36102 11.0768 8.58425 11.5528 7.87012H13.482C12.9684 8.73459 12.5174 9.64918 12.1416 10.5763C12.0539 10.8645 11.9286 11.1526 11.8409 11.4533H9.9994ZM11.4651 12.656C11.1394 14.0843 11.1269 15.5627 11.4275 16.9909C11.8535 18.7449 12.768 20.0354 14.1209 20.7871C14.2462 20.8748 14.2963 21.0251 14.2462 21.163C14.1961 21.2632 14.1084 21.3258 13.9957 21.3258H13.908C12.317 20.8999 10.9765 19.7973 10.2499 18.319C9.44819 16.7404 9.28533 14.7358 9.66116 12.6435L11.4651 12.656ZM15.762 15.7882C15.8247 16.59 16.0502 17.3793 16.4385 18.0809C17.1526 19.3338 18.3678 20.0855 19.9337 20.2484C20.1467 20.286 20.3471 20.2985 20.5601 20.286C21.7001 20.286 22.9153 19.9978 24.1805 19.409C24.3058 19.3588 24.4561 19.409 24.5188 19.5342C24.5939 19.6345 24.5689 19.7723 24.4687 19.8475C24.4561 19.86 24.4436 19.86 24.4311 19.8725C22.6647 20.8748 20.8983 21.4135 19.2572 21.4135C19.0067 21.4261 18.7561 21.401 18.5056 21.3759C16.6515 21.163 15.2234 20.2985 14.3464 18.7951C13.8203 17.8805 13.5447 16.8406 13.5447 15.7882H15.762Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite1/LogoBitoproWhite1.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M60.1843 16.1264C58.1048 16.1264 56.7017 14.8235 56.7017 12.8815C56.7017 10.1503 58.681 7.9202 61.6125 7.9202C63.8173 7.9202 65.0951 9.36099 65.0951 11.1401C65.0951 14.0216 63.0406 16.1264 60.1843 16.1264ZM61.2993 9.6742C59.9087 9.6742 59.1947 11.6161 59.2197 12.8314C59.2197 13.746 59.6958 14.3599 60.5351 14.3599C61.863 14.3599 62.6021 12.5182 62.6021 11.1651C62.5896 10.4384 62.2639 9.6742 61.2993 9.6742ZM56.6892 9.8496H54.9353L54.3841 12.5182C54.3089 12.8439 54.2588 13.1822 54.2463 13.508C54.2463 13.8963 54.4092 14.172 54.9353 14.172C55.1608 14.172 55.3863 14.172 55.6118 14.1344L55.3237 15.951C55.023 16.0638 54.4217 16.1264 53.8955 16.1264C52.4549 16.1264 51.7659 15.3998 51.7659 14.4225C51.7784 13.9339 51.8285 13.4453 51.9412 12.9692L53.2316 6.62975L55.7245 5.97827L55.2986 8.10813H57.0525L56.6892 9.8496ZM50.1122 7.11837H50.0997C49.4483 7.11837 48.9346 6.67987 48.9346 5.9908C48.9472 5.20149 49.5861 4.67529 50.3252 4.67529C51.0267 4.67529 51.5404 5.12632 51.5404 5.81539C51.5404 6.64228 50.8889 7.1309 50.1122 7.11837ZM49.4608 15.951H47.043L48.6089 8.10813H51.0267L49.4608 15.951ZM44.6878 10.2255C45.7777 10.5512 46.4667 11.4032 46.4667 12.5808C46.4667 13.7335 45.8153 14.5854 44.9133 15.1492C43.9612 15.7631 42.5331 16.0262 40.6414 16.0262C39.6893 16.0387 38.7247 15.9761 37.7852 15.8132L39.8647 5.30172C40.8419 5.13885 41.8441 5.05115 42.8463 5.05115C44.0239 5.05115 44.9008 5.18896 45.6524 5.62747C46.4041 5.99079 46.9678 6.6924 46.9678 7.60698C46.9678 8.9726 45.903 9.83708 44.6878 10.1753V10.2255ZM40.4786 14.172C40.7918 14.2096 41.0924 14.2221 41.4056 14.2221C42.721 14.2221 43.9111 13.7209 43.9111 12.5182C43.9111 11.4407 42.9715 11.1275 41.8441 11.1275H41.0924L40.4786 14.172ZM42.9089 6.85527C42.5957 6.84274 42.2825 6.8678 41.9693 6.93044L41.4682 9.43616H42.27C43.5979 9.43616 44.5124 8.8849 44.5124 7.97031C44.4999 7.19354 43.8359 6.85527 42.9089 6.85527Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite1/LogoBitoproWhite1.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M81.9068 16.0636C79.8398 16.0636 78.5619 14.698 78.5619 12.8438C78.5619 10.2002 80.4912 7.89496 83.2848 7.89496C85.4897 7.89496 86.6422 9.3984 86.6422 11.1399C86.6422 13.7959 84.6879 16.0636 81.9068 16.0636ZM83.0468 9.34828C81.4809 9.34828 80.5789 11.3403 80.5789 12.7936C80.5789 13.8711 81.1802 14.6228 82.1699 14.6228C83.6356 14.6228 84.6127 12.6934 84.6127 11.1399C84.6127 10.338 84.2369 9.34828 83.0468 9.34828ZM78.6121 9.73667C77.2215 9.73667 76.332 11.0898 76.0063 12.7561L75.38 15.9007H73.4257C73.4257 15.9007 74.7035 8.79702 74.8037 8.08289H76.6327C76.52 8.60909 76.3947 9.16035 76.307 9.73667H76.3571C76.9083 8.67174 77.7978 7.90749 78.9252 7.90749C79.063 7.90749 79.2008 7.92002 79.3387 7.94508L78.9503 9.77425C78.8501 9.74919 78.7248 9.73667 78.6121 9.73667ZM69.2665 11.8791C68.9158 11.8665 68.5525 11.8415 68.2017 11.8039L67.3999 15.9007H65.4707L67.5879 5.26396C68.4898 5.08856 69.4043 5.00086 70.3314 5.01338C71.3712 5.01338 72.4986 5.22637 73.2252 5.77763C73.9017 6.26624 74.265 6.96785 74.265 7.93255C74.265 9.08518 73.7263 10.1626 72.8243 10.8642C71.8973 11.5408 70.607 11.8791 69.2665 11.8791ZM70.3188 6.50429C69.9556 6.49176 69.5922 6.52934 69.2415 6.60452L68.5024 10.2629C68.8406 10.3255 69.1788 10.3631 69.5296 10.3631C71.1958 10.3631 72.2857 9.34828 72.2857 8.07036C72.2857 6.91773 71.4338 6.50429 70.3188 6.50429Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite1/LogoBitoproWhite1.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite1/LogoBitoproWhite1.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite1/LogoBitoproWhite1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite1;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite1");

  $parcel$ReactRefreshHelpers$50b2.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"k2edf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite1", ()=>(0, _logoGateioWhite1.LogoGateioWhite1));
var _logoGateioWhite1 = require("./LogoGateioWhite1");

},{"./LogoGateioWhite1":"3zGGv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3zGGv":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$dcb8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$dcb8.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite1", ()=>LogoGateioWhite1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-1 ${className}`,
        fill: "none",
        height: "21",
        viewBox: "0 0 90 21",
        width: "90",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10652)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "21",
                        id: "mask0_271_10652",
                        maskUnits: "userSpaceOnUse",
                        width: "90",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.391602 0.481934H89.6962V20.9339H0.391602V0.481934Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_271_10652)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M74.324 6.55991H76.8602V4.02295H74.324V6.55991ZM60.8435 10.7848C61.3281 9.49933 62.5691 8.58409 64.0242 8.58409C65.4792 8.58409 66.7202 9.49933 67.205 10.7848H60.8435ZM64.0242 6.22534C60.8451 6.22534 58.2671 8.80367 58.2671 11.9843C58.2671 15.1649 60.8451 17.7429 64.0242 17.7429C66.2058 17.7429 68.1037 16.5295 69.0806 14.7411L66.9533 13.7087C66.3621 14.7111 65.272 15.3841 64.0242 15.3841C62.4477 15.3841 61.1226 14.3106 60.738 12.8546H67.3102C67.3098 12.8556 67.3096 12.8571 67.3094 12.8584H69.7164C69.7599 12.5733 69.7824 12.2813 69.7824 11.9843C69.7824 8.80367 67.2044 6.22534 64.0242 6.22534ZM70.4509 17.4359H72.9871V14.8989H70.4509V17.4359ZM74.324 17.4359H76.8602V7.67521H74.324V17.4359ZM83.939 15.3841C82.0618 15.3841 80.54 13.8619 80.54 11.9843C80.54 10.1063 82.0618 8.58409 83.939 8.58409C85.8163 8.58409 87.3381 10.1063 87.3381 11.9843C87.3381 13.8619 85.8163 15.3841 83.939 15.3841ZM83.938 6.22534C80.7589 6.22534 78.1809 8.80367 78.1809 11.9843C78.1809 15.1649 80.7589 17.7429 83.938 17.7429C87.1181 17.7429 89.6961 15.1649 89.6961 11.9843C89.6961 8.80367 87.1181 6.22534 83.938 6.22534ZM30.9116 9.86148V12.4846H34.4579C34.2727 13.2341 33.9066 13.9058 33.3817 14.4423C32.5899 15.2517 31.4921 15.6977 30.2902 15.6977C27.7962 15.6977 25.7669 13.668 25.7669 11.173C25.7669 8.67807 27.7962 6.64817 30.2902 6.64817C31.6262 6.64817 32.8542 7.22014 33.7056 8.20666L35.7359 6.54718C34.3898 4.96916 32.3925 4.02486 30.2902 4.02486C26.3501 4.02486 23.1445 7.23159 23.1445 11.173C23.1445 15.1145 26.3501 18.321 30.2902 18.321C32.2033 18.321 33.9669 17.6315 35.2562 16.3136C36.3381 15.2074 37.0552 13.6644 37.193 12.1186C37.2603 11.3646 37.2664 10.6157 37.2267 9.86148H30.9116ZM43.8299 15.3847C41.9526 15.3847 40.4306 13.8621 40.4306 11.9843C40.4306 10.1061 41.9526 8.58388 43.8299 8.58388C45.7073 8.58388 47.2293 10.1061 47.2293 11.9843C47.2293 13.8621 45.7073 15.3847 43.8299 15.3847ZM47.2298 7.34764C46.2768 6.6488 45.1018 6.2351 43.8299 6.2351C40.6508 6.2351 38.0736 8.81322 38.0736 11.9932C38.0736 15.1736 40.6508 17.7513 43.8299 17.7513C45.1018 17.7513 46.2768 17.3379 47.2298 16.639V17.4359H49.5863V6.55079H47.2298V7.34764ZM54.6452 4.02316H52.2884V6.55991H50.8759V8.78479H52.2884V14.6072C52.2884 15.2084 52.3639 15.7142 52.5137 16.1112C52.6613 16.5039 52.8869 16.8113 53.1552 17.0514C53.4271 17.2952 53.7461 17.4851 54.1243 17.5929C54.5086 17.7011 54.9326 17.7429 55.3807 17.7429C55.8446 17.7429 56.2582 17.6947 56.6111 17.5994C56.9388 17.5114 57.2529 17.3869 57.5452 17.2286V15.4359C57.0803 15.637 56.6457 15.7098 56.1498 15.7329C55.6264 15.7575 55.3167 15.6079 55.059 15.3623C54.789 15.1049 54.6452 14.7695 54.6452 14.2069V8.78479H57.5452V6.55991H54.6452V4.02316Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "21",
                        id: "mask1_271_10652",
                        maskUnits: "userSpaceOnUse",
                        width: "90",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.391602 0.481934H89.6962V20.9339H0.391602V0.481934Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_271_10652)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M10.6148 16.3323C7.50949 16.3323 4.99214 13.8144 4.99214 10.7081C4.99214 7.60188 7.50949 5.08359 10.6148 5.08359V0.481934C4.9686 0.481934 0.391602 5.06026 0.391602 10.7081C0.391602 16.3556 4.9686 20.934 10.6148 20.934C16.2607 20.934 20.8379 16.3556 20.8379 10.7081H16.2374C16.2374 13.8144 13.72 16.3323 10.6148 16.3323Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "21",
                        id: "mask2_271_10652",
                        maskUnits: "userSpaceOnUse",
                        width: "90",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.391602 0.481934H89.6962V20.9339H0.391602V0.481934Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_271_10652)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M10.6143 10.7077H16.2369V5.0835H10.6143V10.7077Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10652",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "20.452",
                        transform: "translate(0.391602 0.481934)",
                        width: "89.3046"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite1/LogoGateioWhite1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite1;
var _c;
$RefreshReg$(_c, "LogoGateioWhite1");

  $parcel$ReactRefreshHelpers$dcb8.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"l20Gs":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$449f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$449f.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useWindowWidth", ()=>useWindowWidth);
var _react = require("react");
var _s = $RefreshSig$();
function useWindowWidth() {
    _s();
    const [screenWidth, setScreenWidth] = (0, _react.useState)(0);
    (0, _react.useEffect)(()=>{
        function handleResize() {
            setScreenWidth(window.innerWidth);
        }
        window.addEventListener("resize", handleResize);
        handleResize();
        return ()=>window.removeEventListener("resize", handleResize);
    }, []);
    return screenWidth;
}
_s(useWindowWidth, "p7mA4Om2cHpiZ8viGIkF1WDmDDM=");

  $parcel$ReactRefreshHelpers$449f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"7zh9u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite3", ()=>(0, _logoAceWhite3.LogoAceWhite3));
var _logoAceWhite3 = require("./LogoAceWhite3");

},{"./LogoAceWhite3":"cCpFW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cCpFW":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$a71d = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$a71d.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite3", ()=>LogoAceWhite3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-3 ${className}`,
        fill: "none",
        height: "27",
        viewBox: "0 0 78 27",
        width: "78",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_9767)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M17.1978 0.729492C17.2522 0.888681 17.361 1.01551 17.4477 1.154C18.3306 2.5621 19.2173 3.96762 20.1054 5.37314C20.987 6.77089 21.8712 8.16735 22.7528 9.56511C23.6201 10.9396 24.4849 12.3153 25.351 13.6911C26.0125 14.7407 26.6766 15.789 27.3381 16.8386C28.0514 17.9697 28.7621 19.1009 29.4754 20.232C30.1369 21.2816 30.801 22.33 31.4625 23.3796C32.1564 24.4784 32.8503 25.5784 33.5429 26.6785C33.5701 26.7212 33.5908 26.7665 33.6141 26.8118H15.5758C15.6081 26.7212 15.6612 26.6397 15.7091 26.5569C16.2269 25.6613 16.7473 24.767 17.2652 23.8714C17.8425 22.8722 18.4186 21.8731 18.9947 20.874C19.2898 20.3628 19.5824 19.8489 19.8802 19.3403C19.9319 19.251 19.9242 19.1876 19.8685 19.1048C19.7274 18.8964 19.5954 18.6816 19.4607 18.468C18.7189 17.2903 17.9772 16.1125 17.2354 14.9348C17.1707 14.8313 17.1538 14.8313 17.0878 14.9348C16.8017 15.3878 16.5156 15.8408 16.2295 16.2937C15.8178 16.9434 15.4062 17.5931 14.9958 18.2441C14.4534 19.1035 13.9136 19.9654 13.3711 20.8248C12.9142 21.5495 12.4559 22.2717 11.9989 22.9965C11.4397 23.883 10.8791 24.7696 10.3225 25.6574C10.0817 26.0418 9.82923 26.4184 9.60527 26.8118C6.67181 26.8118 3.73835 26.8118 0.804884 26.8092C0.769931 26.8092 0.687079 26.8649 0.694847 26.7575C0.74404 26.7277 0.77252 26.6811 0.802295 26.6345C1.29682 25.8528 1.79004 25.0698 2.28456 24.2881C2.90983 23.2967 3.5351 22.3054 4.16167 21.314C4.72609 20.4197 5.29311 19.5267 5.85753 18.6311C6.532 17.5621 7.20517 16.493 7.87963 15.424C8.33661 14.6993 8.79488 13.9771 9.25186 13.2523C9.80463 12.3774 10.3548 11.5013 10.9076 10.6251C11.3542 9.91584 11.8021 9.2079 12.2488 8.49867C12.7938 7.63414 13.3362 6.7696 13.8812 5.90636C14.3822 5.11171 14.8832 4.31835 15.3842 3.52371C15.9706 2.59316 16.5557 1.66392 17.1409 0.733375C17.159 0.733375 17.1771 0.733375 17.1953 0.733375L17.1978 0.729492Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M77.7591 23.4016C77.0082 23.4016 76.2561 23.4029 75.5053 23.4042C75.4638 23.4042 75.4224 23.4054 75.381 23.4042C75.293 23.4016 75.258 23.4391 75.2684 23.531C75.2917 23.7264 75.3227 23.9205 75.3952 24.1056C75.6658 24.7954 76.3804 24.9572 76.937 24.6466C77.0885 24.5612 77.1895 24.424 77.2684 24.27C77.328 24.1561 77.5494 24.0927 77.6594 24.1574C77.7215 24.1936 77.6931 24.2467 77.6762 24.2907C77.5908 24.5185 77.4549 24.7113 77.2659 24.8653C76.7519 25.2821 75.8833 25.2639 75.3978 24.8187C75.1661 24.6052 75.0289 24.3308 74.9525 24.028C74.8036 23.43 74.8386 22.8476 75.1091 22.2885C75.548 21.3826 76.7351 21.3243 77.3125 21.855C77.5274 22.0517 77.6581 22.3028 77.7293 22.5836C77.7384 22.6186 77.7474 22.6548 77.7565 22.6897V23.4042L77.7591 23.4016ZM76.3428 23.0444C76.6497 23.0444 76.9565 23.0457 77.2633 23.0444C77.3811 23.0444 77.4031 23.0159 77.3901 22.9046C77.3707 22.7493 77.3345 22.5992 77.2684 22.4555C77.0044 21.8757 76.2108 21.6932 75.7189 22.0996C75.4664 22.3092 75.3693 22.5953 75.3124 22.902C75.2891 23.0301 75.2994 23.0444 75.4354 23.0444C75.737 23.0457 76.0399 23.0444 76.3415 23.0444H76.3428Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M68.1035 11.0211C68.1035 9.11987 68.1035 7.21996 68.1035 5.31875C68.1035 5.26828 68.1048 5.21781 68.1035 5.16733C68.1023 5.08062 68.1437 5.0405 68.2291 5.04309C68.2705 5.04309 68.312 5.04309 68.3534 5.04309C71.1949 5.04309 74.0378 5.04309 76.8793 5.04309C77.0459 5.04309 77.1292 5.12592 77.1292 5.29158C77.1292 5.81314 77.1292 6.33601 77.1292 6.85758C77.1292 7.02583 77.0429 7.10995 76.8703 7.10995C74.8171 7.10995 72.7627 7.10995 70.7095 7.10995C70.5541 7.10995 70.4765 7.1876 70.4765 7.34291C70.4765 8.1725 70.4765 9.0008 70.4765 9.83039C70.4765 9.97362 70.5468 10.0452 70.6875 10.0452C72.5024 10.0452 74.3174 10.0452 76.1324 10.0452C76.2998 10.0452 76.3835 10.1294 76.3835 10.2976C76.3835 10.8567 76.3835 11.4145 76.3835 11.9736C76.3835 12.1574 76.3732 12.1665 76.188 12.1665C74.3821 12.1665 72.5762 12.1665 70.7703 12.1665C70.725 12.1665 70.6784 12.1665 70.6331 12.1665C70.4881 12.169 70.4765 12.1781 70.4765 12.3243C70.4765 13.1306 70.4765 13.9369 70.4765 14.7432C70.4765 14.9322 70.4765 14.9322 70.6694 14.9322C72.7368 14.9322 74.8042 14.9322 76.8716 14.9322C77.0433 14.9322 77.1292 15.0167 77.1292 15.1859C77.1292 15.7359 77.1292 16.2846 77.1292 16.8347C77.1292 17.0185 77.1201 17.0275 76.9337 17.0275C74.0546 17.0275 71.1768 17.0275 68.2977 17.0275C68.1126 17.0275 68.1035 17.0185 68.1035 16.8334C68.1035 14.896 68.1035 12.9585 68.1035 11.0211Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M51.1599 11.1114C51.1444 10.1032 51.3645 9.20757 51.7878 8.36374C52.048 7.84605 52.3742 7.37237 52.7639 6.94139C53.296 6.35123 53.9212 5.88661 54.6255 5.5307C55.3737 5.15279 56.1673 4.93406 57.0075 4.87065C58.0573 4.7917 59.0619 4.96513 60.0277 5.37151C60.7177 5.66271 61.3352 6.0678 61.8815 6.5829C62.2931 6.97116 62.6582 7.39825 62.9469 7.88747C63.0284 8.02595 63.0271 8.0363 62.8809 8.09454C62.2336 8.35079 61.585 8.60446 60.9377 8.8633C60.8432 8.90084 60.7876 8.87884 60.7293 8.79989C60.3202 8.24079 59.8166 7.78781 59.203 7.46296C58.7072 7.20024 58.1816 7.04234 57.6146 7.02293C56.6126 6.98799 55.7362 7.31413 54.9854 7.95865C54.1711 8.65752 53.6804 9.54536 53.5588 10.6183C53.4228 11.8128 53.797 12.8482 54.5789 13.7464C55.1666 14.422 55.9045 14.8555 56.7835 15.0251C57.8153 15.2244 58.7551 14.9824 59.6147 14.3935C60.051 14.0958 60.4173 13.727 60.7228 13.2986C60.7889 13.2054 60.8497 13.1925 60.952 13.2339C61.5941 13.4914 62.2388 13.7438 62.8821 13.9988C63.0258 14.0557 63.0297 14.0712 62.9495 14.2071C62.3501 15.2127 61.5177 15.9711 60.4872 16.5199C59.783 16.8952 59.0321 17.1256 58.2412 17.2123C57.0308 17.3456 55.8657 17.1722 54.7614 16.6428C54.0468 16.2999 53.406 15.8547 52.8662 15.2761C51.9108 14.255 51.3257 13.0579 51.1833 11.6562C51.1625 11.4543 51.1625 11.2537 51.1599 11.1127V11.1114Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M46.7892 17.0274C46.4268 17.0274 46.0643 17.0222 45.7031 17.03C45.5646 17.0339 45.4882 16.9898 45.4274 16.863C45.1749 16.344 44.9095 15.8315 44.6558 15.3125C44.6001 15.1987 44.5315 15.1534 44.4021 15.1546C42.6104 15.1585 40.8175 15.1585 39.0258 15.1546C38.8925 15.1546 38.8187 15.1987 38.7617 15.319C38.5157 15.8315 38.2581 16.3376 38.0135 16.8501C37.9526 16.9782 37.8749 17.0326 37.7286 17.0313C36.9998 17.0248 36.271 17.0287 35.5421 17.0287C35.5059 17.0287 35.4684 17.0287 35.4321 17.0248C35.3777 17.0196 35.3609 16.9886 35.3816 16.9381C35.3959 16.9044 35.4127 16.8721 35.4295 16.8384C36.0871 15.5804 36.7435 14.3225 37.4024 13.0632C37.6976 12.4989 37.994 11.9359 38.2879 11.3717C38.9637 10.0774 39.6394 8.78193 40.3165 7.48642C40.622 6.90143 40.9275 6.31774 41.233 5.73405C41.3301 5.54768 41.4311 5.36261 41.5256 5.17366C41.5657 5.09212 41.624 5.06494 41.712 5.06494C41.8039 5.06494 41.866 5.08953 41.9101 5.17624C42.1081 5.56321 42.3127 5.9476 42.5146 6.33327C43.0182 7.30005 43.5205 8.26683 44.0241 9.23361C44.4474 10.0451 44.872 10.8566 45.2966 11.668C45.8352 12.6982 46.3737 13.7297 46.9135 14.7599C47.2656 15.4329 47.6216 16.1059 47.9751 16.7776C48.0009 16.8268 48.0255 16.876 48.0488 16.9251C48.0799 16.9898 48.0527 17.0209 47.9867 17.0235C47.9505 17.0248 47.9129 17.0248 47.8767 17.0248C47.5142 17.0248 47.153 17.0248 46.7905 17.0248L46.7892 17.0274ZM41.6952 13.1188C42.213 13.1188 42.7295 13.1188 43.2473 13.1188C43.4053 13.1188 43.4105 13.1085 43.3405 12.9648C43.0596 12.3837 42.7774 11.8039 42.4978 11.2228C42.3606 10.9381 42.2285 10.6521 42.0926 10.3673C41.98 10.1318 41.8648 9.89754 41.7521 9.66329C41.7275 9.61152 41.7055 9.61023 41.6796 9.6607C41.6693 9.68141 41.6589 9.70212 41.6499 9.72282C41.4583 10.1227 41.2667 10.5239 41.0738 10.9226C40.7398 11.6098 40.4058 12.297 40.0705 12.983C40.0084 13.1111 40.0122 13.1188 40.1572 13.1188C40.6699 13.1188 41.1825 13.1188 41.6952 13.1188Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M72.0112 23.2824C72.0112 23.7626 72.0177 24.244 72.0086 24.7242C72.0034 25.0076 71.9853 25.2898 71.9025 25.5654C71.7303 26.1362 71.3367 26.439 70.7581 26.5011C70.4344 26.5361 70.1069 26.5283 69.8001 26.3872C69.4532 26.2281 69.2331 25.9615 69.1476 25.5887C69.1231 25.48 69.1412 25.4606 69.2551 25.4554C69.3004 25.4528 69.347 25.4567 69.3923 25.4554C69.4713 25.4515 69.5192 25.4826 69.549 25.559C69.716 25.9822 70.0512 26.1413 70.4823 26.1452C70.5742 26.1452 70.6662 26.1465 70.7568 26.1336C71.1827 26.0676 71.4455 25.8243 71.5516 25.4036C71.6164 25.1435 71.6293 24.8795 71.6241 24.6129C71.6241 24.5909 71.6319 24.5611 71.606 24.5533C71.5801 24.5456 71.5711 24.5753 71.5568 24.5922C70.9445 25.348 69.7444 25.225 69.2952 24.3424C68.9289 23.6228 68.9586 22.8838 69.3548 22.1862C69.6189 21.7216 70.0551 21.5055 70.5976 21.5197C70.8008 21.5249 70.9989 21.5495 71.1853 21.6375C71.3199 21.7009 71.439 21.7824 71.5374 21.895C71.5568 21.917 71.5685 21.9649 71.606 21.9481C71.6384 21.9351 71.6228 21.8911 71.628 21.8601C71.6345 21.82 71.6397 21.7785 71.6448 21.7371C71.6526 21.6789 71.6474 21.609 71.7251 21.5961C71.8105 21.5805 71.9012 21.5637 71.9775 21.6168C72.0293 21.6517 72.0125 21.7164 72.0138 21.7708C72.0138 22.2742 72.0138 22.7777 72.0138 23.2811H72.0112V23.2824ZM71.6241 23.263C71.6358 23.0585 71.6177 22.8359 71.5633 22.6172C71.4662 22.225 71.2332 21.9701 70.8215 21.9054C70.7361 21.8924 70.648 21.8937 70.5613 21.8898C70.0991 21.8691 69.7626 22.1357 69.6059 22.5344C69.4234 22.9964 69.4078 23.4714 69.5632 23.9451C69.6642 24.2518 69.8519 24.4938 70.1561 24.6297C70.3555 24.719 70.5613 24.7242 70.7749 24.6905C71.1193 24.6362 71.3652 24.4602 71.4973 24.1327C71.6073 23.8596 71.6319 23.5749 71.6241 23.263Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M37.1618 25.0789C36.7177 25.0789 36.2724 25.0789 35.8284 25.0789C35.6627 25.0789 35.6484 25.066 35.6484 24.8978C35.6484 23.4055 35.6484 21.9133 35.6484 20.4198C35.6484 20.2438 35.6588 20.2347 35.8361 20.2347C36.7113 20.2347 37.5864 20.2347 38.4615 20.2347C38.5224 20.2347 38.6039 20.2088 38.6311 20.2852C38.6648 20.3809 38.6648 20.4832 38.6259 20.5802C38.613 20.6126 38.5754 20.6178 38.5431 20.6204C38.4978 20.623 38.4512 20.6243 38.4058 20.6243C37.6861 20.6243 36.9676 20.6243 36.2478 20.6243C36.0782 20.6243 36.0666 20.6346 36.0666 20.8029C36.0666 21.2519 36.0666 21.6997 36.0666 22.1488C36.0666 22.3158 36.0769 22.3236 36.2491 22.3249C36.9313 22.3249 37.6149 22.3249 38.2971 22.3261C38.3657 22.3261 38.4589 22.2938 38.4965 22.3753C38.5366 22.4633 38.5224 22.5643 38.5029 22.6588C38.4939 22.7002 38.455 22.7105 38.4162 22.7131C38.3709 22.7157 38.3243 22.7157 38.279 22.7157C37.6058 22.7157 36.9313 22.7157 36.2582 22.7157C36.0718 22.7157 36.0666 22.7209 36.0666 22.9098C36.0666 23.4405 36.0666 23.9724 36.0666 24.503C36.0666 24.6803 36.0743 24.6881 36.253 24.6881C37 24.6881 37.7469 24.6881 38.4939 24.6881C38.5392 24.6881 38.5858 24.6881 38.6311 24.6907C38.6583 24.6907 38.6906 24.692 38.7075 24.7166C38.7696 24.8097 38.7088 24.9016 38.701 24.9948C38.6958 25.0544 38.6466 25.0751 38.591 25.0777C38.5495 25.0789 38.5081 25.0802 38.4667 25.0802C38.0317 25.0802 37.5967 25.0802 37.1605 25.0802L37.1618 25.0789Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M60.3526 23.6343C60.3526 23.9087 60.3526 24.1843 60.3526 24.4587C60.3526 24.5959 60.3552 24.7331 60.3746 24.8703C60.4005 25.0566 60.3746 25.0799 60.1921 25.0799C60.174 25.0799 60.1559 25.0786 60.1377 25.0799C60.0536 25.0825 60.0147 25.0372 59.9992 24.9596C59.9798 24.8677 59.9992 24.768 59.941 24.6852C59.8762 24.7486 59.8141 24.8146 59.7468 24.8754C59.5513 25.0527 59.3118 25.1187 59.0568 25.1511C58.772 25.1873 58.4975 25.155 58.2399 25.0281C57.8684 24.8457 57.6612 24.4289 57.6962 24.0148C57.7376 23.5294 58.0095 23.2525 58.4496 23.1062C58.6814 23.0286 58.9234 22.9975 59.1668 22.9911C59.3869 22.9846 59.607 22.9859 59.827 22.9898C59.9267 22.9911 59.9694 22.9509 59.9656 22.8513C59.9604 22.7231 59.9681 22.595 59.9487 22.4682C59.8995 22.1576 59.7157 21.979 59.4154 21.9156C59.1979 21.869 58.9791 21.8716 58.7616 21.922C58.5377 21.9725 58.3888 22.1045 58.3085 22.3206C58.2257 22.5407 58.2114 22.5445 57.9797 22.529C57.8852 22.5225 57.8593 22.4798 57.8774 22.3957C57.946 22.0864 58.0949 21.8353 58.3836 21.68C58.6166 21.5558 58.8691 21.5182 59.128 21.5234C59.3196 21.5273 59.5112 21.5402 59.6976 21.6037C60.0588 21.7266 60.2607 21.9816 60.328 22.3491C60.3487 22.4617 60.3578 22.5756 60.3565 22.6908C60.3539 23.0066 60.3565 23.3224 60.3565 23.6395L60.3526 23.6343ZM59.4866 23.3237C59.3908 23.3237 59.2937 23.3185 59.1979 23.3237C58.9649 23.3379 58.7318 23.3586 58.5131 23.4544C58.2244 23.5812 58.0794 23.8271 58.1014 24.1481C58.1234 24.4509 58.3111 24.6787 58.6063 24.7615C58.8289 24.8237 59.0516 24.8042 59.2717 24.7486C59.5811 24.6696 59.7817 24.4742 59.8762 24.1688C59.95 23.9294 59.9668 23.6835 59.9617 23.435C59.9604 23.3534 59.9202 23.3198 59.8413 23.3211C59.7222 23.3224 59.6031 23.3211 59.484 23.3211L59.4866 23.3237Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M52.1523 22.5264C52.1523 21.7525 52.1523 20.9798 52.1523 20.2059C52.1523 19.9768 52.23 19.9173 52.4566 19.969C52.5083 19.9807 52.5381 20.0079 52.5394 20.0622C52.5407 20.1036 52.542 20.1451 52.542 20.1852C52.542 20.7533 52.542 21.3202 52.542 21.8884C52.542 21.9207 52.5394 21.9531 52.542 21.9841C52.5446 22.0087 52.5278 22.0463 52.5627 22.0553C52.5847 22.0618 52.5964 22.0294 52.6106 22.0113C52.955 21.5635 53.421 21.4522 53.9479 21.5493C54.4437 21.6412 54.7622 22.0333 54.823 22.5808C54.8411 22.7451 54.8502 22.9082 54.8502 23.0739C54.8476 23.6783 54.8502 24.2827 54.8489 24.8871C54.8489 24.9492 54.8683 25.0294 54.7958 25.0579C54.7013 25.0954 54.5978 25.0916 54.5007 25.0579C54.467 25.0463 54.4631 25.0087 54.4618 24.9764C54.4605 24.935 54.4592 24.8935 54.4592 24.8534C54.4592 24.2309 54.4592 23.6084 54.4592 22.9859C54.4592 22.8202 54.4385 22.6571 54.3945 22.4979C54.2871 22.1161 54.0204 21.9013 53.6217 21.8987C53.1 21.8948 52.7207 22.111 52.5912 22.7063C52.5588 22.8539 52.5433 23.004 52.5433 23.1554C52.5446 23.7274 52.5446 24.2995 52.5433 24.8715C52.5433 24.9362 52.5731 25.0243 52.498 25.0592C52.4061 25.1006 52.3012 25.0903 52.2028 25.0631C52.1679 25.054 52.1601 25.0178 52.1575 24.9841C52.1549 24.9388 52.1536 24.8922 52.1536 24.8469C52.1536 24.073 52.1536 23.3004 52.1536 22.5264H52.1523Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M63.5075 23.4027C63.5075 22.9911 63.5075 22.5783 63.5075 22.1667C63.5075 22.0295 63.5114 21.8923 63.4933 21.7552C63.4764 21.6244 63.5101 21.5934 63.6434 21.5882C63.6758 21.5882 63.7082 21.5882 63.7392 21.5882C63.8273 21.5882 63.8739 21.627 63.8777 21.7189C63.8829 21.8199 63.9036 21.9182 63.8998 22.0205C63.8998 22.0412 63.892 22.0735 63.9166 22.08C63.9425 22.0878 63.9502 22.0554 63.9619 22.0373C64.1341 21.7668 64.3761 21.5986 64.692 21.5468C65.004 21.495 65.3134 21.4976 65.6034 21.6529C65.8222 21.7694 65.9801 21.9428 66.0694 22.1732C66.1445 22.366 66.1846 22.5679 66.1846 22.7776C66.1833 23.4778 66.1846 24.1792 66.1833 24.8794C66.1833 24.9441 66.2118 25.0321 66.1303 25.0619C66.0397 25.0955 65.9413 25.0878 65.8468 25.0632C65.8118 25.0541 65.8015 25.0205 65.7989 24.9868C65.7963 24.9415 65.795 24.8949 65.795 24.8496C65.795 24.1948 65.795 23.5399 65.795 22.885C65.795 22.7659 65.7872 22.6482 65.7613 22.5304C65.6552 22.0412 65.3121 21.8626 64.8603 21.9014C64.4124 21.9389 64.1315 22.19 63.9943 22.6106C63.936 22.7905 63.8985 22.973 63.8998 23.1633C63.901 23.7224 63.8998 24.2802 63.8998 24.8393C63.8998 25.0696 63.8234 25.1279 63.5942 25.0748C63.5425 25.0632 63.5127 25.036 63.5114 24.9816C63.5101 24.9363 63.5088 24.8897 63.5088 24.8445C63.5088 24.363 63.5088 23.8828 63.5088 23.4014L63.5075 23.4027Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M48.1117 21.521C48.6878 21.5353 49.1306 21.8601 49.3002 22.4386C49.3105 22.4736 49.3183 22.5098 49.3247 22.5461C49.339 22.6224 49.3066 22.6587 49.2302 22.6599C49.1849 22.6599 49.1383 22.6587 49.093 22.6612C48.9959 22.6677 48.9441 22.625 48.9131 22.5318C48.838 22.3092 48.7137 22.119 48.5001 22.0038C47.981 21.7216 47.3402 21.9274 47.0852 22.4826C46.8159 23.0676 46.8211 23.6694 47.1111 24.2467C47.423 24.8692 48.1312 24.9145 48.5532 24.6259C48.7163 24.5146 48.8056 24.3528 48.8885 24.1819C48.9157 24.1263 48.9234 24.0486 48.9985 24.0344C49.093 24.0176 49.1914 24.015 49.2859 24.0357C49.3416 24.0473 49.3273 24.1004 49.3144 24.1392C49.15 24.6388 48.8548 25.0206 48.2943 25.128C47.4994 25.2807 46.8444 24.8938 46.6062 24.1211C46.3978 23.4442 46.4353 22.7777 46.8185 22.1643C47.0968 21.7165 47.5214 21.512 48.1117 21.5197V21.521Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M43.9316 25.0802C43.7996 25.1113 43.7115 25.035 43.63 24.9107C43.3633 24.5056 43.0863 24.107 42.8118 23.7058C42.7406 23.601 42.7367 23.6023 42.6643 23.7084C42.3872 24.1186 42.1115 24.5289 41.8344 24.9392C41.7516 25.0621 41.5043 25.1346 41.3736 25.0712C41.305 25.0375 41.3464 24.9948 41.371 24.9586C41.5186 24.7438 41.6687 24.5302 41.8176 24.3154C42.0325 24.0073 42.2461 23.698 42.4636 23.3926C42.5154 23.3201 42.4934 23.2683 42.4507 23.2075C42.2034 22.8503 41.9561 22.4918 41.7102 22.1333C41.6144 21.9935 41.5173 21.8551 41.4241 21.714C41.3684 21.6312 41.3826 21.5988 41.4797 21.591C41.5574 21.5846 41.6351 21.5885 41.7128 21.591C41.7969 21.5936 41.8396 21.6545 41.881 21.7166C42.1322 22.0932 42.3846 22.4711 42.6371 22.8477C42.6526 22.871 42.6668 22.8943 42.6824 22.9163C42.7458 23.003 42.7575 23.0043 42.817 22.9189C43.0099 22.6458 43.2015 22.3715 43.3931 22.0984C43.4798 21.9741 43.5653 21.8499 43.652 21.7269C43.74 21.6027 43.9653 21.5393 44.1064 21.5975C44.1789 21.6273 44.14 21.6713 44.1154 21.7062C44.0209 21.8408 43.9251 21.9754 43.8281 22.1087C43.5756 22.4582 43.3258 22.8076 43.0695 23.1532C43.0021 23.2438 42.997 23.3162 43.063 23.4107C43.4009 23.8947 43.7336 24.384 44.0676 24.8706C44.0753 24.8822 44.0844 24.8926 44.0909 24.9042C44.1142 24.9508 44.1802 24.9909 44.1465 25.0479C44.1142 25.101 44.0455 25.0725 43.9925 25.079C43.9795 25.0802 43.9653 25.079 43.929 25.079L43.9316 25.0802Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_9767",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "26.0914",
                        transform: "translate(0.696289 0.729492)",
                        width: "77.0623"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite3/LogoAceWhite3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite3;
var _c;
$RefreshReg$(_c, "LogoAceWhite3");

  $parcel$ReactRefreshHelpers$a71d.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"i56jO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite4", ()=>(0, _logoAceWhite4.LogoAceWhite4));
var _logoAceWhite4 = require("./LogoAceWhite4");

},{"./LogoAceWhite4":"b45bg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b45bg":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$ed04 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$ed04.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite4", ()=>LogoAceWhite4);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite4 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-4 ${className}`,
        fill: "none",
        height: "32",
        viewBox: "0 0 93 32",
        width: "93",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7700)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M20.236 0.178711C20.3006 0.367638 20.4296 0.518166 20.5326 0.682518C21.5804 2.35368 22.6328 4.02177 23.6868 5.68986C24.7331 7.34874 25.7824 9.00608 26.8287 10.665C27.8581 12.2962 28.8844 13.9289 29.9123 15.5617C30.6974 16.8074 31.4855 18.0516 32.2706 19.2973C33.1172 20.6397 33.9607 21.9822 34.8072 23.3246C35.5923 24.5703 36.3805 25.8145 37.1656 27.0602C37.9891 28.3642 38.8126 29.6698 39.6346 30.9754C39.6669 31.0261 39.6914 31.0799 39.7191 31.1336H18.3109C18.3493 31.0261 18.4123 30.9293 18.4692 30.831C19.0837 29.7681 19.7014 28.7068 20.3159 27.6439C21.0012 26.4581 21.6849 25.2723 22.3686 24.0865C22.7189 23.4798 23.0661 22.87 23.4194 22.2663C23.4809 22.1603 23.4717 22.0851 23.4056 21.9868C23.2382 21.7395 23.0814 21.4845 22.9217 21.2311C22.0413 19.8333 21.1609 18.4356 20.2806 17.0378C20.2038 16.9149 20.1838 16.9149 20.1054 17.0378C19.7659 17.5754 19.4263 18.113 19.0868 18.6506C18.5982 19.4217 18.1097 20.1927 17.6226 20.9653C16.9789 21.9852 16.3382 23.0082 15.6944 24.0281C15.1521 24.8883 14.6082 25.7454 14.0659 26.6055C13.4021 27.6577 12.7369 28.7098 12.0762 29.7635C11.7904 30.2197 11.4908 30.6667 11.2251 31.1336C7.74357 31.1336 4.26209 31.1336 0.780614 31.1306C0.739131 31.1306 0.640802 31.1966 0.65002 31.0691C0.708403 31.0338 0.742204 30.9785 0.777541 30.9232C1.36445 29.9955 1.94981 29.0662 2.53672 28.1384C3.2788 26.9619 4.02088 25.7853 4.7645 24.6087C5.43437 23.5474 6.10731 22.4875 6.77718 21.4246C7.57764 20.1559 8.37657 18.8871 9.17703 17.6184C9.71938 16.7583 10.2633 15.9012 10.8056 15.041C11.4617 14.0027 12.1146 12.9628 12.7707 11.9229C13.3007 11.0812 13.8323 10.241 14.3624 9.39929C15.0092 8.37325 15.653 7.3472 16.2998 6.32269C16.8944 5.37959 17.4889 4.43803 18.0835 3.49493C18.7795 2.39055 19.474 1.2877 20.1684 0.183319C20.1899 0.183319 20.2114 0.183319 20.233 0.183319L20.236 0.178711Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M92.1103 27.0861C91.2191 27.0861 90.3265 27.0877 89.4354 27.0892C89.3862 27.0892 89.337 27.0907 89.2879 27.0892C89.1834 27.0861 89.1419 27.1307 89.1542 27.2397C89.1819 27.4717 89.2187 27.7021 89.3048 27.9217C89.6259 28.7404 90.474 28.9324 91.1346 28.5638C91.3144 28.4624 91.4342 28.2996 91.528 28.1168C91.5986 27.9816 91.8614 27.9064 91.9919 27.9832C92.0657 28.0262 92.0319 28.0891 92.0119 28.1414C91.9105 28.4117 91.7492 28.6406 91.5249 28.8233C90.9149 29.3179 89.884 29.2964 89.3079 28.7681C89.0328 28.5146 88.87 28.189 88.7793 27.8296C88.6026 27.1199 88.6441 26.4287 88.9652 25.7652C89.4861 24.69 90.895 24.6209 91.5802 25.2506C91.8352 25.4841 91.9904 25.7821 92.0749 26.1154C92.0857 26.1569 92.0964 26.1999 92.1072 26.2413V27.0892L92.1103 27.0861ZM90.4294 26.6622C90.7936 26.6622 91.1577 26.6637 91.5218 26.6622C91.6616 26.6622 91.6877 26.6284 91.6724 26.4963C91.6493 26.312 91.6063 26.1338 91.528 25.9633C91.2145 25.2752 90.2727 25.0586 89.6889 25.5409C89.3893 25.7898 89.2741 26.1292 89.2065 26.4932C89.1788 26.6453 89.1911 26.6622 89.3524 26.6622C89.7104 26.6637 90.0699 26.6622 90.4279 26.6622H90.4294Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M80.6519 12.3928C80.6519 10.1364 80.6519 7.88154 80.6519 5.62516C80.6519 5.56525 80.6534 5.50535 80.6519 5.44545C80.6504 5.34253 80.6995 5.29492 80.8009 5.29799C80.8501 5.29799 80.8992 5.29799 80.9484 5.29799C84.3208 5.29799 87.6947 5.29799 91.0671 5.29799C91.2648 5.29799 91.3637 5.39629 91.3637 5.5929C91.3637 6.21191 91.3637 6.83245 91.3637 7.45146C91.3637 7.65114 91.2612 7.75098 91.0564 7.75098C88.6196 7.75098 86.1814 7.75098 83.7447 7.75098C83.5603 7.75098 83.4681 7.84314 83.4681 8.02746C83.4681 9.01203 83.4681 9.99507 83.4681 10.9796C83.4681 11.1496 83.5516 11.2346 83.7185 11.2346C85.8726 11.2346 88.0266 11.2346 90.1806 11.2346C90.3793 11.2346 90.4787 11.3345 90.4787 11.5341C90.4787 12.1977 90.4787 12.8597 90.4787 13.5232C90.4787 13.7414 90.4664 13.7521 90.2467 13.7521C88.1034 13.7521 85.9601 13.7521 83.8169 13.7521C83.7631 13.7521 83.7078 13.7521 83.654 13.7521C83.4819 13.7552 83.4681 13.7659 83.4681 13.9395C83.4681 14.8964 83.4681 15.8534 83.4681 16.8103C83.4681 17.0345 83.4681 17.0345 83.697 17.0345C86.1507 17.0345 88.6043 17.0345 91.0579 17.0345C91.2617 17.0345 91.3637 17.1349 91.3637 17.3356C91.3637 17.9884 91.3637 18.6397 91.3637 19.2924C91.3637 19.5106 91.3529 19.5213 91.1317 19.5213C87.7147 19.5213 84.2993 19.5213 80.8824 19.5213C80.6626 19.5213 80.6519 19.5106 80.6519 19.2909C80.6519 16.9915 80.6519 14.6921 80.6519 12.3928Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M60.5419 12.5004C60.5235 11.3039 60.7847 10.241 61.2871 9.2395C61.5959 8.6251 61.9831 8.06293 62.4455 7.55144C63.077 6.85103 63.8191 6.29961 64.6549 5.87721C65.5429 5.4287 66.4847 5.16911 67.4818 5.09385C68.7279 5.00015 69.9201 5.20598 71.0663 5.68828C71.8852 6.03388 72.618 6.51464 73.2664 7.12597C73.755 7.58677 74.1882 8.09365 74.5308 8.67426C74.6276 8.83861 74.6261 8.85089 74.4525 8.92001C73.6843 9.22414 72.9145 9.5252 72.1463 9.8324C72.0342 9.87694 71.9681 9.85083 71.899 9.75713C71.4135 9.09358 70.8158 8.55598 70.0876 8.17045C69.4991 7.85864 68.8754 7.67125 68.2024 7.64821C67.0132 7.60674 65.9731 7.99381 65.082 8.75873C64.1156 9.58817 63.5333 10.6419 63.3889 11.9152C63.2276 13.3329 63.6716 14.5617 64.5996 15.6277C65.2971 16.4295 66.1728 16.9441 67.216 17.1453C68.4406 17.3818 69.556 17.0946 70.5761 16.3957C71.0939 16.0424 71.5287 15.6047 71.8913 15.0963C71.9697 14.9857 72.0419 14.9703 72.1632 15.0195C72.9253 15.3251 73.6904 15.6246 74.454 15.9272C74.6246 15.9948 74.6292 16.0132 74.5339 16.1745C73.8226 17.368 72.8347 18.2681 71.6117 18.9193C70.7759 19.3648 69.8848 19.6382 68.946 19.7411C67.5095 19.8993 66.1267 19.6935 64.8162 19.0653C63.9681 18.6582 63.2076 18.1298 62.5669 17.4433C61.433 16.2314 60.7386 14.8106 60.5696 13.1471C60.545 12.9075 60.545 12.6694 60.5419 12.502V12.5004Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M55.3551 19.5214C54.9249 19.5214 54.4947 19.5153 54.066 19.5245C53.9016 19.5291 53.811 19.4769 53.7388 19.3264C53.4392 18.7104 53.1242 18.1022 52.8231 17.4862C52.757 17.3511 52.6756 17.2973 52.5219 17.2988C50.3956 17.3035 48.2677 17.3035 46.1413 17.2988C45.983 17.2988 45.8955 17.3511 45.8279 17.4939C45.5359 18.1022 45.2302 18.7027 44.9398 19.311C44.8676 19.4631 44.7754 19.5276 44.6018 19.526C43.7368 19.5184 42.8718 19.523 42.0068 19.523C41.9638 19.523 41.9193 19.523 41.8762 19.5184C41.8117 19.5122 41.7917 19.4753 41.8163 19.4154C41.8332 19.3755 41.8532 19.3371 41.8732 19.2972C42.6537 17.8042 43.4326 16.3112 44.2146 14.8167C44.5649 14.147 44.9168 13.4788 45.2655 12.8091C46.0675 11.2731 46.8695 9.7356 47.6731 8.19807C48.0357 7.5038 48.3983 6.81106 48.7608 6.11833C48.8761 5.89714 48.9959 5.6775 49.1081 5.45324C49.1557 5.35647 49.2248 5.32422 49.3293 5.32422C49.4384 5.32422 49.5121 5.3534 49.5644 5.45631C49.7994 5.91558 50.0422 6.37177 50.2819 6.82949C50.8795 7.97688 51.4757 9.12427 52.0733 10.2717C52.5757 11.2347 53.0797 12.1978 53.5836 13.1609C54.2227 14.3835 54.8619 15.6077 55.5026 16.8304C55.9205 17.6291 56.343 18.4278 56.7624 19.225C56.7931 19.2833 56.8223 19.3417 56.85 19.4001C56.8869 19.4769 56.8546 19.5137 56.7762 19.5168C56.7332 19.5184 56.6887 19.5184 56.6456 19.5184C56.2155 19.5184 55.7868 19.5184 55.3566 19.5184L55.3551 19.5214ZM49.3093 14.8827C49.9239 14.8827 50.5369 14.8827 51.1515 14.8827C51.3389 14.8827 51.3451 14.8704 51.2621 14.6999C50.9287 14.0103 50.5938 13.3221 50.2619 12.6325C50.099 12.2946 49.9423 11.9551 49.781 11.6172C49.6473 11.3376 49.5106 11.0596 49.3769 10.7816C49.3478 10.7202 49.3216 10.7186 49.2909 10.7785C49.2786 10.8031 49.2663 10.8277 49.2556 10.8523C49.0282 11.3269 48.8008 11.803 48.5719 12.2761C48.1755 13.0918 47.7791 13.9074 47.3812 14.7214C47.3074 14.8735 47.312 14.8827 47.4841 14.8827C48.0925 14.8827 48.7009 14.8827 49.3093 14.8827Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M85.2888 26.9449C85.2888 27.5147 85.2965 28.0861 85.2857 28.656C85.2796 28.9923 85.2581 29.3272 85.1597 29.6544C84.9554 30.3317 84.4883 30.6912 83.8016 30.7649C83.4175 30.8064 83.0288 30.7971 82.6646 30.6297C82.2529 30.4408 81.9917 30.1244 81.8903 29.682C81.8611 29.553 81.8826 29.5299 82.0178 29.5238C82.0716 29.5207 82.1269 29.5253 82.1807 29.5238C82.2744 29.5192 82.3312 29.5561 82.3666 29.6467C82.5648 30.1489 82.9627 30.3379 83.4743 30.3425C83.5834 30.3425 83.6925 30.344 83.8 30.3287C84.3055 30.2503 84.6174 29.9616 84.7434 29.4624C84.8202 29.1536 84.8356 28.8403 84.8294 28.5239C84.8294 28.4978 84.8386 28.4624 84.8079 28.4532C84.7772 28.444 84.7664 28.4793 84.7495 28.4993C84.0228 29.3963 82.5986 29.2504 82.0654 28.2028C81.6306 27.3488 81.666 26.4718 82.1361 25.6439C82.4495 25.0924 82.9673 24.8359 83.6111 24.8528C83.8523 24.859 84.0873 24.8882 84.3086 24.9926C84.4684 25.0679 84.6097 25.1646 84.7265 25.2983C84.7495 25.3244 84.7633 25.3812 84.8079 25.3612C84.8463 25.3459 84.8279 25.2937 84.834 25.2568C84.8417 25.2092 84.8478 25.16 84.854 25.1109C84.8632 25.0418 84.8571 24.9588 84.9492 24.9435C85.0507 24.925 85.1582 24.9051 85.2488 24.968C85.3103 25.0095 85.2903 25.0863 85.2919 25.1508C85.2919 25.7483 85.2919 26.3458 85.2919 26.9433H85.2888V26.9449ZM84.8294 26.9218C84.8432 26.6791 84.8217 26.4149 84.7572 26.1554C84.642 25.69 84.3654 25.3874 83.8768 25.3106C83.7754 25.2952 83.671 25.2967 83.568 25.2921C83.0195 25.2676 82.6201 25.584 82.4342 26.0571C82.2175 26.6054 82.1991 27.1691 82.3835 27.7313C82.5033 28.0953 82.7261 28.3826 83.0871 28.5438C83.3237 28.6498 83.568 28.656 83.8215 28.616C84.2302 28.5515 84.5221 28.3426 84.6788 27.954C84.8094 27.6299 84.8386 27.292 84.8294 26.9218Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M43.9289 29.0765C43.4019 29.0765 42.8734 29.0765 42.3464 29.0765C42.1497 29.0765 42.1328 29.0612 42.1328 28.8615C42.1328 27.0905 42.1328 25.3195 42.1328 23.5469C42.1328 23.338 42.1451 23.3273 42.3556 23.3273C43.3942 23.3273 44.4328 23.3273 45.4714 23.3273C45.5436 23.3273 45.6404 23.2966 45.6727 23.3872C45.7126 23.5008 45.7126 23.6222 45.6665 23.7374C45.6512 23.7758 45.6066 23.7819 45.5682 23.785C45.5144 23.7881 45.4591 23.7896 45.4053 23.7896C44.5511 23.7896 43.6984 23.7896 42.8442 23.7896C42.6429 23.7896 42.6291 23.8019 42.6291 24.0016C42.6291 24.5346 42.6291 25.066 42.6291 25.599C42.6291 25.7972 42.6414 25.8064 42.8457 25.8079C43.6554 25.8079 44.4666 25.8079 45.2763 25.8094C45.3577 25.8094 45.4683 25.771 45.5129 25.8678C45.5605 25.9723 45.5436 26.0921 45.5206 26.2042C45.5098 26.2534 45.4637 26.2656 45.4176 26.2687C45.3639 26.2718 45.3085 26.2718 45.2548 26.2718C44.4558 26.2718 43.6554 26.2718 42.8565 26.2718C42.6352 26.2718 42.6291 26.2779 42.6291 26.5022C42.6291 27.1319 42.6291 27.7632 42.6291 28.393C42.6291 28.6034 42.6383 28.6126 42.8503 28.6126C43.7368 28.6126 44.6233 28.6126 45.5098 28.6126C45.5636 28.6126 45.6189 28.6126 45.6727 28.6157C45.7049 28.6157 45.7434 28.6172 45.7633 28.6464C45.8371 28.757 45.7649 28.8661 45.7556 28.9767C45.7495 29.0473 45.6911 29.0719 45.625 29.075C45.5759 29.0765 45.5267 29.078 45.4776 29.078C44.9613 29.078 44.4451 29.078 43.9273 29.078L43.9289 29.0765Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M71.4521 27.3627C71.4521 27.6883 71.4521 28.0155 71.4521 28.3411C71.4521 28.5039 71.4552 28.6668 71.4783 28.8296C71.509 29.0508 71.4783 29.0784 71.2616 29.0784C71.2401 29.0784 71.2186 29.0769 71.1971 29.0784C71.0972 29.0815 71.0511 29.0277 71.0327 28.9356C71.0097 28.8265 71.0327 28.7082 70.9636 28.6099C70.8867 28.6852 70.813 28.7635 70.7331 28.8357C70.5011 29.0461 70.2169 29.1245 69.9142 29.1629C69.5762 29.2059 69.2505 29.1675 68.9447 29.017C68.5038 28.8004 68.258 28.3058 68.2994 27.8143C68.3486 27.2383 68.6713 26.9096 69.1936 26.736C69.4686 26.6438 69.756 26.607 70.0448 26.5993C70.306 26.5916 70.5672 26.5932 70.8284 26.5978C70.9467 26.5993 70.9974 26.5517 70.9928 26.4334C70.9866 26.2813 70.9958 26.1293 70.9728 25.9788C70.9144 25.6101 70.6962 25.3982 70.3398 25.3229C70.0817 25.2676 69.822 25.2707 69.5639 25.3306C69.2981 25.3905 69.1214 25.5471 69.0262 25.8037C68.9278 26.0648 68.9109 26.0694 68.6359 26.051C68.5238 26.0433 68.493 25.9926 68.5145 25.8927C68.596 25.5256 68.7727 25.2277 69.1153 25.0433C69.3918 24.8959 69.6914 24.8513 69.9987 24.8575C70.2261 24.8621 70.4535 24.8774 70.6747 24.9527C71.1034 25.0986 71.3431 25.4012 71.4229 25.8374C71.4475 25.9711 71.4583 26.1062 71.4568 26.2429C71.4537 26.6177 71.4568 26.9925 71.4568 27.3688L71.4521 27.3627ZM70.4243 26.9941C70.3106 26.9941 70.1954 26.9879 70.0817 26.9941C69.8051 27.0109 69.5286 27.0355 69.2689 27.1492C68.9263 27.2997 68.7542 27.5916 68.7803 27.9725C68.8065 28.3319 69.0292 28.6022 69.3795 28.7005C69.6438 28.7743 69.9081 28.7512 70.1692 28.6852C70.5364 28.5915 70.7746 28.3596 70.8867 27.9971C70.9743 27.7129 70.9943 27.4211 70.9881 27.1261C70.9866 27.0294 70.939 26.9894 70.8453 26.991C70.7039 26.9925 70.5626 26.991 70.4212 26.991L70.4243 26.9941Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M61.7202 26.0479C61.7202 25.1294 61.7202 24.2124 61.7202 23.2939C61.7202 23.022 61.8124 22.9514 62.0813 23.0128C62.1427 23.0266 62.1781 23.0589 62.1796 23.1234C62.1811 23.1726 62.1827 23.2217 62.1827 23.2693C62.1827 23.9436 62.1827 24.6164 62.1827 25.2907C62.1827 25.3291 62.1796 25.3675 62.1827 25.4044C62.1857 25.4335 62.1658 25.4781 62.2073 25.4888C62.2334 25.4965 62.2472 25.4581 62.2641 25.4366C62.6728 24.9052 63.2259 24.7731 63.8512 24.8883C64.4396 24.9973 64.8176 25.4627 64.8898 26.1125C64.9113 26.3075 64.9221 26.5011 64.9221 26.6977C64.919 27.415 64.9221 28.1323 64.9205 28.8496C64.9205 28.9233 64.9436 29.0186 64.8575 29.0524C64.7454 29.0969 64.6225 29.0923 64.5072 29.0524C64.4673 29.0385 64.4627 28.994 64.4611 28.9556C64.4596 28.9064 64.4581 28.8573 64.4581 28.8097C64.4581 28.0709 64.4581 27.332 64.4581 26.5932C64.4581 26.3966 64.4335 26.2031 64.3813 26.0142C64.2537 25.561 63.9372 25.3061 63.464 25.303C62.8449 25.2984 62.3947 25.5549 62.2411 26.2615C62.2026 26.4366 62.1842 26.6147 62.1842 26.7944C62.1857 27.4734 62.1857 28.1523 62.1842 28.8312C62.1842 28.908 62.2195 29.0124 62.1304 29.0539C62.0213 29.103 61.8969 29.0908 61.7801 29.0585C61.7386 29.0477 61.7294 29.0047 61.7264 28.9648C61.7233 28.911 61.7217 28.8558 61.7217 28.802C61.7217 27.8835 61.7217 26.9665 61.7217 26.0479H61.7202Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M75.1965 27.0876C75.1965 26.5991 75.1965 26.1091 75.1965 25.6207C75.1965 25.4579 75.2011 25.2951 75.1796 25.1322C75.1596 24.9771 75.1995 24.9402 75.3578 24.9341C75.3962 24.9341 75.4346 24.9341 75.4715 24.9341C75.576 24.9341 75.6313 24.9802 75.6359 25.0892C75.642 25.209 75.6666 25.3258 75.662 25.4471C75.662 25.4717 75.6528 25.5101 75.682 25.5178C75.7127 25.527 75.7219 25.4886 75.7357 25.4671C75.9401 25.1461 76.2274 24.9464 76.6023 24.8849C76.9725 24.8235 77.3397 24.8266 77.6839 25.0109C77.9435 25.1491 78.131 25.355 78.237 25.6284C78.3261 25.8572 78.3737 26.0968 78.3737 26.3457C78.3722 27.1767 78.3737 28.0092 78.3722 28.8401C78.3722 28.9169 78.406 29.0214 78.3092 29.0567C78.2017 29.0966 78.0849 29.0874 77.9727 29.0582C77.9312 29.0475 77.919 29.0076 77.9159 28.9676C77.9128 28.9139 77.9113 28.8586 77.9113 28.8048C77.9113 28.0276 77.9113 27.2504 77.9113 26.4732C77.9113 26.3319 77.9021 26.1921 77.8713 26.0523C77.7453 25.4717 77.3382 25.2597 76.802 25.3058C76.2704 25.3504 75.937 25.6483 75.7741 26.1475C75.705 26.361 75.6605 26.5776 75.662 26.8034C75.6635 27.467 75.662 28.129 75.662 28.7925C75.662 29.0659 75.5713 29.135 75.2994 29.0721C75.2379 29.0582 75.2026 29.026 75.2011 28.9615C75.1995 28.9077 75.198 28.8524 75.198 28.7987C75.198 28.2273 75.198 27.6574 75.198 27.086L75.1965 27.0876Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M56.9253 24.8543C57.609 24.8712 58.1344 25.2568 58.3357 25.9433C58.348 25.9848 58.3572 26.0278 58.3649 26.0708C58.3818 26.1615 58.3434 26.2045 58.2527 26.206C58.199 26.206 58.1437 26.2045 58.0899 26.2075C57.9746 26.2152 57.9132 26.1645 57.8763 26.0539C57.7872 25.7898 57.6397 25.564 57.3862 25.4273C56.7701 25.0924 56.0096 25.3366 55.7069 25.9956C55.3874 26.6898 55.3935 27.4041 55.7377 28.0891C56.1079 28.828 56.9483 28.8817 57.4492 28.5392C57.6428 28.4071 57.7488 28.2151 57.8471 28.0123C57.8794 27.9463 57.8886 27.8541 57.9777 27.8372C58.0899 27.8173 58.2066 27.8142 58.3188 27.8388C58.3849 27.8526 58.368 27.9156 58.3526 27.9616C58.1575 28.5545 57.8072 29.0077 57.1419 29.1351C56.1986 29.3164 55.4212 28.8571 55.1385 27.9401C54.8911 27.1368 54.9357 26.3458 55.3904 25.6177C55.7208 25.0863 56.2247 24.8436 56.9253 24.8528V24.8543Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M51.9644 29.0782C51.8077 29.1151 51.7032 29.0245 51.6064 28.877C51.2899 28.3962 50.9611 27.9231 50.6354 27.447C50.5509 27.3226 50.5463 27.3241 50.4603 27.4501C50.1315 27.937 49.8042 28.4239 49.4754 28.9108C49.3771 29.0567 49.0836 29.1427 48.9285 29.0675C48.847 29.0275 48.8962 28.9768 48.9254 28.9338C49.1005 28.6789 49.2788 28.4254 49.4554 28.1704C49.7105 27.8049 49.964 27.4378 50.2221 27.0753C50.2836 26.9893 50.2575 26.9278 50.2068 26.8556C49.9133 26.4317 49.6198 26.0062 49.3279 25.5808C49.2142 25.4149 49.099 25.2505 48.9884 25.0831C48.9223 24.9848 48.9392 24.9464 49.0545 24.9372C49.1466 24.9295 49.2388 24.9341 49.331 24.9372C49.4309 24.9402 49.4816 25.0124 49.5307 25.0862C49.8288 25.5331 50.1284 25.9816 50.428 26.4286C50.4464 26.4563 50.4633 26.4839 50.4818 26.51C50.557 26.6129 50.5709 26.6145 50.6415 26.5131C50.8705 26.189 51.0979 25.8634 51.3252 25.5393C51.4282 25.3918 51.5296 25.2444 51.6325 25.0985C51.737 24.951 52.0043 24.8757 52.1718 24.9449C52.2578 24.9802 52.2117 25.0324 52.1826 25.0739C52.0704 25.2336 51.9567 25.3934 51.8415 25.5516C51.5419 25.9663 51.2454 26.381 50.9411 26.7911C50.8613 26.8986 50.8551 26.9847 50.9335 27.0968C51.3345 27.6712 51.7293 28.2519 52.1257 28.8294C52.1349 28.8432 52.1457 28.8555 52.1534 28.8693C52.181 28.9246 52.2594 28.9722 52.2194 29.0398C52.181 29.1028 52.0996 29.069 52.0366 29.0767C52.0212 29.0782 52.0043 29.0767 51.9613 29.0767L51.9644 29.0782Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7700",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "30.9657",
                        transform: "translate(0.651855 0.178711)",
                        width: "91.4587"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite4/LogoAceWhite4.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite4;
var _c;
$RefreshReg$(_c, "LogoAceWhite4");

  $parcel$ReactRefreshHelpers$ed04.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"iFOXs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite5", ()=>(0, _logoAceWhite5.LogoAceWhite5));
var _logoAceWhite5 = require("./LogoAceWhite5");

},{"./LogoAceWhite5":"kZYo4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kZYo4":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$362c = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$362c.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite5", ()=>LogoAceWhite5);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite5 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-5 ${className}`,
        fill: "none",
        height: "25",
        viewBox: "0 0 71 25",
        width: "71",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10212)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M15.5468 0.453125C15.5961 0.597471 15.6947 0.712479 15.7733 0.838048C16.5739 2.11487 17.378 3.38934 18.1833 4.66381C18.9827 5.93124 19.7844 7.1975 20.5838 8.46493C21.3703 9.71123 22.1544 10.9587 22.9397 12.2062C23.5396 13.1579 24.1418 14.1085 24.7416 15.0603C25.3884 16.0859 26.0328 17.1116 26.6796 18.1373C27.2795 19.089 27.8817 20.0396 28.4815 20.9914C29.1107 21.9877 29.7399 22.9852 30.3679 23.9827C30.3925 24.0215 30.4113 24.0625 30.4324 24.1036H14.076C14.1053 24.0215 14.1534 23.9475 14.1969 23.8724C14.6664 23.0603 15.1383 22.2494 15.6078 21.4373C16.1314 20.5313 16.6537 19.6254 17.1761 18.7194C17.4437 18.2558 17.709 17.7899 17.979 17.3287C18.026 17.2478 18.0189 17.1902 17.9685 17.1151C17.8405 16.9262 17.7208 16.7314 17.5987 16.5378C16.9261 15.4698 16.2535 14.4019 15.5808 13.334C15.5221 13.2401 15.5069 13.2401 15.447 13.334C15.1876 13.7447 14.9282 14.1555 14.6687 14.5662C14.2955 15.1553 13.9222 15.7444 13.5501 16.3347C13.0582 17.114 12.5687 17.8955 12.0769 18.6748C11.6625 19.332 11.247 19.9868 10.8326 20.644C10.3255 21.4479 9.81721 22.2518 9.31245 23.0568C9.09411 23.4054 8.86521 23.7469 8.66213 24.1036C6.00218 24.1036 3.34223 24.1036 0.682272 24.1013C0.650578 24.1013 0.575451 24.1517 0.582494 24.0543C0.627101 24.0273 0.652926 23.9851 0.679924 23.9428C1.12834 23.234 1.57558 22.524 2.02399 21.8152C2.59096 20.9163 3.15793 20.0173 3.72608 19.1184C4.23788 18.3075 4.75203 17.4977 5.26383 16.6856C5.8754 15.7163 6.48581 14.7469 7.09739 13.7776C7.51176 13.1204 7.9273 12.4655 8.34167 11.8084C8.84291 11.015 9.3418 10.2206 9.84303 9.42606C10.248 8.78296 10.6542 8.14103 11.0591 7.49793C11.5533 6.714 12.0452 5.93007 12.5394 5.14731C12.9937 4.42675 13.4479 3.70737 13.9022 2.98681C14.434 2.14303 14.9646 1.30043 15.4951 0.456646C15.5116 0.456646 15.528 0.456646 15.5444 0.456646L15.5468 0.453125Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M70.461 21.011C69.7801 21.011 69.0981 21.0122 68.4173 21.0134C68.3797 21.0134 68.3421 21.0145 68.3046 21.0134C68.2248 21.011 68.1931 21.045 68.2025 21.1284C68.2236 21.3056 68.2518 21.4816 68.3175 21.6494C68.5628 22.2749 69.2108 22.4216 69.7156 22.14C69.8529 22.0625 69.9445 21.9381 70.0161 21.7985C70.0701 21.6952 70.2708 21.6377 70.3706 21.6964C70.4269 21.7292 70.4011 21.7773 70.3858 21.8172C70.3083 22.0238 70.1851 22.1986 70.0137 22.3383C69.5477 22.7162 68.76 22.6998 68.3198 22.2961C68.1097 22.1024 67.9853 21.8536 67.916 21.579C67.781 21.0368 67.8127 20.5087 68.0581 20.0018C68.456 19.1803 69.5324 19.1275 70.056 19.6086C70.2508 19.787 70.3694 20.0147 70.4339 20.2693C70.4422 20.301 70.4504 20.3339 70.4586 20.3656V21.0134L70.461 21.011ZM69.1768 20.6871C69.455 20.6871 69.7332 20.6883 70.0114 20.6871C70.1182 20.6871 70.1381 20.6613 70.1264 20.5604C70.1088 20.4195 70.0759 20.2834 70.0161 20.1532C69.7766 19.6274 69.057 19.4619 68.611 19.8304C68.3821 20.0205 68.294 20.2799 68.2424 20.558C68.2212 20.6742 68.2306 20.6871 68.3539 20.6871C68.6274 20.6883 68.9021 20.6871 69.1756 20.6871H69.1768Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M61.7061 9.78498C61.7061 8.06104 61.7061 6.33827 61.7061 4.61433C61.7061 4.56856 61.7073 4.52279 61.7061 4.47702C61.7049 4.3984 61.7425 4.36202 61.8199 4.36436C61.8575 4.36436 61.8951 4.36436 61.9326 4.36436C64.5092 4.36436 67.087 4.36436 69.6636 4.36436C69.8147 4.36436 69.8902 4.43947 69.8902 4.58969C69.8902 5.06262 69.8902 5.53674 69.8902 6.00968C69.8902 6.16224 69.8119 6.23852 69.6554 6.23852C67.7937 6.23852 65.9308 6.23852 64.0691 6.23852C63.9282 6.23852 63.8578 6.30893 63.8578 6.44976C63.8578 7.202 63.8578 7.95307 63.8578 8.70531C63.8578 8.83519 63.9215 8.90012 64.0491 8.90012C65.6948 8.90012 67.3406 8.90012 68.9863 8.90012C69.1381 8.90012 69.214 8.9764 69.214 9.12896C69.214 9.63594 69.214 10.1417 69.214 10.6487C69.214 10.8153 69.2047 10.8236 69.0368 10.8236C67.3993 10.8236 65.7617 10.8236 64.1242 10.8236C64.0831 10.8236 64.0409 10.8236 63.9998 10.8236C63.8683 10.8259 63.8578 10.8341 63.8578 10.9667C63.8578 11.6979 63.8578 12.429 63.8578 13.1601C63.8578 13.3314 63.8578 13.3314 64.0327 13.3314C65.9073 13.3314 67.7819 13.3314 69.6566 13.3314C69.8123 13.3314 69.8902 13.4081 69.8902 13.5614C69.8902 14.0602 69.8902 14.5578 69.8902 15.0565C69.8902 15.2232 69.882 15.2314 69.7129 15.2314C67.1023 15.2314 64.4928 15.2314 61.8822 15.2314C61.7143 15.2314 61.7061 15.2232 61.7061 15.0554C61.7061 13.2986 61.7061 11.5418 61.7061 9.78498Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M46.3415 9.86711C46.3274 8.95292 46.527 8.14082 46.9108 7.37567C47.1468 6.90625 47.4426 6.47673 47.7959 6.08594C48.2784 5.55081 48.8453 5.1295 49.4839 4.80678C50.1624 4.4641 50.882 4.26577 51.6438 4.20827C52.5958 4.13668 53.5067 4.29394 54.3824 4.66243C55.0081 4.92648 55.568 5.2938 56.0634 5.76087C56.4367 6.11294 56.7677 6.50021 57.0295 6.94381C57.1034 7.06938 57.1022 7.07876 56.9696 7.13157C56.3827 7.36394 55.7946 7.59395 55.2076 7.82866C55.1219 7.86269 55.0715 7.84274 55.0187 7.77116C54.6477 7.26418 54.1911 6.85344 53.6347 6.55888C53.1851 6.32065 52.7085 6.17748 52.1944 6.15988C51.2858 6.12819 50.4911 6.42393 49.8103 7.00835C49.0719 7.64207 48.627 8.44712 48.5167 9.41999C48.3934 10.5032 48.7327 11.442 49.4417 12.2565C49.9746 12.869 50.6437 13.2622 51.4407 13.4159C52.3763 13.5966 53.2285 13.3772 54.008 12.8432C54.4035 12.5733 54.7357 12.2388 55.0128 11.8504C55.0726 11.7659 55.1278 11.7542 55.2206 11.7917C55.8028 12.0253 56.3874 12.2541 56.9708 12.4853C57.1011 12.5369 57.1046 12.551 57.0318 12.6742C56.4883 13.5861 55.7335 14.2738 54.7991 14.7714C54.1606 15.1117 53.4797 15.3206 52.7625 15.3992C51.6649 15.5201 50.6085 15.3628 49.6072 14.8828C48.9592 14.5719 48.3782 14.1682 47.8887 13.6436C47.0224 12.7177 46.4918 11.6321 46.3626 10.3612C46.3439 10.1781 46.3439 9.9962 46.3415 9.86829V9.86711Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M42.3781 15.2314C42.0495 15.2314 41.7208 15.2267 41.3933 15.2337C41.2677 15.2372 41.1984 15.1973 41.1432 15.0823C40.9143 14.6117 40.6737 14.147 40.4436 13.6764C40.3932 13.5731 40.3309 13.5321 40.2136 13.5332C38.5889 13.5368 36.9632 13.5368 35.3385 13.5332C35.2176 13.5332 35.1507 13.5731 35.0991 13.6823C34.876 14.147 34.6424 14.6059 34.4206 15.0706C34.3654 15.1868 34.295 15.2361 34.1623 15.2349C33.5015 15.229 32.8406 15.2325 32.1797 15.2325C32.1468 15.2325 32.1128 15.2325 32.0799 15.229C32.0306 15.2243 32.0154 15.1962 32.0341 15.1504C32.0471 15.1199 32.0623 15.0905 32.0776 15.06C32.6739 13.9193 33.269 12.7787 33.8665 11.6368C34.1342 11.1251 34.403 10.6146 34.6694 10.103C35.2822 8.92942 35.8949 7.7547 36.5089 6.57998C36.7859 6.04954 37.0629 5.52027 37.34 4.991C37.428 4.82201 37.5196 4.65419 37.6053 4.48286C37.6416 4.40892 37.6945 4.38428 37.7743 4.38428C37.8576 4.38428 37.914 4.40657 37.9539 4.4852C38.1335 4.83609 38.319 5.18464 38.5021 5.53435C38.9587 6.41099 39.4142 7.28763 39.8708 8.16427C40.2546 8.90008 40.6397 9.6359 41.0247 10.3717C41.513 11.3059 42.0013 12.2412 42.4908 13.1753C42.8101 13.7856 43.1329 14.3958 43.4534 15.0049C43.4769 15.0495 43.4992 15.0941 43.5203 15.1387C43.5485 15.1973 43.5238 15.2255 43.464 15.2278C43.4311 15.229 43.3971 15.229 43.3642 15.229C43.0355 15.229 42.708 15.229 42.3793 15.229L42.3781 15.2314ZM37.759 11.6873C38.2286 11.6873 38.6969 11.6873 39.1665 11.6873C39.3097 11.6873 39.3144 11.6779 39.251 11.5476C38.9963 11.0207 38.7404 10.4949 38.4868 9.96801C38.3624 9.70983 38.2427 9.45048 38.1194 9.1923C38.0173 8.97871 37.9128 8.7663 37.8107 8.55389C37.7884 8.50695 37.7684 8.50577 37.7449 8.55154C37.7355 8.57032 37.7262 8.58909 37.7179 8.60787C37.5442 8.9705 37.3705 9.3343 37.1956 9.69575C36.8927 10.3189 36.5899 10.9421 36.2858 11.564C36.2295 11.6802 36.233 11.6873 36.3645 11.6873C36.8293 11.6873 37.2942 11.6873 37.759 11.6873Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M65.2486 20.9032C65.2486 21.3386 65.2545 21.7751 65.2463 22.2105C65.2416 22.4675 65.2252 22.7233 65.15 22.9733C64.9939 23.4908 64.6371 23.7654 64.1124 23.8218C63.8189 23.8535 63.5219 23.8464 63.2437 23.7185C62.9291 23.5742 62.7296 23.3324 62.6521 22.9944C62.6298 22.8959 62.6462 22.8782 62.7495 22.8736C62.7906 22.8712 62.8329 22.8747 62.8739 22.8736C62.9455 22.87 62.989 22.8982 63.016 22.9674C63.1674 23.3512 63.4714 23.4955 63.8623 23.4991C63.9457 23.4991 64.029 23.5002 64.1112 23.4885C64.4974 23.4286 64.7357 23.208 64.8319 22.8266C64.8906 22.5907 64.9024 22.3513 64.8977 22.1096C64.8977 22.0896 64.9047 22.0626 64.8812 22.0556C64.8578 22.0485 64.8495 22.0755 64.8366 22.0908C64.2814 22.7761 63.1932 22.6647 62.7859 21.8643C62.4537 21.2118 62.4807 20.5417 62.8399 19.9092C63.0794 19.4879 63.475 19.2919 63.9668 19.3048C64.1511 19.3095 64.3307 19.3318 64.4997 19.4116C64.6218 19.4691 64.7298 19.543 64.819 19.6451C64.8366 19.6651 64.8472 19.7085 64.8812 19.6932C64.9106 19.6815 64.8965 19.6416 64.9012 19.6134C64.9071 19.5771 64.9117 19.5395 64.9164 19.502C64.9235 19.4491 64.9188 19.3858 64.9892 19.374C65.0667 19.36 65.1489 19.3447 65.2181 19.3928C65.2651 19.4245 65.2498 19.4832 65.251 19.5325C65.251 19.989 65.251 20.4455 65.251 20.902H65.2486V20.9032ZM64.8977 20.8856C64.9082 20.7001 64.8918 20.4983 64.8425 20.3C64.7545 19.9444 64.5432 19.7132 64.1699 19.6545C64.0924 19.6428 64.0126 19.644 63.9339 19.6404C63.5149 19.6217 63.2097 19.8634 63.0676 20.2249C62.9021 20.6438 62.888 21.0745 63.0289 21.504C63.1204 21.7822 63.2907 22.0016 63.5665 22.1248C63.7473 22.2058 63.9339 22.2105 64.1276 22.18C64.4399 22.1307 64.6629 21.9711 64.7826 21.6742C64.8824 21.4266 64.9047 21.1684 64.8977 20.8856Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M33.6486 22.5322C33.246 22.5322 32.8422 22.5322 32.4395 22.5322C32.2893 22.5322 32.2764 22.5204 32.2764 22.3679C32.2764 21.0148 32.2764 19.6617 32.2764 18.3074C32.2764 18.1478 32.2858 18.1396 32.4466 18.1396C33.2401 18.1396 34.0336 18.1396 34.8272 18.1396C34.8823 18.1396 34.9563 18.1161 34.9809 18.1853C35.0114 18.2722 35.0114 18.3649 34.9762 18.4529C34.9645 18.4822 34.9305 18.4869 34.9011 18.4893C34.86 18.4916 34.8178 18.4928 34.7767 18.4928C34.124 18.4928 33.4725 18.4928 32.8199 18.4928C32.6661 18.4928 32.6555 18.5022 32.6555 18.6548C32.6555 19.062 32.6555 19.468 32.6555 19.8752C32.6555 20.0266 32.6649 20.0337 32.821 20.0349C33.4397 20.0349 34.0595 20.0349 34.6781 20.036C34.7403 20.036 34.8248 20.0067 34.8588 20.0806C34.8952 20.1604 34.8823 20.252 34.8647 20.3376C34.8565 20.3752 34.8213 20.3846 34.7861 20.3869C34.745 20.3893 34.7027 20.3893 34.6616 20.3893C34.0512 20.3893 33.4397 20.3893 32.8293 20.3893C32.6602 20.3893 32.6555 20.394 32.6555 20.5653C32.6555 21.0464 32.6555 21.5288 32.6555 22.0099C32.6555 22.1707 32.6626 22.1777 32.8246 22.1777C33.5019 22.1777 34.1792 22.1777 34.8565 22.1777C34.8976 22.1777 34.9398 22.1777 34.9809 22.1801C35.0056 22.1801 35.0349 22.1813 35.0502 22.2036C35.1065 22.2881 35.0514 22.3714 35.0443 22.4559C35.0396 22.5099 34.995 22.5286 34.9445 22.531C34.907 22.5322 34.8694 22.5333 34.8319 22.5333C34.4374 22.5333 34.043 22.5333 33.6474 22.5333L33.6486 22.5322Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M54.6769 21.2226C54.6769 21.4714 54.6769 21.7213 54.6769 21.9701C54.6769 22.0945 54.6792 22.2189 54.6968 22.3433C54.7203 22.5123 54.6968 22.5334 54.5313 22.5334C54.5149 22.5334 54.4984 22.5323 54.482 22.5334C54.4057 22.5358 54.3705 22.4947 54.3564 22.4243C54.3388 22.341 54.3564 22.2506 54.3036 22.1755C54.2449 22.233 54.1885 22.2929 54.1275 22.348C53.9502 22.5088 53.7331 22.5686 53.5018 22.598C53.2436 22.6308 52.9947 22.6015 52.7611 22.4865C52.4242 22.321 52.2364 21.9431 52.2681 21.5676C52.3057 21.1275 52.5522 20.8764 52.9513 20.7438C53.1614 20.6734 53.3809 20.6452 53.6016 20.6393C53.8012 20.6335 54.0007 20.6346 54.2003 20.6382C54.2907 20.6393 54.3294 20.6029 54.3259 20.5126C54.3212 20.3964 54.3282 20.2802 54.3106 20.1652C54.266 19.8836 54.0993 19.7216 53.827 19.6641C53.6298 19.6219 53.4314 19.6242 53.2342 19.67C53.0311 19.7157 52.8961 19.8354 52.8233 20.0314C52.7482 20.2309 52.7353 20.2345 52.5252 20.2204C52.4395 20.2145 52.416 20.1758 52.4324 20.0995C52.4947 19.819 52.6297 19.5913 52.8914 19.4505C53.1027 19.3379 53.3316 19.3038 53.5664 19.3085C53.7401 19.312 53.9139 19.3238 54.0829 19.3813C54.4104 19.4928 54.5935 19.724 54.6546 20.0572C54.6733 20.1593 54.6816 20.2626 54.6804 20.3671C54.678 20.6534 54.6804 20.9398 54.6804 21.2273L54.6769 21.2226ZM53.8916 20.9409C53.8047 20.9409 53.7166 20.9362 53.6298 20.9409C53.4185 20.9538 53.2072 20.9726 53.0088 21.0595C52.747 21.1745 52.6156 21.3974 52.6355 21.6885C52.6555 21.9631 52.8257 22.1696 53.0933 22.2447C53.2952 22.3011 53.4971 22.2835 53.6967 22.233C53.9772 22.1614 54.1592 21.9842 54.2449 21.7073C54.3118 21.4901 54.327 21.2672 54.3224 21.0419C54.3212 20.9679 54.2848 20.9374 54.2132 20.9386C54.1052 20.9398 53.9972 20.9386 53.8892 20.9386L53.8916 20.9409Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M47.2422 20.218C47.2422 19.5162 47.2422 18.8156 47.2422 18.1138C47.2422 17.9061 47.3126 17.8521 47.518 17.8991C47.565 17.9096 47.592 17.9343 47.5932 17.9836C47.5943 18.0211 47.5955 18.0587 47.5955 18.095C47.5955 18.6102 47.5955 19.1242 47.5955 19.6394C47.5955 19.6688 47.5932 19.6981 47.5955 19.7263C47.5979 19.7486 47.5826 19.7826 47.6143 19.7908C47.6343 19.7967 47.6448 19.7674 47.6577 19.7509C47.97 19.3449 48.3926 19.2439 48.8703 19.332C49.3199 19.4153 49.6087 19.7709 49.6638 20.2673C49.6803 20.4163 49.6885 20.5642 49.6885 20.7144C49.6862 21.2624 49.6885 21.8105 49.6873 22.3585C49.6873 22.4149 49.7049 22.4876 49.6392 22.5134C49.5535 22.5475 49.4596 22.544 49.3716 22.5134C49.341 22.5029 49.3375 22.4689 49.3363 22.4395C49.3352 22.402 49.334 22.3644 49.334 22.328C49.334 21.7636 49.334 21.1991 49.334 20.6346C49.334 20.4844 49.3152 20.3365 49.2753 20.1922C49.1779 19.846 48.9361 19.6512 48.5745 19.6488C48.1014 19.6453 47.7575 19.8413 47.6401 20.3811C47.6108 20.5149 47.5967 20.651 47.5967 20.7883C47.5979 21.307 47.5979 21.8258 47.5967 22.3445C47.5967 22.4031 47.6237 22.4829 47.5556 22.5146C47.4723 22.5522 47.3772 22.5428 47.288 22.5181C47.2563 22.5099 47.2492 22.4771 47.2469 22.4466C47.2445 22.4055 47.2434 22.3632 47.2434 22.3222C47.2434 21.6204 47.2434 20.9198 47.2434 20.218H47.2422Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M57.538 21.0125C57.538 20.6393 57.538 20.2649 57.538 19.8917C57.538 19.7674 57.5415 19.643 57.5251 19.5186C57.5099 19.4 57.5404 19.3719 57.6613 19.3672C57.6906 19.3672 57.72 19.3672 57.7481 19.3672C57.828 19.3672 57.8702 19.4024 57.8737 19.4857C57.8784 19.5772 57.8972 19.6664 57.8937 19.7591C57.8937 19.7779 57.8867 19.8073 57.909 19.8131C57.9324 19.8202 57.9395 19.7908 57.9501 19.7744C58.1062 19.5291 58.3257 19.3766 58.6121 19.3296C58.895 19.2827 59.1756 19.285 59.4385 19.4258C59.6369 19.5315 59.7801 19.6887 59.8611 19.8976C59.9292 20.0725 59.9656 20.2555 59.9656 20.4457C59.9644 21.0805 59.9656 21.7166 59.9644 22.3515C59.9644 22.4102 59.9902 22.49 59.9163 22.517C59.8341 22.5475 59.7449 22.5404 59.6592 22.5181C59.6275 22.5099 59.6181 22.4794 59.6158 22.4489C59.6134 22.4078 59.6122 22.3656 59.6122 22.3245C59.6122 21.7307 59.6122 21.1369 59.6122 20.5431C59.6122 20.4351 59.6052 20.3283 59.5817 20.2215C59.4855 19.7779 59.1744 19.616 58.7647 19.6512C58.3586 19.6852 58.1038 19.9129 57.9794 20.2943C57.9266 20.4574 57.8925 20.6229 57.8937 20.7954C57.8949 21.3023 57.8937 21.8081 57.8937 22.3151C57.8937 22.524 57.8244 22.5768 57.6167 22.5287C57.5697 22.5181 57.5427 22.4935 57.5416 22.4442C57.5404 22.4031 57.5392 22.3609 57.5392 22.3198C57.5392 21.8833 57.5392 21.4479 57.5392 21.0113L57.538 21.0125Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M43.5778 19.3061C44.1002 19.319 44.5016 19.6135 44.6554 20.1381C44.6648 20.1698 44.6719 20.2026 44.6777 20.2355C44.6906 20.3047 44.6613 20.3376 44.592 20.3388C44.5509 20.3388 44.5087 20.3376 44.4676 20.3399C44.3796 20.3458 44.3326 20.3071 44.3044 20.2226C44.2363 20.0207 44.1237 19.8482 43.93 19.7438C43.4593 19.488 42.8782 19.6745 42.6469 20.178C42.4028 20.7084 42.4075 21.2541 42.6704 21.7775C42.9533 22.342 43.5954 22.3831 43.9781 22.1214C44.126 22.0205 44.207 21.8738 44.2821 21.7189C44.3068 21.6684 44.3138 21.598 44.3819 21.5851C44.4676 21.5698 44.5568 21.5675 44.6425 21.5863C44.693 21.5968 44.6801 21.6449 44.6683 21.6801C44.5192 22.1331 44.2516 22.4793 43.7433 22.5767C43.0226 22.7152 42.4286 22.3643 42.2126 21.6637C42.0236 21.0499 42.0577 20.4456 42.4051 19.8893C42.6575 19.4833 43.0425 19.2978 43.5778 19.3049V19.3061Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M39.7882 22.5333C39.6685 22.5614 39.5887 22.4922 39.5147 22.3795C39.2729 22.0122 39.0217 21.6508 38.7729 21.287C38.7083 21.1919 38.7048 21.1931 38.639 21.2893C38.3878 21.6613 38.1378 22.0333 37.8866 22.4054C37.8115 22.5168 37.5873 22.5826 37.4687 22.5251C37.4065 22.4945 37.4441 22.4558 37.4664 22.423C37.6002 22.2282 37.7363 22.0345 37.8713 21.8397C38.0662 21.5604 38.2599 21.2799 38.4571 21.003C38.504 20.9373 38.4841 20.8903 38.4454 20.8352C38.2211 20.5113 37.9969 20.1862 37.7739 19.8611C37.687 19.7344 37.599 19.6088 37.5145 19.4809C37.464 19.4058 37.4769 19.3764 37.565 19.3694C37.6354 19.3635 37.7058 19.367 37.7763 19.3694C37.8526 19.3717 37.8913 19.4269 37.9289 19.4832C38.1566 19.8247 38.3855 20.1674 38.6144 20.5089C38.6285 20.53 38.6414 20.5512 38.6555 20.5711C38.713 20.6497 38.7236 20.6509 38.7776 20.5735C38.9525 20.3258 39.1262 20.077 39.2999 19.8294C39.3786 19.7168 39.456 19.6041 39.5347 19.4926C39.6145 19.38 39.8188 19.3225 39.9467 19.3753C40.0124 19.4023 39.9772 19.4422 39.9549 19.4738C39.8692 19.5959 39.7824 19.7179 39.6943 19.8388C39.4654 20.1557 39.2389 20.4725 39.0065 20.7859C38.9454 20.868 38.9407 20.9337 39.0006 21.0194C39.307 21.4583 39.6086 21.9019 39.9115 22.3432C39.9185 22.3537 39.9268 22.3631 39.9326 22.3737C39.9538 22.4159 40.0136 22.4523 39.9831 22.5039C39.9538 22.5521 39.8915 22.5262 39.8434 22.5321C39.8317 22.5333 39.8188 22.5321 39.7859 22.5321L39.7882 22.5333Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10212",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "23.6587",
                        transform: "translate(0.583008 0.453125)",
                        width: "69.8772"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite5/LogoAceWhite5.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite5;
var _c;
$RefreshReg$(_c, "LogoAceWhite5");

  $parcel$ReactRefreshHelpers$362c.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"iQ8iA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite7", ()=>(0, _logoAceWhite7.LogoAceWhite7));
var _logoAceWhite7 = require("./LogoAceWhite7");

},{"./LogoAceWhite7":"k1Pzx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k1Pzx":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$a1f6 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$a1f6.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite7", ()=>LogoAceWhite7);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite7 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-7 ${className}`,
        fill: "none",
        height: "44",
        viewBox: "0 0 127 44",
        width: "127",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7232)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M27.5516 0.311523C27.6407 0.572367 27.8189 0.780193 27.961 1.00711C29.4077 3.3144 30.8607 5.61746 32.3159 7.92052C33.7605 10.2108 35.2093 12.4991 36.6538 14.7894C38.0751 17.0416 39.492 19.2958 40.9111 21.5501C41.9951 23.27 43.0833 24.9877 44.1672 26.7076C45.336 28.5611 46.5006 30.4146 47.6694 32.268C48.7533 33.9879 49.8415 35.7056 50.9255 37.4255C52.0625 39.226 53.1995 41.0285 54.3343 42.8311C54.3789 42.9011 54.4128 42.9753 54.451 43.0495H24.8937C24.9467 42.9011 25.0337 42.7675 25.1122 42.6318C25.9607 41.1643 26.8134 39.6989 27.6619 38.2314C28.608 36.5942 29.5519 34.957 30.4959 33.3199C30.9795 32.4822 31.4589 31.6403 31.9468 30.8069C32.0317 30.6605 32.0189 30.5566 31.9277 30.4209C31.6965 30.0795 31.4801 29.7274 31.2595 29.3775C30.0441 27.4477 28.8286 25.5179 27.6131 23.5881C27.5071 23.4184 27.4795 23.4184 27.3713 23.5881C26.9025 24.3303 26.4337 25.0726 25.9649 25.8148C25.2904 26.8794 24.6158 27.944 23.9434 29.0107C23.0546 30.4188 22.17 31.8312 21.2812 33.2393C20.5324 34.4269 19.7815 35.6102 19.0327 36.7978C18.1164 38.2505 17.1979 39.7031 16.2857 41.1579C15.8912 41.7877 15.4775 42.4049 15.1106 43.0495C10.3039 43.0495 5.49714 43.0495 0.690419 43.0453C0.633146 43.0453 0.497387 43.1365 0.510114 42.9605C0.590721 42.9117 0.637388 42.8354 0.686177 42.759C1.49649 41.4781 2.30468 40.1951 3.11499 38.9142C4.13955 37.2898 5.1641 35.6653 6.19078 34.0409C7.11564 32.5755 8.04474 31.1123 8.9696 29.6447C10.0748 27.8931 11.1778 26.1414 12.283 24.3897C13.0318 23.2021 13.7827 22.0188 14.5315 20.8312C15.4372 19.3976 16.3388 17.9619 17.2445 16.5262C17.9764 15.3641 18.7103 14.2041 19.4421 13.042C20.3352 11.6253 21.224 10.2087 22.117 8.79424C22.9379 7.49214 23.7588 6.19216 24.5798 4.89007C25.5407 3.3653 26.4995 1.84265 27.4583 0.317885C27.488 0.317885 27.5177 0.317885 27.5474 0.317885L27.5516 0.311523Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M126.785 37.4619C125.555 37.4619 124.323 37.464 123.092 37.4661C123.024 37.4661 122.956 37.4683 122.889 37.4661C122.744 37.4619 122.687 37.5234 122.704 37.674C122.742 37.9942 122.793 38.3123 122.912 38.6155C123.355 39.7459 124.526 40.0109 125.438 39.502C125.686 39.362 125.852 39.1372 125.981 38.8849C126.079 38.6982 126.442 38.5943 126.622 38.7004C126.724 38.7597 126.677 38.8467 126.65 38.9188C126.51 39.292 126.287 39.608 125.977 39.8604C125.135 40.5432 123.712 40.5135 122.916 39.784C122.536 39.4341 122.312 38.9845 122.186 38.4883C121.942 37.5085 122 36.5542 122.443 35.6381C123.162 34.1536 125.107 34.0582 126.053 34.9277C126.406 35.25 126.62 35.6614 126.736 36.1216C126.751 36.1789 126.766 36.2383 126.781 36.2955V37.4661L126.785 37.4619ZM124.465 36.8766C124.967 36.8766 125.47 36.8787 125.973 36.8766C126.166 36.8766 126.202 36.8299 126.181 36.6475C126.149 36.3931 126.089 36.1471 125.981 35.9117C125.549 34.9616 124.248 34.6626 123.442 35.3285C123.029 35.672 122.869 36.1407 122.776 36.6433C122.738 36.8533 122.755 36.8766 122.978 36.8766C123.472 36.8787 123.968 36.8766 124.463 36.8766H124.465Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M110.965 17.1755C110.965 14.0602 110.965 10.9471 110.965 7.83178C110.965 7.74907 110.967 7.66637 110.965 7.58366C110.963 7.44157 111.031 7.37583 111.171 7.38008C111.239 7.38008 111.306 7.38008 111.374 7.38008C116.03 7.38008 120.689 7.38008 125.345 7.38008C125.618 7.38008 125.754 7.5158 125.754 7.78725C125.754 8.64188 125.754 9.49863 125.754 10.3533C125.754 10.629 125.613 10.7668 125.33 10.7668C121.966 10.7668 118.599 10.7668 115.235 10.7668C114.98 10.7668 114.853 10.894 114.853 11.1485C114.853 12.5079 114.853 13.8651 114.853 15.2245C114.853 15.4592 114.968 15.5765 115.199 15.5765C118.173 15.5765 121.147 15.5765 124.121 15.5765C124.395 15.5765 124.532 15.7143 124.532 15.99C124.532 16.9062 124.532 17.8202 124.532 18.7363C124.532 19.0374 124.515 19.0523 124.212 19.0523C121.253 19.0523 118.294 19.0523 115.335 19.0523C115.26 19.0523 115.184 19.0523 115.11 19.0523C114.872 19.0565 114.853 19.0714 114.853 19.311C114.853 20.6322 114.853 21.9534 114.853 23.2746C114.853 23.5842 114.853 23.5842 115.169 23.5842C118.557 23.5842 121.944 23.5842 125.332 23.5842C125.613 23.5842 125.754 23.7227 125.754 23.9998C125.754 24.9011 125.754 25.8003 125.754 26.7016C125.754 27.0027 125.739 27.0176 125.434 27.0176C120.716 27.0176 116.001 27.0176 111.283 27.0176C110.98 27.0176 110.965 27.0027 110.965 26.6995C110.965 23.5248 110.965 20.3501 110.965 17.1755Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M83.2 17.3238C83.1745 15.6718 83.5351 14.2042 84.2288 12.8216C84.6552 11.9733 85.1897 11.1971 85.8282 10.4909C86.7 9.52391 87.7246 8.76259 88.8785 8.1794C90.1046 7.56016 91.4049 7.20177 92.7816 7.09786C94.5019 6.96849 96.148 7.25267 97.7304 7.91856C98.8611 8.39571 99.8729 9.05948 100.768 9.90351C101.443 10.5397 102.041 11.2395 102.514 12.0412C102.647 12.2681 102.645 12.285 102.406 12.3805C101.345 12.8004 100.282 13.216 99.2217 13.6401C99.0668 13.7016 98.9756 13.6656 98.8802 13.5362C98.2098 12.6201 97.3847 11.8779 96.3792 11.3456C95.5668 10.9151 94.7056 10.6564 93.7765 10.6245C92.1346 10.5673 90.6986 11.1017 89.4682 12.1578C88.134 13.303 87.33 14.7577 87.1306 16.5158C86.9079 18.4732 87.5209 20.1697 88.8022 21.6415C89.7652 22.7485 90.9743 23.4589 92.4146 23.7367C94.1053 24.0633 95.6453 23.6667 97.0538 22.7018C97.7686 22.2141 98.3689 21.6097 98.8695 20.9077C98.9777 20.755 99.0774 20.7338 99.245 20.8017C100.297 21.2237 101.354 21.6372 102.408 22.055C102.643 22.1483 102.65 22.1738 102.518 22.3964C101.536 24.0442 100.172 25.2869 98.4835 26.1861C97.3295 26.8011 96.0992 27.1786 94.8031 27.3206C92.8198 27.5391 90.9107 27.2549 89.1013 26.3875C87.9303 25.8256 86.8803 25.0961 85.9958 24.1481C84.4303 22.4749 83.4715 20.5133 83.2382 18.2166C83.2042 17.8857 83.2042 17.557 83.2 17.3259V17.3238Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M76.0389 27.0174C75.4449 27.0174 74.851 27.009 74.2592 27.0217C74.0322 27.028 73.907 26.9559 73.8073 26.7481C73.3937 25.8977 72.9589 25.0579 72.5431 24.2075C72.4519 24.0209 72.3394 23.9467 72.1273 23.9488C69.1915 23.9552 66.2536 23.9552 63.3178 23.9488C63.0993 23.9488 62.9784 24.0209 62.8851 24.2182C62.4821 25.0579 62.0599 25.8871 61.659 26.7269C61.5593 26.9369 61.4321 27.0259 61.1924 27.0238C59.9981 27.0132 58.8039 27.0196 57.6096 27.0196C57.5502 27.0196 57.4887 27.0196 57.4293 27.0132C57.3402 27.0047 57.3126 26.9538 57.3466 26.8711C57.3699 26.816 57.3975 26.763 57.425 26.7078C58.5026 24.6465 59.5781 22.5852 60.6578 20.5218C61.1415 19.5972 61.6272 18.6747 62.1087 17.7501C63.216 15.6294 64.3233 13.5066 65.4327 11.3838C65.9333 10.4253 66.4339 9.46883 66.9345 8.51241C67.0936 8.20703 67.2591 7.90377 67.4139 7.59415C67.4797 7.46055 67.5752 7.41602 67.7194 7.41602C67.87 7.41602 67.9718 7.45631 68.0439 7.59839C68.3685 8.23248 68.7037 8.86232 69.0346 9.49428C69.8597 11.0784 70.6828 12.6626 71.5079 14.2467C72.2016 15.5764 72.8973 16.9061 73.5931 18.2357C74.4755 19.9238 75.358 21.614 76.2425 23.302C76.8195 24.4048 77.4028 25.5075 77.9819 26.6082C78.0244 26.6887 78.0647 26.7693 78.1028 26.8499C78.1538 26.9559 78.1092 27.0068 78.001 27.0111C77.9416 27.0132 77.8801 27.0132 77.8207 27.0132C77.2268 27.0132 76.6349 27.0132 76.041 27.0132L76.0389 27.0174ZM67.6918 20.613C68.5403 20.613 69.3867 20.613 70.2352 20.613C70.494 20.613 70.5025 20.596 70.3879 20.3606C69.9276 19.4085 69.4652 18.4584 69.007 17.5062C68.7821 17.0397 68.5658 16.571 68.343 16.1044C68.1585 15.7185 67.9697 15.3346 67.7852 14.9508C67.7449 14.866 67.7088 14.8638 67.6664 14.9465C67.6494 14.9805 67.6324 15.0144 67.6176 15.0483C67.3036 15.7036 66.9897 16.361 66.6736 17.0142C66.1264 18.1403 65.5791 19.2664 65.0297 20.3903C64.9279 20.6003 64.9342 20.613 65.1718 20.613C66.0118 20.613 66.8518 20.613 67.6918 20.613Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M117.367 37.2669C117.367 38.0537 117.377 38.8425 117.363 39.6293C117.354 40.0937 117.324 40.5561 117.189 41.0078C116.906 41.943 116.262 42.4392 115.313 42.541C114.783 42.5983 114.246 42.5855 113.744 42.3544C113.175 42.0935 112.815 41.6567 112.675 41.0459C112.634 40.8678 112.664 40.836 112.851 40.8275C112.925 40.8233 113.001 40.8296 113.076 40.8275C113.205 40.8211 113.283 40.872 113.332 40.9972C113.606 41.6906 114.155 41.9515 114.862 41.9578C115.012 41.9578 115.163 41.9599 115.311 41.9387C116.009 41.8306 116.44 41.4319 116.614 40.7427C116.72 40.3164 116.741 39.8838 116.733 39.4469C116.733 39.4109 116.745 39.3621 116.703 39.3494C116.66 39.3367 116.646 39.3854 116.622 39.413C115.619 40.6515 113.653 40.45 112.916 39.0037C112.316 37.8246 112.365 36.6137 113.014 35.4707C113.447 34.7093 114.162 34.3552 115.05 34.3785C115.383 34.387 115.708 34.4273 116.013 34.5715C116.234 34.6754 116.429 34.809 116.59 34.9935C116.622 35.0296 116.641 35.108 116.703 35.0805C116.756 35.0593 116.73 34.9872 116.739 34.9363C116.75 34.8705 116.758 34.8027 116.766 34.7348C116.779 34.6394 116.771 34.5248 116.898 34.5036C117.038 34.4782 117.187 34.4506 117.312 34.5376C117.397 34.5948 117.369 34.7009 117.371 34.7899C117.371 35.6149 117.371 36.4398 117.371 37.2648H117.367V37.2669ZM116.733 37.2351C116.752 36.9 116.722 36.5353 116.633 36.1769C116.474 35.5343 116.092 35.1165 115.417 35.0105C115.277 34.9893 115.133 34.9914 114.991 34.985C114.234 34.9511 113.682 35.388 113.426 36.0411C113.126 36.7982 113.101 37.5765 113.356 38.3527C113.521 38.8553 113.829 39.2518 114.327 39.4745C114.654 39.6208 114.991 39.6293 115.341 39.5742C115.905 39.4851 116.308 39.1967 116.525 38.6602C116.705 38.2127 116.745 37.7462 116.733 37.2351Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M60.2634 40.2102C59.5358 40.2102 58.8061 40.2102 58.0785 40.2102C57.807 40.2102 57.7837 40.189 57.7837 39.9134C57.7837 37.4682 57.7837 35.0231 57.7837 32.5758C57.7837 32.2874 57.8007 32.2725 58.0913 32.2725C59.5252 32.2725 60.9592 32.2725 62.3931 32.2725C62.4928 32.2725 62.6265 32.2301 62.671 32.3553C62.7262 32.5122 62.7262 32.6797 62.6625 32.8388C62.6413 32.8918 62.5798 32.9003 62.5268 32.9045C62.4525 32.9088 62.3762 32.9109 62.3019 32.9109C61.1225 32.9109 59.9452 32.9109 58.7658 32.9109C58.4879 32.9109 58.4689 32.9278 58.4689 33.2035C58.4689 33.9394 58.4689 34.6732 58.4689 35.409C58.4689 35.6826 58.4858 35.6953 58.7679 35.6974C59.8858 35.6974 61.0059 35.6974 62.1237 35.6996C62.2362 35.6996 62.3889 35.6465 62.4504 35.7801C62.5162 35.9244 62.4928 36.0898 62.461 36.2446C62.4462 36.3124 62.3825 36.3294 62.3189 36.3336C62.2446 36.3379 62.1683 36.3379 62.094 36.3379C60.991 36.3379 59.8858 36.3379 58.7828 36.3379C58.4773 36.3379 58.4689 36.3464 58.4689 36.656C58.4689 37.5255 58.4689 38.3971 58.4689 39.2665C58.4689 39.5571 58.4816 39.5698 58.7743 39.5698C59.9983 39.5698 61.2222 39.5698 62.4462 39.5698C62.5204 39.5698 62.5968 39.5698 62.671 39.574C62.7156 39.574 62.7686 39.5762 62.7962 39.6165C62.898 39.7691 62.7983 39.9197 62.7856 40.0724C62.7771 40.17 62.6965 40.2039 62.6053 40.2081C62.5374 40.2102 62.4695 40.2124 62.4016 40.2124C61.6889 40.2124 60.9762 40.2124 60.2613 40.2124L60.2634 40.2102Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M98.2628 37.8434C98.2628 38.293 98.2628 38.7447 98.2628 39.1942C98.2628 39.419 98.2671 39.6438 98.2989 39.8686C98.3413 40.174 98.2989 40.2122 97.9998 40.2122C97.9701 40.2122 97.9404 40.21 97.9107 40.2122C97.7728 40.2164 97.7092 40.1422 97.6837 40.0149C97.6519 39.8644 97.6837 39.7011 97.5883 39.5654C97.4822 39.6693 97.3804 39.7774 97.2701 39.8771C96.9498 40.1676 96.5574 40.2758 96.1395 40.3288C95.6728 40.3882 95.2231 40.3352 94.801 40.1273C94.1922 39.8283 93.8528 39.1455 93.9101 38.4669C93.9779 37.6716 94.4234 37.2178 95.1446 36.9781C95.5243 36.8509 95.921 36.8 96.3198 36.7894C96.6804 36.7788 97.041 36.7809 97.4016 36.7873C97.565 36.7894 97.6349 36.7237 97.6286 36.5604C97.6201 36.3504 97.6328 36.1405 97.601 35.9326C97.5204 35.4237 97.2192 35.131 96.7271 35.0271C96.3707 34.9508 96.0122 34.955 95.6558 35.0377C95.2889 35.1204 95.0449 35.3367 94.9134 35.6909C94.7776 36.0514 94.7543 36.0578 94.3746 36.0323C94.2198 36.0217 94.1773 35.9517 94.207 35.8139C94.3195 35.307 94.5634 34.8956 95.0364 34.6411C95.4183 34.4376 95.8319 34.3761 96.2561 34.3845C96.5701 34.3909 96.884 34.4121 97.1895 34.516C97.7813 34.7175 98.1122 35.1353 98.2225 35.7375C98.2565 35.922 98.2713 36.1087 98.2692 36.2974C98.265 36.8148 98.2692 37.3323 98.2692 37.8519L98.2628 37.8434ZM96.8437 37.3344C96.6868 37.3344 96.5277 37.3259 96.3707 37.3344C95.9889 37.3577 95.607 37.3917 95.2486 37.5486C94.7755 37.7564 94.5379 38.1594 94.574 38.6853C94.6101 39.1815 94.9176 39.5548 95.4013 39.6905C95.7661 39.7923 96.131 39.7605 96.4916 39.6693C96.9986 39.5399 97.3274 39.2197 97.4822 38.7192C97.6031 38.3269 97.6307 37.924 97.6222 37.5168C97.6201 37.3832 97.5543 37.328 97.4249 37.3302C97.2298 37.3323 97.0346 37.3302 96.8395 37.3302L96.8437 37.3344Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M84.8271 36.028C84.8271 34.7599 84.8271 33.4938 84.8271 32.2257C84.8271 31.8503 84.9544 31.7527 85.3256 31.8376C85.4105 31.8567 85.4593 31.9012 85.4614 31.9903C85.4635 32.0581 85.4656 32.126 85.4656 32.1917C85.4656 33.1227 85.4656 34.0516 85.4656 34.9825C85.4656 35.0356 85.4614 35.0886 85.4656 35.1395C85.4699 35.1798 85.4423 35.2413 85.4996 35.2561C85.5356 35.2667 85.5547 35.2137 85.5781 35.184C86.1423 34.4502 86.906 34.2679 87.7693 34.4269C88.5817 34.5775 89.1036 35.2201 89.2032 36.1171C89.2329 36.3864 89.2478 36.6536 89.2478 36.9251C89.2436 37.9154 89.2478 38.9058 89.2457 39.8961C89.2457 39.9979 89.2775 40.1294 89.1587 40.1761C89.0039 40.2376 88.8342 40.2312 88.6751 40.1761C88.6199 40.157 88.6136 40.0955 88.6114 40.0425C88.6093 39.9746 88.6072 39.9067 88.6072 39.841C88.6072 38.821 88.6072 37.8009 88.6072 36.7809C88.6072 36.5094 88.5732 36.2422 88.5011 35.9814C88.3251 35.3558 87.8881 35.0037 87.2347 34.9995C86.3799 34.9931 85.7584 35.3473 85.5462 36.3228C85.4932 36.5646 85.4678 36.8106 85.4678 37.0587C85.4699 37.996 85.4699 38.9334 85.4678 39.8707C85.4678 39.9767 85.5165 40.1209 85.3935 40.1782C85.2429 40.2461 85.0711 40.2291 84.9099 40.1846C84.8526 40.1697 84.8399 40.1103 84.8356 40.0552C84.8314 39.981 84.8293 39.9046 84.8293 39.8304C84.8293 38.5622 84.8293 37.2962 84.8293 36.028H84.8271Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M103.432 37.4641C103.432 36.7897 103.432 36.1132 103.432 35.4388C103.432 35.214 103.439 34.9892 103.409 34.7644C103.381 34.5502 103.436 34.4993 103.655 34.4909C103.708 34.4909 103.761 34.4909 103.812 34.4909C103.956 34.4909 104.033 34.5545 104.039 34.705C104.047 34.8705 104.081 35.0316 104.075 35.1992C104.075 35.2331 104.062 35.2861 104.103 35.2967C104.145 35.3094 104.158 35.2564 104.177 35.2267C104.459 34.7835 104.856 34.5078 105.373 34.423C105.884 34.3382 106.391 34.3424 106.867 34.5969C107.225 34.7878 107.484 35.0719 107.63 35.4494C107.753 35.7654 107.819 36.0962 107.819 36.4398C107.817 37.5871 107.819 38.7365 107.817 39.8837C107.817 39.9898 107.864 40.134 107.73 40.1828C107.581 40.2379 107.42 40.2252 107.265 40.1849C107.208 40.17 107.191 40.1149 107.187 40.0598C107.183 39.9855 107.18 39.9092 107.18 39.835C107.18 38.7619 107.18 37.6888 107.18 36.6158C107.18 36.4207 107.168 36.2277 107.125 36.0347C106.951 35.2331 106.389 34.9404 105.649 35.0041C104.915 35.0656 104.455 35.477 104.23 36.1662C104.134 36.461 104.073 36.76 104.075 37.0717C104.077 37.9879 104.075 38.9019 104.075 39.818C104.075 40.1955 103.95 40.2909 103.574 40.204C103.49 40.1849 103.441 40.1403 103.439 40.0513C103.436 39.9771 103.434 39.9007 103.434 39.8265C103.434 39.0376 103.434 38.2508 103.434 37.4619L103.432 37.4641Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M78.2067 34.3804C79.1506 34.4037 79.8761 34.936 80.154 35.884C80.1709 35.9412 80.1837 36.0006 80.1943 36.06C80.2176 36.1851 80.1646 36.2445 80.0394 36.2466C79.9652 36.2466 79.8888 36.2445 79.8146 36.2487C79.6555 36.2593 79.5706 36.1893 79.5197 36.0367C79.3967 35.6719 79.193 35.3602 78.843 35.1714C77.9924 34.7091 76.9424 35.0463 76.5245 35.9561C76.0833 36.9146 76.0918 37.9007 76.567 38.8465C77.0782 39.8666 78.2385 39.9408 78.93 39.4679C79.1973 39.2855 79.3437 39.0204 79.4794 38.7405C79.524 38.6493 79.5367 38.5221 79.6597 38.4988C79.8146 38.4712 79.9758 38.4669 80.1306 38.5009C80.2218 38.52 80.1985 38.6069 80.1773 38.6705C79.9079 39.4891 79.4243 40.1147 78.5058 40.2907C77.2033 40.541 76.13 39.9069 75.7397 38.6408C75.3982 37.5317 75.4597 36.4396 76.0876 35.4344C76.5436 34.7006 77.2394 34.3656 78.2067 34.3783V34.3804Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M71.3572 40.2122C71.1409 40.2631 70.9966 40.138 70.863 39.9344C70.426 39.2707 69.9721 38.6175 69.5224 37.9601C69.4057 37.7883 69.3993 37.7904 69.2806 37.9643C68.8266 38.6366 68.3748 39.3088 67.9208 39.9811C67.7851 40.1826 67.3799 40.3013 67.1657 40.1974C67.0533 40.1423 67.1211 40.0723 67.1614 40.0129C67.4033 39.6609 67.6493 39.311 67.8933 38.9589C68.2454 38.4542 68.5954 37.9474 68.9518 37.4469C69.0366 37.3281 69.0006 37.2433 68.9306 37.1436C68.5254 36.5583 68.1202 35.9709 67.7172 35.3835C67.5602 35.1544 67.4011 34.9275 67.2484 34.6964C67.1572 34.5606 67.1805 34.5076 67.3396 34.4949C67.4669 34.4843 67.5942 34.4907 67.7215 34.4949C67.8593 34.4991 67.9293 34.5988 67.9972 34.7006C68.4087 35.3177 68.8224 35.937 69.236 36.5541C69.2615 36.5922 69.2848 36.6304 69.3103 36.6665C69.4142 36.8086 69.4333 36.8107 69.5309 36.6707C69.8469 36.2232 70.1609 35.7737 70.4748 35.3262C70.6169 35.1226 70.7569 34.919 70.8991 34.7176C71.0433 34.514 71.4124 34.4101 71.6436 34.5055C71.7624 34.5543 71.6988 34.6264 71.6585 34.6836C71.5036 34.9042 71.3466 35.1247 71.1875 35.3432C70.7739 35.9157 70.3645 36.4883 69.9445 37.0545C69.8342 37.203 69.8257 37.3218 69.9339 37.4766C70.4875 38.2697 71.0327 39.0713 71.58 39.8687C71.5927 39.8878 71.6075 39.9047 71.6182 39.9238C71.6563 40.0002 71.7645 40.0659 71.7094 40.1592C71.6563 40.2462 71.5439 40.1995 71.4569 40.2101C71.4357 40.2122 71.4124 40.2101 71.353 40.2101L71.3572 40.2122Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7232",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "42.7529",
                        transform: "translate(0.512207 0.311523)",
                        width: "126.273"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite7/LogoAceWhite7.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite7;
var _c;
$RefreshReg$(_c, "LogoAceWhite7");

  $parcel$ReactRefreshHelpers$a1f6.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"ilL3N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite8", ()=>(0, _logoAceWhite8.LogoAceWhite8));
var _logoAceWhite8 = require("./LogoAceWhite8");

},{"./LogoAceWhite8":"7FIJ4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7FIJ4":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$0470 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$0470.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoAceWhite8", ()=>LogoAceWhite8);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoAceWhite8 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-ace-white-8 ${className}`,
        fill: "none",
        height: "47",
        viewBox: "0 0 138 47",
        width: "138",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_6274)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M29.4641 -0.000488281C29.5611 0.283423 29.755 0.509629 29.9097 0.756608C31.4843 3.26795 33.0659 5.77468 34.6497 8.28141C36.222 10.7743 37.799 13.2649 39.3713 15.7577C40.9182 18.2091 42.4605 20.6627 44.0051 23.1163C45.1849 24.9883 46.3693 26.858 47.5491 28.7299C48.8213 30.7473 50.0889 32.7647 51.361 34.7821C52.5408 36.6541 53.7253 38.5237 54.9051 40.3957C56.1426 42.3554 57.3801 44.3174 58.6154 46.2794C58.6638 46.3555 58.7008 46.4363 58.7423 46.5171H26.5711C26.6289 46.3555 26.7235 46.2101 26.809 46.0624C27.7325 44.4651 28.6606 42.8701 29.5842 41.2728C30.6139 39.4909 31.6413 37.7089 32.6688 35.927C33.1952 35.0152 33.717 34.0989 34.248 33.1917C34.3404 33.0325 34.3265 32.9194 34.2272 32.7716C33.9756 32.4 33.7401 32.0169 33.4999 31.636C32.177 29.5355 30.854 27.435 29.5311 25.3346C29.4156 25.1499 29.3856 25.1499 29.2679 25.3346C28.7576 26.1424 28.2474 26.9503 27.7371 27.7582C27.0029 28.9169 26.2687 30.0756 25.5368 31.2367C24.5694 32.7693 23.6066 34.3066 22.6392 35.8393C21.8242 37.1319 21.0069 38.4199 20.1919 39.7125C19.1944 41.2936 18.1947 42.8747 17.2019 44.4582C16.7725 45.1437 16.3223 45.8154 15.9228 46.5171C10.691 46.5171 5.45924 46.5171 0.227435 46.5125C0.165096 46.5125 0.0173315 46.6117 0.0311845 46.4202C0.11892 46.3671 0.169714 46.284 0.222817 46.2009C1.10479 44.8067 1.98445 43.4102 2.86642 42.0161C3.98159 40.248 5.09675 38.4799 6.21422 36.7118C7.22087 35.1168 8.23214 33.5241 9.23879 31.9268C10.4417 30.0202 11.6423 28.1136 12.8452 26.2071C13.6602 24.9145 14.4775 23.6265 15.2925 22.3339C16.2784 20.7735 17.2596 19.2108 18.2455 17.6482C19.0421 16.3833 19.8409 15.1207 20.6375 13.8558C21.6095 12.3139 22.5769 10.772 23.5489 9.2324C24.4424 7.81515 25.3359 6.40021 26.2294 4.98296C27.2753 3.32335 28.3189 1.66605 29.3625 0.00643638C29.3948 0.00643638 29.4272 0.00643638 29.4595 0.00643638L29.4641 -0.000488281Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M137.473 40.4352C136.134 40.4352 134.793 40.4375 133.454 40.4398C133.38 40.4398 133.306 40.4421 133.232 40.4398C133.075 40.4352 133.013 40.5021 133.031 40.666C133.073 41.0145 133.128 41.3608 133.257 41.6908C133.74 42.9211 135.015 43.2096 136.007 42.6557C136.277 42.5033 136.458 42.2587 136.598 41.984C136.705 41.7809 137.099 41.6678 137.296 41.7832C137.406 41.8478 137.356 41.9424 137.326 42.0209C137.173 42.4272 136.931 42.7711 136.594 43.0458C135.677 43.789 134.128 43.7567 133.262 42.9627C132.849 42.5818 132.604 42.0925 132.468 41.5523C132.202 40.4859 132.265 39.4472 132.747 38.4501C133.53 36.8343 135.647 36.7305 136.677 37.6768C137.06 38.0277 137.293 38.4755 137.42 38.9764C137.436 39.0387 137.453 39.1033 137.469 39.1656V40.4398L137.473 40.4352ZM134.948 39.7981C135.495 39.7981 136.042 39.8004 136.589 39.7981C136.799 39.7981 136.838 39.7473 136.815 39.5488C136.781 39.2718 136.716 39.0041 136.598 38.7479C136.127 37.7138 134.712 37.3883 133.835 38.1131C133.384 38.487 133.211 38.9971 133.11 39.5442C133.068 39.7727 133.087 39.7981 133.329 39.7981C133.867 39.8004 134.407 39.7981 134.945 39.7981H134.948Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M120.254 18.3548C120.254 14.964 120.254 11.5755 120.254 8.18473C120.254 8.09471 120.257 8.00469 120.254 7.91467C120.252 7.76002 120.326 7.68846 120.478 7.69308C120.552 7.69308 120.626 7.69308 120.7 7.69308C125.768 7.69308 130.838 7.69308 135.906 7.69308C136.203 7.69308 136.351 7.84081 136.351 8.13626C136.351 9.06647 136.351 9.99899 136.351 10.9292C136.351 11.2293 136.197 11.3793 135.89 11.3793C132.228 11.3793 128.564 11.3793 124.902 11.3793C124.625 11.3793 124.486 11.5178 124.486 11.7948C124.486 13.2744 124.486 14.7516 124.486 16.2312C124.486 16.4866 124.612 16.6144 124.863 16.6144C128.1 16.6144 131.337 16.6144 134.574 16.6144C134.872 16.6144 135.021 16.7644 135.021 17.0645C135.021 18.0616 135.021 19.0565 135.021 20.0536C135.021 20.3814 135.003 20.3975 134.673 20.3975C131.452 20.3975 128.231 20.3975 125.01 20.3975C124.93 20.3975 124.846 20.3975 124.766 20.3975C124.507 20.4021 124.486 20.4183 124.486 20.6791C124.486 22.1172 124.486 23.5552 124.486 24.9932C124.486 25.3302 124.486 25.3302 124.83 25.3302C128.517 25.3302 132.205 25.3302 135.892 25.3302C136.198 25.3302 136.351 25.481 136.351 25.7826C136.351 26.7636 136.351 27.7423 136.351 28.7233C136.351 29.0511 136.335 29.0672 136.003 29.0672C130.868 29.0672 125.735 29.0672 120.601 29.0672C120.27 29.0672 120.254 29.0511 120.254 28.721C120.254 25.2656 120.254 21.8102 120.254 18.3548Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M90.0338 18.5164C90.0061 16.7183 90.3986 15.121 91.1536 13.6161C91.6177 12.6928 92.1995 11.848 92.8945 11.0793C93.8434 10.0268 94.9586 9.19815 96.2146 8.56339C97.5491 7.88939 98.9644 7.4993 100.463 7.3862C102.335 7.24539 104.127 7.5547 105.849 8.27948C107.08 8.79883 108.181 9.5213 109.156 10.44C109.89 11.1324 110.541 11.8942 111.056 12.7667C111.201 13.0136 111.199 13.0321 110.938 13.136C109.784 13.593 108.627 14.0454 107.472 14.5071C107.304 14.574 107.205 14.5348 107.101 14.394C106.371 13.3968 105.473 12.5889 104.379 12.0096C103.494 11.541 102.557 11.2594 101.546 11.2248C99.7586 11.1624 98.1955 11.7441 96.8564 12.8936C95.4042 14.1401 94.5291 15.7235 94.3121 17.637C94.0697 19.7675 94.7369 21.6141 96.1315 23.216C97.1797 24.4209 98.4957 25.1941 100.063 25.4965C101.904 25.852 103.58 25.4203 105.113 24.3701C105.891 23.8392 106.544 23.1814 107.089 22.4173C107.207 22.2511 107.315 22.2281 107.498 22.3019C108.643 22.7613 109.793 23.2114 110.94 23.6661C111.197 23.7676 111.203 23.7953 111.06 24.0377C109.991 25.8312 108.507 27.1838 106.669 28.1625C105.413 28.8319 104.074 29.2427 102.663 29.3974C100.504 29.6351 98.4264 29.3258 96.457 28.3818C95.1825 27.7701 94.0397 26.9761 93.0769 25.9443C91.373 24.1231 90.3294 21.988 90.0754 19.4882C90.0385 19.1281 90.0385 18.7703 90.0338 18.5187V18.5164Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M82.2393 29.0673C81.5929 29.0673 80.9464 29.0581 80.3022 29.0719C80.0552 29.0789 79.919 29.0004 79.8104 28.7742C79.3602 27.8486 78.8869 26.9345 78.4344 26.0089C78.3351 25.8058 78.2127 25.725 77.9819 25.7273C74.7864 25.7342 71.5887 25.7342 68.3933 25.7273C68.1555 25.7273 68.0239 25.8058 67.9223 26.0205C67.4836 26.9345 67.0242 27.837 66.5878 28.7511C66.4793 28.9796 66.3407 29.0765 66.0799 29.0742C64.78 29.0627 63.4801 29.0696 62.1802 29.0696C62.1156 29.0696 62.0486 29.0696 61.984 29.0627C61.887 29.0535 61.857 28.9981 61.8939 28.908C61.9193 28.848 61.9494 28.7903 61.9794 28.7303C63.1523 26.4867 64.3228 24.2431 65.498 21.9972C66.0244 20.9908 66.5532 19.9868 67.0773 18.9804C68.2825 16.6722 69.4877 14.3616 70.6952 12.0511C71.2401 11.0078 71.785 9.96678 72.3298 8.92577C72.503 8.59339 72.6831 8.26331 72.8516 7.92631C72.9232 7.78089 73.0271 7.73242 73.1841 7.73242C73.348 7.73242 73.4589 7.77628 73.5374 7.93093C73.8906 8.62109 74.2554 9.30663 74.6156 9.99448C75.5137 11.7187 76.4095 13.443 77.3077 15.1672C78.0627 16.6145 78.82 18.0617 79.5773 19.509C80.5377 21.3463 81.4982 23.186 82.461 25.0233C83.089 26.2236 83.7239 27.4239 84.3542 28.6218C84.4004 28.7095 84.4443 28.7973 84.4858 28.885C84.5412 29.0004 84.4927 29.0558 84.375 29.0604C84.3103 29.0627 84.2434 29.0627 84.1787 29.0627C83.5323 29.0627 82.8881 29.0627 82.2416 29.0627L82.2393 29.0673ZM73.1541 22.0965C74.0776 22.0965 74.9988 22.0965 75.9224 22.0965C76.2041 22.0965 76.2133 22.078 76.0886 21.8218C75.5876 20.7854 75.0843 19.7513 74.5856 18.7149C74.3408 18.2071 74.1053 17.697 73.8629 17.1892C73.662 16.7691 73.4566 16.3513 73.2557 15.9335C73.2118 15.8412 73.1726 15.8389 73.1264 15.9289C73.1079 15.9658 73.0895 16.0028 73.0733 16.0397C72.7316 16.753 72.3899 17.4685 72.0459 18.1794C71.4502 19.4051 70.8545 20.6308 70.2565 21.8541C70.1457 22.0826 70.1526 22.0965 70.4112 22.0965C71.3255 22.0965 72.2398 22.0965 73.1541 22.0965Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M127.222 40.2226C127.222 41.079 127.234 41.9376 127.218 42.794C127.208 43.2995 127.176 43.8027 127.028 44.2943C126.721 45.3122 126.019 45.8524 124.987 45.9632C124.41 46.0255 123.826 46.0116 123.279 45.76C122.66 45.4761 122.267 45.0006 122.115 44.3359C122.071 44.142 122.104 44.1073 122.307 44.0981C122.388 44.0935 122.471 44.1004 122.551 44.0981C122.692 44.0912 122.778 44.1466 122.831 44.2828C123.129 45.0376 123.727 45.3215 124.495 45.3284C124.659 45.3284 124.823 45.3307 124.985 45.3076C125.745 45.1899 126.213 44.756 126.403 44.0058C126.518 43.5418 126.541 43.071 126.532 42.5955C126.532 42.5562 126.546 42.5031 126.5 42.4893C126.453 42.4754 126.437 42.5285 126.412 42.5585C125.32 43.9065 123.179 43.6873 122.378 42.113C121.725 40.8297 121.778 39.5117 122.484 38.2675C122.955 37.4389 123.734 37.0534 124.701 37.0788C125.063 37.088 125.417 37.1319 125.749 37.2889C125.989 37.402 126.202 37.5474 126.377 37.7482C126.412 37.7874 126.433 37.8728 126.5 37.8428C126.557 37.8198 126.53 37.7413 126.539 37.6859C126.55 37.6143 126.56 37.5405 126.569 37.4666C126.583 37.3627 126.573 37.2381 126.712 37.215C126.864 37.1873 127.026 37.1573 127.162 37.2519C127.255 37.3143 127.225 37.4297 127.227 37.5266C127.227 38.4245 127.227 39.3224 127.227 40.2203H127.222V40.2226ZM126.532 40.188C126.553 39.8233 126.52 39.4263 126.423 39.0362C126.25 38.3368 125.835 37.8821 125.1 37.7667C124.948 37.7436 124.791 37.7459 124.636 37.739C123.812 37.702 123.212 38.1775 122.932 38.8885C122.607 39.7125 122.579 40.5596 122.856 41.4044C123.036 41.9515 123.371 42.3831 123.914 42.6255C124.269 42.7847 124.636 42.794 125.017 42.734C125.631 42.637 126.07 42.3231 126.306 41.7391C126.502 41.2521 126.546 40.7443 126.532 40.188Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M65.0686 43.4265C64.2767 43.4265 63.4825 43.4265 62.6906 43.4265C62.395 43.4265 62.3696 43.4034 62.3696 43.1034C62.3696 40.442 62.3696 37.7806 62.3696 35.1169C62.3696 34.803 62.3881 34.7868 62.7044 34.7868C64.2652 34.7868 65.8259 34.7868 67.3867 34.7868C67.4952 34.7868 67.6407 34.7407 67.6892 34.8769C67.7492 35.0477 67.7492 35.23 67.6799 35.4031C67.6568 35.4608 67.5899 35.4701 67.5322 35.4747C67.4514 35.4793 67.3682 35.4816 67.2874 35.4816C66.0037 35.4816 64.7223 35.4816 63.4386 35.4816C63.1362 35.4816 63.1154 35.5001 63.1154 35.8001C63.1154 36.6011 63.1154 37.3997 63.1154 38.2007C63.1154 38.4985 63.1339 38.5123 63.4409 38.5146C64.6577 38.5146 65.8767 38.5146 67.0935 38.5169C67.2159 38.5169 67.3821 38.4592 67.449 38.6046C67.5206 38.7616 67.4952 38.9416 67.4606 39.1101C67.4444 39.184 67.3752 39.2025 67.3059 39.2071C67.2251 39.2117 67.142 39.2117 67.0612 39.2117C65.8606 39.2117 64.6577 39.2117 63.4571 39.2117C63.1246 39.2117 63.1154 39.2209 63.1154 39.5579C63.1154 40.5043 63.1154 41.453 63.1154 42.3993C63.1154 42.7156 63.1292 42.7294 63.4479 42.7294C64.78 42.7294 66.1122 42.7294 67.4444 42.7294C67.5252 42.7294 67.6084 42.7294 67.6892 42.734C67.7377 42.734 67.7954 42.7363 67.8254 42.7802C67.9362 42.9464 67.8277 43.1103 67.8138 43.2765C67.8046 43.3827 67.7169 43.4196 67.6176 43.4242C67.5437 43.4265 67.4698 43.4288 67.3959 43.4288C66.6202 43.4288 65.8444 43.4288 65.0663 43.4288L65.0686 43.4265Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M106.429 40.8505C106.429 41.3398 106.429 41.8315 106.429 42.3208C106.429 42.5655 106.433 42.8102 106.468 43.0548C106.514 43.3872 106.468 43.4288 106.143 43.4288C106.11 43.4288 106.078 43.4265 106.046 43.4288C105.896 43.4334 105.826 43.3526 105.799 43.2141C105.764 43.0502 105.799 42.8725 105.695 42.7248C105.579 42.8379 105.468 42.9556 105.348 43.0641C105 43.3803 104.573 43.498 104.118 43.5557C103.61 43.6204 103.12 43.5627 102.661 43.3364C101.998 43.011 101.629 42.2677 101.691 41.5291C101.765 40.6635 102.25 40.1696 103.035 39.9087C103.448 39.7702 103.88 39.7148 104.314 39.7033C104.706 39.6918 105.099 39.6941 105.491 39.701C105.669 39.7033 105.745 39.6318 105.739 39.454C105.729 39.2255 105.743 38.997 105.708 38.7708C105.621 38.2168 105.293 37.8983 104.757 37.7852C104.369 37.7021 103.979 37.7067 103.591 37.7967C103.192 37.8867 102.926 38.1222 102.783 38.5076C102.635 38.9 102.61 38.907 102.197 38.8793C102.028 38.8677 101.982 38.7916 102.014 38.6415C102.137 38.0899 102.402 37.6421 102.917 37.3651C103.333 37.1435 103.783 37.0766 104.245 37.0858C104.586 37.0927 104.928 37.1158 105.261 37.2289C105.905 37.4482 106.265 37.9029 106.385 38.5584C106.422 38.7592 106.438 38.9624 106.436 39.1678C106.431 39.731 106.436 40.2942 106.436 40.8597L106.429 40.8505ZM104.884 40.2965C104.713 40.2965 104.54 40.2873 104.369 40.2965C103.954 40.3219 103.538 40.3588 103.148 40.5296C102.633 40.7559 102.375 41.1944 102.414 41.7669C102.453 42.307 102.788 42.7132 103.314 42.861C103.711 42.9717 104.108 42.9371 104.501 42.8379C105.053 42.6971 105.411 42.3485 105.579 41.8038C105.711 41.3768 105.741 40.9382 105.732 40.495C105.729 40.3496 105.658 40.2896 105.517 40.2919C105.304 40.2942 105.092 40.2919 104.88 40.2919L104.884 40.2965Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M91.8047 38.8748C91.8047 37.4945 91.8047 36.1164 91.8047 34.7361C91.8047 34.3276 91.9432 34.2214 92.3473 34.3137C92.4396 34.3345 92.4927 34.383 92.495 34.4799C92.4973 34.5538 92.4996 34.6276 92.4996 34.6992C92.4996 35.7125 92.4996 36.7235 92.4996 37.7368C92.4996 37.7945 92.495 37.8522 92.4996 37.9076C92.5043 37.9515 92.4742 38.0184 92.5366 38.0346C92.5758 38.0461 92.5966 37.9884 92.622 37.9561C93.2362 37.1575 94.0673 36.9589 95.007 37.1321C95.8913 37.2959 96.4593 37.9953 96.5678 38.9717C96.6001 39.2649 96.6163 39.5557 96.6163 39.8511C96.6117 40.9291 96.6163 42.007 96.614 43.085C96.614 43.1958 96.6486 43.3389 96.5193 43.3896C96.3508 43.4566 96.1661 43.4497 95.9929 43.3896C95.9329 43.3689 95.9259 43.3019 95.9236 43.2442C95.9213 43.1704 95.919 43.0965 95.919 43.0249C95.919 41.9147 95.919 40.8044 95.919 39.6942C95.919 39.3987 95.8821 39.1079 95.8036 38.824C95.6119 38.1431 95.1363 37.7599 94.4252 37.7553C93.4947 37.7484 92.8183 38.1338 92.5874 39.1956C92.5297 39.4587 92.502 39.7265 92.502 39.9966C92.5043 41.0168 92.5043 42.037 92.502 43.0573C92.502 43.1727 92.5551 43.3296 92.4211 43.392C92.2572 43.4658 92.0702 43.4474 91.8947 43.3989C91.8324 43.3827 91.8185 43.3181 91.8139 43.2581C91.8093 43.1773 91.807 43.0942 91.807 43.0134C91.807 41.6331 91.807 40.2551 91.807 38.8748H91.8047Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M112.055 40.4376C112.055 39.7035 112.055 38.9672 112.055 38.2332C112.055 37.9885 112.062 37.7439 112.03 37.4992C112 37.2661 112.06 37.2107 112.298 37.2014C112.356 37.2014 112.413 37.2014 112.469 37.2014C112.626 37.2014 112.709 37.2707 112.716 37.4346C112.725 37.6146 112.762 37.79 112.755 37.9724C112.755 38.0093 112.741 38.067 112.785 38.0786C112.831 38.0924 112.845 38.0347 112.866 38.0024C113.173 37.52 113.605 37.2199 114.168 37.1276C114.724 37.0352 115.276 37.0399 115.793 37.3168C116.184 37.5246 116.465 37.8339 116.625 38.2447C116.759 38.5887 116.83 38.9488 116.83 39.3227C116.828 40.5714 116.83 41.8225 116.828 43.0712C116.828 43.1867 116.879 43.3436 116.733 43.3967C116.572 43.4567 116.396 43.4429 116.228 43.399C116.165 43.3828 116.147 43.3228 116.142 43.2628C116.137 43.182 116.135 43.0989 116.135 43.0181C116.135 41.8502 116.135 40.6822 116.135 39.5143C116.135 39.3019 116.121 39.0919 116.075 38.8818C115.886 38.0093 115.274 37.6908 114.468 37.76C113.669 37.827 113.168 38.2748 112.924 39.0249C112.82 39.3458 112.753 39.6712 112.755 40.0105C112.757 41.0077 112.755 42.0025 112.755 42.9997C112.755 43.4105 112.619 43.5144 112.21 43.4198C112.118 43.399 112.065 43.3505 112.062 43.2536C112.06 43.1728 112.058 43.0897 112.058 43.0089C112.058 42.1503 112.058 41.2939 112.058 40.4352L112.055 40.4376Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M84.5988 37.0813C85.6263 37.1067 86.4159 37.6861 86.7183 38.7178C86.7368 38.7802 86.7507 38.8448 86.7622 38.9094C86.7876 39.0456 86.7299 39.1102 86.5937 39.1125C86.5128 39.1125 86.4297 39.1102 86.3489 39.1148C86.1758 39.1264 86.0834 39.0502 86.028 38.884C85.8941 38.487 85.6724 38.1477 85.2915 37.9423C84.3656 37.4391 83.2228 37.8061 82.7679 38.7963C82.2877 39.8396 82.2969 40.913 82.8141 41.9424C83.3705 43.0527 84.6335 43.1335 85.3861 42.6187C85.677 42.4202 85.8364 42.1317 85.9841 41.827C86.0326 41.7278 86.0465 41.5893 86.1804 41.5639C86.3489 41.5339 86.5244 41.5292 86.6929 41.5662C86.7922 41.587 86.7668 41.6816 86.7437 41.7508C86.4505 42.6418 85.9241 43.3227 84.9244 43.5143C83.5067 43.7867 82.3385 43.0965 81.9137 41.7185C81.5419 40.5113 81.6089 39.3226 82.2923 38.2285C82.7887 37.4298 83.546 37.0651 84.5988 37.079V37.0813Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M77.1438 43.4291C76.9083 43.4845 76.7513 43.3483 76.6058 43.1267C76.1302 42.4042 75.6361 41.6933 75.1466 40.9777C75.0197 40.7908 75.0127 40.7931 74.8834 40.9824C74.3894 41.7141 73.8976 42.4458 73.4035 43.1775C73.2557 43.3968 72.8147 43.526 72.5815 43.4129C72.4592 43.3529 72.5331 43.2767 72.5769 43.2121C72.8401 42.8289 73.108 42.4481 73.3735 42.0649C73.7567 41.5156 74.1377 40.9639 74.5256 40.4191C74.6179 40.2899 74.5787 40.1976 74.5025 40.0891C74.0615 39.452 73.6205 38.8126 73.1818 38.1732C73.011 37.924 72.8378 37.677 72.6716 37.4254C72.5723 37.2777 72.5977 37.22 72.7709 37.2061C72.9094 37.1946 73.0479 37.2015 73.1865 37.2061C73.3365 37.2107 73.4127 37.3192 73.4866 37.43C73.9345 38.1017 74.3847 38.7757 74.835 39.4474C74.8627 39.4889 74.8881 39.5305 74.9158 39.5697C75.0289 39.7244 75.0497 39.7267 75.1559 39.5743C75.4999 39.0873 75.8416 38.598 76.1833 38.1109C76.338 37.8893 76.4904 37.6677 76.6451 37.4485C76.8021 37.2269 77.2038 37.1138 77.4555 37.2176C77.5848 37.2707 77.5155 37.3492 77.4716 37.4115C77.3031 37.6516 77.1322 37.8916 76.9591 38.1294C76.5089 38.7526 76.0633 39.3758 75.6061 39.9921C75.486 40.1537 75.4768 40.283 75.5946 40.4515C76.1972 41.3147 76.7905 42.1872 77.3862 43.0551C77.4001 43.0759 77.4162 43.0944 77.4278 43.1151C77.4693 43.1982 77.5871 43.2698 77.5271 43.3714C77.4693 43.466 77.347 43.4152 77.2523 43.4268C77.2292 43.4291 77.2038 43.4268 77.1392 43.4268L77.1438 43.4291Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_6274",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "46.5337",
                        transform: "translate(0.0334473 -0.000488281)",
                        width: "137.44"
                    }, void 0, false, {
                        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoAceWhite8/LogoAceWhite8.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoAceWhite8;
var _c;
$RefreshReg$(_c, "LogoAceWhite8");

  $parcel$ReactRefreshHelpers$0470.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"gBqp2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite2", ()=>(0, _logoBinanceWhite2.LogoBinanceWhite2));
var _logoBinanceWhite2 = require("./LogoBinanceWhite2");

},{"./LogoBinanceWhite2":"6qJse","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6qJse":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$9fba = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$9fba.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite2", ()=>LogoBinanceWhite2);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite2 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-2 ${className}`,
        fill: "none",
        height: "25",
        viewBox: "0 0 117 25",
        width: "117",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_8162)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M7.37286 10.5862L11.895 6.06595L16.419 10.5899L19.0489 7.95828L11.895 0.802734L4.74121 7.95644L7.37286 10.5862Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.250977 12.4448L2.88167 9.81418L5.51235 12.4448L2.88166 15.0755L0.250977 12.4448Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M7.37263 14.3026L11.8948 18.8247L16.4188 14.3008L19.0505 16.9287L19.0486 16.9305L11.8948 24.0861L4.74098 16.9342L4.7373 16.9305L7.37263 14.3026Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M18.2725 12.4458L20.9031 9.81515L23.5338 12.4458L20.9031 15.0764L18.2725 12.4458Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M14.5632 12.4437L11.8948 9.77344L9.92149 11.7467L9.69345 11.9729L9.22633 12.44L9.22266 12.4437L9.22633 12.4492L11.8948 15.1157L14.5632 12.4455L14.565 12.4437H14.5632Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M27.6387 6.44482H33.3617C34.7815 6.44482 35.8555 6.81262 36.5837 7.54822C36.8581 7.81995 37.0744 8.14459 37.2195 8.50244C37.3646 8.86029 37.4355 9.2439 37.4278 9.62997V9.66491C37.4328 9.98119 37.3887 10.2963 37.2973 10.5991C37.2158 10.8598 37.0975 11.1075 36.946 11.3347C36.8048 11.549 36.6339 11.7422 36.4384 11.9085C36.2475 12.0728 36.0383 12.2148 35.815 12.3315C36.4589 12.5558 37.038 12.9346 37.5014 13.4349C37.9109 13.9007 38.1156 14.5444 38.1156 15.3658V15.4008C38.1273 15.9138 38.0156 16.4221 37.7901 16.883C37.5716 17.3077 37.2513 17.6716 36.8577 17.9422C36.4128 18.2405 35.9174 18.4555 35.3957 18.5767C34.7758 18.7237 34.1404 18.7947 33.5033 18.7882H27.6387V6.44482ZM32.788 11.4359C33.2831 11.4598 33.7758 11.3533 34.2169 11.1269C34.3889 11.0265 34.5293 10.8798 34.6223 10.7037C34.7152 10.5275 34.757 10.3289 34.7428 10.1302V10.0952C34.7519 9.91218 34.7148 9.72977 34.6347 9.56488C34.5547 9.39999 34.4344 9.25793 34.2849 9.15183C33.9796 8.93483 33.5389 8.82633 32.9627 8.82633H30.285V11.4359H32.788ZM33.5107 16.4104C34.004 16.438 34.495 16.3251 34.9267 16.0849C35.0949 15.9768 35.2311 15.8256 35.321 15.6471C35.4109 15.4686 35.4513 15.2692 35.438 15.0697V15.0348C35.4446 14.8452 35.4047 14.6569 35.3216 14.4863C35.2386 14.3158 35.115 14.1682 34.9617 14.0564C34.6454 13.8112 34.1341 13.6886 33.4279 13.6886H30.285V16.4104H33.5107Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M41.5254 6.44482H44.2416V18.7919H41.5254V6.44482Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M48.3516 6.44482H50.8563L56.6456 14.0436V6.44482H59.3269V18.7919H57.0152L51.0365 10.943V18.7919H48.3516V6.44482Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M67.5515 6.35645H70.0526L75.3435 18.7918H72.5077L71.3785 16.0222H66.1575L65.0284 18.7918H62.2588L67.5515 6.35645ZM70.4094 13.6242L68.7653 9.61883L67.1285 13.6242H70.4094Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M78.2822 6.45264H80.787L86.5726 14.0514V6.45264H89.2539V18.7997H86.9422L80.9635 10.9508V18.7997H78.2822V6.45264Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M99.0282 19.0088C98.1625 19.0162 97.3043 18.8486 96.505 18.516C95.7526 18.2053 95.07 17.7471 94.4973 17.1685C93.9247 16.5899 93.4737 15.9025 93.1709 15.1469C92.8513 14.3565 92.6895 13.5113 92.6946 12.6588V12.6238C92.6804 10.9434 93.3269 9.32464 94.495 8.11642C95.0697 7.52624 95.7578 7.05834 96.5179 6.74085C97.3447 6.39836 98.2326 6.22755 99.1275 6.2388C99.6568 6.23485 100.185 6.28228 100.705 6.38041C101.15 6.46457 101.586 6.59461 102.004 6.76843C102.383 6.92818 102.744 7.12923 103.08 7.36795C103.407 7.60078 103.715 7.86035 103.999 8.14401L102.272 10.1375C101.831 9.7304 101.336 9.38575 100.801 9.11316C100.276 8.86189 99.6989 8.73598 99.1165 8.74536C98.6318 8.74019 98.1515 8.8382 97.7076 9.03288C97.2637 9.22756 96.8663 9.51445 96.5418 9.87451C96.2201 10.2336 95.9681 10.6496 95.7988 11.1011C95.6217 11.5783 95.5326 12.0836 95.5359 12.5925V12.6275C95.5341 13.1357 95.6232 13.6402 95.7988 14.1171C95.966 14.5702 96.2153 14.9885 96.5345 15.351C96.8564 15.7156 97.2528 16.0067 97.697 16.2047C98.1412 16.4026 98.6228 16.5029 99.1091 16.4986C99.7284 16.5181 100.343 16.3848 100.898 16.1106C101.427 15.8223 101.916 15.4662 102.353 15.0513L104.082 16.7983C103.777 17.1296 103.446 17.437 103.094 17.7178C102.748 17.9914 102.373 18.2252 101.974 18.4148C101.55 18.6146 101.103 18.7622 100.643 18.8543C100.111 18.9609 99.5703 19.0127 99.0282 19.0088Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M107.287 6.44482H116.58V8.86127H109.959V11.366H115.789V13.7824H109.968V16.3754H116.672V18.7919H107.293L107.287 6.44482Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_8162",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "23.2836",
                        transform: "translate(0.251953 0.802734)",
                        width: "116.418"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite2/LogoBinanceWhite2.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite2;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite2");

  $parcel$ReactRefreshHelpers$9fba.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"f7Kt6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite3", ()=>(0, _logoBinanceWhite3.LogoBinanceWhite3));
var _logoBinanceWhite3 = require("./LogoBinanceWhite3");

},{"./LogoBinanceWhite3":"3m8wm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3m8wm":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f6b3 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f6b3.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite3", ()=>LogoBinanceWhite3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-3 ${className}`,
        fill: "none",
        height: "27",
        viewBox: "0 0 132 27",
        width: "132",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_9761)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M8.88054 11.7926L13.9411 6.73412L19.0038 11.7967L21.9467 8.85176L13.9411 0.844238L5.93555 8.84971L8.88054 11.7926Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.911133 13.8726L3.85505 10.9287L6.79896 13.8726L3.85505 16.8164L0.911133 13.8726Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M8.88075 15.9518L13.9414 21.0123L19.004 15.9497L21.949 18.8905L21.9469 18.8926L13.9414 26.9001L5.93576 18.8967L5.93164 18.8926L8.88075 15.9518Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M21.0781 13.8735L24.022 10.9297L26.966 13.8735L24.022 16.8174L21.0781 13.8735Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M16.9276 13.871L13.9414 10.8828L11.7332 13.091L11.478 13.3441L10.9553 13.8669L10.9512 13.871L10.9553 13.8771L13.9414 16.8612L16.9276 13.873L16.9296 13.871H16.9276Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M31.5596 7.1582H37.964C39.5528 7.1582 40.7547 7.5698 41.5697 8.39298C41.8767 8.69706 42.1187 9.06035 42.2811 9.46081C42.4435 9.86127 42.5228 10.2905 42.5143 10.7226V10.7617C42.5198 11.1156 42.4705 11.4683 42.3682 11.8071C42.277 12.0988 42.1446 12.376 41.9751 12.6303C41.817 12.8701 41.6258 13.0863 41.4071 13.2724C41.1934 13.4563 40.9593 13.6151 40.7094 13.7457C41.43 13.9967 42.078 14.4207 42.5966 14.9805C43.0548 15.5019 43.284 16.2221 43.284 17.1414V17.1805C43.297 17.7546 43.1721 18.3234 42.9197 18.8392C42.6752 19.3144 42.3167 19.7217 41.8763 20.0246C41.3784 20.3584 40.8241 20.5989 40.2402 20.7346C39.5465 20.8991 38.8354 20.9785 38.1225 20.9712H31.5596V7.1582ZM37.322 12.7435C37.8761 12.7703 38.4275 12.6511 38.921 12.3978C39.1135 12.2853 39.2706 12.1213 39.3747 11.9241C39.4787 11.727 39.5254 11.5047 39.5096 11.2824V11.2433C39.5198 11.0384 39.4782 10.8343 39.3886 10.6498C39.299 10.4652 39.1644 10.3063 38.9972 10.1875C38.6555 9.94468 38.1623 9.82326 37.5175 9.82326H34.521V12.7435H37.322ZM38.1307 18.3103C38.6828 18.3412 39.2323 18.2149 39.7154 17.946C39.9036 17.8251 40.056 17.6559 40.1566 17.4562C40.2572 17.2564 40.3024 17.0332 40.2875 16.81V16.7709C40.2949 16.5588 40.2502 16.348 40.1573 16.1572C40.0644 15.9663 39.9261 15.8011 39.7545 15.6761C39.4005 15.4017 38.8284 15.2645 38.0381 15.2645H34.521V18.3103H38.1307Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M47.0996 7.1582H50.1393V20.9754H47.0996V7.1582Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M54.7393 7.1582H57.5422L64.0208 15.6617V7.1582H67.0214V20.9754H64.4345L57.7439 12.192V20.9754H54.7393V7.1582Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M76.2247 7.05908H79.0235L84.9444 20.975H81.771L80.5073 17.8757H74.6647L73.4011 20.975H70.3018L76.2247 7.05908ZM79.4228 15.1921L77.5829 10.7099L75.7513 15.1921H79.4228Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M88.2334 7.1665H91.0364L97.5108 15.67V7.1665H100.511V20.9837H97.9245L91.234 12.2003V20.9837H88.2334V7.1665Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M111.449 21.2178C110.481 21.2261 109.52 21.0385 108.626 20.6663C107.784 20.3186 107.02 19.8059 106.379 19.1584C105.738 18.5109 105.233 17.7417 104.895 16.8961C104.537 16.0116 104.356 15.0657 104.362 14.1117V14.0726C104.346 12.1921 105.069 10.3806 106.376 9.02852C107.019 8.36807 107.79 7.84446 108.64 7.48917C109.565 7.1059 110.559 6.91475 111.56 6.92734C112.153 6.92292 112.744 6.97599 113.326 7.0858C113.824 7.17999 114.311 7.32551 114.779 7.52003C115.204 7.6988 115.608 7.92378 115.983 8.19093C116.349 8.45148 116.694 8.74196 117.012 9.05939L115.08 11.2902C114.586 10.8347 114.032 10.449 113.433 10.1439C112.845 9.86274 112.2 9.72185 111.548 9.73234C111.006 9.72656 110.468 9.83623 109.972 10.0541C109.475 10.272 109.03 10.593 108.667 10.9959C108.307 11.3978 108.025 11.8633 107.835 12.3686C107.637 12.9025 107.537 13.468 107.541 14.0376V14.0767C107.539 14.6454 107.639 15.2099 107.835 15.7436C108.022 16.2507 108.302 16.7189 108.659 17.1245C109.019 17.5325 109.463 17.8582 109.96 18.0798C110.457 18.3013 110.996 18.4135 111.54 18.4087C112.233 18.4305 112.921 18.2814 113.542 17.9745C114.134 17.6519 114.681 17.2534 115.17 16.7891L117.105 18.7442C116.763 19.1149 116.394 19.4589 116 19.7731C115.612 20.0793 115.192 20.3409 114.746 20.5531C114.271 20.7767 113.771 20.9418 113.256 21.045C112.661 21.1642 112.056 21.2221 111.449 21.2178Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M120.691 7.1582H131.09V9.86236H123.682V12.6653H130.206V15.3695H123.692V18.2712H131.193V20.9754H120.698L120.691 7.1582Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_9761",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "26.0558",
                        transform: "translate(0.912109 0.844238)",
                        width: "130.279"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite3/LogoBinanceWhite3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite3;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite3");

  $parcel$ReactRefreshHelpers$f6b3.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8GWIW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite4", ()=>(0, _logoBinanceWhite4.LogoBinanceWhite4));
var _logoBinanceWhite4 = require("./LogoBinanceWhite4");

},{"./LogoBinanceWhite4":"dnmuV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dnmuV":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$2568 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$2568.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite4", ()=>LogoBinanceWhite4);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite4 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-4 ${className}`,
        fill: "none",
        height: "32",
        viewBox: "0 0 156 32",
        width: "156",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7694)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M9.97953 13.4619L15.9855 7.45847L21.994 13.4668L25.4867 9.97172L15.9855 0.468262L6.48438 9.96928L9.97953 13.4619Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.520996 15.9307L4.01488 12.4368L7.50876 15.9307L4.01488 19.4245L0.520996 15.9307Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M9.97954 18.398L15.9855 24.4039L21.994 18.3955L25.4891 21.8857L25.4867 21.8882L15.9855 31.3916L6.48438 21.8931L6.47949 21.8882L9.97954 18.398Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M24.4565 15.9316L27.9504 12.4378L31.4443 15.9316L27.9504 19.4255L24.4565 15.9316Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M19.5294 15.9287L15.9854 12.3823L13.3647 15.003L13.0618 15.3035L12.4414 15.9238L12.4365 15.9287L12.4414 15.936L15.9854 19.4776L19.5294 15.9312L19.5319 15.9287H19.5294Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M36.8955 7.96143H44.4964C46.382 7.96143 47.8084 8.44991 48.7756 9.42688C49.14 9.78776 49.4273 10.2189 49.62 10.6942C49.8127 11.1695 49.9069 11.6789 49.8967 12.1917V12.2381C49.9033 12.6582 49.8448 13.0767 49.7233 13.4789C49.6151 13.8251 49.458 14.154 49.2568 14.4558C49.0692 14.7404 48.8423 14.997 48.5827 15.2179C48.3291 15.4361 48.0512 15.6246 47.7547 15.7796C48.6099 16.0775 49.379 16.5807 49.9944 17.2451C50.5383 17.8638 50.8102 18.7187 50.8102 19.8096V19.856C50.8256 20.5373 50.6774 21.2124 50.3779 21.8246C50.0877 22.3886 49.6622 22.872 49.1396 23.2314C48.5487 23.6276 47.8907 23.9131 47.1978 24.0741C46.3745 24.2693 45.5306 24.3636 44.6845 24.3549H36.8955V7.96143ZM43.7344 14.5902C44.392 14.6219 45.0464 14.4804 45.6322 14.1798C45.8606 14.0464 46.0471 13.8517 46.1706 13.6177C46.294 13.3838 46.3495 13.1199 46.3307 12.856V12.8096C46.3428 12.5665 46.2934 12.3242 46.1871 12.1052C46.0808 11.8863 45.9211 11.6976 45.7226 11.5567C45.3171 11.2685 44.7317 11.1244 43.9664 11.1244H40.4102V14.5902H43.7344ZM44.6943 21.1969C45.3495 21.2336 46.0016 21.0837 46.575 20.7646C46.7983 20.6211 46.9791 20.4203 47.0986 20.1832C47.218 19.9461 47.2717 19.6813 47.254 19.4164V19.37C47.2628 19.1182 47.2097 18.8681 47.0994 18.6415C46.9891 18.415 46.825 18.219 46.6214 18.0706C46.2013 17.7449 45.5223 17.5821 44.5844 17.5821H40.4102V21.1969H44.6943Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M55.3384 7.96143H58.9459V24.3598H55.3384V7.96143Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M64.4048 7.96143H67.7314L75.4203 18.0535V7.96143H78.9814V24.3598H75.9112L67.9708 13.9356V24.3598H64.4048V7.96143Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M89.9044 7.84424H93.2261L100.253 24.3599H96.4868L94.9872 20.6816H88.053L86.5533 24.3599H82.875L89.9044 7.84424ZM93.7 17.4967L91.5164 12.1771L89.3426 17.4967H93.7Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M104.156 7.97168H107.483L115.167 18.0638V7.97168H118.728V24.3701H115.658L107.717 13.9458V24.3701H104.156V7.97168Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M131.709 24.6484C130.559 24.6582 129.419 24.4356 128.358 23.9938C127.359 23.5812 126.452 22.9727 125.691 22.2042C124.931 21.4358 124.332 20.5228 123.93 19.5193C123.505 18.4695 123.29 17.3469 123.297 16.2147V16.1683C123.278 13.9365 124.137 11.7866 125.688 10.1819C126.452 9.39807 127.365 8.77665 128.375 8.35497C129.473 7.9001 130.652 7.67325 131.841 7.68819C132.544 7.68295 133.246 7.74593 133.937 7.87626C134.528 7.98804 135.105 8.16074 135.661 8.39161C136.165 8.60377 136.644 8.87079 137.09 9.18784C137.525 9.49706 137.933 9.84181 138.311 10.2185L136.018 12.8661C135.431 12.3255 134.774 11.8677 134.064 11.5057C133.366 11.172 132.6 11.0048 131.826 11.0172C131.183 11.0103 130.545 11.1405 129.955 11.3991C129.366 11.6576 128.838 12.0387 128.407 12.5169C127.979 12.9938 127.645 13.5463 127.42 14.146C127.185 14.7796 127.066 15.4508 127.071 16.1268V16.1732C127.068 16.8481 127.187 17.5181 127.42 18.1515C127.642 18.7533 127.973 19.3089 128.397 19.7904C128.825 20.2745 129.351 20.6611 129.941 20.9241C130.531 21.187 131.171 21.3202 131.816 21.3145C132.639 21.3404 133.455 21.1634 134.193 20.7991C134.895 20.4163 135.545 19.9433 136.125 19.3923L138.421 21.7126C138.016 22.1526 137.577 22.5608 137.109 22.9338C136.65 23.2971 136.151 23.6076 135.622 23.8595C135.058 24.1248 134.464 24.3208 133.853 24.4432C133.148 24.5847 132.429 24.6535 131.709 24.6484Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M142.678 7.96143H155.02V11.1708H146.227V14.4973H153.97V17.7067H146.239V21.1505H155.142V24.3598H142.686L142.678 7.96143Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7694",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "30.9235",
                        transform: "translate(0.522461 0.468262)",
                        width: "154.617"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite4/LogoBinanceWhite4.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite4;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite4");

  $parcel$ReactRefreshHelpers$2568.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"fZdZN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite7", ()=>(0, _logoBinanceWhite7.LogoBinanceWhite7));
var _logoBinanceWhite7 = require("./LogoBinanceWhite7");

},{"./LogoBinanceWhite7":"7epR8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7epR8":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$0fa6 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$0fa6.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite7", ()=>LogoBinanceWhite7);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite7 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-7 ${className}`,
        fill: "none",
        height: "44",
        viewBox: "0 0 215 44",
        width: "215",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7226)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M13.8622 18.5081L22.1544 10.2194L30.45 18.5149L35.2723 13.6893L22.1544 0.568359L9.03662 13.686L13.8622 18.5081Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.803223 21.9165L5.62706 17.0927L10.4509 21.9165L5.62706 26.7403L0.803223 21.9165Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M13.8621 25.3232L22.1543 33.6153L30.4499 25.3198L35.2755 30.1386L35.2722 30.142L22.1543 43.263L9.03653 30.1487L9.02979 30.142L13.8621 25.3232Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M33.8496 21.9175L38.6734 17.0937L43.4973 21.9175L38.6734 26.7412L33.8496 21.9175Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M27.0472 21.9139L22.1542 17.0176L18.5358 20.6359L18.1177 21.0507L17.2611 21.9072L17.2544 21.9139L17.2611 21.924L22.1542 26.8136L27.0472 21.9173L27.0506 21.9139H27.0472Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M51.0234 10.9141H61.5177C64.121 10.9141 66.0904 11.5885 67.4258 12.9373C67.9289 13.4356 68.3255 14.0309 68.5916 14.6871C68.8577 15.3433 68.9876 16.0467 68.9736 16.7546V16.8187C68.9827 17.3986 68.9019 17.9765 68.7342 18.5317C68.5848 19.0097 68.3679 19.4639 68.0901 19.8806C67.8311 20.2735 67.5178 20.6277 67.1594 20.9327C66.8092 21.2341 66.4256 21.4943 66.0162 21.7083C67.197 22.1195 68.2588 22.8143 69.1085 23.7316C69.8594 24.5858 70.2348 25.7661 70.2348 27.2723V27.3364C70.2561 28.277 70.0515 29.2091 69.6379 30.0543C69.2372 30.833 68.6498 31.5004 67.9282 31.9967C67.1124 32.5436 66.204 32.9378 65.2473 33.16C64.1107 33.4296 62.9455 33.5598 61.7774 33.5478H51.0234V10.9141ZM60.4656 20.066C61.3735 20.1099 62.277 19.9146 63.0858 19.4995C63.4011 19.3153 63.6586 19.0465 63.8291 18.7234C63.9995 18.4004 64.0761 18.0361 64.0502 17.6718V17.6078C64.0669 17.2721 63.9987 16.9376 63.852 16.6352C63.7052 16.3329 63.4846 16.0724 63.2105 15.8778C62.6507 15.4799 61.8426 15.281 60.7859 15.281H55.876V20.066H60.4656ZM61.7908 29.1877C62.6954 29.2383 63.5958 29.0314 64.3874 28.5908C64.6958 28.3927 64.9455 28.1155 65.1103 27.7881C65.2752 27.4607 65.3493 27.0951 65.3249 26.7294V26.6653C65.337 26.3177 65.2638 25.9724 65.1115 25.6596C64.9592 25.3468 64.7326 25.0762 64.4515 24.8713C63.8715 24.4217 62.934 24.1969 61.6391 24.1969H55.876V29.1877H61.7908Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M76.4868 10.9141H81.4675V33.5546H76.4868V10.9141Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M89.0044 10.9141H93.5973L104.213 24.8477V10.9141H109.13V33.5546H104.891L93.9278 19.1623V33.5546H89.0044V10.9141Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M124.211 10.752H128.797L138.498 33.5543H133.299L131.228 28.4759H121.654L119.584 33.5543H114.505L124.211 10.752ZM129.451 24.0786L126.436 16.7341L123.435 24.0786H129.451Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M143.888 10.9282H148.481L159.09 24.8619V10.9282H164.006V33.5687H159.767L148.804 19.1765V33.5687H143.888V10.9282Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M181.929 33.9527C180.341 33.9663 178.768 33.6589 177.302 33.049C175.922 32.4793 174.671 31.6392 173.621 30.5782C172.571 29.5172 171.744 28.2568 171.188 26.8712C170.602 25.4219 170.306 23.872 170.315 22.3087V22.2447C170.289 19.1633 171.474 16.195 173.616 13.9796C174.67 12.8974 175.932 12.0394 177.326 11.4572C178.842 10.8292 180.47 10.516 182.111 10.5366C183.081 10.5294 184.05 10.6163 185.004 10.7963C185.82 10.9506 186.618 11.189 187.385 11.5078C188.081 11.8007 188.742 12.1694 189.358 12.6071C189.958 13.034 190.522 13.51 191.044 14.0301L187.877 17.6855C187.068 16.9391 186.16 16.3071 185.179 15.8073C184.216 15.3465 183.159 15.1156 182.091 15.1328C181.202 15.1233 180.321 15.3031 179.507 15.66C178.693 16.017 177.965 16.5431 177.369 17.2033C176.779 17.8619 176.317 18.6246 176.007 19.4525C175.682 20.3274 175.519 21.2541 175.525 22.1873V22.2514C175.522 23.1833 175.685 24.1083 176.007 24.9828C176.314 25.8137 176.771 26.5808 177.356 27.2455C177.946 27.914 178.673 28.4478 179.488 28.8108C180.302 29.1738 181.185 29.3576 182.077 29.3498C183.213 29.3855 184.339 29.1412 185.358 28.6382C186.328 28.1097 187.225 27.4567 188.026 26.6959L191.195 29.8994C190.636 30.5069 190.03 31.0706 189.385 31.5855C188.75 32.0871 188.061 32.5158 187.331 32.8635C186.553 33.2298 185.733 33.5005 184.889 33.6695C183.915 33.8649 182.923 33.9598 181.929 33.9527Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M197.073 10.9141H214.113V15.345H201.973V19.9379H212.663V24.3689H201.99V29.1236H214.282V33.5546H197.083L197.073 10.9141Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7226",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "42.6946",
                        transform: "translate(0.805176 0.568359)",
                        width: "213.473"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite7/LogoBinanceWhite7.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite7;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite7");

  $parcel$ReactRefreshHelpers$0fa6.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"3rFIi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite8", ()=>(0, _logoBinanceWhite8.LogoBinanceWhite8));
var _logoBinanceWhite8 = require("./LogoBinanceWhite8");

},{"./LogoBinanceWhite8":"4iTIv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4iTIv":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f4dc = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f4dc.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBinanceWhite8", ()=>LogoBinanceWhite8);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBinanceWhite8 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-binance-white-8 ${className}`,
        fill: "none",
        height: "47",
        viewBox: "0 0 233 47",
        width: "233",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_6268)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M14.5983 19.5263L23.6238 10.5045L32.6531 19.5336L37.9017 14.2813L23.6238 0L9.34595 14.2777L14.5983 19.5263Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M0.384766 23.2358L5.6352 17.9855L10.8856 23.2358L5.6352 28.4862L0.384766 23.2358Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M14.5983 26.9441L23.6239 35.9695L32.6531 26.9404L37.9054 32.1854L37.9018 32.189L23.6239 46.4704L9.34596 32.1964L9.33862 32.189L14.5983 26.9441Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M36.3533 23.2373L41.6037 17.9869L46.8541 23.2373L41.6037 28.4877L36.3533 23.2373Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 37,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M28.9496 23.2332L23.6239 17.9038L19.6855 21.8421L19.2304 22.2936L18.2981 23.2258L18.2908 23.2332L18.2981 23.2442L23.6239 28.5662L28.9496 23.2368L28.9533 23.2332H28.9496Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 43,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M55.0464 11.2607H66.4687C69.3023 11.2607 71.4458 11.9948 72.8993 13.463C73.4469 14.0053 73.8786 14.6532 74.1682 15.3674C74.4578 16.0816 74.5992 16.8472 74.584 17.6178V17.6875C74.5938 18.3188 74.5059 18.9477 74.3234 19.5521C74.1608 20.0723 73.9247 20.5667 73.6223 21.0202C73.3405 21.4479 72.9994 21.8334 72.6093 22.1654C72.2282 22.4934 71.8107 22.7766 71.365 23.0095C72.6502 23.4572 73.806 24.2134 74.7308 25.2118C75.5481 26.1416 75.9567 27.4262 75.9567 29.0656V29.1354C75.9799 30.1592 75.7572 31.1737 75.3071 32.0937C74.8709 32.9413 74.2316 33.6676 73.4462 34.2078C72.5582 34.8031 71.5695 35.2321 70.5282 35.4741C69.291 35.7674 68.0227 35.9092 66.7513 35.8961H55.0464V11.2607ZM65.3235 21.2221C66.3118 21.2698 67.2952 21.0572 68.1754 20.6055C68.5187 20.405 68.799 20.1123 68.9845 19.7608C69.17 19.4092 69.2534 19.0127 69.2252 18.6161V18.5464C69.2434 18.181 69.1691 17.817 69.0094 17.4879C68.8497 17.1588 68.6095 16.8753 68.3113 16.6635C67.702 16.2304 66.8223 16.0138 65.6722 16.0138H60.3281V21.2221H65.3235ZM66.766 31.1504C67.7506 31.2055 68.7306 30.9803 69.5922 30.5007C69.9279 30.2851 70.1996 29.9834 70.3791 29.627C70.5585 29.2707 70.6392 28.8728 70.6126 28.4747V28.405C70.6258 28.0266 70.5461 27.6507 70.3803 27.3103C70.2146 26.9699 69.968 26.6753 69.662 26.4523C69.0307 25.963 68.0103 25.7183 66.6008 25.7183H60.3281V31.1504H66.766Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 49,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M82.7617 11.2607H88.1829V35.9035H82.7617V11.2607Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 55,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M96.3862 11.2607H101.385L112.94 26.4266V11.2607H118.291V35.9035H113.678L101.745 20.2384V35.9035H96.3862V11.2607Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M134.705 11.0845H139.697L150.257 35.9034H144.597L142.343 30.3758H131.923L129.669 35.9034H124.142L134.705 11.0845ZM140.409 25.5897L137.128 17.5957L133.861 25.5897H140.409Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 67,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M156.123 11.2759H161.122L172.669 26.4418V11.2759H178.021V35.9186H173.407L161.475 20.2536V35.9186H156.123V11.2759Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 73,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M197.528 36.3366C195.8 36.3514 194.087 36.0168 192.492 35.3529C190.991 34.7329 189.628 33.8185 188.485 32.6637C187.342 31.5089 186.442 30.137 185.838 28.6289C185.2 27.0514 184.877 25.3644 184.887 23.6629V23.5931C184.859 20.2393 186.149 17.0085 188.481 14.5971C189.628 13.4192 191.001 12.4853 192.518 11.8517C194.168 11.1681 195.94 10.8272 197.726 10.8497C198.783 10.8418 199.837 10.9364 200.875 11.1323C201.764 11.3003 202.632 11.5598 203.467 11.9067C204.224 12.2256 204.944 12.6268 205.614 13.1033C206.267 13.568 206.881 14.086 207.449 14.6522L204.003 18.6308C203.122 17.8183 202.134 17.1305 201.066 16.5864C200.018 16.0849 198.867 15.8337 197.704 15.8524C196.737 15.842 195.778 16.0377 194.892 16.4262C194.006 16.8148 193.213 17.3873 192.566 18.106C191.924 18.8227 191.421 19.653 191.083 20.5541C190.729 21.5064 190.551 22.5149 190.558 23.5307V23.6005C190.555 24.6148 190.732 25.6216 191.083 26.5735C191.416 27.4778 191.914 28.3128 192.551 29.0363C193.193 29.7638 193.985 30.3448 194.871 30.7399C195.758 31.1351 196.719 31.3351 197.69 31.3266C198.926 31.3655 200.152 31.0995 201.261 30.5521C202.317 29.9768 203.293 29.2661 204.164 28.438L207.614 31.9248C207.005 32.586 206.346 33.1996 205.643 33.76C204.953 34.306 204.203 34.7726 203.408 35.1511C202.561 35.5498 201.669 35.8444 200.751 36.0283C199.69 36.241 198.61 36.3443 197.528 36.3366Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M214.012 11.2607H232.558V16.0836H219.345V21.0826H230.98V25.9055H219.363V31.0806H232.742V35.9035H214.023L214.012 11.2607Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 85,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_6268",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "46.4703",
                        transform: "translate(0.386719)",
                        width: "232.352"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                        lineNumber: 94,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                    lineNumber: 93,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
                lineNumber: 92,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBinanceWhite8/LogoBinanceWhite8.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBinanceWhite8;
var _c;
$RefreshReg$(_c, "LogoBinanceWhite8");

  $parcel$ReactRefreshHelpers$f4dc.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"lyqZe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite3", ()=>(0, _logoBitmexWhite3.LogoBitmexWhite3));
var _logoBitmexWhite3 = require("./LogoBitmexWhite3");

},{"./LogoBitmexWhite3":"b71aW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b71aW":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$e3ee = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$e3ee.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite3", ()=>LogoBitmexWhite3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-3 ${className}`,
        fill: "none",
        height: "17",
        viewBox: "0 0 100 17",
        width: "100",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_9765)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M4.70328 0.658203L0.914062 15.8517H4.71142L7.08018 6.3522H10.8816L12.3021 0.658203H8.50063H4.70328Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M19.8966 0.658203H16.0993L14.6788 6.3522L13.7305 10.1536H9.93314L8.5127 15.8517H12.31H16.1074L18.4762 6.3522L19.8966 0.658203Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M40.3932 1.57775C40.3962 1.71868 40.3687 1.85858 40.3125 1.98785C40.2563 2.11712 40.1727 2.2327 40.0676 2.32664C39.8766 2.51456 39.6193 2.61986 39.3513 2.61986C39.0833 2.61986 38.8261 2.51456 38.635 2.32664C38.4398 2.13941 38.3261 1.88291 38.3185 1.61255C38.3109 1.3422 38.4099 1.0797 38.5943 0.881771L38.6431 0.82887C38.8342 0.640954 39.0914 0.535645 39.3594 0.535645C39.6274 0.535645 39.8847 0.640954 40.0758 0.82887C40.1809 0.922334 40.2639 1.03802 40.3189 1.16755C40.3738 1.29708 40.3992 1.43719 40.3932 1.57775ZM23.7061 0.653845H29.9902C31.7281 0.653845 33.0916 1.15446 33.9707 2.00103C34.2891 2.32167 34.5397 2.70314 34.7075 3.12269C34.8753 3.54224 34.957 3.99129 34.9475 4.44306V4.48785C34.9475 6.46589 33.7265 7.48747 32.5381 8.00437C34.3411 8.54975 35.7941 9.59168 35.7941 11.6674V11.7122C35.7941 14.317 33.6044 15.8596 30.2792 15.8596H23.7061V0.653845ZM29.6972 7.43048C31.7566 7.43048 33.1933 6.49436 33.1933 4.70354V4.66281C33.1933 3.16096 31.9967 2.18415 29.8111 2.18415H25.4033V7.42637L29.6972 7.43048ZM30.3036 14.3129C32.6072 14.3129 34.0399 13.2954 34.0399 11.5901V11.5493C34.0399 9.8969 32.6479 8.94043 29.9983 8.94043H25.4033V14.3129L30.3036 14.3129ZM38.5129 4.62621H40.1897V15.8555H38.5129V4.62621ZM44.618 12.2942V6.10364H42.0782V4.63842H44.618V0.653845H46.2948V4.63842H50.9062V6.10364H46.3111V12.0785C46.3111 13.5885 47.0233 14.549 48.3827 14.5205C49.2003 14.5365 50.0136 14.3985 50.78 14.1135V15.5746C49.8973 15.9374 48.9451 16.1 47.992 16.0508C45.9651 16.006 44.6342 14.5775 44.6342 12.2779L44.618 12.2942ZM53.336 0.653845H56.9421L60.9388 7.08045L64.9316 0.653845H68.5376V15.8555H65.2205V5.9327L60.9429 12.4448H60.8534L56.6205 6.01817V15.8677H53.336V0.653845ZM71.5128 0.653845H82.9822V3.62905H74.8421V6.71414H81.6187V9.68935H74.838V12.8803H83.088V15.8555H71.5128V0.653845ZM89.3437 8.12238L84.2602 0.653845H88.1715L91.3624 5.58267L94.5778 0.653845H98.3792L93.3038 8.08168L98.5949 15.8555H94.6877L91.2688 10.6499L87.8378 15.8636H84.0363L89.3437 8.12238Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_9765",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "16.4675",
                        transform: "translate(0.448242 0.0639648)",
                        width: "98.6125"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite3/LogoBitmexWhite3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite3;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite3");

  $parcel$ReactRefreshHelpers$e3ee.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"lc4Ln":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite4", ()=>(0, _logoBitmexWhite4.LogoBitmexWhite4));
var _logoBitmexWhite4 = require("./LogoBitmexWhite4");

},{"./LogoBitmexWhite4":"9lMiw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9lMiw":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$6e56 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$6e56.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite4", ()=>LogoBitmexWhite4);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite4 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-4 ${className}`,
        fill: "none",
        height: "21",
        viewBox: "0 0 121 21",
        width: "121",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_8647)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M5.91488 0.825195L1.30566 19.3066H5.92478L8.80616 7.7514H13.4302L15.1581 0.825195H10.534H5.91488Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M24.3963 0.825195H19.7772L18.0493 7.7514L16.8958 12.3755H12.2767L10.5488 19.3066H15.1679H19.7871L22.6684 7.7514L24.3963 0.825195Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M49.3287 1.94438C49.3323 2.1158 49.2988 2.28598 49.2304 2.44323C49.162 2.60047 49.0604 2.74106 48.9326 2.85533C48.7002 3.08392 48.3872 3.21201 48.0612 3.21201C47.7353 3.21201 47.4223 3.08392 47.1899 2.85533C46.9525 2.62759 46.8142 2.31557 46.8049 1.98671C46.7957 1.65785 46.9161 1.33855 47.1404 1.09779L47.1998 1.03344C47.4322 0.804856 47.7451 0.676758 48.0711 0.676758C48.3971 0.676758 48.71 0.804856 48.9425 1.03344C49.0704 1.14713 49.1714 1.28785 49.2382 1.44541C49.305 1.60297 49.3359 1.7734 49.3287 1.94438ZM29.0303 0.820537H36.6743C38.7883 0.820537 40.4469 1.42949 41.5162 2.45926C41.9036 2.84929 42.2084 3.3133 42.4125 3.82365C42.6166 4.334 42.7159 4.88022 42.7044 5.42976V5.48424C42.7044 7.89034 41.2192 9.133 39.7736 9.76175C41.9668 10.4252 43.7342 11.6926 43.7342 14.2175V14.272C43.7342 17.4405 41.0707 19.3169 37.0259 19.3169H29.0303V0.820537ZM36.3179 9.06367C38.823 9.06367 40.5706 7.92497 40.5706 5.74661V5.69706C40.5706 3.87021 39.1151 2.68201 36.4565 2.68201H31.0948V9.05867L36.3179 9.06367ZM37.0556 17.4355C39.8577 17.4355 41.6004 16.1978 41.6004 14.1234V14.0739C41.6004 12.0638 39.9072 10.9004 36.6842 10.9004H31.0948V17.4355L37.0556 17.4355ZM47.0414 5.65254H49.0811V19.3119H47.0414V5.65254ZM54.4676 14.9799V7.44969H51.3783V5.66739H54.4676V0.820537H56.5073V5.66739H62.1166V7.44969H56.5271V14.7175C56.5271 16.5543 57.3935 17.7227 59.0471 17.688C60.0416 17.7075 61.0309 17.5396 61.9632 17.1929V18.9703C60.8894 19.4115 59.7312 19.6093 58.5718 19.5495C56.1063 19.495 54.4874 17.7573 54.4874 14.9601L54.4676 14.9799ZM65.0723 0.820537H69.4587L74.3204 8.63789L79.1772 0.820537H83.5636V19.3119H79.5287V7.24176L74.3254 15.1631H74.2164L69.0676 7.34573V19.3267H65.0723V0.820537ZM87.1827 0.820537H101.134V4.43959H91.2324V8.19231H99.4756V11.8114H91.2275V15.6928H101.263V19.3119H87.1827V0.820537ZM108.872 9.9053L102.689 0.820537H107.446L111.328 6.81599L115.239 0.820537H119.863L113.689 9.85579L120.125 19.3119H115.373L111.214 12.9798L107.04 19.3218H102.416L108.872 9.9053Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_8647",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "20.0312",
                        transform: "translate(0.739258 0.102539)",
                        width: "119.953"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite4/LogoBitmexWhite4.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite4;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite4");

  $parcel$ReactRefreshHelpers$6e56.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"hqlQJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite6", ()=>(0, _logoBitmexWhite6.LogoBitmexWhite6));
var _logoBitmexWhite6 = require("./LogoBitmexWhite6");

},{"./LogoBitmexWhite6":"4d4fD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4d4fD":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$9eea = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$9eea.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite6", ()=>LogoBitmexWhite6);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite6 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-6 ${className}`,
        fill: "none",
        height: "20",
        viewBox: "0 0 118 20",
        width: "118",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7698)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M5.84622 0.69873L1.34912 18.7306H5.85588L8.66717 7.45645H13.1788L14.8646 0.69873H10.353H5.84622Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M23.8783 0.69873H19.3715L17.6857 7.45645L16.5602 11.968H12.0535L10.3677 18.7306H14.8744H19.3812L22.1925 7.45645L23.8783 0.69873Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M48.204 1.79049C48.2076 1.95775 48.1749 2.12379 48.1082 2.27721C48.0414 2.43063 47.9423 2.5678 47.8176 2.67929C47.5908 2.90231 47.2855 3.0273 46.9675 3.0273C46.6494 3.0273 46.3441 2.90231 46.1173 2.67929C45.8857 2.45709 45.7507 2.15266 45.7417 1.8318C45.7326 1.51094 45.8502 1.1994 46.069 0.9645L46.1269 0.901716C46.3537 0.678693 46.659 0.553711 46.9771 0.553711C47.2951 0.553711 47.6005 0.678693 47.8272 0.901716C47.952 1.01264 48.0506 1.14994 48.1157 1.30367C48.1809 1.45739 48.2111 1.62368 48.204 1.79049ZM28.3994 0.693993H35.8575C37.9201 0.693993 39.5383 1.28813 40.5817 2.29286C40.9595 2.67339 41.2569 3.12612 41.4561 3.62405C41.6553 4.12199 41.7522 4.65492 41.741 5.19109V5.24425C41.741 7.59182 40.2918 8.80425 38.8814 9.41771C41.0212 10.065 42.7457 11.3016 42.7457 13.7651V13.8182C42.7457 16.9097 40.1469 18.7404 36.2005 18.7404H28.3994V0.693993ZM35.5098 8.73661C37.9539 8.73661 39.6591 7.62561 39.6591 5.50023V5.4519C39.6591 3.66948 38.2389 2.51018 35.645 2.51018H30.4137V8.73174L35.5098 8.73661ZM36.2295 16.9048C38.9635 16.9048 40.6638 15.6972 40.6638 13.6733V13.6249C40.6638 11.6638 39.0118 10.5286 35.8672 10.5286H30.4137V16.9048L36.2295 16.9048ZM45.9724 5.40846H47.9625V18.7355H45.9724V5.40846ZM53.218 14.5089V7.16189H50.2038V5.42295H53.218V0.693993H55.2081V5.42295H60.6809V7.16189H55.2274V14.2529C55.2274 16.045 56.0727 17.185 57.6861 17.1511C58.6564 17.1702 59.6216 17.0063 60.5312 16.6681V18.4022C59.4836 18.8327 58.3535 19.0257 57.2224 18.9674C54.8168 18.9142 53.2373 17.2188 53.2373 14.4896L53.218 14.5089ZM63.5647 0.693993H67.8444L72.5879 8.32119L77.3265 0.693993H81.6062V18.7355H77.6694V6.95902L72.5927 14.6876H72.4864L67.4628 7.06046V18.75H63.5647V0.693993ZM85.1372 0.693993H98.7493V4.22501H89.0885V7.88645H97.1311V11.4175H89.0837V15.2045H98.8749V18.7355H85.1372V0.693993ZM106.299 9.55777L100.266 0.693993H104.908L108.695 6.5436L112.511 0.693993H117.023L110.999 9.50946L117.279 18.7355H112.641L108.584 12.5574L104.512 18.7452H100L106.299 9.55777Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7698",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "19.5439",
                        transform: "translate(0.796387 -0.00634766)",
                        width: "117.035"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite6/LogoBitmexWhite6.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite6;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite6");

  $parcel$ReactRefreshHelpers$9eea.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"fcbd5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite7", ()=>(0, _logoBitmexWhite7.LogoBitmexWhite7));
var _logoBitmexWhite7 = require("./LogoBitmexWhite7");

},{"./LogoBitmexWhite7":"9owY4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9owY4":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$09ce = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$09ce.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite7", ()=>LogoBitmexWhite7);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite7 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-7 ${className}`,
        fill: "none",
        height: "28",
        viewBox: "0 0 162 28",
        width: "162",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7230)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M7.38325 1.24219L1.17432 26.1379H7.39659L11.278 10.5723H17.5069L19.8345 1.24219H13.6055H7.38325Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M32.279 1.24219H26.0567L23.7292 10.5723L22.1753 16.8012H15.953L13.6255 26.1379H19.8478H26.07L29.9515 10.5723L32.279 1.24219Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M65.8643 2.74907C65.8692 2.98 65.824 3.20924 65.7319 3.42106C65.6398 3.63288 65.503 3.82226 65.3308 3.97619C65.0177 4.28411 64.5962 4.45667 64.157 4.45667C63.7179 4.45667 63.2963 4.28411 62.9833 3.97619C62.6634 3.6694 62.4772 3.2491 62.4647 2.8061C62.4522 2.36311 62.6145 1.93298 62.9165 1.60866L62.9966 1.52198C63.3096 1.21406 63.7312 1.0415 64.1703 1.0415C64.6094 1.0415 65.031 1.21406 65.3441 1.52198C65.5164 1.67513 65.6524 1.86469 65.7424 2.07693C65.8324 2.28918 65.8741 2.51875 65.8643 2.74907ZM38.521 1.23518H48.8181C51.6658 1.23518 53.8999 2.05549 55.3405 3.44266C55.8622 3.96805 56.2728 4.59311 56.5478 5.28058C56.8228 5.96805 56.9565 6.70386 56.9411 7.44412V7.51751C56.9411 10.7587 54.9403 12.4326 52.9929 13.2796C55.9474 14.1733 58.3282 15.8806 58.3282 19.2818V19.3552C58.3282 23.6234 54.7402 26.151 49.2916 26.151H38.521V1.23518ZM48.3379 12.3392C51.7125 12.3392 54.0667 10.8053 54.0667 7.87094V7.8042C54.0667 5.3433 52.106 3.74272 48.5246 3.74272H41.302V12.3325L48.3379 12.3392ZM49.3316 23.6167C53.1063 23.6167 55.4538 21.9494 55.4538 19.1551V19.0883C55.4538 16.3807 53.173 14.8134 48.8314 14.8134H41.302V23.6166L49.3316 23.6167ZM62.7832 7.74423H65.5309V26.1443H62.7832V7.74423ZM72.7868 20.3088V10.1651H68.6253V7.76424H72.7868V1.23518H75.5345V7.76424H83.0906V10.1651H75.5612V19.9554C75.5612 22.4296 76.7283 24.0035 78.9558 23.9568C80.2954 23.9831 81.628 23.7569 82.8839 23.2899V25.6841C81.4374 26.2785 79.8772 26.545 78.3155 26.4644C74.9943 26.391 72.8135 24.0502 72.8135 20.2821L72.7868 20.3088ZM87.072 1.23518H92.9809L99.5299 11.7657L106.072 1.23518H111.981V26.1443H106.546V9.88502L99.5366 20.5556H99.3899L92.454 10.0251V26.1643H87.072V1.23518ZM116.856 1.23518H135.65V6.1103H122.312V11.1655H133.416V16.0406H122.305V21.2692H135.823V26.1443H116.856V1.23518ZM146.074 13.473L137.744 1.23518H144.153L149.381 9.31147L154.65 1.23518H160.879L152.563 13.4063L161.232 26.1443H154.83L149.228 17.6145L143.606 26.1576H137.377L146.074 13.473Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7230",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "26.9834",
                        transform: "translate(0.411133 0.268555)",
                        width: "161.585"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite7/LogoBitmexWhite7.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite7;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite7");

  $parcel$ReactRefreshHelpers$09ce.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"fW2Ka":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite8", ()=>(0, _logoBitmexWhite8.LogoBitmexWhite8));
var _logoBitmexWhite8 = require("./LogoBitmexWhite8");

},{"./LogoBitmexWhite8":"jRIrK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jRIrK":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f7dc = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f7dc.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite8", ()=>LogoBitmexWhite8);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite8 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-8 ${className}`,
        fill: "none",
        height: "30",
        viewBox: "0 0 177 30",
        width: "177",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_6272)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M8.42355 1.08057L1.66553 28.178H8.43807L12.6627 11.2357H19.4425L21.9759 1.08057H15.1961H8.42355Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M35.5209 1.08057H28.7483L26.215 11.2357L24.5237 18.0155H17.7511L15.2178 28.178H21.9903H28.7629L32.9875 11.2357L35.5209 1.08057Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M72.0769 2.72137C72.0822 2.97272 72.033 3.22224 71.9328 3.45279C71.8325 3.68334 71.6836 3.88947 71.4962 4.05701C71.1554 4.39216 70.6966 4.57998 70.2186 4.57998C69.7406 4.57998 69.2818 4.39216 68.941 4.05701C68.5929 3.72309 68.3902 3.26562 68.3766 2.78345C68.363 2.30127 68.5396 1.83311 68.8684 1.48011L68.9555 1.38576C69.2963 1.05061 69.7551 0.862793 70.2331 0.862793C70.711 0.862793 71.1699 1.05061 71.5106 1.38576C71.6982 1.55245 71.8463 1.75878 71.9442 1.98979C72.0421 2.2208 72.0875 2.47069 72.0769 2.72137ZM42.3154 1.0736H53.5232C56.6227 1.0736 59.0544 1.96645 60.6223 3.4763C61.1902 4.04815 61.6371 4.72849 61.9364 5.47676C62.2357 6.22503 62.3813 7.0259 62.3645 7.83163V7.91151C62.3645 11.4393 60.1868 13.2613 58.0672 14.1832C61.2829 15.1559 63.8743 17.0141 63.8743 20.7162V20.7961C63.8743 25.4417 59.969 28.1929 54.0385 28.1929H42.3154V1.0736ZM53.0005 13.1597C56.6735 13.1597 59.2359 11.4901 59.2359 8.29619V8.22355C59.2359 5.54502 57.1018 3.80289 53.2038 3.80289H45.3424V13.1523L53.0005 13.1597ZM54.0821 25.4344C58.1906 25.4344 60.7457 23.6197 60.7457 20.5782V20.5056C60.7457 17.5585 58.2632 15.8526 53.5377 15.8526H45.3424V25.4344L54.0821 25.4344ZM68.7233 8.15827H71.7139V28.1856H68.7233V8.15827ZM79.6116 21.834V10.7933H75.082V8.18005H79.6116V1.0736H82.6023V8.18005H90.8266V10.7933H82.6313V21.4493C82.6313 24.1423 83.9016 25.8554 86.3261 25.8046C87.7842 25.8332 89.2346 25.587 90.6016 25.0787V27.6847C89.0272 28.3316 87.329 28.6217 85.6292 28.534C82.0143 28.4541 79.6406 25.9063 79.6406 21.805L79.6116 21.834ZM95.1601 1.0736H101.592L108.72 12.5354L115.841 1.0736H122.272V28.1856H116.356V10.4884L108.727 22.1026H108.567L101.018 10.6408V28.2073H95.1601V1.0736ZM127.578 1.0736H148.034V6.37985H133.516V11.8821H145.602V17.1883H133.509V22.8793H148.223V28.1856H127.578V1.0736ZM159.379 14.3937L150.313 1.0736H157.289L162.98 9.86411L168.714 1.0736H175.494L166.442 14.3211L175.879 28.1856H168.91L162.813 18.9014L156.694 28.2001H149.914L159.379 14.3937Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_6272",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "29.3697",
                        transform: "translate(0.834961 0.0209961)",
                        width: "175.874"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite8/LogoBitmexWhite8.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite8;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite8");

  $parcel$ReactRefreshHelpers$f7dc.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"c847C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite2", ()=>(0, _logoBitoproWhite2.LogoBitoproWhite2));
var _logoBitoproWhite2 = require("./LogoBitoproWhite2");

},{"./LogoBitoproWhite2":"lLFoD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lLFoD":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$10c7 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$10c7.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite2", ()=>LogoBitoproWhite2);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite2 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-2 ${className}`,
        fill: "none",
        height: "25",
        viewBox: "0 0 101 25",
        width: "101",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M36.8907 3.64278C36.8762 3.80198 36.7604 3.91777 36.6012 3.93224C36.5289 3.91777 36.4565 3.88883 36.3986 3.83093C35.5737 2.96254 34.4594 2.48492 33.099 2.34019C32.853 2.29677 32.6214 2.28229 32.3754 2.29677C29.9151 2.29677 27.1799 3.49805 24.7921 5.43746L28.3956 5.46641H30.2914C32.0425 5.46641 33.2582 5.56772 34.0252 5.71246C35.0961 5.9585 35.8197 6.3927 36.3118 6.95716C36.7459 7.57951 36.8472 8.30317 36.4999 9.12815C36.2828 9.70708 35.9355 10.2136 35.4869 10.6189C34.908 11.1255 34.2567 11.5452 33.5476 11.8636C34.5607 12.2978 35.1974 12.7754 35.5448 13.3978C35.8342 14.0201 35.8342 14.7438 35.5448 15.5687C35.2553 16.3937 34.7199 17.1029 33.8949 17.7832C33.1135 18.4489 32.2017 18.9555 31.2176 19.2739C30.248 19.6068 28.9311 19.7515 27.426 19.7515H25.0815C25.0091 19.7805 24.9223 19.7949 24.8355 19.7949L22.0279 19.766L22.0134 19.7949V19.766L20.9425 19.7515C20.5373 19.7515 20.2189 19.4331 20.2189 19.0279C20.2189 18.6226 20.5373 18.3042 20.9425 18.3042L22.5489 18.3187L26.7313 6.87032L23.2146 6.84137H23.2001C21.9121 8.15844 20.8412 9.64918 20.0018 11.2847L22.1582 11.3136C22.5489 11.3136 22.8818 11.6175 22.8818 12.0228V12.0373C22.8673 12.428 22.5489 12.7465 22.1582 12.7609L19.3506 12.732C18.9164 13.832 18.6415 15.0043 18.5546 16.1766H16.0365C16.2102 14.5122 16.6733 12.8767 17.3969 11.357C20.161 5.33615 26.2393 0.806018 31.4347 0.806018C31.7241 0.791545 32.0136 0.820492 32.303 0.849439C34.2423 1.03759 35.8053 1.90599 36.8183 3.39673C36.8907 3.49805 36.9341 3.54147 36.8907 3.64278ZM32.853 9.51892C32.9977 9.08472 32.9543 8.69395 32.6069 8.46238C32.3175 8.21633 31.7386 8.0716 30.8992 8.0716H29.1915L28.0772 11.111H29.6257C30.494 11.111 31.2321 10.9662 31.7676 10.6768C32.2741 10.4307 32.6504 10.0255 32.853 9.51892ZM25.863 17.1753H27.5707C29.0758 17.1753 30.1467 17.0305 30.7835 16.7411C31.3479 16.495 31.7965 16.0464 32.0425 15.4964C32.2886 14.874 32.1438 14.3819 31.6518 14.0491C31.1597 13.7162 30.1901 13.5135 28.7863 13.5135H27.2378L25.863 17.1753ZM26.1524 1.1389C23.8659 1.42837 21.3911 2.67307 19.2493 4.61249C18.4244 5.35062 17.6863 6.14665 17.0206 7.01505H14.734C17.7008 3.02043 22.0713 0.313928 26.0945 0.458661C26.2827 0.458661 26.4274 0.603393 26.4274 0.777072V0.791546C26.4563 0.979699 26.3261 1.12443 26.1524 1.1389ZM12.3027 6.43612C11.0437 8.0716 10.0161 9.95312 9.48069 11.9215C8.75709 14.4688 8.75709 16.9727 9.43727 19.1002C9.7846 20.2291 10.378 21.2712 11.1884 22.1396C11.3331 22.2843 11.3331 22.5159 11.1884 22.6751C11.116 22.762 11.0147 22.8199 10.8989 22.8199C10.8121 22.8343 10.7253 22.8054 10.6529 22.7764C9.56752 22.0238 8.6992 21.0107 8.13479 19.8239C8.10585 19.8239 8.06243 19.8384 8.03349 19.8384L4.96542 19.7949C4.56021 19.7949 4.24182 19.4765 4.24182 19.0713C4.24182 18.666 4.56021 18.3476 4.96542 18.3476L7.57038 18.391C6.96256 16.3503 6.9915 13.9622 7.74405 11.5162C8.23609 9.88076 8.98864 8.34659 9.98721 6.95716L9.14783 6.94268C8.74261 6.94268 8.42423 6.62427 8.42423 6.21902C8.42423 5.81377 8.74261 5.49536 9.14783 5.49536L11.0002 5.53878C11.0437 5.53878 11.1015 5.53878 11.145 5.55325C12.5777 3.97566 14.3578 2.74544 16.3404 1.97835C16.543 1.87704 16.7746 1.96388 16.8759 2.16651V2.18098C16.9193 2.3836 16.8904 2.58623 16.7746 2.75991C15.1248 3.54147 13.5618 4.84406 12.3027 6.43612ZM5.5443 12.3123L1.66581 12.3557C1.21717 12.3702 0.826432 12.0228 0.81196 11.5741C0.797488 11.1255 1.14481 10.7347 1.59345 10.7202C1.62239 10.7202 1.63686 10.7202 1.66581 10.7202L5.50089 10.6768C5.96399 10.6768 6.34026 11.0386 6.36921 11.5018C6.35473 11.936 5.99293 12.2978 5.5443 12.3123ZM12.0133 12.6017C12.158 12.1241 12.3027 11.5886 12.4909 11.111C12.8237 10.1847 13.2579 9.28735 13.8078 8.46238H16.0365C15.4431 9.46103 14.9222 10.5176 14.488 11.5886C14.3867 11.9215 14.242 12.2544 14.1407 12.6017H12.0133ZM13.7065 13.9912C13.3302 15.6411 13.3158 17.349 13.6631 18.9989C14.1551 21.0252 15.2116 22.5159 16.7746 23.3843C16.9193 23.4856 16.9772 23.6593 16.9193 23.8185C16.8614 23.9343 16.7601 24.0067 16.6299 24.0067H16.5285C14.6906 23.5146 13.1421 22.2409 12.3027 20.5331C11.3765 18.7094 11.1884 16.3937 11.6225 13.9767L13.7065 13.9912ZM18.6704 17.6095C18.7428 18.5358 19.0033 19.4476 19.4519 20.2581C20.2768 21.7054 21.6806 22.5738 23.4896 22.762C23.7356 22.8054 23.9672 22.8199 24.2132 22.8054C25.5301 22.8054 26.9339 22.4725 28.3956 21.7923C28.5403 21.7344 28.714 21.7923 28.7863 21.937C28.8732 22.0528 28.8442 22.212 28.7284 22.2988C28.714 22.3133 28.6995 22.3133 28.685 22.3278C26.6445 23.4856 24.6039 24.108 22.7081 24.108C22.4187 24.1224 22.1292 24.0935 21.8398 24.0646C19.6979 23.8185 18.0481 22.8199 17.0351 21.0831C16.4272 20.0265 16.1089 18.8252 16.1089 17.6095H18.6704Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite2/LogoBitoproWhite2.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M69.9882 18C67.5859 18 65.965 16.4948 65.965 14.2515C65.965 11.0963 68.2516 8.52006 71.638 8.52006C74.1851 8.52006 75.6613 10.1845 75.6613 12.2397C75.6613 15.5685 73.2879 18 69.9882 18ZM71.2762 10.5463C69.6699 10.5463 68.8449 12.7897 68.8739 14.1936C68.8739 15.2501 69.4238 15.9593 70.3935 15.9593C71.9275 15.9593 72.7813 13.8317 72.7813 12.2686C72.7669 11.4292 72.3906 10.5463 71.2762 10.5463ZM65.9506 10.7489H63.9245L63.2877 13.8317C63.2009 14.2081 63.143 14.5988 63.1285 14.9751C63.1285 15.4238 63.3167 15.7422 63.9245 15.7422C64.185 15.7422 64.4455 15.7422 64.706 15.6988L64.3731 17.7974C64.0258 17.9277 63.3311 18 62.7233 18C61.059 18 60.2631 17.1606 60.2631 16.0317C60.2775 15.4672 60.3354 14.9028 60.4657 14.3528L61.9563 7.02931L64.8362 6.2767L64.3442 8.73716H66.3702L65.9506 10.7489ZM58.3528 7.59377H58.3383C57.5857 7.59377 56.9924 7.08721 56.9924 6.29118C57.0069 5.37936 57.7449 4.77148 58.5988 4.77148C59.4092 4.77148 60.0026 5.29252 60.0026 6.08855C60.0026 7.04379 59.25 7.60824 58.3528 7.59377ZM57.6002 17.7974H54.8071L56.6161 8.73716H59.4092L57.6002 17.7974ZM52.0864 11.1831C53.3454 11.5594 54.1414 12.5436 54.1414 13.9041C54.1414 15.2357 53.3889 16.2198 52.3469 16.8711C51.247 17.5803 49.5972 17.8843 47.4119 17.8843C46.312 17.8987 45.1977 17.8264 44.1123 17.6382L46.5147 5.49515C47.6435 5.307 48.8012 5.20568 49.959 5.20568C51.3194 5.20568 52.3324 5.36489 53.2007 5.87145C54.069 6.29118 54.7203 7.10168 54.7203 8.15823C54.7203 9.73581 53.4902 10.7345 52.0864 11.1252V11.1831ZM47.2238 15.7422C47.5856 15.7856 47.9329 15.8001 48.2947 15.8001C49.8143 15.8001 51.1891 15.2212 51.1891 13.8317C51.1891 12.587 50.1037 12.2252 48.8012 12.2252H47.9329L47.2238 15.7422ZM50.0314 7.28983C49.6696 7.27536 49.3078 7.30431 48.946 7.37667L48.3671 10.2713H49.2933C50.8273 10.2713 51.8838 9.6345 51.8838 8.57795C51.8693 7.68061 51.1023 7.28983 50.0314 7.28983Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite2/LogoBitoproWhite2.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M95.083 17.9279C92.6951 17.9279 91.2189 16.3503 91.2189 14.2083C91.2189 11.1544 93.4476 8.49134 96.6749 8.49134C99.222 8.49134 100.553 10.2281 100.553 12.2399C100.553 15.3083 98.2958 17.9279 95.083 17.9279ZM96.3999 10.1702C94.5909 10.1702 93.5489 12.4715 93.5489 14.1504C93.5489 15.3951 94.2436 16.2635 95.3869 16.2635C97.0801 16.2635 98.2089 14.0346 98.2089 12.2399C98.2089 11.3136 97.7748 10.1702 96.3999 10.1702ZM91.2768 10.6189C89.6704 10.6189 88.6429 12.182 88.2667 14.107L87.5431 17.7398H85.2854C85.2854 17.7398 86.7616 9.53342 86.8773 8.70844H88.9903C88.86 9.31632 88.7153 9.95314 88.614 10.6189H88.6719C89.3086 9.38869 90.3362 8.50582 91.6386 8.50582C91.7978 8.50582 91.957 8.52029 92.1162 8.54924L91.6676 10.6623C91.5518 10.6334 91.4071 10.6189 91.2768 10.6189ZM80.4807 13.0938C80.0755 13.0794 79.6558 13.0504 79.2506 13.007L78.3244 17.7398H76.0957L78.5415 5.45196C79.5835 5.24933 80.6399 5.14802 81.7108 5.16249C82.912 5.16249 84.2145 5.40854 85.0539 6.04536C85.8354 6.60982 86.255 7.42032 86.255 8.53476C86.255 9.8663 85.6328 11.111 84.5908 11.9215C83.5198 12.7031 82.0292 13.0938 80.4807 13.0938ZM81.6964 6.88481C81.2767 6.87034 80.857 6.91376 80.4518 7.0006L79.5979 11.2268C79.9887 11.2992 80.3794 11.3426 80.7846 11.3426C82.7094 11.3426 83.9685 10.1702 83.9685 8.69397C83.9685 7.36243 82.9844 6.88481 81.6964 6.88481Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite2/LogoBitoproWhite2.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite2/LogoBitoproWhite2.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite2/LogoBitoproWhite2.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite2;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite2");

  $parcel$ReactRefreshHelpers$10c7.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"a40ad":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite6", ()=>(0, _logoBitoproWhite6.LogoBitoproWhite6));
var _logoBitoproWhite6 = require("./LogoBitoproWhite6");

},{"./LogoBitoproWhite6":"hMT2x","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hMT2x":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$8800 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$8800.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite6", ()=>LogoBitoproWhite6);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite6 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-6 ${className}`,
        fill: "none",
        height: "27",
        viewBox: "0 0 111 27",
        width: "111",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M39.8349 4.24712C39.8189 4.4227 39.6912 4.55039 39.5157 4.56635C39.4358 4.55039 39.3561 4.51847 39.2922 4.45462C38.3825 3.49693 37.1536 2.9702 35.6533 2.81059C35.382 2.7627 35.1266 2.74674 34.8553 2.7627C32.1421 2.7627 29.1256 4.08751 26.4922 6.22634L30.4663 6.25827H32.5571C34.4882 6.25827 35.8289 6.37 36.6748 6.52961C37.8558 6.80096 38.6538 7.2798 39.1964 7.9023C39.6753 8.58864 39.787 9.38672 39.4039 10.2965C39.1645 10.935 38.7815 11.4936 38.2867 11.9406C37.6483 12.4992 36.9301 12.9621 36.1481 13.3132C37.2653 13.7921 37.9675 14.3188 38.3506 15.0052C38.6698 15.6915 38.6698 16.4896 38.3506 17.3994C38.0314 18.3092 37.4408 19.0913 36.5311 19.8415C35.6693 20.5757 34.6638 21.1344 33.5785 21.4855C32.5092 21.8526 31.0568 22.0122 29.397 22.0122H26.8114C26.7316 22.0442 26.6359 22.0601 26.5401 22.0601L23.4439 22.0282L23.4279 22.0601V22.0282L22.2468 22.0122C21.8 22.0122 21.4488 21.6611 21.4488 21.2142C21.4488 20.7672 21.8 20.4161 22.2468 20.4161L24.0184 20.4321L28.6309 7.80653L24.7526 7.77461H24.7366C23.3162 9.2271 22.1351 10.8711 21.2094 12.6748L23.5875 12.7067C24.0184 12.7067 24.3855 13.0419 24.3855 13.4888V13.5048C24.3695 13.9357 24.0184 14.2869 23.5875 14.3028L20.4912 14.2709C20.0124 15.484 19.7092 16.7769 19.6134 18.0698H16.8364C17.0279 16.2342 17.5386 14.4305 18.3366 12.7546C21.385 6.11461 28.0882 1.11867 33.8179 1.11867C34.1371 1.10271 34.4563 1.13463 34.7755 1.16656C36.9142 1.37406 38.6378 2.33175 39.7551 3.97578C39.8349 4.08751 39.8827 4.13539 39.8349 4.24712ZM35.382 10.7275C35.5416 10.2486 35.4937 9.81768 35.1107 9.56229C34.7915 9.29095 34.1531 9.13133 33.2274 9.13133H31.3441L30.1152 12.4832H31.8229C32.7805 12.4832 33.5945 12.3236 34.185 12.0044C34.7436 11.7331 35.1586 11.2861 35.382 10.7275ZM27.6733 19.1711H29.5566C31.2164 19.1711 32.3975 19.0115 33.0997 18.6923C33.7221 18.4209 34.2169 17.9261 34.4882 17.3196C34.7595 16.6332 34.5999 16.0905 34.0573 15.7234C33.5147 15.3563 32.4453 15.1328 30.8972 15.1328H29.1895L27.6733 19.1711ZM27.9925 1.48579C25.4708 1.80502 22.7416 3.1777 20.3795 5.31654C19.4698 6.13057 18.6558 7.00846 17.9217 7.96615H15.4C18.6718 3.56078 23.4917 0.575983 27.9286 0.735597C28.1361 0.735597 28.2957 0.895212 28.2957 1.08675V1.10271C28.3276 1.31021 28.184 1.46982 27.9925 1.48579ZM12.7187 7.32769C11.3302 9.13133 10.197 11.2063 9.60646 13.3771C8.80846 16.1863 8.80846 18.9476 9.55858 21.294C9.94163 22.539 10.596 23.6882 11.4898 24.6459C11.6494 24.8055 11.6494 25.0609 11.4898 25.2365C11.41 25.3322 11.2982 25.3961 11.1706 25.3961C11.0748 25.412 10.979 25.3801 10.8992 25.3482C9.70223 24.5182 8.74462 23.4009 8.12218 22.092C8.09026 22.092 8.04238 22.108 8.01046 22.108L4.62692 22.0601C4.18004 22.0601 3.82892 21.709 3.82892 21.2621C3.82892 20.8151 4.18004 20.464 4.62692 20.464L7.49973 20.5119C6.82941 18.2613 6.86133 15.6277 7.69126 12.9302C8.2339 11.1265 9.06382 9.4346 10.1651 7.9023L9.23938 7.88634C8.7925 7.88634 8.44138 7.53519 8.44138 7.08826C8.44138 6.64134 8.7925 6.29019 9.23938 6.29019L11.2823 6.33807C11.3302 6.33807 11.394 6.33807 11.4419 6.35404C13.0219 4.61423 14.985 3.25751 17.1715 2.41155C17.395 2.29982 17.6503 2.39559 17.7621 2.61905V2.63501C17.8099 2.85847 17.778 3.08193 17.6503 3.27347C15.8309 4.13539 14.1072 5.57192 12.7187 7.32769ZM5.26532 13.808L0.988023 13.8559C0.493261 13.8719 0.0623396 13.4888 0.0463796 12.994C0.0304195 12.4992 0.41346 12.0682 0.908223 12.0523C0.940143 12.0523 0.956103 12.0523 0.988023 12.0523L5.21744 12.0044C5.72817 12.0044 6.14313 12.4034 6.17505 12.9142C6.15909 13.393 5.76009 13.7921 5.26532 13.808ZM12.3995 14.1273C12.5591 13.6005 12.7187 13.01 12.9262 12.4832C13.2932 11.4617 13.772 10.4721 14.3785 9.56229H16.8364C16.182 10.6636 15.6075 11.8288 15.1287 13.01C15.0169 13.3771 14.8573 13.7442 14.7456 14.1273H12.3995ZM14.2668 15.6596C13.8518 17.4792 13.8359 19.3626 14.2189 21.1822C14.7616 23.4168 15.9267 25.0609 17.6503 26.0186C17.8099 26.1303 17.8738 26.3218 17.8099 26.4974C17.7461 26.6251 17.6344 26.7049 17.4907 26.7049H17.379C15.3521 26.1622 13.6444 24.7576 12.7187 22.8742C11.6972 20.863 11.4898 18.3092 11.9686 15.6436L14.2668 15.6596ZM19.7411 19.6499C19.8209 20.6715 20.1082 21.6771 20.603 22.5709C21.5127 24.167 23.0608 25.1247 25.0558 25.3322C25.3271 25.3801 25.5825 25.3961 25.8538 25.3801C27.3062 25.3801 28.8543 25.013 30.4663 24.2628C30.6259 24.199 30.8174 24.2628 30.8972 24.4224C30.993 24.5501 30.9611 24.7257 30.8334 24.8215C30.8174 24.8374 30.8014 24.8374 30.7855 24.8534C28.5351 26.1303 26.2847 26.8166 24.194 26.8166C23.8748 26.8326 23.5556 26.8007 23.2364 26.7688C20.8743 26.4974 19.0548 25.3961 17.9376 23.4807C17.2673 22.3155 16.9162 20.9907 16.9162 19.6499H19.7411Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite6/LogoBitoproWhite6.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M76.3354 20.0805C73.6861 20.0805 71.8985 18.4205 71.8985 15.9465C71.8985 12.4669 74.4202 9.62572 78.1549 9.62572C80.9639 9.62572 82.5918 11.4613 82.5918 13.7278C82.5918 17.399 79.9743 20.0805 76.3354 20.0805ZM77.7559 11.8603C75.9843 11.8603 75.0746 14.3344 75.1065 15.8826C75.1065 17.0478 75.713 17.8299 76.7823 17.8299C78.4741 17.8299 79.4157 15.4836 79.4157 13.7597C79.3998 12.834 78.9848 11.8603 77.7559 11.8603ZM71.8826 12.0838H69.6482L68.9459 15.4836C68.8502 15.8986 68.7863 16.3295 68.7704 16.7445C68.7704 17.2393 68.9779 17.5905 69.6482 17.5905C69.9355 17.5905 70.2227 17.5905 70.51 17.5426L70.1429 19.857C69.7599 20.0007 68.9938 20.0805 68.3235 20.0805C66.4881 20.0805 65.6103 19.1547 65.6103 17.9097C65.6262 17.2872 65.6901 16.6647 65.8337 16.0582L67.4776 7.98169L70.6537 7.15169L70.111 9.86514H72.3454L71.8826 12.0838ZM63.5035 8.60419H63.4876C62.6577 8.60419 62.0033 8.04553 62.0033 7.16765C62.0193 6.16208 62.8332 5.4917 63.7749 5.4917C64.6686 5.4917 65.323 6.06631 65.323 6.94419C65.323 7.99765 64.4931 8.62015 63.5035 8.60419ZM62.6736 19.857H59.5933L61.5883 9.86514H64.6686L62.6736 19.857ZM56.5928 12.5626C57.9814 12.9776 58.8592 14.063 58.8592 15.5634C58.8592 17.0318 58.0292 18.1172 56.8801 18.8355C55.6671 19.6176 53.8477 19.9528 51.4377 19.9528C50.2248 19.9688 48.9958 19.8889 47.7988 19.6814L50.4482 6.28977C51.6931 6.08227 52.9699 5.97054 54.2467 5.97054C55.7469 5.97054 56.8641 6.14612 57.8218 6.70477C58.7794 7.16765 59.4976 8.0615 59.4976 9.22668C59.4976 10.9665 58.141 12.0678 56.5928 12.4988V12.5626ZM51.2302 17.5905C51.6292 17.6384 52.0123 17.6543 52.4113 17.6543C54.0871 17.6543 55.6033 17.0159 55.6033 15.4836C55.6033 14.1109 54.4063 13.7119 52.9699 13.7119H52.0123L51.2302 17.5905ZM54.3265 8.26899C53.9275 8.25303 53.5285 8.28496 53.1295 8.36476L52.4911 11.5571H53.5125C55.2043 11.5571 56.3694 10.8548 56.3694 9.68956C56.3534 8.69995 55.5075 8.26899 54.3265 8.26899Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite6/LogoBitoproWhite6.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M104.01 20.0009C101.377 20.0009 99.7486 18.2611 99.7486 15.8988C99.7486 12.5309 102.206 9.59402 105.766 9.59402C108.575 9.59402 110.043 11.5094 110.043 13.728C110.043 17.1119 107.553 20.0009 104.01 20.0009ZM105.462 11.4456C103.467 11.4456 102.318 13.9834 102.318 15.835C102.318 17.2076 103.084 18.1653 104.345 18.1653C106.212 18.1653 107.457 15.7073 107.457 13.728C107.457 12.7065 106.979 11.4456 105.462 11.4456ZM99.8124 11.9404C98.0409 11.9404 96.9077 13.6642 96.4927 15.7871L95.6947 19.7934H93.205C93.205 19.7934 94.8329 10.7432 94.9606 9.83345H97.2907C97.1471 10.5038 96.9875 11.2061 96.8758 11.9404H96.9396C97.6419 10.5836 98.775 9.60999 100.211 9.60999C100.387 9.60999 100.563 9.62595 100.738 9.65787L100.243 11.9882C100.116 11.9563 99.9561 11.9404 99.8124 11.9404ZM87.9062 14.6698C87.4593 14.6538 86.9965 14.6219 86.5496 14.574L85.5282 19.7934H83.0703L85.7676 6.24212C86.9167 6.01866 88.0818 5.90693 89.2628 5.92289C90.5875 5.92289 92.0239 6.19423 92.9496 6.89654C93.8114 7.51903 94.2743 8.41288 94.2743 9.64191C94.2743 11.1104 93.588 12.4831 92.4389 13.3769C91.2578 14.2388 89.6139 14.6698 87.9062 14.6698ZM89.2469 7.8223C88.784 7.80634 88.3212 7.85422 87.8743 7.94999L86.9327 12.6107C87.3636 12.6906 87.7945 12.7384 88.2414 12.7384C90.3641 12.7384 91.7526 11.4456 91.7526 9.81749C91.7526 8.34903 90.6673 7.8223 89.2469 7.8223Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite6/LogoBitoproWhite6.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite6/LogoBitoproWhite6.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite6/LogoBitoproWhite6.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite6;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite6");

  $parcel$ReactRefreshHelpers$8800.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"7uH3t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite7", ()=>(0, _logoBitoproWhite7.LogoBitoproWhite7));
var _logoBitoproWhite7 = require("./LogoBitoproWhite7");

},{"./LogoBitoproWhite7":"iHPVn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iHPVn":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$cffa = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$cffa.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite7", ()=>LogoBitoproWhite7);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite7 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-7 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 99 24",
        width: "99",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M35.7752 3.69268C35.761 3.84958 35.6469 3.96368 35.49 3.97794C35.4187 3.96368 35.3474 3.93515 35.2903 3.8781C34.4774 3.02231 33.3792 2.55162 32.0386 2.40899C31.7962 2.3662 31.568 2.35194 31.3255 2.3662C28.901 2.3662 26.2055 3.55005 23.8522 5.46132L27.4035 5.48984H29.2718C30.9975 5.48984 32.1955 5.58969 32.9514 5.73232C34.0068 5.9748 34.7199 6.40269 35.2048 6.95896C35.6326 7.57227 35.7325 8.28544 35.3902 9.09844C35.1762 9.66897 34.834 10.1682 34.3918 10.5675C33.8214 11.0668 33.1796 11.4804 32.4807 11.7942C33.4791 12.2221 34.1066 12.6928 34.4489 13.3061C34.7341 13.9194 34.7341 14.6326 34.4489 15.4456C34.1636 16.2586 33.6359 16.9575 32.823 17.6278C32.0529 18.284 31.1544 18.7832 30.1846 19.097C29.229 19.425 27.9312 19.5676 26.4479 19.5676H24.1375C24.0662 19.5962 23.9806 19.6104 23.895 19.6104L21.1282 19.5819L21.1139 19.6104V19.5819L20.0586 19.5676C19.6592 19.5676 19.3455 19.2539 19.3455 18.8545C19.3455 18.4551 19.6592 18.1413 20.0586 18.1413L21.6416 18.1556L25.7633 6.87338L22.2977 6.84485H22.2834C21.0141 8.1428 19.9587 9.61191 19.1315 11.2237L21.2566 11.2522C21.6416 11.2522 21.9697 11.5517 21.9697 11.9511V11.9653C21.9554 12.3504 21.6416 12.6642 21.2566 12.6785L18.4897 12.65C18.0619 13.734 17.7909 14.8893 17.7053 16.0446H15.2237C15.3949 14.4044 15.8513 12.7926 16.5644 11.295C19.2884 5.36148 25.2784 0.897088 30.3985 0.897088C30.6837 0.882825 30.969 0.911352 31.2542 0.939878C33.1653 1.1253 34.7056 1.98109 35.7039 3.45021C35.7752 3.55005 35.818 3.59284 35.7752 3.69268ZM31.7962 9.48354C31.9388 9.05565 31.896 8.67054 31.5537 8.44233C31.2685 8.19986 30.698 8.05722 29.8708 8.05722H28.1879L27.0897 11.0525H28.6157C29.4715 11.0525 30.1988 10.9099 30.7265 10.6246C31.2257 10.3821 31.5965 9.98276 31.7962 9.48354ZM24.9076 17.0288H26.5905C28.0738 17.0288 29.1292 16.8862 29.7567 16.6009C30.3129 16.3584 30.755 15.9163 30.9975 15.3743C31.2399 14.7609 31.0973 14.276 30.6124 13.9479C30.1275 13.6199 29.172 13.4202 27.7885 13.4202H26.2625L24.9076 17.0288ZM25.1929 1.22514C22.9395 1.51041 20.5007 2.73704 18.3899 4.64831C17.577 5.37574 16.8496 6.16022 16.1936 7.01601H13.9402C16.8639 3.07936 21.171 0.41214 25.1358 0.554772C25.3212 0.554772 25.4638 0.697404 25.4638 0.868562V0.882826C25.4924 1.06825 25.364 1.21088 25.1929 1.22514ZM11.5442 6.44548C10.3034 8.05722 9.29077 9.91144 8.76307 11.8512C8.04998 14.3616 8.04998 16.8291 8.72029 18.9258C9.06258 20.0383 9.64732 21.0653 10.446 21.9211C10.5886 22.0637 10.5886 22.2919 10.446 22.4488C10.3747 22.5344 10.2748 22.5914 10.1607 22.5914C10.0752 22.6057 9.9896 22.5772 9.91829 22.5487C8.84865 21.807 7.99293 20.8085 7.43671 19.639C7.40819 19.639 7.3654 19.6532 7.33688 19.6532L4.31334 19.6104C3.91401 19.6104 3.60024 19.2966 3.60024 18.8973C3.60024 18.4979 3.91401 18.1841 4.31334 18.1841L6.8805 18.2269C6.28149 16.2158 6.31002 13.8624 7.05164 11.4519C7.53655 9.84013 8.27817 8.32822 9.26224 6.95896L8.43505 6.94469C8.03571 6.94469 7.72195 6.6309 7.72195 6.23153C7.72195 5.83216 8.03571 5.51837 8.43505 5.51837L10.2606 5.56116C10.3034 5.56116 10.3604 5.56116 10.4032 5.57542C11.8151 4.02073 13.5694 2.80836 15.5232 2.05241C15.7229 1.95257 15.9511 2.03815 16.0509 2.23783V2.25209C16.0937 2.45178 16.0652 2.65146 15.9511 2.82262C14.3252 3.59284 12.7849 4.87653 11.5442 6.44548ZM4.88382 12.2363L1.06161 12.2791C0.619491 12.2934 0.234418 11.9511 0.220156 11.5089C0.205895 11.0668 0.548181 10.6817 0.990302 10.6674C1.01883 10.6674 1.03309 10.6674 1.06161 10.6674L4.84103 10.6246C5.29742 10.6246 5.66823 10.9812 5.69675 11.4376C5.68249 11.8655 5.32594 12.2221 4.88382 12.2363ZM11.2589 12.5216C11.4015 12.0509 11.5442 11.5232 11.7296 11.0525C12.0576 10.1397 12.4854 9.25533 13.0274 8.44233H15.2237C14.639 9.42649 14.1256 10.4677 13.6977 11.5232C13.5979 11.8512 13.4553 12.1793 13.3554 12.5216H11.2589ZM12.9276 13.8909C12.5568 15.5169 12.5425 17.1999 12.8848 18.826C13.3697 20.8228 14.4108 22.2919 15.9511 23.1477C16.0937 23.2476 16.1508 23.4187 16.0937 23.5756C16.0367 23.6897 15.9368 23.761 15.8085 23.761H15.7087C13.8974 23.2761 12.3714 22.0209 11.5442 20.3379C10.6314 18.5407 10.446 16.2586 10.8738 13.8766L12.9276 13.8909ZM17.8194 17.4567C17.8907 18.3695 18.1475 19.2681 18.5896 20.0669C19.4025 21.4932 20.7859 22.349 22.5687 22.5344C22.8111 22.5772 23.0393 22.5914 23.2818 22.5772C24.5796 22.5772 25.963 22.2491 27.4035 21.5788C27.5461 21.5217 27.7172 21.5788 27.7885 21.7214C27.8741 21.8355 27.8456 21.9924 27.7315 22.078C27.7172 22.0922 27.703 22.0922 27.6887 22.1065C25.6778 23.2475 23.6668 23.8609 21.7985 23.8609C21.5133 23.8751 21.228 23.8466 20.9428 23.8181C18.832 23.5756 17.2062 22.5914 16.2078 20.8799C15.6088 19.8386 15.2951 18.6548 15.2951 17.4567H17.8194Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite7/LogoBitoproWhite7.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M68.392 17.8418C66.0245 17.8418 64.4272 16.3584 64.4272 14.1476C64.4272 11.0382 66.6806 8.49935 70.0179 8.49935C72.528 8.49935 73.9827 10.1396 73.9827 12.165C73.9827 15.4455 71.6437 17.8418 68.392 17.8418ZM69.6613 10.4962C68.0782 10.4962 67.2653 12.707 67.2938 14.0905C67.2938 15.1317 67.8358 15.8306 68.7913 15.8306C70.3031 15.8306 71.1446 13.7339 71.1446 12.1935C71.1303 11.3663 70.7595 10.4962 69.6613 10.4962ZM64.4129 10.6959H62.4162L61.7887 13.734C61.7031 14.1048 61.6461 14.4899 61.6318 14.8607C61.6318 15.3029 61.8172 15.6167 62.4162 15.6167C62.673 15.6167 62.9297 15.6167 63.1864 15.5739L62.8584 17.6421C62.5161 17.7704 61.8315 17.8418 61.2325 17.8418C59.5924 17.8418 58.808 17.0145 58.808 15.902C58.8222 15.3457 58.8793 14.7894 59.0076 14.2474L60.4766 7.03024L63.3147 6.28855L62.8298 8.7133H64.8265L64.4129 10.6959ZM56.9254 7.5865H56.9111C56.1695 7.5865 55.5848 7.08729 55.5848 6.30281C55.599 5.40423 56.3264 4.80518 57.1678 4.80518C57.9665 4.80518 58.5512 5.31865 58.5512 6.10313C58.5512 7.0445 57.8096 7.60077 56.9254 7.5865ZM56.1838 17.6421H53.4312L55.2139 8.7133H57.9665L56.1838 17.6421ZM50.7499 11.1238C51.9907 11.4946 52.7751 12.4645 52.7751 13.8053C52.7751 15.1175 52.0335 16.0874 51.0067 16.7292C49.9228 17.4281 48.2969 17.7277 46.1433 17.7277C45.0594 17.7419 43.9612 17.6706 42.8916 17.4852L45.2591 5.51834C46.3715 5.33291 47.5125 5.23307 48.6534 5.23307C49.9941 5.23307 50.9924 5.38997 51.8481 5.88918C52.7038 6.30281 53.3456 7.10155 53.3456 8.14277C53.3456 9.69746 52.1334 10.6816 50.7499 11.0667V11.1238ZM45.9579 15.6167C46.3145 15.6595 46.6568 15.6737 47.0133 15.6737C48.5108 15.6737 49.8657 15.1032 49.8657 13.734C49.8657 12.5073 48.7961 12.1507 47.5125 12.1507H46.6568L45.9579 15.6167ZM48.7247 7.28697C48.3682 7.27271 48.0116 7.30124 47.6551 7.37255L47.0846 10.2252H47.9974C49.5092 10.2252 50.5503 9.59762 50.5503 8.5564C50.536 7.67208 49.7801 7.28697 48.7247 7.28697Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite7/LogoBitoproWhite7.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M93.1228 17.7705C90.7696 17.7705 89.3149 16.2158 89.3149 14.1048C89.3149 11.0953 91.5112 8.47084 94.6917 8.47084C97.2018 8.47084 98.5139 10.1824 98.5139 12.165C98.5139 15.1888 96.289 17.7705 93.1228 17.7705ZM94.4207 10.1254C92.6379 10.1254 91.6111 12.3932 91.6111 14.0478C91.6111 15.2744 92.2956 16.1302 93.4223 16.1302C95.091 16.1302 96.2034 13.9337 96.2034 12.165C96.2034 11.2522 95.7756 10.1254 94.4207 10.1254ZM89.3719 10.5675C87.7889 10.5675 86.7763 12.108 86.4054 14.005L85.6923 17.585H83.4675C83.4675 17.585 84.9222 9.49779 85.0363 8.68479H87.1185C86.9902 9.28385 86.8476 9.91143 86.7477 10.5675H86.8048C87.4323 9.35516 88.4449 8.48511 89.7285 8.48511C89.8854 8.48511 90.0423 8.49937 90.1991 8.5279L89.757 10.6103C89.6429 10.5818 89.5003 10.5675 89.3719 10.5675ZM78.7325 13.0065C78.3332 12.9923 77.9196 12.9638 77.5202 12.921L76.6075 17.585H74.4111L76.8214 5.47557C77.8483 5.27588 78.8894 5.17604 79.9448 5.19031C81.1285 5.19031 82.4121 5.43278 83.2393 6.06036C84.0094 6.61663 84.423 7.41537 84.423 8.51364C84.423 9.82585 83.8098 11.0525 82.7829 11.8512C81.7275 12.6214 80.2585 13.0065 78.7325 13.0065ZM79.9305 6.88763C79.5169 6.87336 79.1033 6.91615 78.704 7.00173L77.8625 11.1666C78.2476 11.2379 78.6327 11.2807 79.032 11.2807C80.9289 11.2807 82.1696 10.1254 82.1696 8.67053C82.1696 7.35832 81.1998 6.88763 79.9305 6.88763Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite7/LogoBitoproWhite7.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite7/LogoBitoproWhite7.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite7/LogoBitoproWhite7.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite7;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite7");

  $parcel$ReactRefreshHelpers$cffa.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8Znww":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite8", ()=>(0, _logoBitoproWhite8.LogoBitoproWhite8));
var _logoBitoproWhite8 = require("./LogoBitoproWhite8");

},{"./LogoBitoproWhite8":"621gY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"621gY":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$fe79 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$fe79.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitoproWhite8", ()=>LogoBitoproWhite8);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitoproWhite8 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitopro-white-8 ${className}`,
        fill: "none",
        height: "32",
        viewBox: "0 0 135 32",
        width: "135",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
            className: "g",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M49.1104 4.39117C49.091 4.60474 48.9357 4.76006 48.7221 4.77948C48.6251 4.76006 48.528 4.72123 48.4503 4.64357C47.3438 3.47863 45.8489 2.83792 44.024 2.64376C43.6939 2.58551 43.3833 2.5661 43.0533 2.58551C39.7529 2.58551 36.0837 4.19701 32.8804 6.7987L37.7144 6.83753H40.2577C42.6068 6.83753 44.2375 6.97344 45.2665 7.1676C46.7031 7.49767 47.6738 8.08013 48.3339 8.83734C48.9163 9.67221 49.0522 10.643 48.5862 11.7497C48.295 12.5263 47.8291 13.2059 47.2273 13.7495C46.4507 14.429 45.5771 14.9921 44.6258 15.4192C45.9848 16.0017 46.839 16.6424 47.3049 17.4773C47.6932 18.3122 47.6932 19.2829 47.3049 20.3896C46.9166 21.4963 46.1983 22.4477 45.0917 23.3602C44.0434 24.2533 42.8203 24.9329 41.5002 25.36C40.1994 25.8066 38.4328 26.0007 36.4137 26.0007H33.2687C33.1716 26.0396 33.0551 26.059 32.9386 26.059L29.1723 26.0202L29.1529 26.059V26.0202L27.7163 26.0007C27.1727 26.0007 26.7456 25.5736 26.7456 25.03C26.7456 24.4863 27.1727 24.0592 27.7163 24.0592L29.8712 24.0786L35.4818 8.72085L30.7643 8.68202H30.7449C29.017 10.4488 27.5804 12.4486 26.4544 14.6426L29.347 14.6814C29.8712 14.6814 30.3177 15.0892 30.3177 15.6328V15.6522C30.2983 16.1764 29.8712 16.6036 29.347 16.623L25.5807 16.5842C24.9983 18.0598 24.6295 19.6324 24.513 21.2051H21.135C21.3679 18.9723 21.9892 16.7783 22.9599 14.7397C26.6679 6.66279 34.8218 0.585705 41.7914 0.585705C42.1796 0.566289 42.5679 0.605121 42.9562 0.643952C45.5577 0.896355 47.6544 2.06129 49.0133 4.0611C49.1104 4.19701 49.1687 4.25526 49.1104 4.39117ZM43.6939 12.2739C43.8881 11.6914 43.8298 11.1672 43.3639 10.8566C42.9756 10.5265 42.1991 10.3323 41.0731 10.3323H38.7822L37.2873 14.4096H39.3646C40.5295 14.4096 41.5196 14.2155 42.2379 13.8272C42.9174 13.4971 43.4221 12.9535 43.6939 12.2739ZM34.317 22.5448H36.6079C38.6269 22.5448 40.0635 22.3506 40.9177 21.9623C41.6749 21.6322 42.2767 21.0303 42.6068 20.2926C42.9368 19.4577 42.7426 18.7976 42.0826 18.351C41.4225 17.9044 40.1218 17.6326 38.2386 17.6326H36.1613L34.317 22.5448ZM34.7053 1.03226C31.6379 1.42058 28.3181 3.09032 25.4448 5.69201C24.3383 6.68221 23.3481 7.75007 22.4551 8.915H19.3877C23.3676 3.5563 29.2306 -0.0744251 34.6276 0.119731C34.88 0.119731 35.0742 0.313887 35.0742 0.546874V0.566291C35.113 0.818694 34.9383 1.01285 34.7053 1.03226ZM16.1262 8.13838C14.4372 10.3323 13.0588 12.8564 12.3405 15.4969C11.3698 18.914 11.3698 22.2729 12.2822 25.127C12.7481 26.6415 13.5441 28.0394 14.6313 29.2043C14.8254 29.3985 14.8254 29.7091 14.6313 29.9227C14.5342 30.0392 14.3983 30.1169 14.243 30.1169C14.1265 30.1363 14.0101 30.0974 13.913 30.0586C12.4569 29.049 11.2921 27.6899 10.535 26.0978C10.4961 26.0978 10.4379 26.1172 10.3991 26.1172L6.28332 26.059C5.73973 26.059 5.31262 25.6318 5.31262 25.0882C5.31262 24.5446 5.73973 24.1174 6.28332 24.1174L9.77782 24.1757C8.96244 21.4381 9.00126 18.2345 10.0108 14.9533C10.6709 12.7593 11.6804 10.7012 13.0199 8.83734L11.8939 8.81793C11.3503 8.81793 10.9232 8.39078 10.9232 7.84715C10.9232 7.30351 11.3503 6.87637 11.8939 6.87637L14.3789 6.93461C14.4372 6.93461 14.5148 6.93461 14.5731 6.95403C16.495 4.83772 18.8829 3.1874 21.5427 2.15837C21.8144 2.02246 22.1251 2.13896 22.261 2.41077V2.43019C22.3192 2.70201 22.2804 2.97383 22.1251 3.20681C19.9119 4.25526 17.8152 6.00266 16.1262 8.13838ZM7.05987 16.0211L1.85694 16.0794C1.25511 16.0988 0.730937 15.6328 0.711523 15.0309C0.692109 14.429 1.15804 13.9048 1.75987 13.8854C1.7987 13.8854 1.81811 13.8854 1.85694 13.8854L7.00163 13.8272C7.62288 13.8272 8.12764 14.3125 8.16646 14.9338C8.14705 15.5163 7.6617 16.0017 7.05987 16.0211ZM15.7379 16.4094C15.932 15.7687 16.1262 15.0503 16.3786 14.4096C16.8251 13.167 17.4075 11.9633 18.1452 10.8566H21.135C20.339 12.1962 19.6401 13.6136 19.0577 15.0503C18.9218 15.4969 18.7276 15.9435 18.5917 16.4094H15.7379ZM18.0093 18.2733C17.5046 20.4867 17.4851 22.7778 17.9511 24.9911C18.6112 27.7093 20.0284 29.7091 22.1251 30.8741C22.3192 31.01 22.3969 31.243 22.3192 31.4565C22.2416 31.6119 22.1057 31.7089 21.9309 31.7089H21.795C19.3295 31.0488 17.2522 29.3402 16.1262 27.0492C14.8837 24.6028 14.6313 21.4963 15.2137 18.2539L18.0093 18.2733ZM24.6683 23.1272C24.7654 24.3698 25.1148 25.593 25.7166 26.6803C26.8232 28.6219 28.7064 29.7868 31.1331 30.0392C31.4632 30.0974 31.7738 30.1169 32.1038 30.0974C33.8705 30.0974 35.7536 29.6509 37.7144 28.7383C37.9086 28.6607 38.1416 28.7383 38.2386 28.9325C38.3551 29.0878 38.3163 29.3014 38.161 29.4179C38.1416 29.4373 38.1221 29.4373 38.1027 29.4567C35.3654 31.01 32.628 31.8448 30.0848 31.8448C29.6965 31.8643 29.3082 31.8254 28.9199 31.7866C26.0467 31.4565 23.8335 30.1169 22.4745 27.787C21.6591 26.3696 21.232 24.7581 21.232 23.1272H24.6683Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite8/LogoBitoproWhite8.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M93.5099 23.6511C90.2872 23.6511 88.1129 21.6319 88.1129 18.6225C88.1129 14.3899 91.1803 10.9339 95.7231 10.9339C99.14 10.9339 101.12 13.1667 101.12 15.9237C101.12 20.3893 97.9363 23.6511 93.5099 23.6511ZM95.2378 13.6521C93.0828 13.6521 91.9762 16.6615 92.0151 18.5448C92.0151 19.9622 92.7528 20.9135 94.0535 20.9135C96.1114 20.9135 97.2568 18.0594 97.2568 15.9626C97.2374 14.8365 96.7326 13.6521 95.2378 13.6521ZM88.0935 13.9239H85.3755L84.5213 18.0594C84.4048 18.5643 84.3272 19.0885 84.3077 19.5933C84.3077 20.1952 84.5601 20.6223 85.3755 20.6223C85.725 20.6223 86.0744 20.6223 86.4239 20.5641L85.9773 23.3793C85.5114 23.5541 84.5795 23.6511 83.7641 23.6511C81.5315 23.6511 80.4638 22.525 80.4638 21.0106C80.4832 20.2534 80.5609 19.4962 80.7356 18.7584L82.7352 8.93411L86.5986 7.9245L85.9385 11.2252H88.6565L88.0935 13.9239ZM77.9011 9.69132H77.8817C76.8722 9.69132 76.0762 9.01177 76.0762 7.94391C76.0957 6.72073 77.0858 5.90527 78.2312 5.90527C79.3184 5.90527 80.1143 6.60423 80.1143 7.67209C80.1143 8.95352 79.1048 9.71073 77.9011 9.69132ZM76.8916 23.3793H73.1447L75.5715 11.2252H79.3184L76.8916 23.3793ZM69.4949 14.5064C71.1839 15.0112 72.2517 16.3315 72.2517 18.1565C72.2517 19.9428 71.2422 21.263 69.8444 22.1367C68.3689 23.0881 66.1557 23.4958 63.2242 23.4958C61.7488 23.5152 60.2539 23.4182 58.7979 23.1658L62.0206 6.87605C63.5348 6.62365 65.088 6.48774 66.6411 6.48774C68.466 6.48774 69.825 6.70131 70.9898 7.38086C72.1546 7.94391 73.0282 9.03119 73.0282 10.4485C73.0282 12.5648 71.3781 13.9045 69.4949 14.4287V14.5064ZM62.9718 20.6223C63.4572 20.6806 63.9231 20.7 64.4085 20.7C66.4469 20.7 68.2913 19.9233 68.2913 18.0594C68.2913 16.3897 66.8352 15.9043 65.088 15.9043H63.9231L62.9718 20.6223ZM66.7381 9.28359C66.2528 9.26417 65.7674 9.30301 65.2821 9.40008L64.5055 13.2832H65.748C67.8059 13.2832 69.2231 12.4289 69.2231 11.0116C69.2037 9.80781 68.1748 9.28359 66.7381 9.28359Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite8/LogoBitoproWhite8.jsx",
                    lineNumber: 25,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M127.174 23.5541C123.971 23.5541 121.991 21.4378 121.991 18.5643C121.991 14.4676 124.98 10.8951 129.31 10.8951C132.727 10.8951 134.513 13.225 134.513 15.9238C134.513 20.0399 131.484 23.5541 127.174 23.5541ZM128.941 13.1474C126.514 13.1474 125.116 16.2344 125.116 18.4867C125.116 20.1564 126.048 21.3213 127.582 21.3213C129.853 21.3213 131.368 18.3313 131.368 15.9238C131.368 14.6812 130.785 13.1474 128.941 13.1474ZM122.068 13.7492C119.913 13.7492 118.535 15.8461 118.03 18.4284L117.06 23.3017H114.031C114.031 23.3017 116.011 12.2931 116.166 11.1864H119.001C118.826 12.0018 118.632 12.8561 118.496 13.7492H118.574C119.428 12.0989 120.806 10.9146 122.554 10.9146C122.767 10.9146 122.981 10.934 123.194 10.9728L122.592 13.8075C122.437 13.7687 122.243 13.7492 122.068 13.7492ZM107.586 17.0693C107.042 17.0499 106.479 17.0111 105.935 16.9528L104.693 23.3017H101.703L104.984 6.81787C106.382 6.54605 107.799 6.41014 109.236 6.42956C110.847 6.42956 112.594 6.75962 113.72 7.61391C114.769 8.37112 115.332 9.4584 115.332 10.9534C115.332 12.7396 114.497 14.4094 113.099 15.4967C111.662 16.5451 109.663 17.0693 107.586 17.0693ZM109.216 8.74002C108.653 8.7206 108.09 8.77885 107.547 8.89534L106.401 14.5647C106.925 14.6618 107.45 14.72 107.993 14.72C110.575 14.72 112.264 13.1474 112.264 11.167C112.264 9.38073 110.944 8.74002 109.216 8.74002Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoBitoproWhite8/LogoBitoproWhite8.jsx",
                    lineNumber: 31,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/icons/LogoBitoproWhite8/LogoBitoproWhite8.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoBitoproWhite8/LogoBitoproWhite8.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitoproWhite8;
var _c;
$RefreshReg$(_c, "LogoBitoproWhite8");

  $parcel$ReactRefreshHelpers$fe79.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"aaF9j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite2", ()=>(0, _logoGateioWhite2.LogoGateioWhite2));
var _logoGateioWhite2 = require("./LogoGateioWhite2");

},{"./LogoGateioWhite2":"gQLPo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gQLPo":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$39bc = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$39bc.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite2", ()=>LogoGateioWhite2);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite2 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-2 ${className}`,
        fill: "none",
        height: "25",
        viewBox: "0 0 104 25",
        width: "104",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10207)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "25",
                        id: "mask0_271_10207",
                        maskUnits: "userSpaceOnUse",
                        width: "104",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.580078 0.958008H103.746V24.5845H0.580078V0.958008Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_271_10207)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M85.9886 7.97957H88.9185V5.04883H85.9886V7.97957ZM70.4157 12.8602C70.9756 11.3752 72.4092 10.3179 74.0902 10.3179C75.771 10.3179 77.2046 11.3752 77.7647 12.8602H70.4157ZM74.0902 7.59307C70.4177 7.59307 67.4395 10.5716 67.4395 14.2459C67.4395 17.9203 70.4177 20.8983 74.0902 20.8983C76.6104 20.8983 78.8028 19.4967 79.9314 17.4306L77.4739 16.238C76.791 17.396 75.5316 18.1734 74.0902 18.1734C72.269 18.1734 70.7381 16.9333 70.2939 15.2513H77.8862C77.8857 15.2525 77.8855 15.2542 77.8852 15.2557H80.6659C80.7161 14.9263 80.7421 14.5891 80.7421 14.2459C80.7421 10.5716 77.764 7.59307 74.0902 7.59307ZM81.5144 20.5437H84.4443V17.6129H81.5144V20.5437ZM85.9886 20.5437H88.9185V9.26799H85.9886V20.5437ZM97.0961 18.1734C94.9275 18.1734 93.1695 16.4149 93.1695 14.2459C93.1695 12.0764 94.9275 10.3179 97.0961 10.3179C99.2648 10.3179 101.023 12.0764 101.023 14.2459C101.023 16.4149 99.2648 18.1734 97.0961 18.1734ZM97.0949 7.59307C93.4224 7.59307 90.4442 10.5716 90.4442 14.2459C90.4442 17.9203 93.4224 20.8983 97.0949 20.8983C100.769 20.8983 103.747 17.9203 103.747 14.2459C103.747 10.5716 100.769 7.59307 97.0949 7.59307ZM35.8379 11.7936V14.8238H39.9346C39.7207 15.6897 39.2978 16.4657 38.6914 17.0855C37.7767 18.0205 36.5085 18.5357 35.12 18.5357C32.2389 18.5357 29.8946 16.1909 29.8946 13.3087C29.8946 10.4265 32.2389 8.08153 35.12 8.08153C36.6634 8.08153 38.082 8.74228 39.0655 9.88193L41.4111 7.96486C39.8559 6.14191 37.5486 5.05103 35.12 5.05103C30.5684 5.05103 26.8652 8.75551 26.8652 13.3087C26.8652 17.8619 30.5684 21.5662 35.12 21.5662C37.3301 21.5662 39.3674 20.7696 40.8568 19.2472C42.1067 17.9693 42.935 16.1868 43.0943 14.4011C43.172 13.53 43.1791 12.6649 43.1333 11.7936H35.8379ZM50.7613 18.1742C48.5927 18.1742 46.8345 16.4152 46.8345 14.2459C46.8345 12.0762 48.5927 10.3177 50.7613 10.3177C52.9302 10.3177 54.6884 12.0762 54.6884 14.2459C54.6884 16.4152 52.9302 18.1742 50.7613 18.1742ZM54.6889 8.88958C53.5881 8.08226 52.2307 7.60434 50.7613 7.60434C47.0888 7.60434 44.1116 10.5826 44.1116 14.2562C44.1116 17.9303 47.0888 20.9081 50.7613 20.9081C52.2307 20.9081 53.5881 20.4304 54.6889 19.6231V20.5437H57.4113V7.96903H54.6889V8.88958ZM63.2554 5.04907H60.5328V7.97957H58.901V10.5498H60.5328V17.2759C60.5328 17.9705 60.62 18.5548 60.793 19.0134C60.9635 19.467 61.2242 19.8221 61.5342 20.0996C61.8483 20.3812 62.2168 20.6005 62.6536 20.725C63.0976 20.85 63.5874 20.8983 64.1051 20.8983C64.6409 20.8983 65.1187 20.8427 65.5264 20.7326C65.905 20.6309 66.2678 20.4871 66.6055 20.3042V18.2332C66.0684 18.4656 65.5664 18.5496 64.9935 18.5764C64.3888 18.6048 64.0311 18.432 63.7334 18.1482C63.4215 17.8509 63.2554 17.4634 63.2554 16.8135V10.5498H66.6055V7.97957H63.2554V5.04907Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "25",
                        id: "mask1_271_10207",
                        maskUnits: "userSpaceOnUse",
                        width: "104",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.580078 0.958008H103.746V24.5845H0.580078V0.958008Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_271_10207)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M12.3901 19.2686C8.80279 19.2686 5.8947 16.36 5.8947 12.7714C5.8947 9.1831 8.80279 6.27393 12.3901 6.27393V0.958008C5.86751 0.958008 0.580078 6.24697 0.580078 12.7714C0.580078 19.2956 5.86751 24.5846 12.3901 24.5846C18.9124 24.5846 24.2 19.2956 24.2 12.7714H18.8854C18.8854 16.36 15.9773 19.2686 12.3901 19.2686Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "25",
                        id: "mask2_271_10207",
                        maskUnits: "userSpaceOnUse",
                        width: "104",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.580078 0.958008H103.746V24.5845H0.580078V0.958008Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_271_10207)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M12.3896 12.7712H18.885V6.27393H12.3896V12.7712Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10207",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "23.6265",
                        transform: "translate(0.580078 0.958008)",
                        width: "103.166"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite2/LogoGateioWhite2.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite2;
var _c;
$RefreshReg$(_c, "LogoGateioWhite2");

  $parcel$ReactRefreshHelpers$39bc.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"gYswB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite3", ()=>(0, _logoGateioWhite3.LogoGateioWhite3));
var _logoGateioWhite3 = require("./LogoGateioWhite3");

},{"./LogoGateioWhite3":"fwLjk","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fwLjk":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$9bf6 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$9bf6.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite3", ()=>LogoGateioWhite3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-3 ${className}`,
        fill: "none",
        height: "27",
        viewBox: "0 0 114 27",
        width: "114",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_9762)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "27",
                        id: "mask0_271_9762",
                        maskUnits: "userSpaceOnUse",
                        width: "114",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.0410156 0.844238H113.815V26.9001H0.0410156V0.844238Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_271_9762)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M94.2311 8.58756H97.4622V5.35547H94.2311V8.58756ZM77.0569 13.9701C77.6743 12.3324 79.2553 11.1664 81.1092 11.1664C82.9628 11.1664 84.5438 12.3324 85.1615 13.9701H77.0569ZM81.1092 8.16132C77.059 8.16132 73.7746 11.4461 73.7746 15.4983C73.7746 19.5504 77.059 22.8347 81.1092 22.8347C83.8885 22.8347 86.3064 21.2889 87.551 19.0104L84.8408 17.6952C84.0877 18.9723 82.6988 19.8296 81.1092 19.8296C79.1007 19.8296 77.4125 18.462 76.9226 16.607H85.2955C85.295 16.6083 85.2947 16.6102 85.2944 16.6118H88.361C88.4164 16.2486 88.4451 15.8767 88.4451 15.4983C88.4451 11.4461 85.1607 8.16132 81.1092 8.16132ZM89.2968 22.4436H92.5279V19.2115H89.2968V22.4436ZM94.2311 22.4436H97.4622V10.0085H94.2311V22.4436ZM106.481 19.8296C104.089 19.8296 102.15 17.8903 102.15 15.4983C102.15 13.1057 104.089 11.1664 106.481 11.1664C108.872 11.1664 110.811 13.1057 110.811 15.4983C110.811 17.8903 108.872 19.8296 106.481 19.8296ZM106.479 8.16132C102.429 8.16132 99.1448 11.4461 99.1448 15.4983C99.1448 19.5504 102.429 22.8347 106.479 22.8347C110.531 22.8347 113.815 19.5504 113.815 15.4983C113.815 11.4461 110.531 8.16132 106.479 8.16132ZM38.9236 12.7938V16.1356H43.4415C43.2056 17.0905 42.7393 17.9463 42.0705 18.6298C41.0618 19.661 39.6632 20.2291 38.1319 20.2291C34.9545 20.2291 32.3692 17.6433 32.3692 14.4647C32.3692 11.2861 34.9545 8.7 38.1319 8.7C39.834 8.7 41.3985 9.4287 42.4831 10.6855L45.0698 8.57135C43.3548 6.56095 40.8102 5.3579 38.1319 5.3579C33.1123 5.3579 29.0283 9.44329 29.0283 14.4647C29.0283 19.4861 33.1123 23.5712 38.1319 23.5712C40.5692 23.5712 42.816 22.6928 44.4586 21.0137C45.8369 19.6045 46.7505 17.6387 46.9261 15.6694C47.0118 14.7088 47.0196 13.7546 46.9691 12.7938H38.9236ZM55.3815 19.8304C52.9899 19.8304 51.0509 17.8906 51.0509 15.4983C51.0509 13.1054 52.9899 11.1661 55.3815 11.1661C57.7734 11.1661 59.7124 13.1054 59.7124 15.4983C59.7124 17.8906 57.7734 19.8304 55.3815 19.8304ZM59.713 9.59114C58.4989 8.70081 57.002 8.17375 55.3815 8.17375C51.3314 8.17375 48.0481 11.4583 48.0481 15.5096C48.0481 19.5615 51.3314 22.8455 55.3815 22.8455C57.002 22.8455 58.4989 22.3187 59.713 21.4284V22.4436H62.7153V8.57594H59.713V9.59114ZM69.1603 5.35574H66.1577V8.58756H64.3581V11.4221H66.1577V18.8398C66.1577 19.6058 66.2539 20.2502 66.4447 20.7559C66.6327 21.2562 66.9202 21.6478 67.2621 21.9538C67.6085 22.2644 68.0149 22.5063 68.4966 22.6436C68.9863 22.7814 69.5264 22.8347 70.0974 22.8347C70.6883 22.8347 71.2152 22.7733 71.6648 22.652C72.0823 22.5398 72.4825 22.3811 72.8548 22.1795V19.8956C72.2625 20.1518 71.7089 20.2445 71.0771 20.274C70.4103 20.3053 70.0158 20.1148 69.6875 19.8018C69.3435 19.4739 69.1603 19.0466 69.1603 18.3298V11.4221H72.8548V8.58756H69.1603V5.35574Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "27",
                        id: "mask1_271_9762",
                        maskUnits: "userSpaceOnUse",
                        width: "114",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.0410156 0.844238H113.815V26.9001H0.0410156V0.844238Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_271_9762)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M13.0654 21.0377C9.10922 21.0377 5.90212 17.8299 5.90212 13.8724C5.90212 9.91508 9.10922 6.70677 13.0654 6.70677V0.844238C5.87212 0.844238 0.0410156 6.67704 0.0410156 13.8724C0.0410156 21.0674 5.87212 26.9002 13.0654 26.9002C20.2583 26.9002 26.0897 21.0674 26.0897 13.8724H20.2286C20.2286 17.8299 17.0215 21.0377 13.0654 21.0377Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "27",
                        id: "mask2_271_9762",
                        maskUnits: "userSpaceOnUse",
                        width: "114",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.0410156 0.844238H113.815V26.9001H0.0410156V0.844238Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_271_9762)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M13.0654 13.8719H20.2287V6.70654H13.0654V13.8719Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_9762",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "26.0558",
                        transform: "translate(0.0410156 0.844238)",
                        width: "113.774"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite3/LogoGateioWhite3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite3;
var _c;
$RefreshReg$(_c, "LogoGateioWhite3");

  $parcel$ReactRefreshHelpers$9bf6.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"cfYay":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite4", ()=>(0, _logoGateioWhite4.LogoGateioWhite4));
var _logoGateioWhite4 = require("./LogoGateioWhite4");

},{"./LogoGateioWhite4":"bEBPw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bEBPw":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$4d72 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$4d72.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite4", ()=>LogoGateioWhite4);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite4 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-4 ${className}`,
        fill: "none",
        height: "33",
        viewBox: "0 0 139 33",
        width: "139",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_8644)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "33",
                        id: "mask0_271_8644",
                        maskUnits: "userSpaceOnUse",
                        width: "139",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.594727 0.470215H138.99V32.1647H0.594727V0.470215Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_271_8644)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M115.168 9.88954H119.099V5.95801H115.168V9.88954ZM94.2776 16.4368C95.0287 14.4448 96.9518 13.0264 99.2069 13.0264C101.462 13.0264 103.385 14.4448 104.136 16.4368H94.2776ZM99.2069 9.37106C94.2803 9.37106 90.2851 13.3667 90.2851 18.2958C90.2851 23.2248 94.2803 27.2198 99.2069 27.2198C102.588 27.2198 105.529 25.3395 107.043 22.5679L103.746 20.9681C102.83 22.5215 101.141 23.5644 99.2069 23.5644C96.7638 23.5644 94.7102 21.9008 94.1143 19.6444H104.299C104.299 19.646 104.298 19.6484 104.298 19.6503H108.028C108.095 19.2084 108.13 18.756 108.13 18.2958C108.13 13.3667 104.135 9.37106 99.2069 9.37106ZM109.166 26.7441H113.097V22.8125H109.166V26.7441ZM115.168 26.7441H119.099V11.6179H115.168V26.7441ZM130.069 23.5644C127.16 23.5644 124.801 21.2054 124.801 18.2958C124.801 15.3854 127.16 13.0264 130.069 13.0264C132.978 13.0264 135.336 15.3854 135.336 18.2958C135.336 21.2054 132.978 23.5644 130.069 23.5644ZM130.067 9.37106C125.141 9.37106 121.146 13.3667 121.146 18.2958C121.146 23.2248 125.141 27.2198 130.067 27.2198C134.996 27.2198 138.991 23.2248 138.991 18.2958C138.991 13.3667 134.996 9.37106 130.067 9.37106ZM47.8922 15.006V19.071H53.3878C53.1008 20.2326 52.5335 21.2735 51.72 22.105C50.4931 23.3593 48.7918 24.0504 46.9291 24.0504C43.0642 24.0504 39.9193 20.9049 39.9193 17.0385C39.9193 13.1721 43.0642 10.0263 46.9291 10.0263C48.9995 10.0263 50.9026 10.9127 52.2219 12.4415L55.3684 9.86982C53.2823 7.42436 50.187 5.96097 46.9291 5.96097C40.8232 5.96097 35.8555 10.9305 35.8555 17.0385C35.8555 23.1466 40.8232 28.1157 46.9291 28.1157C49.8939 28.1157 52.6269 27.0472 54.6249 25.0048C56.3015 23.2906 57.4128 20.8994 57.6265 18.5039C57.7307 17.3354 57.7402 16.1748 57.6787 15.006H47.8922ZM67.9116 23.5654C65.0025 23.5654 62.6438 21.2058 62.6438 18.2958C62.6438 15.3851 65.0025 13.0261 67.9116 13.0261C70.8211 13.0261 73.1798 15.3851 73.1798 18.2958C73.1798 21.2058 70.8211 23.5654 67.9116 23.5654ZM73.1804 11.1103C71.7036 10.0273 69.8827 9.38618 67.9116 9.38618C62.985 9.38618 58.9912 13.3815 58.9912 18.3096C58.9912 23.2383 62.985 27.2329 67.9116 27.2329C69.8827 27.2329 71.7036 26.5922 73.1804 25.5092V26.7441H76.8324V9.87541H73.1804V11.1103ZM84.6722 5.95834H81.0198V9.88954H78.8308V13.3374H81.0198V22.3604C81.0198 23.2922 81.1369 24.076 81.3689 24.6912C81.5977 25.2997 81.9474 25.7761 82.3632 26.1483C82.7845 26.5261 83.2789 26.8203 83.8649 26.9873C84.4605 27.155 85.1175 27.2198 85.8121 27.2198C86.5309 27.2198 87.1718 27.1452 87.7187 26.9975C88.2266 26.8611 88.7133 26.6681 89.1663 26.4228V23.6447C88.4458 23.9563 87.7723 24.0691 87.0039 24.1049C86.1927 24.1431 85.7128 23.9113 85.3134 23.5306C84.895 23.1318 84.6722 22.612 84.6722 21.74V13.3374H89.1663V9.88954H84.6722V5.95834Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "33",
                        id: "mask1_271_8644",
                        maskUnits: "userSpaceOnUse",
                        width: "139",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.594727 0.470215H138.99V32.1647H0.594727V0.470215Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_271_8644)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M16.4376 25.0336C11.6253 25.0336 7.7242 21.1317 7.7242 16.3177C7.7242 11.504 11.6253 7.60142 16.4376 7.60142V0.470215C7.68771 0.470215 0.594727 7.56526 0.594727 16.3177C0.594727 25.0698 7.68771 32.1648 16.4376 32.1648C25.1871 32.1648 32.2805 25.0698 32.2805 16.3177H25.151C25.151 21.1317 21.2498 25.0336 16.4376 25.0336Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "33",
                        id: "mask2_271_8644",
                        maskUnits: "userSpaceOnUse",
                        width: "139",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.594727 0.470215H138.99V32.1647H0.594727V0.470215Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_271_8644)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M16.4375 16.3175H25.1509V7.60156H16.4375V16.3175Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_8644",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "31.6945",
                        transform: "translate(0.594727 0.470215)",
                        width: "138.396"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite4/LogoGateioWhite4.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite4;
var _c;
$RefreshReg$(_c, "LogoGateioWhite4");

  $parcel$ReactRefreshHelpers$4d72.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"gxJHD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite5", ()=>(0, _logoGateioWhite5.LogoGateioWhite5));
var _logoGateioWhite5 = require("./LogoGateioWhite5");

},{"./LogoGateioWhite5":"anhz0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"anhz0":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$dc8b = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$dc8b.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite5", ()=>LogoGateioWhite5);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite5 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-5 ${className}`,
        fill: "none",
        height: "25",
        viewBox: "0 0 102 25",
        width: "102",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_8163)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "25",
                        id: "mask0_250_8163",
                        maskUnits: "userSpaceOnUse",
                        width: "102",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.237305 0.802734H101.906V24.0863H0.237305V0.802734Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_250_8163)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M84.406 7.72219H87.2933V4.83398H84.406V7.72219ZM69.0591 12.532C69.6108 11.0686 71.0236 10.0266 72.6802 10.0266C74.3366 10.0266 75.7494 11.0686 76.3014 12.532H69.0591ZM72.6802 7.3413C69.061 7.3413 66.1261 10.2766 66.1261 13.8976C66.1261 17.5186 69.061 20.4534 72.6802 20.4534C75.1639 20.4534 77.3245 19.0721 78.4366 17.036L76.0148 15.8608C75.3418 17.002 74.1007 17.7681 72.6802 17.7681C70.8855 17.7681 69.3768 16.546 68.9391 14.8884H76.4212C76.4207 14.8896 76.4204 14.8913 76.4202 14.8927H79.1605C79.21 14.5681 79.2356 14.2358 79.2356 13.8976C79.2356 10.2766 76.3007 7.3413 72.6802 7.3413ZM79.9967 20.104H82.8841V17.2157H79.9967V20.104ZM84.406 20.104H87.2933V8.99191H84.406V20.104ZM95.3523 17.7681C93.2151 17.7681 91.4827 16.0352 91.4827 13.8976C91.4827 11.7596 93.2151 10.0266 95.3523 10.0266C97.4895 10.0266 99.2219 11.7596 99.2219 13.8976C99.2219 16.0352 97.4895 17.7681 95.3523 17.7681ZM95.3511 7.3413C91.7319 7.3413 88.7969 10.2766 88.7969 13.8976C88.7969 17.5186 91.7319 20.4534 95.3511 20.4534C98.9715 20.4534 101.906 17.5186 101.906 13.8976C101.906 10.2766 98.9715 7.3413 95.3511 7.3413ZM34.9831 11.4809V14.4671H39.0203C38.8095 15.3205 38.3928 16.0851 37.7951 16.696C36.8938 17.6174 35.644 18.1251 34.2756 18.1251C31.4363 18.1251 29.126 15.8144 29.126 12.974C29.126 10.1336 31.4363 7.82267 34.2756 7.82267C35.7966 7.82267 37.1946 8.47383 38.1639 9.59694L40.4753 7.7077C38.9428 5.91121 36.669 4.83616 34.2756 4.83616C29.79 4.83616 26.1406 8.48687 26.1406 12.974C26.1406 17.4611 29.79 21.1116 34.2756 21.1116C36.4536 21.1116 38.4613 20.3266 39.9292 18.8263C41.1608 17.5669 41.9772 15.8103 42.1342 14.0505C42.2107 13.1921 42.2177 12.3395 42.1726 11.4809H34.9831ZM49.6899 17.7688C47.5528 17.7688 45.82 16.0354 45.82 13.8976C45.82 11.7594 47.5528 10.0264 49.6899 10.0264C51.8273 10.0264 53.56 11.7594 53.56 13.8976C53.56 16.0354 51.8273 17.7688 49.6899 17.7688ZM53.5605 8.61899C52.4756 7.82339 51.1379 7.35241 49.6899 7.35241C46.0707 7.35241 43.1367 10.2875 43.1367 13.9078C43.1367 17.5285 46.0707 20.4631 49.6899 20.4631C51.1379 20.4631 52.4756 19.9924 53.5605 19.1968V20.104H56.2434V7.71181H53.5605V8.61899ZM62.0027 4.83423H59.3196V7.72219H57.7114V10.2551H59.3196V16.8836C59.3196 17.5681 59.4055 18.1439 59.576 18.5958C59.744 19.0429 60.001 19.3929 60.3064 19.6663C60.616 19.9438 60.9791 20.16 61.4096 20.2827C61.8472 20.4059 62.3298 20.4534 62.84 20.4534C63.3681 20.4534 63.839 20.3986 64.2407 20.2902C64.6138 20.1899 64.9714 20.0482 65.3041 19.868V17.8271C64.7748 18.056 64.2801 18.1389 63.7156 18.1652C63.1196 18.1932 62.7671 18.0229 62.4737 17.7432C62.1664 17.4503 62.0027 17.0684 62.0027 16.4279V10.2551H65.3041V7.72219H62.0027V4.83423Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "25",
                        id: "mask1_250_8163",
                        maskUnits: "userSpaceOnUse",
                        width: "102",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.237305 0.802734H101.906V24.0863H0.237305V0.802734Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_250_8163)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M11.8759 18.8476C8.34068 18.8476 5.4748 15.9812 5.4748 12.4447C5.4748 8.90846 8.34068 6.04151 11.8759 6.04151V0.802734C5.448 0.802734 0.237305 6.01494 0.237305 12.4447C0.237305 18.8742 5.448 24.0864 11.8759 24.0864C18.3035 24.0864 23.5145 18.8742 23.5145 12.4447H18.277C18.277 15.9812 15.4111 18.8476 11.8759 18.8476Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "25",
                        id: "mask2_250_8163",
                        maskUnits: "userSpaceOnUse",
                        width: "102",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.237305 0.802734H101.906V24.0863H0.237305V0.802734Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_250_8163)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M11.876 12.4444H18.2771V6.0415H11.876V12.4444Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_8163",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "23.2836",
                        transform: "translate(0.237305 0.802734)",
                        width: "101.669"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite5/LogoGateioWhite5.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite5;
var _c;
$RefreshReg$(_c, "LogoGateioWhite5");

  $parcel$ReactRefreshHelpers$dc8b.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"kPNsQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite6", ()=>(0, _logoGateioWhite6.LogoGateioWhite6));
var _logoGateioWhite6 = require("./LogoGateioWhite6");

},{"./LogoGateioWhite6":"6yeze","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6yeze":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$d253 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$d253.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite6", ()=>LogoGateioWhite6);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite6 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-6 ${className}`,
        fill: "none",
        height: "32",
        viewBox: "0 0 136 32",
        width: "136",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7695)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "32",
                        id: "mask0_250_7695",
                        maskUnits: "userSpaceOnUse",
                        width: "136",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.753418 0.468262H135.783V31.3917H0.753418V0.468262Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_250_7695)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M112.54 9.65816H116.375V5.82227H112.54V9.65816ZM92.1573 16.0462C92.89 14.1026 94.7664 12.7187 96.9666 12.7187C99.1665 12.7187 101.043 14.1026 101.776 16.0462H92.1573ZM96.9666 9.15229C92.1598 9.15229 88.2619 13.0507 88.2619 17.8599C88.2619 22.669 92.1598 26.5669 96.9666 26.5669C100.265 26.5669 103.135 24.7323 104.612 22.0281L101.395 20.4672C100.502 21.9829 98.8532 23.0004 96.9666 23.0004C94.583 23.0004 92.5793 21.3773 91.9979 19.1757H101.935C101.934 19.1773 101.934 19.1796 101.934 19.1815H105.573C105.639 18.7504 105.673 18.309 105.673 17.8599C105.673 13.0507 101.775 9.15229 96.9666 9.15229ZM106.684 26.1027H110.519V22.2668H106.684V26.1027ZM112.54 26.1027H116.375V11.3445H112.54V26.1027ZM127.078 23.0004C124.24 23.0004 121.939 20.6988 121.939 17.8599C121.939 15.0203 124.24 12.7187 127.078 12.7187C129.916 12.7187 132.217 15.0203 132.217 17.8599C132.217 20.6988 129.916 23.0004 127.078 23.0004ZM127.076 9.15229C122.27 9.15229 118.372 13.0507 118.372 17.8599C118.372 22.669 122.27 26.5669 127.076 26.5669C131.885 26.5669 135.783 22.669 135.783 17.8599C135.783 13.0507 131.885 9.15229 127.076 9.15229ZM46.9002 14.6502V18.6163H52.2621C51.9821 19.7496 51.4286 20.7652 50.6349 21.5765C49.4378 22.8002 47.7779 23.4745 45.9606 23.4745C42.1896 23.4745 39.1212 20.4056 39.1212 16.6332C39.1212 12.8608 42.1896 9.79161 45.9606 9.79161C47.9806 9.79161 49.8374 10.6564 51.1246 12.1481L54.1945 9.63892C52.1591 7.25295 49.1392 5.82515 45.9606 5.82515C40.0031 5.82515 35.1562 10.6738 35.1562 16.6332C35.1562 22.5927 40.0031 27.441 45.9606 27.441C48.8532 27.441 51.5197 26.3984 53.4691 24.4058C55.105 22.7332 56.1892 20.4002 56.3977 18.0629C56.4993 16.9229 56.5086 15.7905 56.4487 14.6502H46.9002ZM66.4326 23.0014C63.5942 23.0014 61.293 20.6991 61.293 17.8599C61.293 15.02 63.5942 12.7184 66.4326 12.7184C69.2714 12.7184 71.5726 15.02 71.5726 17.8599C71.5726 20.6991 69.2714 23.0014 66.4326 23.0014ZM71.5733 10.8492C70.1324 9.79257 68.3558 9.16705 66.4326 9.16705C61.6258 9.16705 57.7292 13.0652 57.7292 17.8734C57.7292 22.6822 61.6258 26.5797 66.4326 26.5797C68.3558 26.5797 70.1324 25.9545 71.5733 24.8978V26.1027H75.1364V9.64437H71.5733V10.8492ZM82.7855 5.82259H79.222V9.65816H77.0862V13.0222H79.222V21.8257C79.222 22.7348 79.3362 23.4995 79.5626 24.0997C79.7858 24.6935 80.127 25.1583 80.5326 25.5214C80.9438 25.89 81.4261 26.1771 81.9979 26.3401C82.579 26.5037 83.22 26.5669 83.8976 26.5669C84.599 26.5669 85.2243 26.494 85.7579 26.35C86.2534 26.2169 86.7283 26.0286 87.1702 25.7893V23.0787C86.4673 23.3828 85.8102 23.4928 85.0604 23.5278C84.269 23.565 83.8008 23.3388 83.4111 22.9674C83.0029 22.5783 82.7855 22.0711 82.7855 21.2204V13.0222H87.1702V9.65816H82.7855V5.82259Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "32",
                        id: "mask1_250_7695",
                        maskUnits: "userSpaceOnUse",
                        width: "136",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.753418 0.468262H135.783V31.3917H0.753418V0.468262Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_250_7695)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M16.2109 24.4341C11.5157 24.4341 7.70946 20.6271 7.70946 15.9302C7.70946 11.2337 11.5157 7.426 16.2109 7.426V0.468262C7.67386 0.468262 0.753418 7.39072 0.753418 15.9302C0.753418 24.4694 7.67386 31.3919 16.2109 31.3919C24.7476 31.3919 31.6684 24.4694 31.6684 15.9302H24.7123C24.7123 20.6271 20.9061 24.4341 16.2109 24.4341Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "32",
                        id: "mask2_250_7695",
                        maskUnits: "userSpaceOnUse",
                        width: "136",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.753418 0.468262H135.783V31.3917H0.753418V0.468262Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_250_7695)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M16.2109 15.9297H24.7124V7.42578H16.2109V15.9297Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7695",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "30.9235",
                        transform: "translate(0.753418 0.468262)",
                        width: "135.029"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite6/LogoGateioWhite6.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite6;
var _c;
$RefreshReg$(_c, "LogoGateioWhite6");

  $parcel$ReactRefreshHelpers$d253.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"hXIor":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite7", ()=>(0, _logoGateioWhite7.LogoGateioWhite7));
var _logoGateioWhite7 = require("./LogoGateioWhite7");

},{"./LogoGateioWhite7":"50Ydl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"50Ydl":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$8114 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$8114.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite7", ()=>LogoGateioWhite7);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite7 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-7 ${className}`,
        fill: "none",
        height: "44",
        viewBox: "0 0 188 44",
        width: "188",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_7227)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "44",
                        id: "mask0_250_7227",
                        maskUnits: "userSpaceOnUse",
                        width: "188",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.828613 0.568359H187.257V43.263H0.828613V0.568359Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_250_7227)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M155.167 13.2565H160.461V7.96045H155.167V13.2565ZM127.025 22.0762C128.037 19.3927 130.628 17.4821 133.665 17.4821C136.703 17.4821 139.293 19.3927 140.305 22.0762H127.025ZM133.665 12.5581C127.029 12.5581 121.647 17.9405 121.647 24.5802C121.647 31.22 127.029 36.6015 133.665 36.6015C138.22 36.6015 142.181 34.0687 144.221 30.3351L139.78 28.18C138.546 30.2727 136.27 31.6775 133.665 31.6775C130.374 31.6775 127.608 29.4365 126.805 26.397H140.525C140.524 26.3992 140.524 26.4023 140.523 26.4049H145.548C145.639 25.8097 145.686 25.2003 145.686 24.5802C145.686 17.9405 140.304 12.5581 133.665 12.5581ZM147.081 35.9607H152.376V30.6646H147.081V35.9607ZM155.167 35.9607H160.461V15.5848H155.167V35.9607ZM175.239 31.6775C171.32 31.6775 168.143 28.4998 168.143 24.5802C168.143 20.6598 171.32 17.4821 175.239 17.4821C179.158 17.4821 182.334 20.6598 182.334 24.5802C182.334 28.4998 179.158 31.6775 175.239 31.6775ZM175.236 12.5581C168.6 12.5581 163.218 17.9405 163.218 24.5802C163.218 31.22 168.6 36.6015 175.236 36.6015C181.875 36.6015 187.257 31.22 187.257 24.5802C187.257 17.9405 181.875 12.5581 175.236 12.5581ZM64.5409 20.1487V25.6246H71.9439C71.5573 27.1893 70.7931 28.5915 69.6973 29.7115C68.0445 31.4012 65.7528 32.3321 63.2437 32.3321C58.0373 32.3321 53.8009 28.095 53.8009 22.8866C53.8009 17.6783 58.0373 13.4407 63.2437 13.4407C66.0326 13.4407 68.5962 14.6348 70.3734 16.6942L74.6119 13.2299C71.8017 9.93573 67.6323 7.96443 63.2437 7.96443C55.0185 7.96443 48.3267 14.6587 48.3267 22.8866C48.3267 31.1146 55.0185 37.8084 63.2437 37.8084C67.2373 37.8084 70.9189 36.369 73.6104 33.6178C75.8689 31.3086 77.3659 28.0875 77.6537 24.8606C77.794 23.2866 77.8069 21.7232 77.7241 20.1487H64.5409ZM91.5085 31.6788C87.5896 31.6788 84.4124 28.5002 84.4124 24.5802C84.4124 20.6594 87.5896 17.4816 91.5085 17.4816C95.4278 17.4816 98.605 20.6594 98.605 24.5802C98.605 28.5002 95.4278 31.6788 91.5085 31.6788ZM98.6059 14.9009C96.6166 13.4421 94.1637 12.5784 91.5085 12.5784C84.872 12.5784 79.492 17.9604 79.492 24.5988C79.492 31.2382 84.872 36.6193 91.5085 36.6193C94.1637 36.6193 96.6166 35.7561 98.6059 34.2972V35.9607H103.525V13.2375H98.6059V14.9009ZM114.086 7.96089H109.166V13.2565H106.217V17.9011H109.166V30.0557C109.166 31.3108 109.324 32.3666 109.636 33.1953C109.945 34.0151 110.416 34.6568 110.976 35.1582C111.543 35.667 112.209 36.0634 112.999 36.2884C113.801 36.5143 114.686 36.6015 115.622 36.6015C116.59 36.6015 117.453 36.501 118.19 36.3021C118.874 36.1183 119.53 35.8584 120.14 35.528V31.7856C119.169 32.2054 118.262 32.3573 117.227 32.4056C116.134 32.457 115.488 32.1448 114.95 31.6319C114.386 31.0947 114.086 30.3945 114.086 29.2199V17.9011H120.14V13.2565H114.086V7.96089Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "44",
                        id: "mask1_250_7227",
                        maskUnits: "userSpaceOnUse",
                        width: "188",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.828613 0.568359H187.257V43.263H0.828613V0.568359Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_250_7227)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M22.17 33.6569C15.6876 33.6569 10.4325 28.4007 10.4325 21.916C10.4325 15.4317 15.6876 10.1746 22.17 10.1746V0.568359C10.3834 0.568359 0.828613 10.1259 0.828613 21.916C0.828613 33.7056 10.3834 43.2632 22.17 43.2632C33.9563 43.2632 43.5115 33.7056 43.5115 21.916H33.9076C33.9076 28.4007 28.6525 33.6569 22.17 33.6569Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "44",
                        id: "mask2_250_7227",
                        maskUnits: "userSpaceOnUse",
                        width: "188",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.828613 0.568359H187.257V43.263H0.828613V0.568359Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_250_7227)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M22.1699 21.9153H33.9075V10.1743H22.1699V21.9153Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_7227",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "42.6946",
                        transform: "translate(0.828613 0.568359)",
                        width: "186.428"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite7/LogoGateioWhite7.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite7;
var _c;
$RefreshReg$(_c, "LogoGateioWhite7");

  $parcel$ReactRefreshHelpers$8114.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8D2tI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite8", ()=>(0, _logoGateioWhite8.LogoGateioWhite8));
var _logoGateioWhite8 = require("./LogoGateioWhite8");

},{"./LogoGateioWhite8":"7B5ft","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7B5ft":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$fb14 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$fb14.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoGateioWhite8", ()=>LogoGateioWhite8);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoGateioWhite8 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-gateio-white-8 ${className}`,
        fill: "none",
        height: "47",
        viewBox: "0 0 204 47",
        width: "204",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_250_6269)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "47",
                        id: "mask0_250_6269",
                        maskUnits: "userSpaceOnUse",
                        width: "204",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.759277 0H203.675V46.4703H0.759277V0Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 28,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask0_250_6269)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M168.746 13.8103H174.509V8.0459H168.746V13.8103ZM138.116 23.4099C139.218 20.4892 142.037 18.4096 145.344 18.4096C148.65 18.4096 151.469 20.4892 152.571 23.4099H138.116ZM145.344 13.0501C138.12 13.0501 132.263 18.9085 132.263 26.1355C132.263 33.3624 138.12 39.2199 145.344 39.2199C150.301 39.2199 154.613 36.463 156.833 32.3993L151.999 30.0536C150.656 32.3313 148.179 33.8604 145.344 33.8604C141.762 33.8604 138.751 31.4212 137.877 28.1129H152.81C152.809 28.1153 152.809 28.1186 152.808 28.1215H158.277C158.376 27.4737 158.427 26.8103 158.427 26.1355C158.427 18.9085 152.57 13.0501 145.344 13.0501ZM159.946 38.5223H165.709V32.7579H159.946V38.5223ZM168.746 38.5223H174.509V16.3445H168.746V38.5223ZM190.594 33.8604C186.328 33.8604 182.87 30.4017 182.87 26.1355C182.87 21.8683 186.328 18.4096 190.594 18.4096C194.859 18.4096 198.317 21.8683 198.317 26.1355C198.317 30.4017 194.859 33.8604 190.594 33.8604ZM190.591 13.0501C183.368 13.0501 177.51 18.9085 177.51 26.1355C177.51 33.3624 183.368 39.2199 190.591 39.2199C197.817 39.2199 203.675 33.3624 203.675 26.1355C203.675 18.9085 197.817 13.0501 190.591 13.0501ZM70.1062 21.312V27.2722H78.1638C77.7431 28.9753 76.9113 30.5014 75.7186 31.7206C73.9196 33.5596 71.4252 34.5729 68.6942 34.5729C63.0274 34.5729 58.4164 29.9611 58.4164 24.2921C58.4164 18.6231 63.0274 14.0108 68.6942 14.0108C71.7298 14.0108 74.5201 15.3105 76.4545 17.552L81.0678 13.7814C78.0091 10.1959 73.4709 8.05024 68.6942 8.05024C59.7417 8.05024 52.458 15.3365 52.458 24.2921C52.458 33.2477 59.7417 40.5335 68.6942 40.5335C73.0411 40.5335 77.0482 38.9668 79.9777 35.9723C82.436 33.4588 84.0654 29.9529 84.3786 26.4406C84.5314 24.7274 84.5453 23.0257 84.4552 21.312H70.1062ZM99.4587 33.8618C95.1932 33.8618 91.735 30.4021 91.735 26.1355C91.735 21.8678 95.1932 18.4091 99.4587 18.4091C103.725 18.4091 107.183 21.8678 107.183 26.1355C107.183 30.4021 103.725 33.8618 99.4587 33.8618ZM107.184 15.6002C105.019 14.0123 102.349 13.0723 99.4587 13.0723C92.2352 13.0723 86.3795 18.9302 86.3795 26.1557C86.3795 33.3822 92.2352 39.2392 99.4587 39.2392C102.349 39.2392 105.019 38.2996 107.184 36.7117V38.5223H112.538V13.7896H107.184V15.6002ZM124.033 8.04638H118.678V13.8103H115.468V18.8656H118.678V32.0951C118.678 33.4613 118.849 34.6105 119.19 35.5124C119.525 36.4047 120.038 37.1032 120.647 37.6489C121.265 38.2027 121.99 38.6342 122.849 38.8791C123.723 39.1249 124.686 39.2199 125.704 39.2199C126.758 39.2199 127.698 39.1105 128.5 38.894C129.244 38.694 129.958 38.411 130.622 38.0514V33.978C129.566 34.435 128.578 34.6003 127.452 34.6529C126.262 34.7088 125.559 34.369 124.973 33.8107C124.36 33.226 124.033 32.4639 124.033 31.1855V18.8656H130.622V13.8103H124.033V8.04638Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 35,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "47",
                        id: "mask1_250_6269",
                        maskUnits: "userSpaceOnUse",
                        width: "204",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.759277 0H203.675V46.4703H0.759277V0Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 45,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask1_250_6269)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M23.988 36.0143C16.9323 36.0143 11.2125 30.2933 11.2125 23.235C11.2125 16.1773 16.9323 10.4553 23.988 10.4553V-0.000488281C11.159 -0.000488281 0.759277 10.4022 0.759277 23.235C0.759277 36.0673 11.159 46.47 23.988 46.47C36.8166 46.47 47.2168 36.0673 47.2168 23.235H36.7636C36.7636 30.2933 31.0438 36.0143 23.988 36.0143Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 62,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 61,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("mask", {
                        className: "mask",
                        height: "47",
                        id: "mask2_250_6269",
                        maskUnits: "userSpaceOnUse",
                        width: "204",
                        x: "0",
                        y: "0",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            d: "M0.759277 0H203.675V46.4703H0.759277V0Z",
                            fill: "white"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 80,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 71,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                        className: "g",
                        mask: "url(#mask2_250_6269)",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                            className: "path-3",
                            clipRule: "evenodd",
                            d: "M23.9878 23.2348H36.7634V10.4556H23.9878V23.2348Z",
                            fill: "white",
                            fillRule: "evenodd"
                        }, void 0, false, {
                            fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 87,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_250_6269",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "46.4703",
                        transform: "translate(0.759277)",
                        width: "202.915"
                    }, void 0, false, {
                        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                        lineNumber: 100,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                    lineNumber: 99,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoGateioWhite8/LogoGateioWhite8.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoGateioWhite8;
var _c;
$RefreshReg$(_c, "LogoGateioWhite8");

  $parcel$ReactRefreshHelpers$fb14.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"duRj4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite34", ()=>(0, _logoToriiiWhite34.LogoToriiiWhite34));
var _logoToriiiWhite34 = require("./LogoToriiiWhite34");

},{"./LogoToriiiWhite34":"lAtEh","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lAtEh":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$beb9 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$beb9.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite34", ()=>LogoToriiiWhite34);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite34 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-3-4 ${className}`,
        fill: "none",
        height: "46",
        viewBox: "0 0 52 46",
        width: "52",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10847)",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M26.3977 22.3527C25.6711 22.3527 24.9517 22.3194 24.242 22.2537L24.4891 20.4114C25.1177 20.467 25.7545 20.4954 26.3977 20.4954C27.041 20.4954 27.6778 20.467 28.3065 20.4114L28.5536 22.2537C27.8438 22.3194 27.1245 22.3527 26.3977 22.3527ZM50.8798 12.0879C50.7041 11.514 50.5088 10.9489 50.2948 10.3931C50.0241 9.69019 49.9402 8.93003 50.0455 8.1842C50.0751 7.97491 50.1019 7.76475 50.1262 7.55381C50.1269 7.54823 50.1274 7.54265 50.1281 7.53706C50.2421 6.52591 49.9942 5.50784 49.4399 4.65467C49.3343 4.49216 49.2271 4.33091 49.1181 4.17081C49.0336 4.54973 48.9396 4.9252 48.8368 5.29671C48.7175 5.72628 48.5867 6.15093 48.4436 6.57068C47.9828 7.92571 47.4003 9.2251 46.7088 10.4549C46.7059 10.4601 46.703 10.4652 46.7001 10.4704C46.1636 11.4249 46.0361 12.5547 46.3504 13.6037C46.6634 14.648 46.8966 15.7269 47.0428 16.8334C47.1626 17.736 47.2247 18.6564 47.2247 19.5918V19.5968C47.2247 26.5497 43.8203 32.707 38.5881 36.4912L38.1874 34.6607L36.7643 28.1619L36.4039 26.5139C38.4541 25.5665 40.347 24.3368 42.0331 22.8749C44.6546 20.6019 45.6613 16.9743 44.5875 13.6743C44.5818 13.6569 44.5761 13.6395 44.5704 13.622C42.0949 16.7107 38.8481 19.1547 35.1225 20.662L34.7188 18.819C38.3614 17.282 41.49 14.7662 43.776 11.6011C44.1617 11.0671 44.5237 10.5146 44.8596 9.94522C45.1499 9.45442 45.4208 8.95015 45.6713 8.43499C46.2723 7.20117 46.758 5.90188 47.1149 4.54925C47.1491 4.42044 47.2032 4.18004 47.2633 3.89787C47.5019 2.77822 47.181 1.61015 46.3964 0.776917L46.3837 0.763532C46.2918 1.07873 46.1924 1.39055 46.085 1.69882C45.9617 2.05637 45.8285 2.40998 45.6863 2.7581C45.2255 3.8869 44.6683 4.9665 44.0251 5.98592C43.7547 6.41501 43.4688 6.8337 43.1686 7.24102C42.8187 7.71594 42.4489 8.17487 42.0607 8.61743C38.2436 12.9716 32.6416 15.72 26.3977 15.72C20.154 15.72 14.552 12.9716 10.7354 8.61743C10.3472 8.17487 9.97739 7.71594 9.62739 7.24102C9.32724 6.8337 9.04085 6.41501 8.77043 5.98534C8.1272 4.96601 7.57001 3.88642 7.10972 2.75753C6.96711 2.4095 6.8344 2.05637 6.71103 1.69882C6.60373 1.39055 6.50432 1.07873 6.41232 0.763532C6.40809 0.767961 6.40385 0.772489 6.39971 0.776917C5.61502 1.61015 5.29418 2.77823 5.53284 3.89778C5.59289 4.17976 5.64697 4.41996 5.68114 4.54877C6.03758 5.9013 6.52366 7.20117 7.12464 8.43499C7.37514 8.95015 7.64603 9.45442 7.93637 9.94522C8.27242 10.5146 8.63378 11.0671 9.01948 11.6011C11.3055 14.7662 14.4342 17.282 18.0767 18.819L17.6731 20.662C13.9475 19.1547 10.7012 16.7107 8.22565 13.622C8.21997 13.6395 8.2142 13.6569 8.20852 13.6744C7.13465 16.9744 8.14125 20.6021 10.7629 22.8751C12.4489 24.337 14.3418 25.5665 16.3917 26.5139L16.0313 28.1619L14.6082 34.6607L14.2074 36.4908C8.97521 32.7065 5.57133 26.5497 5.57133 19.5968V19.5929C5.57133 18.6575 5.6334 17.736 5.75321 16.8334C5.89949 15.7268 6.13276 14.6478 6.44571 13.6034C6.76001 12.5549 6.63269 11.4257 6.09677 10.4713C6.09359 10.4657 6.09042 10.4601 6.08724 10.4544C5.3958 9.22462 4.8132 7.92523 4.35196 6.5702C4.20934 6.15093 4.07807 5.72628 3.95922 5.29671C3.85635 4.9252 3.76243 4.54973 3.67793 4.17081C3.569 4.33081 3.46179 4.49206 3.35623 4.65457C2.80192 5.50783 2.55392 6.5261 2.66806 7.53725C2.66864 7.54245 2.66921 7.54765 2.66989 7.55275C2.69404 7.76369 2.72089 7.97385 2.75043 8.18315C2.85581 8.92906 2.77189 9.68933 2.50109 10.3923C2.28678 10.9484 2.09152 11.5139 1.9158 12.0879C1.18904 14.4624 0.797852 16.9841 0.797852 19.5968C0.797852 33.1883 11.3811 44.3069 24.7529 45.1553L25.0537 41.832L25.1834 40.3963C24.0521 40.3317 22.9451 40.1766 21.8694 39.9373L22.0966 38.2426L23.1817 30.155L23.4014 28.5194C24.3831 28.6427 25.3833 28.7059 26.3977 28.7059C27.4128 28.7059 28.4129 28.6427 29.3947 28.5194L29.6139 30.155L30.6995 38.2426L30.9266 39.9373C29.851 40.1761 28.7439 40.3317 27.6126 40.3963L27.7424 41.832L28.0431 45.1553C41.4149 44.3064 51.9976 33.1879 51.9976 19.5968C51.9976 16.9841 51.6065 14.4624 50.8798 12.0879Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite34/LogoToriiiWhite34.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite34/LogoToriiiWhite34.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10847",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "44.3917",
                        transform: "translate(0.797852 0.763672)",
                        width: "51.1998"
                    }, void 0, false, {
                        fileName: "src/icons/LogoToriiiWhite34/LogoToriiiWhite34.jsx",
                        lineNumber: 28,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite34/LogoToriiiWhite34.jsx",
                    lineNumber: 27,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite34/LogoToriiiWhite34.jsx",
                lineNumber: 26,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoToriiiWhite34/LogoToriiiWhite34.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite34;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite34");

  $parcel$ReactRefreshHelpers$beb9.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"2ETkg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite61", ()=>(0, _logoToriiiWhite61.LogoToriiiWhite61));
var _logoToriiiWhite61 = require("./LogoToriiiWhite61");

},{"./LogoToriiiWhite61":"gCRHk","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gCRHk":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$1ee6 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$1ee6.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite61", ()=>LogoToriiiWhite61);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite61 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-6-1 ${className}`,
        fill: "none",
        height: "46",
        viewBox: "0 0 52 46",
        width: "52",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10563)",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M26.3977 22.3942C25.6711 22.3942 24.9517 22.3609 24.242 22.2952L24.4891 20.4529C25.1177 20.5085 25.7545 20.5369 26.3977 20.5369C27.041 20.5369 27.6778 20.5085 28.3065 20.4529L28.5536 22.2952C27.8438 22.3609 27.1245 22.3942 26.3977 22.3942ZM50.8798 12.1295C50.7041 11.5555 50.5088 10.9904 50.2948 10.4346C50.0241 9.73169 49.9402 8.97153 50.0455 8.22571C50.0751 8.01641 50.1019 7.80625 50.1262 7.59532C50.1269 7.58973 50.1274 7.58415 50.1281 7.57857C50.2421 6.56742 49.9942 5.54934 49.4399 4.69617C49.3343 4.53366 49.2271 4.37241 49.1181 4.21231C49.0336 4.59124 48.9396 4.9667 48.8368 5.33821C48.7175 5.76778 48.5867 6.19243 48.4436 6.61218C47.9828 7.96721 47.4003 9.2666 46.7088 10.4964C46.7059 10.5016 46.703 10.5067 46.7001 10.5119C46.1636 11.4664 46.0361 12.5962 46.3504 13.6452C46.6634 14.6895 46.8966 15.7684 47.0428 16.8749C47.1626 17.7775 47.2247 18.6979 47.2247 19.6333V19.6383C47.2247 26.5912 43.8203 32.7485 38.5881 36.5328L38.1874 34.7022L36.7643 28.2034L36.4039 26.5554C38.4541 25.608 40.347 24.3783 42.0331 22.9164C44.6546 20.6434 45.6613 17.0159 44.5875 13.7158C44.5818 13.6984 44.5761 13.681 44.5704 13.6636C42.0949 16.7522 38.8481 19.1962 35.1225 20.7035L34.7188 18.8605C38.3614 17.3235 41.49 14.8077 43.776 11.6426C44.1617 11.1086 44.5237 10.5561 44.8596 9.98672C45.1499 9.49592 45.4208 8.99165 45.6713 8.4765C46.2723 7.24267 46.758 5.94338 47.1149 4.59075C47.1491 4.46194 47.2032 4.22155 47.2633 3.93937C47.5019 2.81973 47.181 1.65166 46.3964 0.81842L46.3837 0.805035C46.2918 1.12023 46.1923 1.43206 46.085 1.74032C45.9617 2.09788 45.8285 2.45149 45.6863 2.79961C45.2255 3.9284 44.6683 5.008 44.0251 6.02743C43.7547 6.45651 43.4688 6.8752 43.1686 7.28253C42.8187 7.75744 42.4489 8.21637 42.0607 8.65893C38.2436 13.0131 32.6416 15.7615 26.3977 15.7615C20.154 15.7615 14.552 13.0131 10.7354 8.65893C10.3472 8.21637 9.97739 7.75744 9.62739 7.28253C9.32724 6.8752 9.04085 6.45651 8.77043 6.02685C8.1272 5.00752 7.57001 3.92792 7.10972 2.79903C6.96711 2.45101 6.8344 2.09788 6.71103 1.74032C6.60373 1.43206 6.50432 1.12023 6.41232 0.805035C6.40809 0.809463 6.40385 0.813992 6.39971 0.81842C5.61502 1.65166 5.29418 2.81973 5.53284 3.93928C5.59289 4.22126 5.64697 4.46146 5.68113 4.59027C6.03758 5.9428 6.52366 7.24267 7.12464 8.4765C7.37514 8.99165 7.64603 9.49592 7.93637 9.98672C8.27242 10.5561 8.63378 11.1086 9.01948 11.6426C11.3055 14.8077 14.4342 17.3235 18.0767 18.8605L17.6731 20.7035C13.9475 19.1962 10.7012 16.7522 8.22565 13.6636C8.21997 13.681 8.2142 13.6984 8.20852 13.7159C7.13465 17.0159 8.14125 20.6436 10.7629 22.9166C12.4489 24.3785 14.3418 25.608 16.3917 26.5554L16.0313 28.2034L14.6082 34.7022L14.2074 36.5323C8.97521 32.748 5.57133 26.5912 5.57133 19.6383V19.6344C5.57133 18.699 5.6334 17.7775 5.75321 16.8749C5.89949 15.7683 6.13276 14.6893 6.44571 13.6449C6.76001 12.5964 6.63269 11.4672 6.09677 10.5128C6.09359 10.5072 6.09042 10.5016 6.08724 10.4959C5.3958 9.26612 4.8132 7.96673 4.35196 6.6117C4.20934 6.19243 4.07807 5.76778 3.95922 5.33821C3.85635 4.9667 3.76243 4.59124 3.67793 4.21231C3.569 4.37231 3.46179 4.53357 3.35623 4.69608C2.80192 5.54934 2.55392 6.56761 2.66806 7.57876C2.66864 7.58395 2.66921 7.58915 2.66989 7.59426C2.69404 7.80519 2.72089 8.01535 2.75043 8.22465C2.85581 8.97057 2.77189 9.73083 2.50109 10.4338C2.28678 10.9899 2.09152 11.5554 1.9158 12.1295C1.18904 14.5039 0.797852 17.0256 0.797852 19.6383C0.797852 33.2298 11.3811 44.3484 24.7529 45.1968L25.0537 41.8735L25.1834 40.4378C24.0521 40.3732 22.9451 40.2181 21.8694 39.9788L22.0966 38.2841L23.1817 30.1965L23.4014 28.5609C24.3831 28.6842 25.3833 28.7474 26.3977 28.7474C27.4128 28.7474 28.4129 28.6842 29.3947 28.5609L29.6139 30.1965L30.6995 38.2841L30.9266 39.9788C29.851 40.2176 28.7439 40.3732 27.6126 40.4378L27.7424 41.8735L28.0431 45.1968C41.4149 44.3479 51.9976 33.2294 51.9976 19.6383C51.9976 17.0256 51.6065 14.5039 50.8798 12.1295Z",
                    stroke: "white",
                    strokeWidth: "0.258487"
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite61/LogoToriiiWhite61.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite61/LogoToriiiWhite61.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10563",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "44.3917",
                        transform: "translate(0.797852 0.805176)",
                        width: "51.1998"
                    }, void 0, false, {
                        fileName: "src/icons/LogoToriiiWhite61/LogoToriiiWhite61.jsx",
                        lineNumber: 29,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite61/LogoToriiiWhite61.jsx",
                    lineNumber: 28,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite61/LogoToriiiWhite61.jsx",
                lineNumber: 27,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoToriiiWhite61/LogoToriiiWhite61.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite61;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite61");

  $parcel$ReactRefreshHelpers$1ee6.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"lvXu0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite65", ()=>(0, _logoToriiiWhite65.LogoToriiiWhite65));
var _logoToriiiWhite65 = require("./LogoToriiiWhite65");

},{"./LogoToriiiWhite65":"kcOrS","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kcOrS":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$7c59 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$7c59.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite65", ()=>LogoToriiiWhite65);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite65 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-6-5 ${className}`,
        fill: "none",
        height: "52",
        viewBox: "0 0 60 52",
        width: "60",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10830)",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M29.981 25.6111C29.1428 25.6111 28.313 25.5727 27.4943 25.4969L27.7792 23.3717C28.5044 23.4359 29.239 23.4686 29.981 23.4686C30.723 23.4686 31.4576 23.4359 32.1829 23.3717L32.4679 25.4969C31.649 25.5727 30.8194 25.6111 29.981 25.6111ZM58.2223 13.7702C58.0196 13.1081 57.7944 12.4562 57.5475 11.815C57.2352 11.0042 57.1384 10.1273 57.26 9.267C57.294 9.02556 57.325 8.78313 57.353 8.53981C57.3538 8.53337 57.3544 8.52693 57.3552 8.52049C57.4866 7.35407 57.2007 6.17967 56.5613 5.1955C56.4395 5.00804 56.3158 4.82202 56.1901 4.63733C56.0927 5.07445 55.9842 5.50756 55.8656 5.93612C55.728 6.43165 55.5771 6.92151 55.4121 7.40571C54.8804 8.96881 54.2085 10.4677 53.4109 11.8863C53.4074 11.8923 53.4041 11.8982 53.4008 11.9042C52.7819 13.0053 52.6348 14.3086 52.9974 15.5186C53.3585 16.7233 53.6275 17.9678 53.7961 19.2443C53.9343 20.2854 54.006 21.3472 54.006 22.4262V22.432C54.006 30.4525 50.0788 37.5553 44.0432 41.9206L43.581 39.809L41.9394 32.3123L41.5237 30.4112C43.8886 29.3183 46.0722 27.8998 48.0172 26.2134C51.0413 23.5914 52.2025 19.4069 50.9638 15.6001C50.9572 15.58 50.9507 15.5599 50.9441 15.5398C48.0885 19.1027 44.3431 21.9221 40.0454 23.6607L39.5798 21.5348C43.7817 19.7618 47.3907 16.8597 50.0277 13.2086C50.4727 12.5925 50.8902 11.9552 51.2777 11.2984C51.6126 10.7323 51.9251 10.1506 52.2141 9.5563C52.9073 8.13301 53.4676 6.63421 53.8794 5.07389C53.9188 4.9253 53.9812 4.64799 54.0505 4.32249C54.3257 3.03092 53.9555 1.68349 53.0504 0.722309L53.0358 0.706868C52.9298 1.07046 52.8151 1.43017 52.6912 1.78577C52.549 2.19823 52.3954 2.60613 52.2313 3.00771C51.6998 4.30983 51.057 5.5552 50.315 6.73117C50.0031 7.22614 49.6734 7.70912 49.327 8.17899C48.9234 8.72682 48.4968 9.25622 48.049 9.76674C43.6458 14.7895 37.1836 17.9599 29.981 17.9599C22.7785 17.9599 16.3163 14.7895 11.9137 9.76674C11.4659 9.25622 11.0393 8.72682 10.6355 8.17899C10.2893 7.70912 9.95892 7.22614 9.64698 6.7305C8.90498 5.55465 8.26223 4.30928 7.73127 3.00705C7.56675 2.60558 7.41367 2.19823 7.27135 1.78577C7.14757 1.43017 7.0329 1.07046 6.92677 0.706868C6.92189 0.711977 6.917 0.717201 6.91223 0.722309C6.00705 1.68349 5.63694 3.03092 5.91225 4.32238C5.98152 4.64766 6.04391 4.92474 6.08332 5.07333C6.4945 6.63355 7.05521 8.13301 7.74847 9.5563C8.03743 10.1506 8.34993 10.7323 8.68485 11.2984C9.0725 11.9552 9.48934 12.5925 9.93427 13.2086C12.5713 16.8597 16.1804 19.7618 20.3823 21.5348L19.9167 23.6607C15.619 21.9221 11.8742 19.1027 9.01855 15.5398C9.012 15.5599 9.00533 15.58 8.99879 15.6002C7.76002 19.407 8.92119 23.5917 11.9453 26.2137C13.8902 27.9 16.0738 29.3183 18.4385 30.4112L18.0227 32.3123L16.3811 39.809L15.9188 41.9201C9.88321 37.5547 5.95665 30.4525 5.95665 22.432V22.4275C5.95665 21.3485 6.02825 20.2854 6.16646 19.2443C6.3352 17.9677 6.60429 16.7231 6.96529 15.5183C7.32786 14.3088 7.18099 13.0062 6.56277 11.9053C6.55911 11.8988 6.55544 11.8923 6.55178 11.8858C5.75417 10.4672 5.08211 8.96826 4.55004 7.40516C4.38552 6.92151 4.2341 6.43165 4.097 5.93612C3.97833 5.50756 3.86999 5.07445 3.77252 4.63733C3.64686 4.82191 3.52319 5.00792 3.40141 5.19538C2.76199 6.17967 2.47592 7.35429 2.60758 8.52071C2.60824 8.5267 2.60891 8.5327 2.60968 8.53859C2.63755 8.78191 2.66852 9.02434 2.7026 9.26578C2.82416 10.1262 2.72736 11.0032 2.41497 11.8142C2.16775 12.4556 1.94251 13.1079 1.73981 13.7702C0.901454 16.5092 0.450195 19.4181 0.450195 22.432C0.450195 38.1106 12.6585 50.9364 28.0836 51.915L28.4305 48.0814L28.5802 46.4254C27.2751 46.3508 25.9982 46.1718 24.7573 45.8959L25.0194 43.941L26.2711 34.6114L26.5246 32.7247C27.657 32.867 28.8107 32.9398 29.981 32.9398C31.1519 32.9398 32.3056 32.867 33.4381 32.7247L33.691 34.6114L34.9433 43.941L35.2053 45.8959C33.9645 46.1713 32.6874 46.3508 31.3824 46.4254L31.5322 48.0814L31.8789 51.915C47.3041 50.9359 59.5118 38.11 59.5118 22.432C59.5118 19.4181 59.0605 16.5092 58.2223 13.7702Z",
                    stroke: "white",
                    strokeWidth: "0.298178"
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite65/LogoToriiiWhite65.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite65/LogoToriiiWhite65.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10830",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "51.2082",
                        transform: "translate(0.450195 0.707031)",
                        width: "59.0616"
                    }, void 0, false, {
                        fileName: "src/icons/LogoToriiiWhite65/LogoToriiiWhite65.jsx",
                        lineNumber: 29,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite65/LogoToriiiWhite65.jsx",
                    lineNumber: 28,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite65/LogoToriiiWhite65.jsx",
                lineNumber: 27,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoToriiiWhite65/LogoToriiiWhite65.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite65;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite65");

  $parcel$ReactRefreshHelpers$7c59.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"k5byq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite69", ()=>(0, _logoToriiiWhite69.LogoToriiiWhite69));
var _logoToriiiWhite69 = require("./LogoToriiiWhite69");

},{"./LogoToriiiWhite69":"c47EQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c47EQ":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$449d = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$449d.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite69", ()=>LogoToriiiWhite69);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite69 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-6-9 ${className}`,
        fill: "none",
        height: "58",
        viewBox: "0 0 67 58",
        width: "67",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_9672)",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M33.5097 28.0246C32.5853 28.0246 31.6701 27.9822 30.7672 27.8987L31.0815 25.5549C31.8813 25.6257 32.6914 25.6618 33.5097 25.6618C34.328 25.6618 35.1381 25.6257 35.938 25.5549L36.2523 27.8987C35.3492 27.9822 34.4342 28.0246 33.5097 28.0246ZM64.6549 14.9661C64.4313 14.2359 64.1829 13.517 63.9107 12.8099C63.5663 11.9158 63.4595 10.9487 63.5936 9.99989C63.6312 9.73363 63.6653 9.46627 63.6962 9.19793C63.697 9.19083 63.6978 9.18372 63.6986 9.17662C63.8436 7.89027 63.5282 6.5951 62.823 5.50974C62.6887 5.303 62.5524 5.09786 62.4138 4.89418C62.3063 5.37624 62.1867 5.85389 62.0558 6.32652C61.9041 6.873 61.7378 7.41323 61.5557 7.94722C60.9694 9.67104 60.2284 11.3241 59.3487 12.8886C59.3449 12.8952 59.3413 12.9017 59.3376 12.9083C58.6551 14.1226 58.4929 15.5599 58.8927 16.8943C59.291 18.2229 59.5876 19.5954 59.7736 21.0031C59.926 22.1513 60.0051 23.3223 60.0051 24.5122V24.5186C60.0051 33.3638 55.674 41.1969 49.0178 46.0111L48.5081 43.6824L46.6977 35.4148L46.2392 33.3183C48.8474 32.113 51.2555 30.5486 53.4005 28.6889C56.7355 25.7972 58.0161 21.1824 56.65 16.9842C56.6428 16.9621 56.6356 16.9399 56.6283 16.9177C53.4791 20.8469 49.3486 23.9562 44.609 25.8737L44.0954 23.5291C48.7295 21.5738 52.7095 18.3733 55.6177 14.3467C56.1084 13.6674 56.5688 12.9645 56.9962 12.2402C57.3656 11.6158 57.7102 10.9743 58.0289 10.3189C58.7934 8.7493 59.4113 7.09639 59.8654 5.37563C59.9088 5.21176 59.9776 4.90594 60.0542 4.54696C60.3577 3.12259 59.9494 1.63661 58.9512 0.576596L58.9351 0.559567C58.8182 0.960548 58.6917 1.35725 58.5551 1.74941C58.3982 2.20428 58.2288 2.65412 58.0479 3.09699C57.4617 4.533 56.7528 5.90643 55.9346 7.20331C55.5905 7.74918 55.2269 8.28182 54.845 8.80001C54.3998 9.40417 53.9293 9.98801 53.4355 10.551C48.5796 16.0903 41.4529 19.5867 33.5097 19.5867C25.5666 19.5867 18.4399 16.0903 13.5846 10.551C13.0908 9.98801 12.6203 9.40417 12.175 8.80001C11.7932 8.28182 11.4288 7.74918 11.0848 7.20258C10.2665 5.90582 9.55769 4.53239 8.97213 3.09626C8.79069 2.65351 8.62187 2.20428 8.46492 1.74941C8.32842 1.35725 8.20195 0.960548 8.08491 0.559567C8.07953 0.565201 8.07414 0.570962 8.06887 0.576596C7.07062 1.63661 6.66246 3.12259 6.96607 4.54684C7.04246 4.90557 7.11127 5.21114 7.15473 5.37501C7.60819 7.09566 8.22656 8.7493 8.9911 10.3189C9.30978 10.9743 9.6544 11.6158 10.0238 12.2402C10.4513 12.9645 10.911 13.6674 11.4017 14.3467C14.3099 18.3733 18.29 21.5738 22.9239 23.5291L22.4105 25.8737C17.6709 23.9562 13.541 20.8469 10.3918 16.9177C10.3845 16.9399 10.3772 16.9621 10.37 16.9844C9.00384 21.1825 10.2844 25.7975 13.6195 28.6891C15.7644 30.5489 18.1725 32.113 20.7803 33.3183L20.3218 35.4148L18.5114 43.6824L18.0016 46.0105C11.3453 41.1963 7.01504 33.3638 7.01504 24.5186V24.5136C7.01504 23.3236 7.094 22.1513 7.24642 21.0031C7.43251 19.5953 7.72927 18.2227 8.1274 16.894C8.52724 15.5601 8.36527 14.1236 7.68348 12.9095C7.67944 12.9023 7.6754 12.8952 7.67136 12.888C6.79174 11.3235 6.05057 9.67043 5.46379 7.9466C5.28236 7.41323 5.11537 6.873 4.96417 6.32652C4.8333 5.85389 4.71381 5.37624 4.60632 4.89418C4.46774 5.09773 4.33136 5.30288 4.19706 5.50961C3.49189 6.5951 3.1764 7.89051 3.32159 9.17686C3.32233 9.18347 3.32306 9.19009 3.32392 9.19658C3.35465 9.46492 3.38881 9.73228 3.42639 9.99854C3.56045 10.9475 3.45369 11.9147 3.10919 12.809C2.83655 13.5164 2.58815 14.2358 2.3646 14.9661C1.44004 17.9868 0.942383 21.1948 0.942383 24.5186C0.942383 41.8093 14.406 55.954 31.4172 57.0332L31.7998 52.8054L31.9648 50.9791C30.5256 50.8969 29.1173 50.6994 27.7488 50.3951L28.0379 48.2392L29.4184 37.9504L29.6979 35.8696C30.9467 36.0265 32.2191 36.1069 33.5097 36.1069C34.801 36.1069 36.0733 36.0265 37.3223 35.8696L37.6011 37.9504L38.9822 48.2392L39.2711 50.3951C37.9028 50.6988 36.4944 50.8969 35.0552 50.9791L35.2203 52.8054L35.6028 57.0332C52.614 55.9533 66.077 41.8087 66.077 24.5186C66.077 21.1948 65.5793 17.9868 64.6549 14.9661Z",
                    stroke: "white",
                    strokeWidth: "0.328838"
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite69/LogoToriiiWhite69.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite69/LogoToriiiWhite69.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_9672",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "56.4736",
                        transform: "translate(0.942383 0.55957)",
                        width: "65.1346"
                    }, void 0, false, {
                        fileName: "src/icons/LogoToriiiWhite69/LogoToriiiWhite69.jsx",
                        lineNumber: 29,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite69/LogoToriiiWhite69.jsx",
                    lineNumber: 28,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite69/LogoToriiiWhite69.jsx",
                lineNumber: 27,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoToriiiWhite69/LogoToriiiWhite69.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite69;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite69");

  $parcel$ReactRefreshHelpers$449d.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8NKo2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite315", ()=>(0, _logoToriiiWhite315.LogoToriiiWhite315));
var _logoToriiiWhite315 = require("./LogoToriiiWhite315");

},{"./LogoToriiiWhite315":"llKP5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"llKP5":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$5c85 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$5c85.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite315", ()=>LogoToriiiWhite315);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite315 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-3-15 ${className}`,
        fill: "none",
        height: "69",
        viewBox: "0 0 80 69",
        width: "80",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_9361)",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M39.615 33.4086C38.4905 33.4086 37.3774 33.357 36.2791 33.2554L36.6614 30.4044C37.6343 30.4905 38.6197 30.5345 39.615 30.5345C40.6104 30.5345 41.5958 30.4905 42.5688 30.4044L42.9511 33.2554C41.8527 33.357 40.7397 33.4086 39.615 33.4086ZM77.5002 17.5242C77.2283 16.636 76.9261 15.7615 76.5949 14.9014C76.176 13.8137 76.0462 12.6374 76.2092 11.4833C76.255 11.1594 76.2965 10.8342 76.334 10.5078C76.3351 10.4991 76.336 10.4905 76.337 10.4818C76.5133 8.91712 76.1297 7.34167 75.2719 6.02143C75.1086 5.76995 74.9427 5.52041 74.7741 5.27266C74.6434 5.85904 74.4979 6.44005 74.3387 7.01496C74.1542 7.6797 73.9518 8.33684 73.7303 8.98639C73.0172 11.0833 72.1158 13.094 71.0458 14.9971C71.0412 15.0051 71.0367 15.013 71.0322 15.0211C70.202 16.4982 70.0047 18.2464 70.4911 19.8697C70.9755 21.4858 71.3363 23.1553 71.5625 24.8676C71.7479 26.2643 71.8441 27.6887 71.8441 29.1362V29.1439C71.8441 39.9033 66.5758 49.4315 58.4791 55.2875L57.8592 52.4548L55.657 42.3981L55.0993 39.8479C58.2718 38.3818 61.2011 36.4789 63.8103 34.2166C67.867 30.6992 69.4248 25.0857 67.763 19.9791C67.7542 19.9521 67.7455 19.9251 67.7367 19.8982C63.9059 24.6777 58.8815 28.4598 53.1163 30.7922L52.4916 27.9403C58.1284 25.5619 62.9698 21.6688 66.5073 16.7708C67.1042 15.9444 67.6643 15.0894 68.1842 14.2084C68.6335 13.4489 69.0527 12.6685 69.4403 11.8714C70.3703 9.96205 71.1219 7.95144 71.6742 5.85829C71.7271 5.65896 71.8108 5.28696 71.9039 4.8503C72.273 3.11768 71.7764 1.31013 70.5622 0.0207266L70.5426 1.32077e-05C70.4004 0.487768 70.2465 0.970311 70.0804 1.44734C69.8896 2.00064 69.6835 2.54784 69.4634 3.08655C68.7504 4.83332 67.8881 6.50397 66.8927 8.0815C66.4743 8.7455 66.032 9.3934 65.5674 10.0237C65.0259 10.7586 64.4536 11.4688 63.8529 12.1537C57.9462 18.8917 49.2772 23.1447 39.615 23.1447C29.953 23.1447 21.284 18.8917 15.3781 12.1537C14.7773 11.4688 14.205 10.7586 13.6634 10.0237C13.199 9.3934 12.7558 8.74549 12.3373 8.0806C11.3419 6.50322 10.4797 4.83258 9.76742 3.08566C9.54672 2.5471 9.34137 2.00064 9.15045 1.44734C8.98441 0.970311 8.83058 0.487768 8.68821 1.32077e-05C8.68166 0.00686621 8.6751 0.0138736 8.6687 0.0207266C7.45442 1.31013 6.95792 3.11769 7.32724 4.85016C7.42017 5.28652 7.50386 5.65821 7.55673 5.85755C8.10832 7.95054 8.86051 9.96205 9.7905 11.8714C10.1781 12.6685 10.5973 13.4489 11.0466 14.2084C11.5667 15.0894 12.1258 15.9444 12.7227 16.7708C16.2603 21.6688 21.1018 25.5619 26.7385 27.9403L26.1139 30.7922C20.3487 28.4598 15.3251 24.6777 11.4943 19.8982C11.4855 19.9251 11.4766 19.9521 11.4678 19.9792C9.80599 25.0859 11.3637 30.6995 15.4205 34.2169C18.0296 36.4792 20.9588 38.3818 24.1309 39.8479L23.5732 42.3981L21.371 52.4548L20.7509 55.2868C12.6542 49.4307 7.38681 39.9033 7.38681 29.1439V29.1378C7.38681 27.6903 7.48286 26.2643 7.66827 24.8676C7.89462 23.1551 8.2556 21.4855 8.73989 19.8693C9.22625 18.2467 9.02923 16.4994 8.19991 15.0225C8.19499 15.0138 8.19008 15.0051 8.18516 14.9963C7.11518 13.0933 6.21363 11.0825 5.49986 8.98564C5.27917 8.33684 5.07604 7.6797 4.89212 7.01496C4.73293 6.44005 4.58759 5.85904 4.45684 5.27266C4.28826 5.52026 4.12237 5.7698 3.959 6.02127C3.10123 7.34167 2.71747 8.91741 2.89408 10.4821C2.89498 10.4902 2.89587 10.4982 2.89691 10.5061C2.93429 10.8325 2.97584 11.1578 3.02156 11.4816C3.18463 12.6359 3.05477 13.8124 2.63571 14.9002C2.30407 15.7607 2.00191 16.6358 1.72999 17.5242C0.605355 21.1986 0 25.1008 0 29.1439C0 50.1764 16.3772 67.382 37.0697 68.6948L37.5351 63.5521L37.7358 61.3305C35.9851 61.2306 34.2721 60.9904 32.6075 60.6202L32.9591 57.9977L34.6383 45.4824L34.9783 42.9514C36.4974 43.1422 38.0451 43.2399 39.615 43.2399C41.1858 43.2399 42.7334 43.1422 44.2526 42.9514L44.5919 45.4824L46.2718 57.9977L46.6233 60.6202C44.9588 60.9897 43.2457 61.2306 41.495 61.3305L41.6959 63.5521L42.1611 68.6948C62.8536 67.3813 79.2301 50.1756 79.2301 29.1439C79.2301 25.1008 78.6247 21.1986 77.5002 17.5242Z",
                    fill: "white"
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite315/LogoToriiiWhite315.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite315/LogoToriiiWhite315.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_9361",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "68.6948",
                        width: "79.23"
                    }, void 0, false, {
                        fileName: "src/icons/LogoToriiiWhite315/LogoToriiiWhite315.jsx",
                        lineNumber: 28,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite315/LogoToriiiWhite315.jsx",
                    lineNumber: 27,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite315/LogoToriiiWhite315.jsx",
                lineNumber: 26,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoToriiiWhite315/LogoToriiiWhite315.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite315;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite315");

  $parcel$ReactRefreshHelpers$5c85.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"90p77":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite317", ()=>(0, _logoToriiiWhite317.LogoToriiiWhite317));
var _logoToriiiWhite317 = require("./LogoToriiiWhite317");

},{"./LogoToriiiWhite317":"lCENT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lCENT":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$9b96 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$9b96.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite317", ()=>LogoToriiiWhite317);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite317 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-3-17 ${className}`,
        fill: "none",
        height: "471",
        viewBox: "0 0 543 471",
        width: "543",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path-3",
            d: "M271.545 228.925C263.842 228.925 256.217 228.572 248.694 227.876L251.312 208.347C257.977 208.936 264.727 209.238 271.545 209.238C278.363 209.238 285.113 208.936 291.779 208.347L294.397 227.876C286.873 228.572 279.249 228.925 271.545 228.925ZM531.061 120.116C529.198 114.032 527.128 108.042 524.86 102.15C521.99 94.6995 521.101 86.6416 522.218 78.7357C522.531 76.5171 522.815 74.2893 523.072 72.0534C523.079 71.9942 523.086 71.935 523.093 71.8758C524.301 61.1574 521.673 50.3655 515.797 41.3218C514.678 39.5991 513.542 37.8898 512.387 36.1927C511.491 40.2094 510.494 44.1894 509.404 48.1275C508.14 52.6811 506.754 57.1825 505.237 61.6319C500.352 75.9956 494.177 89.7694 486.848 102.805C486.816 102.861 486.785 102.915 486.755 102.97C481.068 113.088 479.716 125.064 483.048 136.183C486.366 147.254 488.838 158.69 490.387 170.419C491.657 179.987 492.316 189.744 492.316 199.659V199.712C492.316 273.414 456.228 338.683 400.765 378.797L396.519 359.393L381.433 290.504L377.613 273.035C399.345 262.992 419.411 249.957 437.284 234.46C465.072 210.366 475.744 171.913 464.36 136.932C464.3 136.748 464.24 136.563 464.18 136.378C437.939 169.118 403.522 195.026 364.029 211.003L359.75 191.467C398.363 175.175 431.526 148.507 455.759 114.956C459.847 109.295 463.684 103.438 467.245 97.4029C470.323 92.2003 473.195 86.8549 475.85 81.3941C482.22 68.3153 487.369 54.5425 491.152 40.2043C491.514 38.8388 492.088 36.2906 492.725 33.2995C495.254 21.431 491.852 9.04914 483.535 0.216624L483.401 0.0747364C482.426 3.41589 481.373 6.72133 480.234 9.989C478.927 13.7792 477.516 17.5275 476.008 21.2177C471.124 33.1832 465.217 44.6272 458.399 55.4334C455.532 59.9818 452.503 64.42 449.32 68.7378C445.611 73.7719 441.691 78.6367 437.576 83.328C397.114 129.484 337.731 158.617 271.545 158.617C205.36 158.617 145.977 129.484 105.52 83.328C101.405 78.6367 97.4851 73.7719 93.775 68.7378C90.5933 64.42 87.5575 59.9818 84.691 55.4272C77.8726 44.6221 71.9663 33.1781 67.0871 21.2116C65.5753 17.5225 64.1686 13.7792 62.8608 9.989C61.7234 6.72133 60.6697 3.41589 59.6944 0.0747364C59.6496 0.12168 59.6047 0.169681 59.5608 0.216624C51.2429 9.04914 47.8419 21.431 50.3717 33.2985C51.0083 36.2876 51.5816 38.8337 51.9437 40.1992C55.7222 54.5363 60.8747 68.3153 67.2452 81.3941C69.9005 86.8549 72.7721 92.2003 75.8498 97.4029C79.412 103.438 83.2425 109.295 87.331 114.956C111.564 148.507 144.728 175.175 183.34 191.467L179.062 211.003C139.569 195.026 105.157 169.118 78.9162 136.378C78.856 136.563 78.7948 136.748 78.7346 136.933C67.3513 171.914 78.0216 210.368 105.811 234.463C123.683 249.959 143.749 262.992 165.478 273.035L161.658 290.504L146.572 359.393L142.325 378.792C86.8618 338.678 50.7798 273.414 50.7798 199.712V199.67C50.7798 189.755 51.4377 179.987 52.7078 170.419C54.2583 158.689 56.731 147.252 60.0484 136.18C63.3801 125.066 62.0305 113.096 56.3495 102.98C56.3159 102.92 56.2822 102.861 56.2485 102.8C48.9191 89.7643 42.7434 75.9905 37.8541 61.6268C36.3423 57.1825 34.9509 52.6811 33.691 48.1275C32.6005 44.1894 31.6049 40.2094 30.7093 36.1927C29.5545 37.8888 28.4181 39.5981 27.2991 41.3207C21.4233 50.3655 18.7945 61.1594 20.0043 71.8778C20.0105 71.933 20.0166 71.9881 20.0237 72.0422C20.2798 74.2781 20.5644 76.5059 20.8775 78.7245C21.9946 86.6314 21.105 94.6904 18.2345 102.142C15.9627 108.037 13.8929 114.031 12.0302 120.116C4.3264 145.286 0.179688 172.016 0.179688 199.712C0.179688 343.786 112.364 461.645 254.109 470.638L257.297 435.41L258.672 420.192C246.68 419.508 234.946 417.862 223.543 415.327L225.952 397.362L237.454 311.631L239.783 294.294C250.189 295.601 260.791 296.271 271.545 296.271C282.305 296.271 292.906 295.601 303.313 294.294L305.637 311.631L317.144 397.362L319.552 415.327C308.15 417.857 296.415 419.508 284.423 420.192L285.799 435.41L288.986 470.638C430.731 461.64 542.91 343.781 542.91 199.712C542.91 172.016 538.764 145.286 531.061 120.116Z",
            fill: "white"
        }, void 0, false, {
            fileName: "src/icons/LogoToriiiWhite317/LogoToriiiWhite317.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoToriiiWhite317/LogoToriiiWhite317.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite317;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite317");

  $parcel$ReactRefreshHelpers$9b96.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8vnHc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite318", ()=>(0, _logoToriiiWhite318.LogoToriiiWhite318));
var _logoToriiiWhite318 = require("./LogoToriiiWhite318");

},{"./LogoToriiiWhite318":"4OHCR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4OHCR":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$740e = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$740e.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite318", ()=>LogoToriiiWhite318);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite318 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-3-18 ${className}`,
        fill: "none",
        height: "864",
        viewBox: "0 0 997 864",
        width: "997",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path-3",
            d: "M498.541 420.001C484.416 420.001 470.434 419.354 456.639 418.077L461.441 382.266C473.661 383.348 486.038 383.9 498.541 383.9C511.044 383.9 523.421 383.348 535.643 382.266L540.445 418.077C526.648 419.354 512.667 420.001 498.541 420.001ZM974.41 220.48C970.994 209.324 967.199 198.339 963.039 187.536C957.777 173.874 956.146 159.098 958.194 144.602C958.768 140.533 959.29 136.448 959.761 132.348C959.775 132.24 959.786 132.131 959.799 132.023C962.014 112.369 957.195 92.5797 946.421 75.9964C944.369 72.8376 942.285 69.7032 940.168 66.5913C938.525 73.9567 936.698 81.2547 934.698 88.476C932.38 96.8257 929.838 105.08 927.057 113.239C918.099 139.577 906.777 164.834 893.337 188.738C893.279 188.839 893.223 188.938 893.167 189.039C882.738 207.593 880.26 229.552 886.369 249.942C892.454 270.242 896.986 291.211 899.828 312.72C902.156 330.263 903.365 348.155 903.365 366.336V366.433C903.365 501.58 837.191 621.262 735.489 694.818L727.702 659.238L700.041 532.916L693.036 500.884C732.886 482.468 769.679 458.566 802.453 430.151C853.408 385.97 872.976 315.46 852.103 251.316C851.992 250.977 851.882 250.638 851.771 250.299C803.654 310.334 740.544 357.841 668.128 387.137L660.281 351.315C731.084 321.44 791.896 272.54 836.33 211.017C843.827 200.637 850.862 189.898 857.392 178.831C863.036 169.291 868.301 159.49 873.171 149.476C884.852 125.494 894.293 100.239 901.23 73.9473C901.894 71.4435 902.946 66.7708 904.115 61.2861C908.752 39.523 902.514 16.8187 887.263 0.622714L887.016 0.362538C885.23 6.48914 883.298 12.5503 881.21 18.5421C878.814 25.4921 876.225 32.3654 873.46 39.1319C864.504 61.0728 853.674 82.0575 841.171 101.873C835.915 110.213 830.359 118.351 824.523 126.269C817.722 135.5 810.534 144.42 802.988 153.022C728.795 237.657 619.905 291.079 498.541 291.079C377.178 291.079 268.289 237.657 194.105 153.022C186.559 144.42 179.371 135.5 172.568 126.269C166.733 118.351 161.167 110.213 155.911 101.861C143.408 82.0481 132.577 61.0635 123.631 39.1208C120.858 32.3561 118.279 25.4921 115.881 18.5421C113.795 12.5503 111.863 6.48914 110.075 0.362538C109.993 0.448617 109.91 0.536635 109.83 0.622714C94.5774 16.8187 88.341 39.5231 92.98 61.2843C94.1472 66.7653 95.1984 71.4341 95.8625 73.9379C102.791 100.228 112.239 125.494 123.921 149.476C128.79 159.49 134.055 169.291 139.699 178.831C146.23 189.898 153.254 200.637 160.751 211.017C205.186 272.54 265.999 321.44 336.801 351.315L328.956 387.137C256.54 357.841 193.439 310.334 145.321 250.299C145.211 250.638 145.099 250.977 144.988 251.317C124.115 315.461 143.681 385.973 194.638 430.155C227.41 458.57 264.204 482.468 304.048 500.884L297.043 532.916L269.381 659.238L261.592 694.809C159.891 621.252 93.7282 501.58 93.7282 366.433V366.357C93.7282 348.175 94.9347 330.263 97.2635 312.72C100.107 291.21 104.641 270.238 110.724 249.936C116.833 229.556 114.358 207.608 103.941 189.058C103.88 188.947 103.818 188.839 103.756 188.728C90.3163 164.825 78.9921 139.568 70.0266 113.229C67.2545 105.08 64.703 96.8257 62.3929 88.476C60.3933 81.2547 58.5677 73.9567 56.9253 66.5913C54.8079 69.7013 52.7241 72.8357 50.6721 75.9945C39.8978 92.5797 35.0775 112.372 37.2959 132.026C37.3071 132.127 37.3183 132.229 37.3314 132.328C37.8009 136.428 38.3228 140.513 38.8971 144.581C40.9453 159.08 39.3142 173.857 34.0505 187.521C29.8848 198.33 26.0895 209.322 22.6739 220.48C8.5476 266.634 0.943848 315.649 0.943848 366.433C0.943848 630.618 206.654 846.735 466.57 863.225L472.415 798.628L474.937 770.724C452.946 769.468 431.43 766.451 410.521 761.801L414.937 728.861L436.029 571.658L440.3 539.866C459.381 542.264 478.822 543.491 498.541 543.491C518.271 543.491 537.71 542.264 556.793 539.866L561.054 571.658L582.156 728.861L586.57 761.801C565.663 766.442 544.145 769.468 522.155 770.724L524.678 798.628L530.521 863.225C790.437 846.726 996.138 630.609 996.138 366.433C996.138 315.649 988.534 266.634 974.41 220.48Z",
            fill: "white"
        }, void 0, false, {
            fileName: "src/icons/LogoToriiiWhite318/LogoToriiiWhite318.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoToriiiWhite318/LogoToriiiWhite318.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite318;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite318");

  $parcel$ReactRefreshHelpers$740e.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"fJYJ7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite319", ()=>(0, _logoToriiiWhite319.LogoToriiiWhite319));
var _logoToriiiWhite319 = require("./LogoToriiiWhite319");

},{"./LogoToriiiWhite319":"fk7lS","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fk7lS":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$8103 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$8103.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite319", ()=>LogoToriiiWhite319);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite319 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-3-19 ${className}`,
        fill: "none",
        height: "940",
        viewBox: "0 0 1084 940",
        width: "1084",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path-3",
            d: "M541.602 456.75C526.229 456.75 511.01 456.045 495.995 454.656L501.221 415.678C514.522 416.855 527.994 417.456 541.602 417.456C555.211 417.456 568.683 416.855 581.985 415.678L587.212 454.656C572.195 456.045 556.978 456.75 541.602 456.75ZM1059.55 239.584C1055.84 227.441 1051.71 215.485 1047.18 203.727C1041.45 188.856 1039.68 172.774 1041.91 156.995C1042.53 152.567 1043.1 148.121 1043.61 143.658C1043.63 143.54 1043.64 143.422 1043.65 143.304C1046.06 121.912 1040.82 100.373 1029.09 82.3227C1026.86 78.8846 1024.59 75.473 1022.28 72.0858C1020.5 80.1026 1018.51 88.046 1016.33 95.9059C1013.81 104.994 1011.04 113.978 1008.01 122.859C998.264 151.526 985.941 179.017 971.312 205.034C971.249 205.144 971.188 205.252 971.127 205.362C959.776 225.557 957.079 249.459 963.728 271.651C970.351 293.746 975.284 316.57 978.377 339.981C980.912 359.076 982.227 378.55 982.227 398.339V398.445C982.227 545.543 910.201 675.809 799.506 755.871L791.03 717.143L760.922 579.651L753.297 544.785C796.672 524.741 836.719 498.725 872.391 467.797C927.853 419.709 949.151 342.963 926.431 273.146C926.311 272.778 926.191 272.409 926.071 272.04C873.698 337.384 805.007 389.092 726.187 420.98L717.646 381.99C794.711 349.472 860.9 296.247 909.264 229.284C917.424 217.986 925.082 206.297 932.189 194.252C938.332 183.868 944.063 173.2 949.362 162.301C962.077 136.197 972.352 108.709 979.904 80.0924C980.627 77.3672 981.771 72.2813 983.043 66.3115C988.091 42.6238 981.301 17.9116 964.701 0.283322L964.433 0.000136965C962.488 6.66855 960.385 13.2657 958.113 19.7874C955.505 27.352 952.687 34.8332 949.678 42.1981C939.93 66.0794 928.142 88.9198 914.533 110.487C908.812 119.565 902.765 128.423 896.413 137.041C889.01 147.088 881.186 156.797 872.973 166.16C792.219 258.28 673.699 316.426 541.602 316.426C409.507 316.426 290.988 258.28 210.243 166.16C202.03 156.797 194.206 147.088 186.801 137.041C180.451 128.423 174.392 119.565 168.671 110.475C155.063 88.9096 143.275 66.0692 133.537 42.186C130.519 34.823 127.712 27.352 125.102 19.7874C122.832 13.2657 120.728 6.66855 118.782 0.000136965C118.692 0.0938287 118.603 0.189631 118.515 0.283322C101.914 17.9116 95.1262 42.6239 100.175 66.3095C101.446 72.2753 102.59 77.357 103.313 80.0822C110.854 108.697 121.138 136.197 133.852 162.301C139.152 173.2 144.883 183.868 151.026 194.252C158.135 206.297 165.78 217.986 173.94 229.284C222.305 296.247 288.496 349.472 365.559 381.99L357.02 420.98C278.2 389.092 209.519 337.384 157.146 272.04C157.026 272.409 156.903 272.778 156.783 273.148C134.064 342.965 155.36 419.713 210.824 467.801C246.494 498.73 286.541 524.741 329.909 544.785L322.284 579.651L292.177 717.143L283.699 755.86C173.004 675.799 100.99 545.543 100.99 398.445V398.361C100.99 378.572 102.303 359.076 104.838 339.981C107.932 316.568 112.868 293.742 119.489 271.645C126.138 249.463 123.444 225.573 112.106 205.383C112.039 205.263 111.972 205.144 111.905 205.024C97.2762 179.006 84.9505 151.516 75.1921 122.848C72.1748 113.978 69.3978 104.994 66.8833 95.9059C64.7069 88.046 62.7198 80.1026 60.9323 72.0858C58.6275 75.471 56.3595 78.8825 54.126 82.3206C42.3989 100.373 37.1522 121.916 39.5669 143.308C39.5791 143.418 39.5913 143.528 39.6056 143.636C40.1166 148.098 40.6846 152.545 41.3097 156.973C43.539 172.754 41.7637 188.838 36.0345 203.711C31.5004 215.475 27.3694 227.439 23.6518 239.584C8.27619 289.819 0 343.169 0 398.445C0 685.993 223.903 921.222 506.804 939.17L513.166 868.861L515.91 838.488C491.976 837.122 468.556 833.838 445.798 828.777L450.605 792.924L473.562 621.818L478.211 587.215C498.979 589.824 520.139 591.161 541.602 591.161C563.078 591.161 584.235 589.824 605.006 587.215L609.644 621.818L632.612 792.924L637.417 828.777C614.661 833.828 591.239 837.122 567.304 838.488L570.051 868.861L576.411 939.17C859.312 921.212 1083.2 685.983 1083.2 398.445C1083.2 343.169 1074.93 289.819 1059.55 239.584Z",
            fill: "white"
        }, void 0, false, {
            fileName: "src/icons/LogoToriiiWhite319/LogoToriiiWhite319.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/LogoToriiiWhite319/LogoToriiiWhite319.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite319;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite319");

  $parcel$ReactRefreshHelpers$8103.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"7hxva":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite611", ()=>(0, _logoToriiiWhite611.LogoToriiiWhite611));
var _logoToriiiWhite611 = require("./LogoToriiiWhite611");

},{"./LogoToriiiWhite611":"bXn7i","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bXn7i":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$fca7 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$fca7.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite611", ()=>LogoToriiiWhite611);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite611 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-6-11 ${className}`,
        fill: "none",
        height: "70",
        viewBox: "0 0 80 70",
        width: "80",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_9363)",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                    className: "path-3",
                    d: "M39.615 34.1561C38.4905 34.1561 37.3774 34.1046 36.2791 34.003L36.6614 31.152C37.6343 31.2381 38.6197 31.282 39.615 31.282C40.6104 31.282 41.5958 31.2381 42.5688 31.152L42.9511 34.003C41.8527 34.1046 40.7397 34.1561 39.615 34.1561ZM77.5002 18.2718C77.2283 17.3835 76.9261 16.509 76.5949 15.649C76.176 14.5613 76.0462 13.385 76.2092 12.2308C76.255 11.9069 76.2965 11.5817 76.334 11.2553C76.3351 11.2467 76.336 11.238 76.337 11.2294C76.5133 9.66468 76.1297 8.08923 75.2719 6.76899C75.1086 6.51751 74.9427 6.26797 74.7741 6.02022C74.6434 6.6066 74.4979 7.18762 74.3387 7.76252C74.1542 8.42726 73.9518 9.0844 73.7303 9.73395C73.0172 11.8308 72.1158 13.8416 71.0458 15.7446C71.0412 15.7527 71.0367 15.7606 71.0322 15.7686C70.202 17.2457 70.0047 18.994 70.4911 20.6173C70.9755 22.2334 71.3363 23.9028 71.5625 25.6152C71.7479 27.0119 71.8441 28.4362 71.8441 29.8837V29.8915C71.8441 40.6508 66.5758 50.179 58.4791 56.0351L57.8592 53.2024L55.657 43.1456L55.0993 40.5954C58.2718 39.1293 61.2011 37.2264 63.8103 34.9642C67.867 31.4468 69.4248 25.8333 67.763 20.7266C67.7542 20.6997 67.7454 20.6727 67.7367 20.6457C63.9059 25.4252 58.8815 29.2074 53.1163 31.5398L52.4916 28.6879C58.1284 26.3094 62.9698 22.4163 66.5073 17.5184C67.1042 16.692 67.6643 15.837 68.1842 14.9559C68.6334 14.1964 69.0527 13.4161 69.4403 12.6189C70.3703 10.7096 71.1219 8.699 71.6742 6.60585C71.7271 6.40652 71.8108 6.03452 71.9039 5.59786C72.273 3.86525 71.7764 2.0577 70.5622 0.768288L70.5426 0.747575C70.4004 1.23533 70.2465 1.71787 70.0803 2.1949C69.8896 2.74821 69.6835 3.2954 69.4634 3.83411C68.7504 5.58088 67.8881 7.25153 66.8927 8.82906C66.4743 9.49305 66.032 10.141 65.5674 10.7713C65.0259 11.5062 64.4536 12.2164 63.8529 12.9012C57.9462 19.6392 49.2772 23.8923 39.615 23.8923C29.953 23.8923 21.284 19.6392 15.3781 12.9012C14.7773 12.2164 14.205 11.5062 13.6634 10.7713C13.199 10.141 12.7558 9.49305 12.3373 8.82816C11.3419 7.25078 10.4797 5.58014 9.76742 3.83322C9.54672 3.29466 9.34136 2.74821 9.15045 2.1949C8.98441 1.71787 8.83058 1.23533 8.68821 0.747575C8.68166 0.754428 8.6751 0.761435 8.6687 0.768288C7.45442 2.0577 6.95792 3.86525 7.32724 5.59772C7.42017 6.03408 7.50386 6.40578 7.55673 6.60511C8.10832 8.69811 8.86051 10.7096 9.7905 12.6189C10.1781 13.4161 10.5973 14.1964 11.0466 14.9559C11.5667 15.837 12.1258 16.692 12.7227 17.5184C16.2603 22.4163 21.1018 26.3094 26.7385 28.6879L26.1139 31.5398C20.3487 29.2074 15.3251 25.4252 11.4943 20.6457C11.4855 20.6727 11.4766 20.6997 11.4678 20.7268C9.80599 25.8334 11.3637 31.4471 15.4205 34.9645C18.0296 37.2267 20.9588 39.1293 24.1309 40.5954L23.5732 43.1456L21.371 53.2024L20.7509 56.0343C12.6542 50.1783 7.38681 40.6508 7.38681 29.8915V29.8854C7.38681 28.4379 7.48286 27.0119 7.66827 25.6152C7.89462 23.9027 8.2556 22.2331 8.73988 20.6168C9.22625 18.9943 9.02923 17.2469 8.1999 15.7701C8.19499 15.7613 8.19008 15.7527 8.18516 15.7439C7.11518 13.8408 6.21363 11.8301 5.49986 9.7332C5.27916 9.0844 5.07604 8.42726 4.89212 7.76252C4.73293 7.18762 4.58759 6.6066 4.45684 6.02022C4.28826 6.26782 4.12237 6.51736 3.959 6.76884C3.10123 8.08923 2.71747 9.66497 2.89408 11.2297C2.89498 11.2377 2.89587 11.2458 2.89691 11.2537C2.93429 11.5801 2.97584 11.9053 3.02156 12.2292C3.18463 13.3835 3.05477 14.56 2.63571 15.6478C2.30407 16.5083 2.00191 17.3834 1.72999 18.2718C0.605355 21.9462 0 25.8483 0 29.8915C0 50.9239 16.3772 68.1296 37.0697 69.4424L37.5351 64.2997L37.7358 62.0781C35.9851 61.9781 34.2721 61.738 32.6075 61.3678L32.9591 58.7453L34.6383 46.2299L34.9783 43.6989C36.4974 43.8898 38.0451 43.9875 39.615 43.9875C41.1858 43.9875 42.7334 43.8898 44.2526 43.6989L44.5919 46.2299L46.2718 58.7453L46.6233 61.3678C44.9588 61.7372 43.2457 61.9781 41.495 62.0781L41.6959 64.2997L42.1611 69.4424C62.8536 68.1288 79.23 50.9232 79.23 29.8915C79.23 25.8483 78.6247 21.9462 77.5002 18.2718Z",
                    stroke: "white",
                    strokeWidth: "0.4"
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite611/LogoToriiiWhite611.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite611/LogoToriiiWhite611.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_9363",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "68.6948",
                        transform: "translate(0 0.747559)",
                        width: "79.23"
                    }, void 0, false, {
                        fileName: "src/icons/LogoToriiiWhite611/LogoToriiiWhite611.jsx",
                        lineNumber: 29,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoToriiiWhite611/LogoToriiiWhite611.jsx",
                    lineNumber: 28,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite611/LogoToriiiWhite611.jsx",
                lineNumber: 27,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoToriiiWhite611/LogoToriiiWhite611.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite611;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite611");

  $parcel$ReactRefreshHelpers$fca7.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"cUkQ2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoWooxWhite3", ()=>(0, _logoWooxWhite3.LogoWooxWhite3));
var _logoWooxWhite3 = require("./LogoWooxWhite3");

},{"./LogoWooxWhite3":"d0Fih","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d0Fih":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f475 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f475.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoWooxWhite3", ()=>LogoWooxWhite3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoWooxWhite3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-woox-white-3 ${className}`,
        fill: "none",
        height: "30",
        viewBox: "0 0 140 30",
        width: "140",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M58.6554 0.582031C55.7732 0.582031 52.9524 1.44054 50.5608 3.05537C48.1692 4.67019 46.2887 6.95956 45.1849 9.6373C44.0811 12.315 43.7949 15.279 44.3468 18.1202C44.9191 20.9615 46.2887 23.5779 48.3328 25.6425C50.3768 27.6865 52.9728 29.0969 55.7937 29.6693C58.6145 30.2416 61.558 29.935 64.2153 28.8312C66.8726 27.7274 69.1619 25.8469 70.7563 23.4144C72.3507 21.0024 73.2092 18.1611 73.2092 15.2585C73.2092 11.3543 71.6762 7.63411 68.9371 4.8746C66.2185 2.13553 62.5187 0.582031 58.6554 0.582031ZM58.6554 23.1896C57.1019 23.1896 55.5892 22.7194 54.3015 21.8609C53.0137 20.982 52.0121 19.7555 51.4193 18.3042C50.8265 16.8529 50.663 15.279 50.9696 13.7459C51.2762 12.2128 52.0121 10.8024 53.1159 9.69863C54.2197 8.59483 55.6097 7.83852 57.1427 7.5319C58.6554 7.22529 60.2498 7.38881 61.6806 7.9816C63.1115 8.57438 64.3379 9.59642 65.1964 10.8842C66.0549 12.1924 66.5251 13.705 66.5251 15.279C66.5251 17.3844 65.7074 19.3876 64.2357 20.8797C62.7231 22.3515 60.7403 23.1896 58.6554 23.1896Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite3/LogoWooxWhite3.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M91.5038 0.582031C88.6216 0.582031 85.8008 1.44054 83.4092 3.05537C81.0176 4.67019 79.1371 6.95956 78.0333 9.6373C76.9295 12.315 76.6433 15.279 77.1952 18.1202C77.7471 20.9615 79.1371 23.5779 81.1812 25.6425C83.2252 27.6865 85.8212 29.0969 88.642 29.6693C91.4629 30.2416 94.4064 29.935 97.0637 28.8312C99.721 27.7274 102.01 25.8469 103.605 23.4144C105.199 21.0024 106.058 18.1611 106.058 15.2585C106.058 11.3543 104.525 7.63411 101.785 4.8746C99.0873 2.13553 95.3671 0.582031 91.5038 0.582031ZM91.5038 23.1896C89.9503 23.1896 88.4376 22.7194 87.1499 21.8609C85.8621 20.982 84.8605 19.7555 84.2677 18.3042C83.6749 16.8529 83.5114 15.279 83.818 13.7459C84.1246 12.2128 84.8605 10.8024 85.9643 9.69863C87.0681 8.59483 88.4581 7.83852 89.9911 7.5319C91.5038 7.22529 93.0981 7.38881 94.529 7.9816C95.9598 8.57438 97.1863 9.59642 98.0448 10.8842C98.9033 12.1924 99.3735 13.705 99.3735 15.279C99.3735 17.3844 98.5558 19.3876 97.0841 20.8797C95.5919 22.3515 93.5887 23.1896 91.5038 23.1896Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite3/LogoWooxWhite3.jsx",
                lineNumber: 24,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M42.8752 0.827148H35.7822L32.5117 11.5995H39.5025L42.8752 0.827148Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite3/LogoWooxWhite3.jsx",
                lineNumber: 30,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M26.6246 11.0884L30.1404 19.3874L31.4078 15.1561H38.3781L34.4534 28.0339C34.1468 29.0355 33.2065 29.7304 32.1436 29.7304H28.1781C27.2174 29.7304 26.318 29.1377 25.9296 28.1974L21.5962 17.5068L17.3036 28.1565C16.9561 29.0559 16.0567 29.6896 15.0551 29.6896H11.0487C9.98579 29.6896 9.04552 28.9946 8.73891 27.993L0.439941 0.827148H7.43069L12.9497 19.367L16.6086 11.0067C17.4058 8.92171 19.409 7.57261 21.5962 7.57261C23.8447 7.57261 25.8479 8.96259 26.6246 11.0884Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite3/LogoWooxWhite3.jsx",
                lineNumber: 36,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M121.49 7.42953L116.482 0.827148H107.774L117.136 13.1734L121.49 7.42953Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite3/LogoWooxWhite3.jsx",
                lineNumber: 42,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M139.028 0.847656H130.321L108.388 29.7305H117.095L139.028 0.847656Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite3/LogoWooxWhite3.jsx",
                lineNumber: 48,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M130.934 29.7305L125.926 23.1281L130.28 17.3843L139.642 29.7305H130.934Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite3/LogoWooxWhite3.jsx",
                lineNumber: 54,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoWooxWhite3/LogoWooxWhite3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoWooxWhite3;
var _c;
$RefreshReg$(_c, "LogoWooxWhite3");

  $parcel$ReactRefreshHelpers$f475.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"2P0WH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite5", ()=>(0, _logoBitmexWhite5.LogoBitmexWhite5));
var _logoBitmexWhite5 = require("./LogoBitmexWhite5");

},{"./LogoBitmexWhite5":"9zkp0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9zkp0":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$143b = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$143b.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoBitmexWhite5", ()=>LogoBitmexWhite5);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoBitmexWhite5 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-bitmex-white-5 ${className}`,
        fill: "none",
        height: "14",
        viewBox: "0 0 78 14",
        width: "78",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_271_10655)",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M3.41859 0.92627L0.444336 12.8521H3.42498L5.28429 5.39564H8.26813L9.38308 0.92627H6.39924H3.41859Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite5/LogoBitmexWhite5.jsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M15.3447 0.92627H12.3641L11.2491 5.39564L10.5048 8.37948H7.52413L6.40918 12.8521H9.38983H12.3705L14.2298 5.39564L15.3447 0.92627Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite5/LogoBitmexWhite5.jsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path-3",
                        d: "M31.4332 1.64854C31.4355 1.75916 31.4139 1.86898 31.3698 1.97044C31.3257 2.07191 31.2601 2.16263 31.1776 2.23637C31.0276 2.38387 30.8257 2.46653 30.6154 2.46653C30.405 2.46653 30.2031 2.38387 30.0531 2.23637C29.8999 2.08941 29.8107 1.88807 29.8047 1.67586C29.7987 1.46365 29.8764 1.25761 30.0211 1.10225L30.0595 1.06073C30.2094 0.913226 30.4114 0.830566 30.6217 0.830566C30.8321 0.830566 31.034 0.913226 31.184 1.06073C31.2665 1.13409 31.3317 1.2249 31.3748 1.32657C31.4179 1.42824 31.4379 1.53821 31.4332 1.64854ZM18.335 0.923345H23.2676C24.6317 0.923345 25.7019 1.31629 26.392 1.98079C26.6419 2.23247 26.8386 2.53189 26.9703 2.86121C27.102 3.19053 27.1661 3.543 27.1587 3.89761V3.93276C27.1587 5.48538 26.2003 6.28725 25.2674 6.69297C26.6827 7.12106 27.8232 7.9389 27.8232 9.56819V9.60335C27.8232 11.6479 26.1044 12.8587 23.4944 12.8587H18.335V0.923345ZM23.0375 6.24251C24.6541 6.24251 25.7818 5.50773 25.7818 4.10206V4.07009C25.7818 2.89125 24.8425 2.12452 23.127 2.12452H19.6671V6.23929L23.0375 6.24251ZM23.5136 11.6447C25.3218 11.6447 26.4463 10.8461 26.4463 9.50748V9.47551C26.4463 8.17847 25.3537 7.42772 23.274 7.42772H19.6671V11.6447L23.5136 11.6447ZM29.9572 4.04136H31.2735V12.8555H29.9572V4.04136ZM34.7493 10.0602V5.20104H32.7558V4.05095H34.7493V0.923345H36.0655V4.05095H39.6851V5.20104H36.0783V9.89085C36.0783 11.0761 36.6373 11.83 37.7044 11.8077C38.3461 11.8203 38.9844 11.7119 39.586 11.4882V12.6351C38.8932 12.9198 38.1458 13.0475 37.3977 13.0089C35.8067 12.9737 34.7621 11.8524 34.7621 10.0474L34.7493 10.0602ZM41.5923 0.923345H44.4228L47.56 5.96776L50.694 0.923345H53.5245V12.8555H50.9208V5.06686L47.5632 10.1784H47.4929L44.1704 5.13395V12.8651H41.5923V0.923345ZM55.8598 0.923345H64.8624V3.25866H58.4731V5.68024H63.7922V8.01556H58.4699V10.5202H64.9455V12.8555H55.8598V0.923345ZM69.8557 6.7856L65.8656 0.923345H68.9357L71.4403 4.79212L73.9641 0.923345H76.948L72.9642 6.75366L77.1173 12.8555H74.0504L71.3668 8.76951L68.6737 12.8619H65.6899L69.8557 6.7856Z",
                        fill: "white"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite5/LogoBitmexWhite5.jsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/LogoBitmexWhite5/LogoBitmexWhite5.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                    className: "clip-path",
                    id: "clip0_271_10655",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                        className: "rect",
                        fill: "white",
                        height: "12.9258",
                        transform: "translate(0.0791016 0.459961)",
                        width: "77.4037"
                    }, void 0, false, {
                        fileName: "src/icons/LogoBitmexWhite5/LogoBitmexWhite5.jsx",
                        lineNumber: 40,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/LogoBitmexWhite5/LogoBitmexWhite5.jsx",
                    lineNumber: 39,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/LogoBitmexWhite5/LogoBitmexWhite5.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoBitmexWhite5/LogoBitmexWhite5.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoBitmexWhite5;
var _c;
$RefreshReg$(_c, "LogoBitmexWhite5");

  $parcel$ReactRefreshHelpers$143b.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"l4dUk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite41", ()=>(0, _logoToriiiWhite41.LogoToriiiWhite41));
var _logoToriiiWhite41 = require("./LogoToriiiWhite41");

},{"./LogoToriiiWhite41":"1IdLn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1IdLn":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$42a8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$42a8.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoToriiiWhite41", ()=>LogoToriiiWhite41);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoToriiiWhite41 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-toriii-white-4-1 ${className}`,
        fill: "none",
        height: "29",
        viewBox: "0 0 136 29",
        width: "136",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M13.5787 16.0247C13.1932 16.0247 12.8117 16.007 12.4352 15.9722L12.5663 14.9954C12.8997 15.0249 13.2375 15.0399 13.5787 15.0399C13.9199 15.0399 14.2576 15.0249 14.5911 14.9954L14.7222 15.9722C14.3457 16.007 13.9642 16.0247 13.5787 16.0247ZM26.5644 10.5822C26.4712 10.2779 26.3677 9.97828 26.2541 9.6836C26.1105 9.31093 26.066 8.90788 26.1219 8.51244C26.1376 8.40147 26.1518 8.29004 26.1647 8.1782C26.1651 8.17524 26.1654 8.17228 26.1657 8.16932C26.2262 7.6332 26.0947 7.09341 25.8007 6.64106C25.7447 6.5549 25.6878 6.4694 25.63 6.38451C25.5852 6.58542 25.5353 6.78449 25.4808 6.98147C25.4175 7.20923 25.3482 7.43439 25.2722 7.65694C25.0278 8.37539 24.7188 9.06433 24.3521 9.71637C24.3505 9.71913 24.349 9.72183 24.3474 9.72459C24.0629 10.2307 23.9952 10.8297 24.1619 11.3859C24.328 11.9396 24.4517 12.5116 24.5292 13.0983C24.5927 13.5768 24.6257 14.0649 24.6257 14.5608V14.5635C24.6257 18.2499 22.8199 21.5146 20.0447 23.521L19.8322 22.5505L19.0773 19.1047L18.8862 18.231C19.9736 17.7286 20.9776 17.0766 21.872 16.3015C23.2625 15.0964 23.7965 13.173 23.2269 11.4233C23.2238 11.4141 23.2208 11.4049 23.2178 11.3956C21.9048 13.0332 20.1826 14.3291 18.2065 15.1282L17.9923 14.1511C19.9244 13.3362 21.5839 12.0023 22.7964 10.3241C23.001 10.041 23.193 9.74802 23.3712 9.44614C23.5252 9.18592 23.6689 8.91855 23.8018 8.64541C24.1205 7.99123 24.3782 7.30234 24.5675 6.58516C24.5856 6.51687 24.6143 6.38941 24.6462 6.2398C24.7727 5.64615 24.6025 5.02684 24.1863 4.58505L24.1796 4.57795C24.1308 4.74507 24.0781 4.9104 24.0212 5.07385C23.9558 5.26343 23.8851 5.45091 23.8097 5.63549C23.5653 6.23398 23.2697 6.80639 22.9286 7.3469C22.7851 7.5744 22.6335 7.79639 22.4743 8.01236C22.2887 8.26416 22.0925 8.50749 21.8866 8.74214C19.862 11.0508 16.8905 12.508 13.5787 12.508C10.2669 12.508 7.29544 11.0508 5.27108 8.74214C5.06517 8.50749 4.86901 8.26416 4.68336 8.01236C4.52415 7.79639 4.37224 7.5744 4.22881 7.34659C3.88763 6.80613 3.59208 6.23373 3.34794 5.63518C3.27229 5.45066 3.2019 5.26343 3.13646 5.07385C3.07955 4.9104 3.02682 4.74507 2.97802 4.57795C2.97578 4.5803 2.97353 4.5827 2.97133 4.58505C2.55512 5.02684 2.38494 5.64616 2.51153 6.23975C2.54338 6.38926 2.57207 6.51661 2.59019 6.58491C2.77926 7.30203 3.03708 7.99123 3.35585 8.64541C3.48872 8.91855 3.63241 9.18592 3.78641 9.44614C3.96466 9.74802 4.15633 10.041 4.36091 10.3241C5.57347 12.0023 7.23297 13.3362 9.16504 14.1511L8.95096 15.1282C6.97483 14.3291 5.25291 13.0332 3.93985 11.3956C3.93684 11.4049 3.93377 11.4141 3.93076 11.4234C3.36116 13.1731 3.89508 15.0965 5.28563 16.3016C6.17992 17.0767 7.18396 17.7286 8.27126 18.231L8.0801 19.1047L7.32525 22.5505L7.11271 23.5208C4.33743 21.5143 2.53195 18.2499 2.53195 14.5635V14.5614C2.53195 14.0654 2.56487 13.5768 2.62842 13.0983C2.70601 12.5116 2.82974 11.9395 2.99573 11.3857C3.16245 10.8298 3.09491 10.2311 2.81065 9.7251C2.80896 9.72209 2.80728 9.71913 2.80559 9.71611C2.43884 9.06408 2.12982 8.37513 1.88517 7.65668C1.80952 7.43439 1.73989 7.20923 1.67685 6.98147C1.62229 6.78449 1.57247 6.58542 1.52765 6.38451C1.46987 6.46935 1.41301 6.55484 1.35701 6.64101C1.063 7.09341 0.931455 7.63331 0.991994 8.16942C0.9923 8.17218 0.992606 8.17494 0.992963 8.17764C1.00578 8.28948 1.02002 8.40091 1.03569 8.51188C1.09158 8.90737 1.04707 9.31047 0.903432 9.68319C0.789756 9.97802 0.686188 10.2779 0.592981 10.5822C0.207495 11.8412 0 13.1782 0 14.5635C0 21.7698 5.61354 27.6649 12.7062 28.1147L12.8657 26.3527L12.9346 25.5915C12.3345 25.5573 11.7473 25.475 11.1767 25.3481L11.2973 24.4496L11.8728 20.1615L11.9894 19.2943C12.5101 19.3597 13.0406 19.3932 13.5787 19.3932C14.1171 19.3932 14.6475 19.3597 15.1683 19.2943L15.2846 20.1615L15.8604 24.4496L15.9809 25.3481C15.4104 25.4747 14.8231 25.5573 14.2231 25.5915L14.2919 26.3527L14.4514 28.1147C21.5441 27.6647 27.1574 21.7695 27.1574 14.5635C27.1574 13.1782 26.9499 11.8412 26.5644 10.5822Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M23.4025 3.81314C23.363 3.98031 23.319 4.14589 23.2707 4.30959C23.2151 4.49917 23.1541 4.6864 23.0877 4.87093C22.8731 5.46998 22.6034 6.0429 22.2846 6.58341C22.1504 6.81122 22.0075 7.03295 21.8562 7.24862C21.6798 7.50067 21.492 7.74431 21.2938 7.97896C21.2417 7.91786 21.1889 7.85742 21.1354 7.7976C20.8644 7.4947 20.8398 7.04561 21.0733 6.71291C21.1107 6.65962 21.1476 6.60587 21.1838 6.55176C21.1853 6.54957 21.1867 6.54742 21.1882 6.54523C21.4381 6.17255 21.3617 5.66936 21.0132 5.38663C19.3907 4.07025 17.4123 3.17575 15.2446 2.86979V11.4242C14.7026 11.5141 14.1457 11.561 13.5781 11.561C13.0104 11.561 12.4536 11.5141 11.9115 11.4242V2.86979C9.7441 3.17575 7.76568 4.07025 6.14318 5.38663C5.79465 5.66936 5.71824 6.1726 5.96826 6.54528C5.96969 6.54747 5.97111 6.54962 5.97259 6.55176C6.00884 6.60587 6.04564 6.65957 6.083 6.71286C6.31648 7.04566 6.29177 7.49475 6.02063 7.79765C5.96713 7.85732 5.9144 7.9177 5.86234 7.9787C5.66434 7.74431 5.47665 7.50067 5.30024 7.24862C5.14889 7.03295 5.00597 6.81091 4.87178 6.58315C4.553 6.04265 4.28334 5.46973 4.0687 4.87067C4.00224 4.68609 3.94109 4.49891 3.8857 4.30934C3.83747 4.14564 3.79341 3.98005 3.75391 3.81288C4.01913 3.57006 4.2936 3.33725 4.57623 3.1147C7.05381 1.16389 10.18 8.29144e-05 13.5781 8.29144e-05C16.9764 8.29144e-05 20.1026 1.16389 22.5802 3.11495C22.8631 3.33751 23.1373 3.57032 23.4025 3.81314Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 24,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M36.725 24.3324L36.7343 27.6379L35.2349 27.6421L35.2256 24.3366L32.3916 24.3445C32.4785 24.2563 32.5606 24.1712 32.6379 24.0891C32.7152 24.0067 32.7967 23.9348 32.8815 23.8735C32.9667 23.8123 33.059 23.7631 33.1596 23.7265C33.2595 23.69 33.3778 23.6716 33.5143 23.6713L33.6791 23.6707H33.7527L36.7174 23.6622L39.5514 23.6544C39.4644 23.7422 39.3823 23.8277 39.305 23.9098C39.2278 23.9922 39.1466 24.064 39.0614 24.1253C38.9763 24.1866 38.8836 24.2358 38.7834 24.2723C38.6832 24.3088 38.5652 24.3272 38.4287 24.3275L36.725 24.3324Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 30,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M41.4045 24.3133L41.4091 25.9036C41.4921 25.82 41.5693 25.7412 41.6412 25.6672C41.7127 25.5933 41.7894 25.5287 41.8706 25.4734C41.9518 25.4185 42.0409 25.3744 42.1372 25.3421C42.2338 25.3098 42.3482 25.2932 42.4807 25.2929L45.3714 25.2848L45.3732 25.9549L41.4091 25.9661L41.4118 26.9487L45.0864 26.9381C45.2229 26.9378 45.3412 26.9562 45.4414 26.9936C45.542 27.0308 45.6349 27.0803 45.7204 27.1419C45.8055 27.2037 45.8861 27.2747 45.9622 27.3553C46.0382 27.4359 46.1197 27.5192 46.2073 27.6052L39.9145 27.623L39.9033 23.6474L46.1961 23.6296C46.1092 23.7171 46.0271 23.8017 45.9498 23.8832C45.8722 23.9647 45.791 24.0368 45.7062 24.0996C45.6211 24.1624 45.5284 24.2128 45.4282 24.2508C45.3279 24.2892 45.2096 24.3082 45.0735 24.3088L41.4045 24.3133Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 36,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M52.6539 23.6004L52.3197 23.9363C52.1045 24.1528 51.8415 24.2615 51.5312 24.2624L49.7876 24.2672L48.9074 24.2696L48.8506 24.2699C48.7407 24.2702 48.6366 24.2953 48.5385 24.3445C48.4286 24.3904 48.3275 24.454 48.2351 24.5356C48.1424 24.6174 48.0624 24.7131 47.9945 24.8232C47.9266 24.9331 47.874 25.0545 47.8366 25.187C47.7989 25.3198 47.7805 25.4581 47.7808 25.6018C47.7814 25.7458 47.8007 25.884 47.8387 26.0162C47.8771 26.1488 47.9305 26.2698 47.9987 26.3794C48.0672 26.489 48.1478 26.5844 48.2411 26.6656C48.3341 26.7468 48.4355 26.8098 48.5454 26.8548C48.6438 26.9037 48.7483 26.9282 48.8581 26.9279L51.5388 26.9203C51.8491 26.9194 52.1126 27.0266 52.3291 27.2418L52.665 27.576L48.2749 27.5884C48.0023 27.589 47.7455 27.5377 47.5049 27.4341C47.2643 27.3309 47.0536 27.1893 46.8733 27.01C46.6928 26.8307 46.5503 26.6209 46.4456 26.3809C46.3408 26.1406 46.288 25.8843 46.2871 25.6117C46.2865 25.3391 46.3378 25.0825 46.4414 24.8417C46.5446 24.6011 46.6862 24.3904 46.8655 24.2101C47.0448 24.0299 47.2543 23.8871 47.4946 23.7824C47.7349 23.6776 47.9912 23.6248 48.2638 23.6239L52.6539 23.6004Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 42,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M54.72 23.6056L54.7263 25.866L55.0095 25.5813C55.2247 25.3649 55.4876 25.2562 55.798 25.2553L57.8881 25.2493L57.8833 23.5965L59.3827 23.5926L59.3938 27.5679L57.8944 27.5722L57.8899 25.9194L54.7209 25.9285L54.7254 27.5812L53.226 27.5854L53.2148 23.6098L54.7142 23.6056H54.72Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 48,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M61.2687 23.5929C61.4655 23.5923 61.6397 23.6155 61.7916 23.6623C61.9428 23.7094 62.0832 23.7734 62.2124 23.8543C62.3413 23.9355 62.4653 24.0288 62.5849 24.1344C62.7047 24.2401 62.8306 24.3515 62.9637 24.4683L65.1272 26.3876L65.1194 23.582L65.852 23.5799L65.8632 27.5498L64.0969 27.5549L60.6804 24.401L60.6891 27.5643L59.9565 27.5664L59.9453 23.5965L61.2687 23.5929Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 54,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M73.4629 24.7657C73.3578 24.5254 73.2156 24.3159 73.0351 24.1363C72.8546 23.9573 72.6442 23.8157 72.4036 23.7125C72.1627 23.6089 71.9061 23.5576 71.6335 23.5582L68.402 23.5673C68.1294 23.5682 67.8728 23.621 67.6329 23.7257C67.3926 23.8305 67.1822 23.9733 67.0007 24.1532C66.8196 24.3337 66.6774 24.5444 66.5739 24.785C66.4703 25.0259 66.419 25.2825 66.4199 25.5551C66.4205 25.8277 66.4734 26.084 66.5781 26.3239C66.6829 26.5642 66.8256 26.774 67.0059 26.9533C67.1861 27.1327 67.3968 27.2742 67.6377 27.3775C67.878 27.481 68.1349 27.5323 68.4075 27.5317L69.7339 27.5278L69.6524 27.3246C69.5449 27.0569 69.285 26.8815 68.9964 26.8824C68.8865 26.8827 68.7824 26.8586 68.6837 26.8097C68.5738 26.7644 68.4724 26.7013 68.3794 26.6201C68.2861 26.5389 68.2055 26.4435 68.1373 26.3342C68.0688 26.2243 68.0153 26.1036 67.977 25.9711C67.9389 25.8385 67.9196 25.7003 67.9193 25.5566C67.9187 25.4126 67.9374 25.2746 67.9749 25.1418C68.0123 25.0093 68.0651 24.8879 68.1327 24.7778C68.2007 24.6679 68.281 24.5719 68.3733 24.4904C68.466 24.4086 68.5668 24.3449 68.6767 24.299C68.7748 24.2498 68.879 24.2247 68.9889 24.2244L71.0561 24.2187C71.162 24.2184 71.2644 24.2429 71.3631 24.2918C71.4729 24.3367 71.5744 24.4001 71.6674 24.481C71.7603 24.5622 71.8409 24.6576 71.9098 24.7672C71.978 24.8771 72.0314 24.9978 72.0697 25.1304C72.1078 25.2629 72.1271 25.4008 72.1274 25.5448C72.128 25.6885 72.1093 25.8268 72.0722 25.9596C72.0344 26.0921 71.9816 26.2135 71.914 26.3233C71.8461 26.4335 71.7658 26.5292 71.6734 26.611C71.5807 26.6925 71.4796 26.7562 71.37 26.8021C71.2716 26.8516 71.1696 26.8764 71.0636 26.8767H71.0488C70.7617 26.8776 70.5036 27.0524 70.3968 27.3189L70.3135 27.5263L71.6447 27.5224C71.9173 27.5218 72.1736 27.4689 72.4139 27.3642C72.6539 27.2594 72.8637 27.1167 73.043 26.9364C73.2223 26.7562 73.3639 26.5455 73.4674 26.3046C73.5706 26.0643 73.622 25.8074 73.6214 25.5349C73.6205 25.2623 73.5676 25.006 73.4629 24.7657Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 60,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M75.6015 26.8581L79.1455 26.8481C79.2816 26.8478 79.4 26.8653 79.5005 26.9013C79.601 26.9369 79.694 26.9849 79.7791 27.0452C79.8645 27.1056 79.946 27.1754 80.0239 27.2547C80.1018 27.3338 80.1845 27.4172 80.2718 27.5038L74.1039 27.521L74.0928 23.5457L75.5922 23.5414L75.6015 26.8581Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 66,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M87.0537 24.7279C86.949 24.4876 86.8065 24.2778 86.6259 24.0985C86.4457 23.9192 86.235 23.7779 85.9944 23.6744C85.7535 23.5711 85.497 23.5195 85.2244 23.5204L81.9928 23.5295C81.7202 23.5304 81.464 23.5829 81.2237 23.688C80.9837 23.7927 80.773 23.9352 80.5916 24.1154C80.4104 24.2959 80.2682 24.5066 80.1647 24.7469C80.0612 24.9881 80.0098 25.2444 80.0108 25.5173C80.0114 25.7899 80.0642 26.0462 80.1689 26.2862C80.2737 26.5264 80.4165 26.7362 80.597 26.9156C80.7769 27.0949 80.9876 27.2364 81.2285 27.3397C81.4691 27.4432 81.7257 27.4945 81.9983 27.4936L83.3256 27.49L83.2444 27.2878C83.1366 27.0194 82.8761 26.8437 82.5872 26.8446C82.4773 26.8449 82.3732 26.8208 82.2745 26.7716C82.1646 26.7266 82.0632 26.6635 81.9702 26.5823C81.8772 26.5011 81.7963 26.4057 81.7281 26.2961C81.6596 26.1865 81.6061 26.0655 81.5681 25.933C81.5298 25.8007 81.5104 25.6625 81.5101 25.5185C81.5095 25.3748 81.5283 25.2366 81.5657 25.104C81.6031 24.9712 81.6559 24.8499 81.7236 24.74C81.7915 24.6301 81.8718 24.5341 81.9642 24.4523C82.0568 24.3708 82.158 24.3071 82.2675 24.2612C82.3659 24.212 82.4698 24.1869 82.5797 24.1866L84.6469 24.1809C84.7528 24.1806 84.8552 24.2051 84.9539 24.2537C85.0638 24.2989 85.1652 24.362 85.2585 24.4432C85.3511 24.5244 85.4321 24.6198 85.5006 24.7294C85.5688 24.839 85.6222 24.9597 85.6606 25.0923C85.6986 25.2248 85.7182 25.363 85.7185 25.5067C85.7188 25.6507 85.7001 25.789 85.663 25.9215C85.6252 26.054 85.5727 26.1754 85.5048 26.2856C85.4372 26.3957 85.3566 26.4914 85.2642 26.5729C85.1718 26.6547 85.0707 26.7184 84.9608 26.764C84.8627 26.8138 84.7604 26.8383 84.6544 26.8389H84.6396C84.352 26.8398 84.0936 27.0149 83.9864 27.282L83.9037 27.4885L85.2355 27.4846C85.5081 27.484 85.7647 27.4312 86.0047 27.3264C86.245 27.2217 86.4545 27.0789 86.6338 26.8984C86.8131 26.7181 86.9547 26.5077 87.0582 26.2668C87.1615 26.0262 87.2128 25.7694 87.2122 25.4971C87.2113 25.2245 87.1584 24.9682 87.0537 24.7279Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 72,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M90.3658 24.1647C90.2297 24.165 90.0971 24.1994 89.9685 24.2679C89.8399 24.3361 89.7255 24.43 89.6256 24.5493C89.5257 24.6685 89.4457 24.8077 89.3856 24.9664C89.3253 25.1252 89.2957 25.2955 89.296 25.4769C89.2966 25.6544 89.3256 25.8225 89.3826 25.981C89.44 26.1395 89.5188 26.2799 89.6196 26.4024C89.7201 26.525 89.8396 26.6219 89.9782 26.6934C90.1165 26.7647 90.2671 26.8 90.4301 26.7997L93.1219 26.7922L93.1192 25.8038L90.3649 25.8117C90.4515 25.7244 90.5336 25.6408 90.6112 25.5611C90.6885 25.4814 90.7697 25.4111 90.8548 25.3504C90.9397 25.2894 91.0323 25.2408 91.1326 25.2046C91.2328 25.1684 91.3511 25.15 91.4876 25.1497L94.6167 25.1409L94.6234 27.4581L93.124 27.4623L89.7844 27.4717C89.5118 27.4726 89.2552 27.4213 89.0146 27.3177C88.7737 27.2142 88.563 27.0729 88.3828 26.8936C88.2026 26.7143 88.0598 26.5045 87.9551 26.2642C87.8503 26.0242 87.7975 25.7679 87.7969 25.4953C87.796 25.2224 87.8473 24.9658 87.9508 24.7252C88.0541 24.4847 88.1957 24.274 88.375 24.0934C88.5543 23.9132 88.7641 23.7707 89.0044 23.666C89.2444 23.5609 89.5006 23.5084 89.7732 23.5075L94.6065 23.4939C94.5195 23.5815 94.4374 23.6657 94.3602 23.7472C94.2826 23.829 94.2014 23.9011 94.1165 23.9639C94.0314 24.0267 93.9387 24.0771 93.8385 24.1152C93.7383 24.1532 93.62 24.1725 93.4838 24.1728L90.3658 24.1647Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 78,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M102.126 23.4838C101.696 23.9203 101.249 24.3562 100.787 24.7909C100.324 25.2259 99.8773 25.6615 99.4469 26.0983L99.2881 26.0986L99.2917 27.4616L97.7923 27.4658L97.7887 26.1029H97.7772C97.584 26.1035 97.421 26.0319 97.2882 25.8885L97.1116 25.7017L94.9131 23.4929L96.8215 23.4932L98.758 25.4699L100.361 23.9545C100.701 23.6354 101.104 23.4754 101.569 23.4742L102.126 23.4838Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 84,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M112.627 23.4319L112.292 23.7679C112.077 23.9843 111.814 24.093 111.504 24.0939L109.76 24.0987L108.88 24.1012L108.823 24.1015C108.713 24.1018 108.609 24.1268 108.511 24.176C108.401 24.2219 108.3 24.2856 108.208 24.3671C108.115 24.4489 108.035 24.5446 107.967 24.6548C107.899 24.7647 107.847 24.886 107.809 25.0185C107.772 25.1514 107.753 25.2896 107.753 25.4333C107.754 25.5773 107.773 25.7156 107.811 25.8478C107.85 25.9803 107.903 26.1013 107.971 26.2109C108.04 26.3205 108.121 26.4159 108.214 26.4971C108.307 26.5783 108.408 26.6414 108.518 26.6864C108.617 26.7353 108.721 26.7597 108.831 26.7594L111.511 26.7519C111.822 26.751 112.085 26.8581 112.302 27.0734L112.638 27.4075L108.248 27.4199C107.975 27.4205 107.718 27.3692 107.478 27.2657C107.237 27.1624 107.026 27.0208 106.846 26.8415C106.665 26.6622 106.523 26.4524 106.418 26.2124C106.314 25.9721 106.261 25.7159 106.26 25.4433C106.259 25.1707 106.31 24.9141 106.414 24.6732C106.517 24.4326 106.659 24.2219 106.838 24.0417C107.017 23.8615 107.227 23.7187 107.467 23.6139C107.708 23.5092 107.964 23.4564 108.236 23.4554L112.627 23.4319Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 90,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M119.607 24.6363C119.502 24.396 119.36 24.1865 119.18 24.0069C118.999 23.8279 118.789 23.6863 118.548 23.5831C118.307 23.4795 118.051 23.4282 117.778 23.4288L114.547 23.4379C114.274 23.4388 114.017 23.4916 113.777 23.5964C113.537 23.7011 113.326 23.8439 113.145 24.0238C112.964 24.2043 112.822 24.415 112.718 24.6556C112.615 24.8965 112.564 25.1531 112.564 25.4257C112.565 25.6983 112.618 25.9546 112.723 26.1946C112.827 26.4348 112.97 26.6446 113.15 26.824C113.331 27.0033 113.541 27.1448 113.782 27.2481C114.023 27.3516 114.279 27.4029 114.552 27.4023L115.882 27.3984L115.802 27.1989C115.694 26.9287 115.432 26.7521 115.141 26.753C115.031 26.7533 114.927 26.7292 114.828 26.6803C114.718 26.635 114.617 26.5719 114.524 26.4907C114.431 26.4095 114.35 26.3141 114.282 26.2048C114.213 26.0949 114.16 25.9742 114.122 25.8414C114.083 25.7091 114.064 25.5709 114.064 25.4272C114.063 25.2832 114.082 25.1449 114.119 25.0124C114.157 24.8799 114.209 24.7586 114.277 24.6484C114.345 24.5385 114.425 24.4425 114.518 24.3607C114.61 24.2792 114.711 24.2155 114.821 24.1696C114.919 24.1204 115.024 24.0953 115.133 24.095L117.201 24.0893C117.307 24.089 117.409 24.1135 117.508 24.1621C117.617 24.2073 117.719 24.2704 117.812 24.3516C117.905 24.4328 117.985 24.5282 118.054 24.6378C118.123 24.7474 118.176 24.8684 118.214 25.001C118.252 25.1335 118.272 25.2714 118.272 25.4151C118.273 25.5591 118.254 25.6974 118.216 25.8302C118.179 25.9627 118.126 26.0841 118.059 26.194C117.991 26.3041 117.91 26.3998 117.818 26.4816C117.725 26.5631 117.624 26.6268 117.515 26.6727C117.416 26.7222 117.314 26.747 117.208 26.7473H117.193C116.904 26.7482 116.643 26.9245 116.536 27.1931L116.454 27.3969L117.789 27.393C118.062 27.3924 118.318 27.3395 118.558 27.2348C118.798 27.1301 119.008 26.9873 119.188 26.807C119.367 26.6268 119.508 26.4161 119.612 26.1752C119.715 25.9346 119.766 25.6781 119.766 25.4055C119.765 25.1329 119.712 24.8766 119.607 24.6363Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 96,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M124.592 25.0965C124.736 25.0923 124.856 25.041 124.952 24.9423C125.049 24.8436 125.097 24.7222 125.096 24.5782C125.096 24.4382 125.045 24.318 124.945 24.2181C124.844 24.1182 124.722 24.0681 124.578 24.0687L121.727 24.0765L121.736 27.382L120.237 27.3862L120.226 23.4106L125.405 23.3961C125.667 23.3955 125.884 23.4535 126.059 23.5703C126.233 23.6871 126.364 23.8335 126.452 24.0095C126.54 24.1852 126.584 24.3754 126.584 24.5797C126.585 24.7841 126.542 24.9746 126.455 25.1509C126.368 25.3272 126.238 25.4745 126.064 25.5922C125.89 25.7102 125.673 25.7694 125.412 25.77L124.725 25.7721L126.683 27.3681L125.28 27.372C125.159 27.3723 125.045 27.3669 124.939 27.356C124.833 27.3449 124.733 27.3243 124.638 27.2945C124.543 27.2643 124.451 27.2247 124.359 27.1758C124.269 27.1269 124.176 27.0629 124.081 26.9835L122.635 25.7836L121.857 25.7857L122.185 25.4355C122.279 25.3359 122.388 25.2623 122.511 25.214C122.634 25.166 122.763 25.1343 122.9 25.1186C123.036 25.1029 123.175 25.0968 123.317 25.1002C123.459 25.1035 123.598 25.105 123.735 25.1047L124.586 25.1023L124.592 25.0965Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 102,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M131.43 25.094C131.487 25.0937 131.545 25.0831 131.603 25.062C131.662 25.0408 131.714 25.011 131.759 24.9723C131.805 24.934 131.842 24.889 131.873 24.8374C131.903 24.7855 131.921 24.729 131.929 24.6677C131.936 24.5757 131.928 24.4926 131.905 24.4181C131.882 24.3435 131.848 24.2792 131.803 24.2258C131.757 24.1724 131.702 24.1313 131.638 24.1029C131.573 24.0743 131.503 24.0601 131.427 24.0604L128.576 24.0682L128.586 27.3737L127.086 27.3779L127.075 23.4023L132.243 23.3878C132.505 23.3872 132.722 23.4455 132.897 23.562C133.071 23.6791 133.202 23.8252 133.29 24.0012C133.378 24.1769 133.422 24.3671 133.422 24.5714C133.423 24.7761 133.38 24.9663 133.293 25.1426C133.206 25.3192 133.076 25.4662 132.903 25.5839C132.729 25.7019 132.511 25.7611 132.25 25.7617L131.268 25.7647L128.7 25.7717C128.787 25.6814 128.867 25.5951 128.941 25.5121C129.015 25.4294 129.092 25.3578 129.173 25.2974C129.254 25.2371 129.346 25.1891 129.448 25.1531C129.551 25.1172 129.672 25.0988 129.812 25.0985L130.573 25.0907L130.391 25.097L131.419 25.094H131.43Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M133.987 27.3589L133.983 26.1378L135.482 26.1336L135.486 27.3547L133.987 27.3589Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 114,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M85.5915 11.7878C85.5946 12.8242 85.399 13.8001 85.0059 14.7151C84.6123 15.6303 84.075 16.4309 83.3933 17.1161C82.7117 17.802 81.9142 18.3442 81.001 18.7423C80.0881 19.1411 79.1137 19.3415 78.0774 19.3446L72.9115 19.359L73.1895 18.6666C73.6197 17.5955 74.6563 16.8925 75.8103 16.8891L75.8683 16.8888C76.2707 16.8882 76.6595 16.7938 77.0332 16.6054C77.4501 16.4309 77.8344 16.1894 78.1864 15.8785C78.5383 15.5685 78.8432 15.2041 79.1016 14.7857C79.3588 14.3676 79.5596 13.9067 79.7014 13.4019C79.8442 12.8984 79.9149 12.3729 79.9128 11.8253C79.9116 11.2786 79.8379 10.7536 79.693 10.2501C79.5472 9.74688 79.3446 9.28683 79.0841 8.86995C78.8239 8.45306 78.5172 8.09082 78.164 7.78231C77.8099 7.47349 77.4247 7.23351 77.0063 7.06174C76.6314 6.87639 76.2426 6.78342 75.8402 6.78493L67.9807 6.80727C67.5629 6.80787 67.1678 6.90326 66.7944 7.09072C66.3775 7.2646 65.9929 7.5067 65.6412 7.81763C65.2892 8.12765 64.9846 8.49201 64.7265 8.9101C64.4691 9.32849 64.2686 9.78945 64.1258 10.2936C63.9836 10.7983 63.913 11.3233 63.9145 11.8708C63.916 12.4175 63.9897 12.9425 64.1346 13.4457C64.2801 13.9492 64.4829 14.4093 64.7431 14.8262C65.0037 15.243 65.3101 15.605 65.6642 15.9138C66.0176 16.2223 66.4025 16.4626 66.8209 16.6335C67.1959 16.8197 67.5919 16.9127 68.0094 16.9112C69.1698 16.9079 70.2152 17.6121 70.6474 18.6892L70.9182 19.3639L65.771 19.3784C64.7347 19.382 63.7587 19.1867 62.8435 18.7936C61.9285 18.4006 61.1279 17.8624 60.4427 17.1811C59.7569 16.4994 59.2153 15.7019 58.8165 14.7887C58.4184 13.8756 58.2179 12.9014 58.2149 11.8651C58.2113 10.8285 58.4069 9.85284 58.7999 8.93757C59.1936 8.0226 59.7345 7.22204 60.424 6.53679C61.1126 5.85094 61.9131 5.30938 62.8263 4.91061C63.7394 4.51245 64.7136 4.3111 65.7499 4.30838L78.0348 4.27427C79.072 4.27095 80.0471 4.46626 80.9621 4.85929C81.8773 5.25293 82.6779 5.79026 83.3637 6.47189C84.049 7.15412 84.5905 7.95105 84.9893 8.86421C85.3875 9.77707 85.5885 10.7515 85.5915 11.7878Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 120,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M103.94 10.6139C104.486 10.5982 104.943 10.4026 105.309 10.0271C105.675 9.65216 105.857 9.1909 105.856 8.64391C105.854 8.11141 105.662 7.65498 105.28 7.27432C104.897 6.89427 104.432 6.70469 103.885 6.7062L93.047 6.73669L93.0823 19.3024L87.3824 19.3184L87.3398 4.2049L107.031 4.14966C108.024 4.14694 108.852 4.36791 109.515 4.81196C110.178 5.25632 110.677 5.81266 111.01 6.48101C111.342 7.14935 111.51 7.87233 111.512 8.64965C111.515 9.42666 111.351 10.1505 111.022 10.8207C110.693 11.4909 110.197 12.0502 109.537 12.4982C108.876 12.9465 108.049 13.1717 107.056 13.1744L104.443 13.1816L111.888 19.2495L106.555 19.2646C106.094 19.2658 105.662 19.2453 105.259 19.2033C104.856 19.1614 104.474 19.0835 104.114 18.9691C103.754 18.855 103.401 18.7047 103.055 18.5187C102.709 18.3328 102.355 18.0888 101.995 17.7876L96.4983 13.2257L93.5403 13.2339L94.7888 11.9023C95.1471 11.5241 95.5607 11.2433 96.028 11.0607C96.495 10.8778 96.9879 10.757 97.5059 10.6975C98.024 10.6381 98.5528 10.6148 99.0926 10.6275C99.6323 10.6408 100.161 10.6462 100.68 10.6447L103.918 10.6357L103.94 10.6139Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 126,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M114.068 19.2866L114.025 4.17316L119.726 4.15716L119.768 19.2706L114.068 19.2866Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 132,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M121.927 19.2642L121.885 4.1507L127.585 4.1347L127.627 19.2482L121.927 19.2642Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M129.787 19.2422L129.744 4.12873L135.444 4.11273L135.487 19.2262L129.787 19.2422Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 144,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M48.8643 6.9281L48.8996 19.4938L43.1997 19.5098L43.1644 6.9441L32.3906 6.97428C32.7209 6.63951 33.0327 6.3156 33.3273 6.00286C33.621 5.68982 33.9302 5.41693 34.2532 5.18329C34.5765 4.95054 34.9285 4.76429 35.3094 4.62513C35.6907 4.48657 36.1402 4.41593 36.6585 4.41472L37.2846 4.41291L37.5653 4.41201L48.8353 4.38031L59.6091 4.35012C59.2789 4.6852 58.9667 5.00911 58.6727 5.32184C58.3784 5.63488 58.0699 5.90808 57.7466 6.14112C57.4236 6.37417 57.071 6.56042 56.6903 6.69928C56.309 6.83844 55.8596 6.90848 55.3416 6.90998L48.8643 6.9281Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
                lineNumber: 150,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoToriiiWhite41/LogoToriiiWhite41.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoToriiiWhite41;
var _c;
$RefreshReg$(_c, "LogoToriiiWhite41");

  $parcel$ReactRefreshHelpers$42a8.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"lGlQz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoWooxWhite2", ()=>(0, _logoWooxWhite2.LogoWooxWhite2));
var _logoWooxWhite2 = require("./LogoWooxWhite2");

},{"./LogoWooxWhite2":"1y1q3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1y1q3":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$fec7 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$fec7.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoWooxWhite2", ()=>LogoWooxWhite2);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const LogoWooxWhite2 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo-woox-white-2 ${className}`,
        fill: "none",
        height: "14",
        viewBox: "0 0 62 14",
        width: "62",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M26.2272 0.714355C24.9587 0.714355 23.7172 1.09219 22.6647 1.80289C21.6121 2.51359 20.7845 3.52115 20.2987 4.69965C19.8129 5.87815 19.687 7.18259 19.9299 8.43305C20.1818 9.68352 20.7845 10.835 21.6841 11.7436C22.5837 12.6433 23.7262 13.264 24.9677 13.5159C26.2092 13.7678 27.5046 13.6328 28.6741 13.147C29.8436 12.6612 30.8512 11.8336 31.5529 10.7631C32.2546 9.70151 32.6324 8.45105 32.6324 7.17359C32.6324 5.45533 31.9577 3.81803 30.7522 2.60355C29.5557 1.39806 27.9274 0.714355 26.2272 0.714355ZM26.2272 10.6641C25.5435 10.6641 24.8777 10.4572 24.311 10.0794C23.7442 9.69252 23.3034 9.15275 23.0425 8.51402C22.7816 7.87529 22.7097 7.18259 22.8446 6.50788C22.9796 5.83317 23.3034 5.21243 23.7892 4.72664C24.275 4.24085 24.8867 3.90799 25.5615 3.77305C26.2272 3.63811 26.9289 3.71007 27.5586 3.97096C28.1883 4.23185 28.7281 4.68166 29.1059 5.24842C29.4838 5.82417 29.6907 6.48989 29.6907 7.18259C29.6907 8.10919 29.3308 8.99082 28.6831 9.64753C28.0174 10.2953 27.1448 10.6641 26.2272 10.6641Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite2/LogoWooxWhite2.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M40.6842 0.714355C39.4157 0.714355 38.1743 1.09219 37.1217 1.80289C36.0692 2.51359 35.2415 3.52115 34.7557 4.69965C34.2699 5.87815 34.144 7.18259 34.3869 8.43305C34.6298 9.68352 35.2415 10.835 36.1411 11.7436C37.0408 12.6433 38.1833 13.264 39.4247 13.5159C40.6662 13.7678 41.9617 13.6328 43.1312 13.147C44.3007 12.6612 45.3082 11.8336 46.0099 10.7631C46.7116 9.70151 47.0895 8.45105 47.0895 7.17359C47.0895 5.45533 46.4147 3.81803 45.2093 2.60355C44.0218 1.39806 42.3845 0.714355 40.6842 0.714355ZM40.6842 10.6641C40.0005 10.6641 39.3348 10.4572 38.768 10.0794C38.2013 9.69252 37.7604 9.15275 37.4996 8.51402C37.2387 7.87529 37.1667 7.18259 37.3016 6.50788C37.4366 5.83317 37.7605 5.21243 38.2462 4.72664C38.732 4.24085 39.3438 3.90799 40.0185 3.77305C40.6842 3.63811 41.3859 3.71007 42.0156 3.97096C42.6454 4.23185 43.1851 4.68166 43.563 5.24842C43.9408 5.82417 44.1477 6.48989 44.1477 7.18259C44.1477 8.10919 43.7879 8.99082 43.1401 9.64753C42.4834 10.2953 41.6018 10.6641 40.6842 10.6641Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite2/LogoWooxWhite2.jsx",
                lineNumber: 24,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M19.2827 0.822266H16.1611L14.7217 5.56324H17.7984L19.2827 0.822266Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite2/LogoWooxWhite2.jsx",
                lineNumber: 30,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M12.1305 5.33833L13.6779 8.99077L14.2356 7.12857H17.3033L15.576 12.7961C15.4411 13.237 15.0273 13.5428 14.5595 13.5428H12.8142C12.3914 13.5428 11.9956 13.2819 11.8246 12.8681L9.91746 8.16312L8.02827 12.8501C7.87534 13.246 7.47951 13.5248 7.03869 13.5248H5.27545C4.80765 13.5248 4.39383 13.219 4.25888 12.7782L0.606445 0.822266H3.68313L6.11209 8.98178L7.7224 5.30235C8.07325 4.38474 8.95487 3.79099 9.91746 3.79099C10.907 3.79099 11.7887 4.40273 12.1305 5.33833Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite2/LogoWooxWhite2.jsx",
                lineNumber: 36,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M53.8811 3.72802L51.6771 0.822266H47.8447L51.965 6.25594L53.8811 3.72802Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite2/LogoWooxWhite2.jsx",
                lineNumber: 42,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M61.6005 0.831055H57.7681L48.1152 13.5426H51.9476L61.6005 0.831055Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite2/LogoWooxWhite2.jsx",
                lineNumber: 48,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path-3",
                d: "M58.038 13.5431L55.834 10.6373L57.7502 8.10938L61.8704 13.5431H58.038Z",
                fill: "white"
            }, void 0, false, {
                fileName: "src/icons/LogoWooxWhite2/LogoWooxWhite2.jsx",
                lineNumber: 54,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/LogoWooxWhite2/LogoWooxWhite2.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = LogoWooxWhite2;
var _c;
$RefreshReg$(_c, "LogoWooxWhite2");

  $parcel$ReactRefreshHelpers$fec7.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}]},["gjUm6","1xC6H","d8Dch"], "d8Dch", "parcelRequireb8e7")

//# sourceMappingURL=index.b4b6dfad.js.map
